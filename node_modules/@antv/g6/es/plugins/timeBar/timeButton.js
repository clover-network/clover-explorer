/**
 * 基于 G 的按钮组件
 */
import { __assign } from "tslib";
import { deepMix } from '@antv/util';

var Button =
/** @class */
function () {
  function Button(cfg) {
    this.config = deepMix({}, cfg);
    this.init();
  }

  Button.prototype.update = function (cfg) {
    this.config = deepMix({}, this.config, cfg);
    this.updateElement();
    this.renderMarker();
  };

  Button.prototype.init = function () {
    this.initElement();
    this.renderMarker();
  };

  Button.prototype.initElement = function () {
    var _a = this.config,
        group = _a.group,
        style = _a.style;
    this.circle = group.addShape('circle', {
      attrs: __assign({
        x: this.config.x,
        y: this.config.y,
        r: this.config.r
      }, style)
    });
    this.startMarker = group.addShape('path', {
      attrs: {
        path: this.getStartMarkerPath(),
        fill: '#ccc'
      },
      name: 'playPauseBtn'
    });
    this.pauseGroupMarker = group.addGroup();
    var width = 1 / 4 * this.config.r;
    var height = 0.5 * this.config.r * Math.sqrt(3);
    this.pauseGroupMarker.addShape('rect', {
      attrs: {
        x: this.config.x - (1 / 4 + 1 / 8) * this.config.r,
        y: this.config.y - height / 2,
        width: width * 2.5,
        height: height,
        fill: '#fff'
      },
      name: 'playPauseBtn'
    });
    this.pauseLeftMarker = this.pauseGroupMarker.addShape('rect', {
      attrs: {
        x: this.config.x - (1 / 4 + 1 / 8) * this.config.r,
        y: this.config.y - height / 2,
        width: width,
        height: height,
        fill: '#ccc'
      },
      name: 'playPauseBtn'
    });
    this.pauseRightMarker = this.pauseGroupMarker.addShape('rect', {
      attrs: {
        x: this.config.x + 1 / 8 * this.config.r,
        y: this.config.y - height / 2,
        width: width,
        height: height,
        fill: '#ccc'
      },
      name: 'playPauseBtn'
    });
  };

  Button.prototype.updateElement = function () {
    this.circle.attr('x', this.config.x);
    this.circle.attr('y', this.config.y);
    this.circle.attr('r', this.config.r);
    this.startMarker.attr('path', this.getStartMarkerPath());
    var width = 1 / 4 * this.config.r;
    var height = 0.5 * this.config.r * Math.sqrt(3);
    this.pauseLeftMarker.attr('x', this.config.x - (1 / 4 + 1 / 8) * this.config.r);
    this.pauseLeftMarker.attr('y', this.config.y - height / 2);
    this.pauseLeftMarker.attr('width', width);
    this.pauseLeftMarker.attr('height', height);
    this.pauseRightMarker.attr('x', this.config.x + 1 / 8 * this.config.r);
    this.pauseRightMarker.attr('y', this.config.y - height / 2);
    this.pauseRightMarker.attr('width', width);
    this.pauseRightMarker.attr('height', height);
  };

  Button.prototype.renderMarker = function () {
    if (this.config.isPlay) {
      this.startMarker.hide();
      this.pauseGroupMarker.show();
    } else {
      this.startMarker.show();
      this.pauseGroupMarker.hide();
    }
  };
  /** 获取播放键 marker path */


  Button.prototype.getStartMarkerPath = function () {
    var sideLength = 0.5 * this.config.r * Math.sqrt(3);
    return [['M', this.config.x - sideLength / Math.sqrt(3) / 2, this.config.y - sideLength / 2], ['L', this.config.x + sideLength / Math.sqrt(3), this.config.y], ['L', this.config.x - sideLength / Math.sqrt(3) / 2, this.config.y + sideLength / 2]];
  };

  return Button;
}();

export default Button;