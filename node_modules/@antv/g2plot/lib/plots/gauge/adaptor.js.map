{"version":3,"file":"adaptor.js","sourceRoot":"","sources":["../../../src/plots/gauge/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { isString, clamp, size } from '@antv/util';\nimport { interaction, animation, theme, scale } from '../../adaptor/common';\nimport { Params } from '../../core/adaptor';\nimport { Data } from '../../types';\nimport { deepAssign, flow, renderGaugeStatistic } from '../../utils';\nimport { RANGE_TYPE, RANGE_VALUE, PERCENT, DEFAULT_COLOR } from './constant';\nimport { GaugeOptions } from './types';\nimport { processRangeData } from './utils';\n\n/**\n * geometry 处理\n * @param params\n */\nfunction geometry(params: Params<GaugeOptions>): Params<GaugeOptions> {\n  const { chart, options } = params;\n  const { percent, range, radius, innerRadius, startAngle, endAngle, axis, indicator } = options;\n  const { ticks, color } = range;\n  const clampTicks = size(ticks) ? ticks : [0, clamp(percent, 0, 1), 1];\n\n  // 指标 & 指针\n  // 如果开启在应用\n  if (indicator) {\n    const indicatorData = [{ [PERCENT]: clamp(percent, 0, 1) }];\n\n    const v1 = chart.createView();\n    v1.data(indicatorData);\n\n    v1.point()\n      .position(`${PERCENT}*1`)\n      .shape('gauge-indicator')\n      // 传入指针的样式到自定义 shape 中\n      .customInfo({\n        defaultColor: chart.getTheme().defaultColor,\n        indicator,\n      });\n\n    v1.coordinate('polar', {\n      startAngle,\n      endAngle,\n      radius: innerRadius * radius, // 外部的 innerRadius * radius = 这里的 radius\n    });\n\n    v1.axis(PERCENT, axis);\n  }\n\n  // 辅助 range\n  // [{ range: 1, type: '0' }]\n  const rangeData: Data = processRangeData(clampTicks as number[]);\n  const v2 = chart.createView();\n  v2.data(rangeData);\n\n  const rangeColor = isString(color) ? [color, DEFAULT_COLOR] : color;\n\n  v2.interval().position(`1*${RANGE_VALUE}`).color(RANGE_TYPE, rangeColor).adjust('stack');\n\n  v2.coordinate('polar', {\n    innerRadius,\n    radius,\n    startAngle,\n    endAngle,\n  }).transpose();\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params: Params<GaugeOptions>): Params<GaugeOptions> {\n  return flow(\n    scale({\n      range: {\n        min: 0,\n        max: 1,\n        maxLimit: 1,\n        minLimit: 0,\n      },\n      [PERCENT]: {},\n    })\n  )(params);\n}\n\n/**\n * 统计指标文档\n * @param params\n */\nfunction statistic(params: Params<GaugeOptions>): Params<GaugeOptions> {\n  const { chart, options } = params;\n  const { statistic, percent } = options;\n\n  if (statistic) {\n    const { content } = statistic;\n    let transformContent;\n    // 当设置 content 的时候，设置默认样式\n    if (content) {\n      transformContent = deepAssign(\n        {},\n        {\n          formatter: ({ percent }) => `${(percent * 100).toFixed(2)}%`,\n          style: {\n            opacity: 0.75,\n            fontSize: '30px',\n            lineHeight: 1,\n            textAlign: 'center',\n            color: 'rgba(44,53,66,0.85)',\n          },\n        },\n        content\n      );\n    }\n    renderGaugeStatistic(chart, { statistic: { ...statistic, content: transformContent } }, { percent });\n  }\n\n  return params;\n}\n\n/**\n * other 配置\n * @param params\n */\nfunction other(params: Params<GaugeOptions>): Params<GaugeOptions> {\n  const { chart } = params;\n\n  chart.legend(false);\n  chart.tooltip(false);\n\n  return params;\n}\n\n/**\n * 图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<GaugeOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(\n    // animation 配置必须在 createView 之前，不然无法让子 View 生效\n    animation,\n    geometry,\n    meta,\n    statistic,\n    interaction,\n    theme,\n    other\n    // ... 其他的 adaptor flow\n  )(params);\n}\n"]}