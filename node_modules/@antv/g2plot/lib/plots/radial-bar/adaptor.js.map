{"version":3,"file":"adaptor.js","sourceRoot":"","sources":["../../../src/plots/radial-bar/adaptor.ts"],"names":[],"mappings":";;;AAAA,+CAAyG;AAEzG,qCAA+C;AAC/C,uDAAoD;AAEpD,iCAAsC;AAEtC;;;GAGG;AACH,SAAS,QAAQ,CAAC,MAAgC;IACxC,IAAA,KAAK,GAAc,MAAM,MAApB,EAAE,OAAO,GAAK,MAAM,QAAX,CAAY;IAC1B,IAAA,IAAI,GAAwE,OAAO,KAA/E,EAAY,KAAK,GAAuD,OAAO,SAA9D,EAAE,KAAK,GAAgD,OAAO,MAAvD,EAAE,OAAO,GAAuC,OAAO,QAA9C,EAAE,UAAU,GAA2B,OAAO,WAAlC,EAAE,IAAI,GAAqB,OAAO,KAA5B,EAAE,MAAM,GAAa,OAAO,OAApB,EAAE,MAAM,GAAK,OAAO,OAAZ,CAAa;IAC5F,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjB,IAAM,CAAC,GAAG,kBAAU,CAAC,EAAE,EAAE,MAAM,EAAE;QAC/B,OAAO,EAAE;YACP,OAAO,SAAA;YACP,WAAW,EAAE,UAAU;YACvB,QAAQ,EAAE;gBACR,KAAK,OAAA;gBACL,KAAK,OAAA;gBACL,KAAK,EAAE,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU;aAC7C;SACF;KACF,CAAC,CAAC;IACH,qBAAQ,CAAC,CAAC,CAAC,CAAC;IACZ,IAAI,IAAI,KAAK,MAAM,EAAE;QACnB,KAAK,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAI,MAAM,SAAI,MAAQ,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;KAC/D;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;;GAGG;AACH,SAAgB,IAAI,CAAC,MAAgC;;IAC3C,IAAA,OAAO,GAAK,MAAM,QAAX,CAAY;IACnB,IAAA,MAAM,GAAqB,OAAO,OAA5B,EAAE,IAAI,GAAe,OAAO,KAAtB,EAAE,QAAQ,GAAK,OAAO,SAAZ,CAAa;IAC3C,OAAO,YAAI,CACT,cAAK;QACH,GAAC,MAAM,IAAG;YACR,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,mBAAW,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC;SACzC;YACD,CACH,CAAC,MAAM,CAAC,CAAC;AACZ,CAAC;AAXD,oBAWC;AAED;;;GAGG;AACH,SAAS,UAAU,CAAC,MAAgC;IAC1C,IAAA,KAAK,GAAc,MAAM,MAApB,EAAE,OAAO,GAAK,MAAM,QAAX,CAAY;IAC1B,IAAA,MAAM,GAAkB,OAAO,OAAzB,EAAE,WAAW,GAAK,OAAO,YAAZ,CAAa;IAExC,KAAK;SACF,UAAU,CAAC;QACV,IAAI,EAAE,OAAO;QACb,GAAG,EAAE;YACH,MAAM,QAAA;YACN,WAAW,aAAA;SACZ;KACF,CAAC;SACD,SAAS,EAAE,CAAC;IACf,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;;GAGG;AACH,SAAgB,IAAI,CAAC,MAAgC;IAC3C,IAAA,KAAK,GAAc,MAAM,MAApB,EAAE,OAAO,GAAK,MAAM,QAAX,CAAY;IAC1B,IAAA,MAAM,GAAY,OAAO,OAAnB,EAAE,KAAK,GAAK,OAAO,MAAZ,CAAa;IAClC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAC1B,OAAO,MAAM,CAAC;AAChB,CAAC;AALD,oBAKC;AAED;;;;GAIG;AACH,SAAgB,OAAO,CAAC,MAAgC;IACtD,OAAO,YAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,oBAAW,EAAE,kBAAS,EAAE,cAAK,EAAE,gBAAO,EAAE,eAAM,EAAE,mBAAU,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;AACtH,CAAC;AAFD,0BAEC","sourcesContent":["import { interaction, animation, theme, scale, tooltip, legend, annotation } from '../../adaptor/common';\nimport { Params } from '../../core/adaptor';\nimport { flow, deepAssign } from '../../utils';\nimport { interval } from '../../adaptor/geometries';\nimport { RadialBarOptions } from './types';\nimport { getScaleMax } from './utils';\n\n/**\n * geometry 处理\n * @param params\n */\nfunction geometry(params: Params<RadialBarOptions>): Params<RadialBarOptions> {\n  const { chart, options } = params;\n  const { data, barStyle: style, color, tooltip, colorField, type, xField, yField } = options;\n  chart.data(data);\n  const p = deepAssign({}, params, {\n    options: {\n      tooltip,\n      seriesField: colorField,\n      interval: {\n        style,\n        color,\n        shape: type === 'line' ? 'line' : 'intervel',\n      },\n    },\n  });\n  interval(p);\n  if (type === 'line') {\n    chart.point().position(`${xField}*${yField}`).shape('circle');\n  }\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params: Params<RadialBarOptions>): Params<RadialBarOptions> {\n  const { options } = params;\n  const { yField, data, maxAngle } = options;\n  return flow(\n    scale({\n      [yField]: {\n        min: 0,\n        max: getScaleMax(maxAngle, yField, data),\n      },\n    })\n  )(params);\n}\n\n/**\n * coordinate 配置\n * @param params\n */\nfunction coordinate(params: Params<RadialBarOptions>): Params<RadialBarOptions> {\n  const { chart, options } = params;\n  const { radius, innerRadius } = options;\n\n  chart\n    .coordinate({\n      type: 'polar',\n      cfg: {\n        radius,\n        innerRadius,\n      },\n    })\n    .transpose();\n  return params;\n}\n\n/**\n * axis 配置\n * @param params\n */\nexport function axis(params: Params<RadialBarOptions>): Params<RadialBarOptions> {\n  const { chart, options } = params;\n  const { xField, xAxis } = options;\n  chart.axis(xField, xAxis);\n  return params;\n}\n\n/**\n * 图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<RadialBarOptions>) {\n  return flow(geometry, meta, axis, coordinate, interaction, animation, theme, tooltip, legend, annotation())(params);\n}\n"]}