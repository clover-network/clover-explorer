{"version":3,"file":"common.js","sourceRoot":"","sources":["../../../../src/plots/funnel/geometries/common.ts"],"names":[],"mappings":";;;;AAEA,mCAAwC;AAExC,wCAAgD;AAChD,wCAAkE;AAIlE;;;GAGG;AACH,SAAgB,aAAa,CAAC,QAAkB;IAC9C,OAAO,UAAU,MAA6B;QACpC,IAAA,OAAO,GAAK,MAAM,QAAX,CAAY;QACnB,IAAA,MAAM,GAAoB,OAAO,OAA3B,EAAE,MAAM,GAAY,OAAO,OAAnB,EAAE,KAAK,GAAK,OAAO,MAAZ,CAAa;QAC1C,IAAI,CAAC,KAAK,EAAE;YACV,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACvB;aAAM;YACG,IAAA,QAAQ,GAAa,KAAK,SAAlB,EAAK,GAAG,kBAAK,KAAK,EAA5B,YAAoB,CAAF,CAAW;YACnC,QAAQ,CAAC,KAAK,CAAC;gBACb,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,yBAAc,EAAE,8BAAmB,CAAC;gBAC7D,QAAQ,UAAA;gBACR,GAAG,EAAE,sBAAc,CAAC,GAAG,CAAC;aACzB,CAAC,CAAC;SACJ;QACD,OAAO,MAAM,CAAC;IAChB,CAAC,CAAC;AACJ,CAAC;AAhBD,sCAgBC;AAED;;;GAGG;AACH,SAAgB,sBAAsB,CACpC,iBAAoH;IAEpH,OAAO,UAAU,MAA6B;QACpC,IAAA,KAAK,GAAc,MAAM,MAApB,EAAE,OAAO,GAAK,MAAM,QAAX,CAAY;QAC1B,IAAA,aAAa,GAAK,OAAO,cAAZ,CAAa;QAE1B,IAAA,IAAI,GAAK,KAAK,CAAC,UAAU,EAAE,KAAvB,CAAwB;QAEpC,IAAI,aAAa,EAAE;YACT,IAAA,WAAS,GAAK,aAAa,UAAlB,CAAmB;YACpC,IAAI,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,KAAK;gBACtB,IAAI,KAAK,IAAI,CAAC;oBAAE,OAAO;gBACvB,IAAM,UAAU,GAAG,iBAAiB,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE;oBACrD,GAAG,EAAE,IAAI;oBACT,IAAI,EAAE;wBACJ,OAAO,EAAE,iBAAU,CAAC,WAAS,CAAC,CAAC,CAAC,CAAC,WAAS,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,WAAS;wBACjE,OAAO,EAAE,aAAa,CAAC,OAAO;wBAC9B,OAAO,EAAE,aAAa,CAAC,OAAO;wBAC9B,QAAQ,EAAE,KAAK;wBACf,UAAU,EAAE,KAAK;wBACjB,KAAK,qBACH,SAAS,EAAE,OAAO,EAClB,YAAY,EAAE,QAAQ,IACnB,aAAa,CAAC,KAAK,CACvB;qBACF;iBACF,CAAC,CAAC;gBAEH,KAAK,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACtC,CAAC,CAAC,CAAC;SACJ;QACD,OAAO,MAAM,CAAC;IAChB,CAAC,CAAC;AACJ,CAAC;AAlCD,wDAkCC","sourcesContent":["import { Geometry } from '@antv/g2';\nimport { LineOption } from '@antv/g2/lib/interface';\nimport { isFunction } from '@antv/util';\nimport { Datum, Data } from '../../../types/common';\nimport { transformLabel } from '../../../utils';\nimport { FUNNEL_PERCENT, FUNNEL_CONVERSATION } from '../constant';\nimport { Params } from '../../../core/adaptor';\nimport { FunnelOptions } from '../types';\n\n/**\n * 漏斗图通用geometry label\n * @param geometry 对应的 chart geometry\n */\nexport function geometryLabel(geometry: Geometry) {\n  return function (params: Params<FunnelOptions>): Params<FunnelOptions> {\n    const { options } = params;\n    const { xField, yField, label } = options;\n    if (!label) {\n      geometry.label(false);\n    } else {\n      const { callback, ...cfg } = label;\n      geometry.label({\n        fields: [xField, yField, FUNNEL_PERCENT, FUNNEL_CONVERSATION],\n        callback,\n        cfg: transformLabel(cfg),\n      });\n    }\n    return params;\n  };\n}\n\n/**\n * 漏斗图通用转化率组件\n * @param getLineCoordinate 用于获取特定的 line 的位置及配置\n */\nexport function conversionTagComponent(\n  getLineCoordinate: (datum: Datum, datumIndex: number, data: Data, initLineOption: Record<string, any>) => LineOption\n) {\n  return function (params: Params<FunnelOptions>): Params<FunnelOptions> {\n    const { chart, options } = params;\n    const { conversionTag } = options;\n\n    const { data } = chart.getOptions();\n\n    if (conversionTag) {\n      const { formatter } = conversionTag;\n      data.forEach((obj, index) => {\n        if (index <= 0) return;\n        const lineOption = getLineCoordinate(obj, index, data, {\n          top: true,\n          text: {\n            content: isFunction(formatter) ? formatter(obj, data) : formatter,\n            offsetX: conversionTag.offsetX,\n            offsetY: conversionTag.offsetY,\n            position: 'end',\n            autoRotate: false,\n            style: {\n              textAlign: 'start',\n              textBaseline: 'middle',\n              ...conversionTag.style,\n            },\n          },\n        });\n\n        chart.annotation().line(lineOption);\n      });\n    }\n    return params;\n  };\n}\n"]}