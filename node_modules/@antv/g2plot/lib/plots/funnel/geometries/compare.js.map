{"version":3,"file":"compare.js","sourceRoot":"","sources":["../../../../src/plots/funnel/geometries/compare.ts"],"names":[],"mappings":"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","sourcesContent":["import { map } from '@antv/util';\nimport { LineOption } from '@antv/g2/lib/interface';\nimport { flow, findGeometry, deepAssign } from '../../../utils';\nimport { Params } from '../../../core/adaptor';\nimport { Datum, Data } from '../../../types/common';\nimport { getTooltipMapping } from '../../../utils/tooltip';\nimport { geometry as baseGeometry } from '../../../adaptor/geometries/base';\nimport { FunnelOptions } from '../types';\nimport { FUNNEL_PERCENT, FUNNEL_CONVERSATION } from '../constant';\nimport { geometryLabel, conversionTagComponent } from './common';\n\n/**\n * 处理字段数据\n * @param params\n */\nfunction field(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { data = [], yField, compareField } = options;\n  // 处理数据\n  let formatData = [];\n  if (data[0][yField]) {\n    // format 数据\n    const depRecord = {};\n    formatData = map(data, (row) => {\n      if (row[yField] !== undefined && row[compareField]) {\n        if (!depRecord[row[compareField]]) depRecord[row[compareField]] = row[yField];\n        if (!depRecord[`last_${row[compareField]}`]) depRecord[`last_${row[compareField]}`] = row[yField];\n        row[FUNNEL_PERCENT] = row[yField] / depRecord[row[compareField]];\n        row[FUNNEL_CONVERSATION] = row[yField] / depRecord[`last_${row[compareField]}`];\n        // 更新 lastVersion\n        depRecord[`last_${row[compareField]}`] = row[yField];\n      }\n      return row;\n    });\n  }\n\n  // 绘制漏斗图\n  chart.data(formatData);\n  chart.scale({\n    [yField]: {\n      sync: true,\n    },\n  });\n  return params;\n}\n\n/**\n * geometry处理\n * @param params\n */\nfunction geometry(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { xField, yField, color, compareField, isTransposed, tooltip } = options;\n\n  chart.facet('mirror', {\n    fields: [compareField],\n    // 漏斗图的转置规则与分面相反，默认是垂直布局\n    transpose: !isTransposed,\n    padding: isTransposed ? 0 : [32, 0, 0, 0],\n    eachView(view, facet) {\n      if (!isTransposed) {\n        view.coordinate({\n          type: 'rect',\n          actions: [['transpose'], ['scale', facet.columnIndex === 0 ? -1 : 1, -1]],\n        });\n      }\n      // 绘制图形\n      const { fields, formatter } = getTooltipMapping(tooltip, [xField, yField, FUNNEL_PERCENT, FUNNEL_CONVERSATION]);\n\n      baseGeometry({\n        chart: view,\n        options: {\n          type: 'interval',\n          xField: xField,\n          yField: yField,\n          colorField: xField,\n          tooltipFields: fields,\n          mapping: {\n            shape: 'funnel',\n            tooltip: formatter,\n            color,\n            style: {\n              lineWidth: 1,\n              stroke: '#fff',\n            },\n          },\n        },\n      });\n    },\n  });\n\n  return params;\n}\n\n/**\n * label 处理\n * @param params\n */\nfunction label(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { label, isTransposed } = options;\n\n  chart.once('beforepaint', () => {\n    chart.views.forEach((view, index) => {\n      const geometry = findGeometry(view, 'interval');\n      geometryLabel(geometry)(\n        label\n          ? deepAssign({}, params, {\n              chart: view,\n              options: {\n                label: isTransposed\n                  ? {\n                      offset: index === 0 ? 10 : -23,\n                      position: index === 0 ? 'bottom' : 'top',\n                    }\n                  : {\n                      offset: 10,\n                      position: 'left',\n                      style: {\n                        textAlign: index === 0 ? 'end' : 'start',\n                      },\n                    },\n              },\n            })\n          : params\n      );\n    });\n  });\n  return params;\n}\n\n/**\n * 转化率组件\n * @param params\n */\nfunction conversionTag(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { yField, conversionTag, isTransposed } = options;\n\n  chart.once('beforepaint', () => {\n    chart.views.forEach((view, viewIndex) => {\n      const getLineCoordinate = (\n        datum: Datum,\n        datumIndex: number,\n        data: Data,\n        initLineOption: Record<string, any>\n      ): LineOption => {\n        const ratio = viewIndex === 0 ? -1 : 1;\n        return deepAssign({}, initLineOption, {\n          start: [datumIndex - 0.5, data[0][yField] * datum[FUNNEL_PERCENT]],\n          end: [datumIndex - 0.5, data[0][yField] * (datum[FUNNEL_PERCENT] + 0.05)],\n          text: isTransposed\n            ? {\n                style: {\n                  textAlign: 'start',\n                },\n              }\n            : {\n                offsetX: conversionTag !== false ? ratio * conversionTag.offsetX : 0,\n                style: {\n                  textAlign: viewIndex === 0 ? 'end' : 'start',\n                },\n              },\n        });\n      };\n\n      conversionTagComponent(getLineCoordinate)(\n        deepAssign(\n          {},\n          {\n            chart: view,\n            options,\n          }\n        )\n      );\n    });\n  });\n  return params;\n}\n\n/**\n * 对比漏斗\n * @param chart\n * @param options\n */\nexport function compareFunnel(params: Params<FunnelOptions>) {\n  return flow(field, geometry, label, conversionTag)(params);\n}\n"]}