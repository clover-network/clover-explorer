{"version":3,"file":"basic.js","sourceRoot":"","sources":["../../../../src/plots/funnel/geometries/basic.ts"],"names":[],"mappings":"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","sourcesContent":["import { map } from '@antv/util';\nimport { LineOption } from '@antv/g2/lib/interface';\nimport { flow, findGeometry } from '../../../utils';\nimport { getTooltipMapping } from '../../../utils/tooltip';\nimport { Params } from '../../../core/adaptor';\nimport { Datum, Data } from '../../../types/common';\nimport { geometry as baseGeometry } from '../../../adaptor/geometries/base';\nimport { FunnelOptions } from '../types';\nimport { FUNNEL_CONVERSATION, FUNNEL_PERCENT } from '../constant';\nimport { geometryLabel, conversionTagComponent } from './common';\n\n/**\n * 处理字段数据\n * @param params\n */\nfunction field(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { data = [], yField } = options;\n  let formatData = [];\n  // format 数据\n  if (data[0][yField]) {\n    formatData = map(data, (row, index) => {\n      if (row[yField] !== undefined) {\n        row[FUNNEL_PERCENT] = row[yField] / data[0][yField];\n        row[FUNNEL_CONVERSATION] = index === 0 ? 1 : row[yField] / data[index - 1][yField];\n      }\n      return row;\n    });\n  }\n\n  // 绘制漏斗图\n  chart.data(formatData);\n  return params;\n}\n\n/**\n * geometry处理\n * @param params\n */\nfunction geometry(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { xField, yField, color, tooltip } = options;\n\n  const { fields, formatter } = getTooltipMapping(tooltip, [xField, yField, FUNNEL_PERCENT, FUNNEL_CONVERSATION]);\n\n  baseGeometry({\n    chart,\n    options: {\n      type: 'interval',\n      xField: xField,\n      yField: yField,\n      colorField: xField,\n      tooltipFields: fields,\n      mapping: {\n        shape: 'funnel',\n        tooltip: formatter,\n        color,\n      },\n    },\n  });\n\n  const geo = findGeometry(params.chart, 'interval');\n  geo.adjust('symmetric');\n\n  return params;\n}\n\n/**\n * 转置处理\n * @param params\n */\nfunction transpose(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { chart, options } = params;\n  const { isTransposed } = options;\n  chart.coordinate({\n    type: 'rect',\n    actions: !isTransposed ? [['transpose'], ['scale', 1, -1]] : [],\n  });\n  return params;\n}\n\n/**\n * label 处理\n * @param params\n */\nfunction label(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  geometryLabel(findGeometry(params.chart, 'interval'))(params);\n\n  return params;\n}\n\n/**\n * 转化率组件\n * @param params\n */\nfunction conversionTag(params: Params<FunnelOptions>): Params<FunnelOptions> {\n  const { options } = params;\n  const { yField } = options;\n\n  const getLineCoordinate = (\n    datum: Datum,\n    datumIndex: number,\n    data: Data,\n    initLineOption: Record<string, any>\n  ): LineOption => {\n    const percent = 1 - (1 - datum[FUNNEL_PERCENT]) / 2;\n    return {\n      ...initLineOption,\n      start: [datumIndex - 0.5, data[0][yField] * percent],\n      end: [datumIndex - 0.5, data[0][yField] * (percent + 0.05)],\n    };\n  };\n\n  conversionTagComponent(getLineCoordinate)(params);\n\n  return params;\n}\n\n/**\n * 基础漏斗\n * @param chart\n * @param options\n */\nexport function basicFunnel(params: Params<FunnelOptions>) {\n  return flow(field, geometry, transpose, conversionTag, label)(params);\n}\n"]}