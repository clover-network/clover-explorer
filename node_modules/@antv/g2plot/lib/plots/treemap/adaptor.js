"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.adaptor = void 0;
var polygon_1 = require("../../adaptor/geometries/polygon");
var common_1 = require("../../adaptor/common");
var utils_1 = require("../../utils");
var utils_2 = require("./utils");
/**
 * 获取默认 option
 * @param params
 */
function defaultOptions(params) {
    var options = params.options;
    var colorField = options.colorField;
    return utils_1.deepAssign({
        options: {
            // 默认按照 name 字段对颜色进行分类
            colorField: 'name',
            label: {
                fields: ['name'],
                layout: {
                    type: 'limit-in-shape',
                },
            },
            tooltip: {
                showMarkers: false,
                showTitle: false,
                fields: ['name', 'value', colorField],
                formatter: function (data) {
                    return {
                        name: data.name,
                        value: data.value,
                    };
                },
            },
        },
    }, params);
}
/**
 * 字段
 * @param params
 */
function geometry(params) {
    var chart = params.chart, options = params.options;
    var color = options.color, colorField = options.colorField;
    var data = utils_2.transformData(options);
    chart.data(data);
    // geometry
    polygon_1.polygon(utils_1.deepAssign({}, params, {
        options: {
            xField: 'x',
            yField: 'y',
            seriesField: colorField,
            polygon: {
                color: color,
                style: {
                    lineWidth: 1,
                    stroke: '#fff',
                },
            },
        },
    }));
    return params;
}
/**
 * 坐标轴
 * @param params
 */
function axis(params) {
    var chart = params.chart;
    chart.axis(false);
    return params;
}
/**
 * 矩形树图
 * @param chart
 * @param options
 */
function adaptor(params) {
    return utils_1.flow(defaultOptions, geometry, axis, common_1.theme, common_1.legend, common_1.tooltip, common_1.interaction, common_1.animation, common_1.annotation())(params);
}
exports.adaptor = adaptor;
//# sourceMappingURL=adaptor.js.map