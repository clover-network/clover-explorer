{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/plots/ring-progress/index.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,iBAAiB,CAAC;AAEvC,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AAEpD,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAC;AAI/C;IAAkC,gCAAyB;IAA3D;QAAA,qEA6CC;QA5CC,WAAW;QACJ,UAAI,GAAW,cAAc,CAAC;;IA2CvC,CAAC;IAzCW,wCAAiB,GAA3B;QACE,OAAO;YACL,OAAO,EAAE,GAAG;YACZ,WAAW,EAAE,GAAG;YAChB,MAAM,EAAE,IAAI;YACZ,KAAK,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;YAC7B,SAAS,EAAE;gBACT,KAAK,EAAE,KAAK;gBACZ,OAAO,EAAE;oBACP,KAAK,EAAE;wBACL,QAAQ,EAAE,MAAM;wBAChB,UAAU,EAAE,GAAG;wBACf,IAAI,EAAE,SAAS;wBACf,SAAS,EAAE,QAAQ;wBACnB,YAAY,EAAE,QAAQ;qBACvB;oBACD,SAAS,EAAE,UAAC,EAAW;4BAAT,OAAO,aAAA;wBAAO,OAAG,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAG;oBAAhC,CAAgC;iBAC7D;aACF;YACD,SAAS,EAAE,IAAI;SAChB,CAAC;IACJ,CAAC;IAED;;;OAGG;IACI,iCAAU,GAAjB,UAAkB,OAAe;QAC/B,IAAI,CAAC,YAAY,CAAC,EAAE,OAAO,SAAA,EAAE,CAAC,CAAC;QAE/B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC;QAC1C,gDAAgD;QAChD,SAAS,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC;IAChE,CAAC;IAED;;OAEG;IACO,uCAAgB,GAA1B;QACE,OAAO,OAAO,CAAC;IACjB,CAAC;IACH,mBAAC;AAAD,CAAC,AA7CD,CAAkC,IAAI,GA6CrC","sourcesContent":["import { Plot } from '../../core/plot';\nimport { Adaptor } from '../../core/adaptor';\nimport { getProgressData } from '../progress/utils';\nimport { RingProgressOptions } from './types';\nimport { adaptor, statistic } from './adaptor';\n\nexport { RingProgressOptions };\n\nexport class RingProgress extends Plot<RingProgressOptions> {\n  /** 图表类型 */\n  public type: string = 'ring-process';\n\n  protected getDefaultOptions() {\n    return {\n      percent: 0.2,\n      innerRadius: 0.8,\n      radius: 0.98,\n      color: ['#FAAD14', '#E8EDF3'],\n      statistic: {\n        title: false,\n        content: {\n          style: {\n            fontSize: '14px',\n            fontWeight: 300,\n            fill: '#4D4D4D',\n            textAlign: 'center',\n            textBaseline: 'middle',\n          },\n          formatter: ({ percent }) => `${(percent * 100).toFixed(2)}%`,\n        },\n      },\n      animation: true,\n    };\n  }\n\n  /**\n   * 更新数据\n   * @param percent\n   */\n  public changeData(percent: number) {\n    this.updateOption({ percent });\n\n    this.chart.data(getProgressData(percent));\n    // todo 后续让 G2 层在 afterrender 之后，来重绘 annotations\n    statistic({ chart: this.chart, options: this.options }, true);\n  }\n\n  /**\n   * 获取 环形进度图 的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<RingProgressOptions> {\n    return adaptor;\n  }\n}\n"]}