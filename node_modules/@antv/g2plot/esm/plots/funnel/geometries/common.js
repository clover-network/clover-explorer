import { __assign, __rest } from "tslib";
import { isFunction } from '@antv/util';
import { transformLabel } from '../../../utils';
import { FUNNEL_PERCENT, FUNNEL_CONVERSATION } from '../constant';
/**
 * 漏斗图通用geometry label
 * @param geometry 对应的 chart geometry
 */
export function geometryLabel(geometry) {
    return function (params) {
        var options = params.options;
        var xField = options.xField, yField = options.yField, label = options.label;
        if (!label) {
            geometry.label(false);
        }
        else {
            var callback = label.callback, cfg = __rest(label, ["callback"]);
            geometry.label({
                fields: [xField, yField, FUNNEL_PERCENT, FUNNEL_CONVERSATION],
                callback: callback,
                cfg: transformLabel(cfg),
            });
        }
        return params;
    };
}
/**
 * 漏斗图通用转化率组件
 * @param getLineCoordinate 用于获取特定的 line 的位置及配置
 */
export function conversionTagComponent(getLineCoordinate) {
    return function (params) {
        var chart = params.chart, options = params.options;
        var conversionTag = options.conversionTag;
        var data = chart.getOptions().data;
        if (conversionTag) {
            var formatter_1 = conversionTag.formatter;
            data.forEach(function (obj, index) {
                if (index <= 0)
                    return;
                var lineOption = getLineCoordinate(obj, index, data, {
                    top: true,
                    text: {
                        content: isFunction(formatter_1) ? formatter_1(obj, data) : formatter_1,
                        offsetX: conversionTag.offsetX,
                        offsetY: conversionTag.offsetY,
                        position: 'end',
                        autoRotate: false,
                        style: __assign({ textAlign: 'start', textBaseline: 'middle' }, conversionTag.style),
                    },
                });
                chart.annotation().line(lineOption);
            });
        }
        return params;
    };
}
//# sourceMappingURL=common.js.map