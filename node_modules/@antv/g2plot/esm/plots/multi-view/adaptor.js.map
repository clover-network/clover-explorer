{"version":3,"file":"adaptor.js","sourceRoot":"","sources":["../../../src/plots/multi-view/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { each } from '@antv/util';\nimport { geometry as geometryAdaptor } from '../../adaptor/geometries/base';\nimport { interaction, animation, theme, tooltip } from '../../adaptor/common';\nimport { Params } from '../../core/adaptor';\nimport { deepAssign, flow, pick } from '../../utils';\nimport { Axis } from '../../types/axis';\nimport { AXIS_META_CONFIG_KEYS } from '../../constant';\nimport { Legend } from '../../types/legend';\nimport { MultiViewOptions, IView, IGeometry } from './types';\n\n/**\n * geometry 处理\n * @param params\n */\nfunction multiView(params: Params<MultiViewOptions>): Params<MultiViewOptions> {\n  const { chart, options } = params;\n  const { views, legend, tooltip } = options;\n\n  each(views, (v: IView) => {\n    const { region, data, meta, axes, coordinate, annotations, geometries } = v;\n\n    // 1. 创建 view\n    const viewOfG2 = chart.createView({\n      region,\n    });\n\n    // 2. data\n    viewOfG2.data(data);\n\n    // 3. meta\n    let scales: Record<string, any> = {};\n    if (axes) {\n      each(axes, (axis: Axis, field: string) => {\n        scales[field] = pick(axis, AXIS_META_CONFIG_KEYS);\n      });\n    }\n\n    scales = deepAssign({}, meta, scales);\n    viewOfG2.scale(scales);\n\n    // 4. x y axis\n    if (!axes) {\n      viewOfG2.axis(false);\n    } else {\n      each(axes, (axis: Axis, field: string) => {\n        viewOfG2.axis(field, axis);\n      });\n    }\n\n    // 5. coordinate\n    viewOfG2.coordinate(coordinate);\n\n    // 6. geometry\n    each(geometries, (geometry: IGeometry) => {\n      const { ext } = geometryAdaptor({\n        chart: viewOfG2,\n        options: geometry,\n      });\n\n      // adjust\n      const { adjust } = geometry;\n      if (adjust) {\n        ext.geometry.adjust(adjust);\n      }\n    });\n\n    // 8. annotations\n    each(annotations, (annotation) => {\n      viewOfG2.annotation()[annotation.type]({\n        ...annotation,\n      });\n    });\n  });\n\n  // legend\n  if (!legend) {\n    chart.legend(false);\n  } else {\n    each(legend, (l: Legend, field: string) => {\n      chart.legend(field, l);\n    });\n  }\n\n  // tooltip\n  chart.tooltip(tooltip);\n  return params;\n}\n\n/**\n * 图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<MultiViewOptions>) {\n  return flow(\n    animation, // 多 view 的图，动画配置放到最前面\n    multiView,\n    interaction,\n    animation,\n    theme,\n    tooltip\n    // ... 其他的 adaptor flow\n  )(params);\n}\n"]}