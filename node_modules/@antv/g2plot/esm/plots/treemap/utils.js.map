{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/plots/treemap/utils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,+BAA+B,CAAC;AAGxD,MAAM,UAAU,aAAa,CAAC,OAAuB;IAC3C,IAAA,IAAI,GAAiB,OAAO,KAAxB,EAAE,UAAU,GAAK,OAAO,WAAZ,CAAa;IAErC,IAAM,KAAK,GAAG,OAAO,CAAC,IAAI,EAAE;QAC1B,aAAa;QACb,IAAI,EAAE,mBAAmB;QACzB,IAAI,EAAE,mBAAmB;QACzB,KAAK,EAAE,OAAO;QACd,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;KACf,CAAC,CAAC;IAEH,IAAM,MAAM,GAAG,EAAE,CAAC;IAClB,KAAK,CAAC,OAAO,CAAC,UAAC,IAAI;QACjB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE;gBAC5C,CAAC,EAAE,IAAI,CAAC,CAAC;gBACT,CAAC,EAAE,IAAI,CAAC,CAAC;gBACT,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,KAAK,EAAE,IAAI,CAAC,KAAK;aAClB,CAAC,CAAC;YACH,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE;gBACzC,IAAM,YAAY,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAlB,CAAkB,CAAC,CAAC;gBACtE,QAAQ,CAAC,UAAU,CAAC,GAAG,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,IAAI,CAAC,UAAU,CAAC,CAAC;aACvD;iBAAM;gBACL,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC9C;YAED,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACvB;IACH,CAAC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["import { treemap } from '../../utils/hierarchy/treemap';\nimport { TreemapOptions } from './types';\n\nexport function transformData(options: TreemapOptions) {\n  const { data, colorField } = options;\n\n  const nodes = treemap(data, {\n    // @ts-ignore\n    type: 'hierarchy.treemap',\n    tile: 'treemapResquarify',\n    field: 'value',\n    as: ['x', 'y'],\n  });\n\n  const result = [];\n  nodes.forEach((node) => {\n    if (!node.children) {\n      const eachNode = Object.assign({}, node.data, {\n        x: node.x,\n        y: node.y,\n        depth: node.depth,\n        value: node.value,\n      });\n      if (!node.data[colorField] && node.parent) {\n        const ancestorNode = node.ancestors().find((n) => n.data[colorField]);\n        eachNode[colorField] = ancestorNode?.data[colorField];\n      } else {\n        eachNode[colorField] = node.data[colorField];\n      }\n\n      result.push(eachNode);\n    }\n  });\n  return result;\n}\n"]}