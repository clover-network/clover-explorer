{"version":3,"file":"data.js","sourceRoot":"","sources":["../../../../src/plots/sankey/util/data.ts"],"names":[],"mappings":"AAGA;;;;;;;;GAQG;AACH,MAAM,UAAU,qBAAqB,CACnC,IAAU,EACV,WAAmB,EACnB,WAAmB,EACnB,WAAmB;IAEnB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;QACxB,OAAO;YACL,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,EAAE;SACV,CAAC;KACH;IAED,IAAM,KAAK,GAAG,EAAE,CAAC;IACjB,IAAM,KAAK,GAAG,EAAE,CAAC;IAEjB,UAAU;IACV,oDAAoD;IACpD,aAAa;IAEb,4BAA4B;IAC5B,IAAI,CAAC,OAAO,CAAC,UAAC,KAAY;QACxB,IAAM,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;QAClC,IAAM,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;QAClC,IAAM,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;QAElC,cAAc;QACd,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YAC3B,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACpB;QAED,cAAc;QACd,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YAC3B,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACpB;QAED,QAAQ;QACR,KAAK,CAAC,IAAI,CAAC;YACT,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;YAC7B,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;YAC7B,KAAK,EAAE,MAAM;SACd,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,OAAO;QACL,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,CAAC,EAAE,IAAI,MAAA,EAAE,CAAC,EAAV,CAAU,CAAC;QACtC,KAAK,OAAA;KACN,CAAC;AACJ,CAAC","sourcesContent":["import { Data, Datum } from '../../../types';\nimport { SankeyLayoutInputData } from '../../../utils/transform/sankey';\n\n/**\n * 将数据序列转换成 sankey layout 需要的数据结构\n * 1. 过滤掉处理来源去向相同的节点\n * 2. 避免形成环\n * @param data\n * @param sourceField\n * @param targetField\n * @param weightField\n */\nexport function transformDataToSankey(\n  data: Data,\n  sourceField: string,\n  targetField: string,\n  weightField: string\n): SankeyLayoutInputData {\n  if (!Array.isArray(data)) {\n    return {\n      nodes: [],\n      links: [],\n    };\n  }\n\n  const nodes = [];\n  const links = [];\n\n  // TODO 逍为\n  // 1. 使用 Map 进行一些性能优化（目前 includes，indexOf 会大量进行数组遍历）\n  // 2. link 去重\n\n  // 数组变换成 sankey layout 的数据结构\n  data.forEach((datum: Datum) => {\n    const source = datum[sourceField];\n    const target = datum[targetField];\n    const weight = datum[weightField];\n\n    // source node\n    if (!nodes.includes(source)) {\n      nodes.push(source);\n    }\n\n    // target node\n    if (!nodes.includes(target)) {\n      nodes.push(target);\n    }\n\n    // links\n    links.push({\n      source: nodes.indexOf(source),\n      target: nodes.indexOf(target),\n      value: weight,\n    });\n  });\n\n  return {\n    nodes: nodes.map((name) => ({ name })),\n    links,\n  };\n}\n"]}