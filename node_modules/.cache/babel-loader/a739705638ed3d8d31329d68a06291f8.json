{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/esm/core/util';\nimport ComponentModel from '../../model/Component';\nimport axisModelCreator from '../axisModelCreator';\nimport { AxisModelCommonMixin } from '../axisModelCommonMixin';\nimport { SINGLE_REFERRING } from '../../util/model';\n\nvar PolarAxisModel = function (_super) {\n  __extends(PolarAxisModel, _super);\n\n  function PolarAxisModel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PolarAxisModel.prototype.getCoordSysModel = function () {\n    return this.getReferringComponents('polar', SINGLE_REFERRING).models[0];\n  };\n\n  PolarAxisModel.type = 'polarAxis';\n  return PolarAxisModel;\n}(ComponentModel);\n\nzrUtil.mixin(PolarAxisModel, AxisModelCommonMixin);\nexport { PolarAxisModel };\n\nvar AngleAxisModel = function (_super) {\n  __extends(AngleAxisModel, _super);\n\n  function AngleAxisModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = AngleAxisModel.type;\n    return _this;\n  }\n\n  AngleAxisModel.type = 'angleAxis';\n  return AngleAxisModel;\n}(PolarAxisModel);\n\nexport { AngleAxisModel };\n\nvar RadiusAxisModel = function (_super) {\n  __extends(RadiusAxisModel, _super);\n\n  function RadiusAxisModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = RadiusAxisModel.type;\n    return _this;\n  }\n\n  RadiusAxisModel.type = 'radiusAxis';\n  return RadiusAxisModel;\n}(PolarAxisModel);\n\nexport { RadiusAxisModel };\nvar angleAxisExtraOption = {\n  startAngle: 90,\n  clockwise: true,\n  splitNumber: 12,\n  axisLabel: {\n    rotate: 0\n  }\n};\nvar radiusAxisExtraOption = {\n  splitNumber: 5\n};\naxisModelCreator('angle', AngleAxisModel, angleAxisExtraOption);\naxisModelCreator('radius', RadiusAxisModel, radiusAxisExtraOption);","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/esm/coord/polar/AxisModel.js"],"names":["__extends","zrUtil","ComponentModel","axisModelCreator","AxisModelCommonMixin","SINGLE_REFERRING","PolarAxisModel","_super","apply","arguments","prototype","getCoordSysModel","getReferringComponents","models","type","mixin","AngleAxisModel","_this","RadiusAxisModel","angleAxisExtraOption","startAngle","clockwise","splitNumber","axisLabel","rotate","radiusAxisExtraOption"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AAEA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,gBAAT,QAAiC,kBAAjC;;AAEA,IAAIC,cAAc,GAAG,UAAUC,MAAV,EAAkB;AACrCP,EAAAA,SAAS,CAACM,cAAD,EAAiBC,MAAjB,CAAT;;AAEA,WAASD,cAAT,GAA0B;AACxB,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACD;;AAEDH,EAAAA,cAAc,CAACI,SAAf,CAAyBC,gBAAzB,GAA4C,YAAY;AACtD,WAAO,KAAKC,sBAAL,CAA4B,OAA5B,EAAqCP,gBAArC,EAAuDQ,MAAvD,CAA8D,CAA9D,CAAP;AACD,GAFD;;AAIAP,EAAAA,cAAc,CAACQ,IAAf,GAAsB,WAAtB;AACA,SAAOR,cAAP;AACD,CAboB,CAanBJ,cAbmB,CAArB;;AAeAD,MAAM,CAACc,KAAP,CAAaT,cAAb,EAA6BF,oBAA7B;AACA,SAASE,cAAT;;AAEA,IAAIU,cAAc,GAAG,UAAUT,MAAV,EAAkB;AACrCP,EAAAA,SAAS,CAACgB,cAAD,EAAiBT,MAAjB,CAAT;;AAEA,WAASS,cAAT,GAA0B;AACxB,QAAIC,KAAK,GAAGV,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;;AAEAQ,IAAAA,KAAK,CAACH,IAAN,GAAaE,cAAc,CAACF,IAA5B;AACA,WAAOG,KAAP;AACD;;AAEDD,EAAAA,cAAc,CAACF,IAAf,GAAsB,WAAtB;AACA,SAAOE,cAAP;AACD,CAZoB,CAYnBV,cAZmB,CAArB;;AAcA,SAASU,cAAT;;AAEA,IAAIE,eAAe,GAAG,UAAUX,MAAV,EAAkB;AACtCP,EAAAA,SAAS,CAACkB,eAAD,EAAkBX,MAAlB,CAAT;;AAEA,WAASW,eAAT,GAA2B;AACzB,QAAID,KAAK,GAAGV,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;;AAEAQ,IAAAA,KAAK,CAACH,IAAN,GAAaI,eAAe,CAACJ,IAA7B;AACA,WAAOG,KAAP;AACD;;AAEDC,EAAAA,eAAe,CAACJ,IAAhB,GAAuB,YAAvB;AACA,SAAOI,eAAP;AACD,CAZqB,CAYpBZ,cAZoB,CAAtB;;AAcA,SAASY,eAAT;AACA,IAAIC,oBAAoB,GAAG;AACzBC,EAAAA,UAAU,EAAE,EADa;AAEzBC,EAAAA,SAAS,EAAE,IAFc;AAGzBC,EAAAA,WAAW,EAAE,EAHY;AAIzBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE;AADC;AAJc,CAA3B;AAQA,IAAIC,qBAAqB,GAAG;AAC1BH,EAAAA,WAAW,EAAE;AADa,CAA5B;AAGAnB,gBAAgB,CAAC,OAAD,EAAUa,cAAV,EAA0BG,oBAA1B,CAAhB;AACAhB,gBAAgB,CAAC,QAAD,EAAWe,eAAX,EAA4BO,qBAA5B,CAAhB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/esm/core/util';\nimport ComponentModel from '../../model/Component';\nimport axisModelCreator from '../axisModelCreator';\nimport { AxisModelCommonMixin } from '../axisModelCommonMixin';\nimport { SINGLE_REFERRING } from '../../util/model';\n\nvar PolarAxisModel = function (_super) {\n  __extends(PolarAxisModel, _super);\n\n  function PolarAxisModel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PolarAxisModel.prototype.getCoordSysModel = function () {\n    return this.getReferringComponents('polar', SINGLE_REFERRING).models[0];\n  };\n\n  PolarAxisModel.type = 'polarAxis';\n  return PolarAxisModel;\n}(ComponentModel);\n\nzrUtil.mixin(PolarAxisModel, AxisModelCommonMixin);\nexport { PolarAxisModel };\n\nvar AngleAxisModel = function (_super) {\n  __extends(AngleAxisModel, _super);\n\n  function AngleAxisModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = AngleAxisModel.type;\n    return _this;\n  }\n\n  AngleAxisModel.type = 'angleAxis';\n  return AngleAxisModel;\n}(PolarAxisModel);\n\nexport { AngleAxisModel };\n\nvar RadiusAxisModel = function (_super) {\n  __extends(RadiusAxisModel, _super);\n\n  function RadiusAxisModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = RadiusAxisModel.type;\n    return _this;\n  }\n\n  RadiusAxisModel.type = 'radiusAxis';\n  return RadiusAxisModel;\n}(PolarAxisModel);\n\nexport { RadiusAxisModel };\nvar angleAxisExtraOption = {\n  startAngle: 90,\n  clockwise: true,\n  splitNumber: 12,\n  axisLabel: {\n    rotate: 0\n  }\n};\nvar radiusAxisExtraOption = {\n  splitNumber: 5\n};\naxisModelCreator('angle', AngleAxisModel, angleAxisExtraOption);\naxisModelCreator('radius', RadiusAxisModel, radiusAxisExtraOption);"]},"metadata":{},"sourceType":"module"}