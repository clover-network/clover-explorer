{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport { SafeAreaView, View } from 'react-native';\nimport { WithTheme } from '../style';\nimport TabBarStyles from './style/index';\nimport TabBarItem from './TabBarItem';\n\nvar TabBar = function (_React$Component) {\n  _inherits(TabBar, _React$Component);\n\n  function TabBar() {\n    _classCallCheck(this, TabBar);\n\n    return _possibleConstructorReturn(this, (TabBar.__proto__ || Object.getPrototypeOf(TabBar)).apply(this, arguments));\n  }\n\n  _createClass(TabBar, [{\n    key: 'getPanes',\n    value: function getPanes(styles, content) {\n      var _props = this.props,\n          tintColor = _props.tintColor,\n          unselectedTintColor = _props.unselectedTintColor,\n          children = _props.children; // ios 规则： selected 为多个则只选中最后一个， selected 为 0 个则选中第一个;\n\n      var selectedIndex = 0;\n      [].concat(children).forEach(function (child, idx) {\n        if (child.props.selected) {\n          selectedIndex = idx;\n        }\n      });\n      var newChildren = [];\n      React.Children.map(children, function (child, idx) {\n        if (content && selectedIndex === idx) {\n          newChildren.push(React.createElement(View, {\n            key: idx,\n            style: [styles.contentItem, idx === selectedIndex ? styles.contentItemSelected : undefined]\n          }, child.props.children));\n        } else {\n          newChildren.push(React.cloneElement(child, {\n            key: idx,\n            tintColor: tintColor,\n            unselectedTintColor: unselectedTintColor,\n            styles: styles\n          }));\n        }\n      });\n\n      if (content) {\n        return newChildren.filter(function (_, i) {\n          return i === selectedIndex;\n        });\n      }\n\n      return newChildren;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var style = {\n        backgroundColor: this.props.barTintColor\n      };\n      return React.createElement(SafeAreaView, {\n        style: [{\n          flex: 1\n        }, style]\n      }, React.createElement(WithTheme, {\n        styles: this.props.styles,\n        themeStyles: TabBarStyles\n      }, function (styles) {\n        return React.createElement(View, {\n          style: styles.tabbar\n        }, React.createElement(View, {\n          style: styles.content\n        }, _this2.getPanes(styles, true)), React.createElement(View, {\n          style: [style, styles.tabs]\n        }, _this2.getPanes(styles, false)));\n      }));\n    }\n  }]);\n\n  return TabBar;\n}(React.Component);\n\nTabBar.defaultProps = {\n  barTintColor: 'white',\n  tintColor: '#108ee9',\n  unselectedTintColor: '#888'\n};\nTabBar.Item = TabBarItem;\nexport default TabBar;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@ant-design/react-native/es/tab-bar/index.js"],"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","SafeAreaView","View","WithTheme","TabBarStyles","TabBarItem","TabBar","_React$Component","__proto__","Object","getPrototypeOf","apply","arguments","key","value","getPanes","styles","content","_props","props","tintColor","unselectedTintColor","children","selectedIndex","concat","forEach","child","idx","selected","newChildren","Children","map","push","createElement","style","contentItem","contentItemSelected","undefined","cloneElement","filter","_","i","render","_this2","backgroundColor","barTintColor","flex","themeStyles","tabbar","tabs","Component","defaultProps","Item"],"mappings":"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","sourcesContent":["import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport { SafeAreaView, View } from 'react-native';\nimport { WithTheme } from '../style';\nimport TabBarStyles from './style/index';\nimport TabBarItem from './TabBarItem';\n\nvar TabBar = function (_React$Component) {\n    _inherits(TabBar, _React$Component);\n\n    function TabBar() {\n        _classCallCheck(this, TabBar);\n\n        return _possibleConstructorReturn(this, (TabBar.__proto__ || Object.getPrototypeOf(TabBar)).apply(this, arguments));\n    }\n\n    _createClass(TabBar, [{\n        key: 'getPanes',\n        value: function getPanes(styles, content) {\n            var _props = this.props,\n                tintColor = _props.tintColor,\n                unselectedTintColor = _props.unselectedTintColor,\n                children = _props.children;\n            // ios 规则： selected 为多个则只选中最后一个， selected 为 0 个则选中第一个;\n\n            var selectedIndex = 0;\n            [].concat(children).forEach(function (child, idx) {\n                if (child.props.selected) {\n                    selectedIndex = idx;\n                }\n            });\n            var newChildren = [];\n            React.Children.map(children, function (child, idx) {\n                if (content && selectedIndex === idx) {\n                    newChildren.push(React.createElement(\n                        View,\n                        { key: idx, style: [styles.contentItem, idx === selectedIndex ? styles.contentItemSelected : undefined] },\n                        child.props.children\n                    ));\n                } else {\n                    newChildren.push(React.cloneElement(child, {\n                        key: idx,\n                        tintColor: tintColor,\n                        unselectedTintColor: unselectedTintColor,\n                        styles: styles\n                    }));\n                }\n            });\n            if (content) {\n                return newChildren.filter(function (_, i) {\n                    return i === selectedIndex;\n                });\n            }\n            return newChildren;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var style = { backgroundColor: this.props.barTintColor };\n            return React.createElement(\n                SafeAreaView,\n                { style: [{ flex: 1 }, style] },\n                React.createElement(\n                    WithTheme,\n                    { styles: this.props.styles, themeStyles: TabBarStyles },\n                    function (styles) {\n                        return React.createElement(\n                            View,\n                            { style: styles.tabbar },\n                            React.createElement(\n                                View,\n                                { style: styles.content },\n                                _this2.getPanes(styles, true)\n                            ),\n                            React.createElement(\n                                View,\n                                { style: [style, styles.tabs] },\n                                _this2.getPanes(styles, false)\n                            )\n                        );\n                    }\n                )\n            );\n        }\n    }]);\n\n    return TabBar;\n}(React.Component);\n\nTabBar.defaultProps = {\n    barTintColor: 'white',\n    tintColor: '#108ee9',\n    unselectedTintColor: '#888'\n};\nTabBar.Item = TabBarItem;\nexport default TabBar;"]},"metadata":{},"sourceType":"module"}