{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nimport * as echarts from '../echarts';\nimport * as zrUtil from 'zrender/esm/core/util';\nimport * as axisPointerModelHelper from './axisPointer/modelHelper';\nimport axisTrigger from './axisPointer/axisTrigger';\nimport './axisPointer/AxisPointerView';\nimport './axisPointer/CartesianAxisPointer';\nimport AxisPointerModel from './axisPointer/AxisPointerModel';\nimport ComponentModel from '../model/Component';\nComponentModel.registerClass(AxisPointerModel);\necharts.registerPreprocessor(function (option) {\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link;\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n});\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n});\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/esm/component/axisPointer.js"],"names":["echarts","zrUtil","axisPointerModelHelper","axisTrigger","AxisPointerModel","ComponentModel","registerClass","registerPreprocessor","option","axisPointer","length","link","isArray","registerProcessor","PRIORITY","PROCESSOR","STATISTIC","ecModel","api","getComponent","coordSysAxesInfo","collect","registerAction","type","event","update"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AAEA,OAAO,KAAKA,OAAZ,MAAyB,YAAzB;AACA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;AACA,OAAO,KAAKC,sBAAZ,MAAwC,2BAAxC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAO,+BAAP;AACA,OAAO,oCAAP;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACAA,cAAc,CAACC,aAAf,CAA6BF,gBAA7B;AACAJ,OAAO,CAACO,oBAAR,CAA6B,UAAUC,MAAV,EAAkB;AAC7C,MAAIA,MAAJ,EAAY;AACV,KAAC,CAACA,MAAM,CAACC,WAAR,IAAuBD,MAAM,CAACC,WAAP,CAAmBC,MAAnB,KAA8B,CAAtD,MAA6DF,MAAM,CAACC,WAAP,GAAqB,EAAlF;AACA,QAAIE,IAAI,GAAGH,MAAM,CAACC,WAAP,CAAmBE,IAA9B;;AAEA,QAAIA,IAAI,IAAI,CAACV,MAAM,CAACW,OAAP,CAAeD,IAAf,CAAb,EAAmC;AACjCH,MAAAA,MAAM,CAACC,WAAP,CAAmBE,IAAnB,GAA0B,CAACA,IAAD,CAA1B;AACD;AACF;AACF,CATD;AAUAX,OAAO,CAACa,iBAAR,CAA0Bb,OAAO,CAACc,QAAR,CAAiBC,SAAjB,CAA2BC,SAArD,EAAgE,UAAUC,OAAV,EAAmBC,GAAnB,EAAwB;AACtFD,EAAAA,OAAO,CAACE,YAAR,CAAqB,aAArB,EAAoCC,gBAApC,GAAuDlB,sBAAsB,CAACmB,OAAvB,CAA+BJ,OAA/B,EAAwCC,GAAxC,CAAvD;AACD,CAFD;AAGAlB,OAAO,CAACsB,cAAR,CAAuB;AACrBC,EAAAA,IAAI,EAAE,mBADe;AAErBC,EAAAA,KAAK,EAAE,mBAFc;AAGrBC,EAAAA,MAAM,EAAE;AAHa,CAAvB,EAIGtB,WAJH","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport * as echarts from '../echarts';\nimport * as zrUtil from 'zrender/esm/core/util';\nimport * as axisPointerModelHelper from './axisPointer/modelHelper';\nimport axisTrigger from './axisPointer/axisTrigger';\nimport './axisPointer/AxisPointerView';\nimport './axisPointer/CartesianAxisPointer';\nimport AxisPointerModel from './axisPointer/AxisPointerModel';\nimport ComponentModel from '../model/Component';\nComponentModel.registerClass(AxisPointerModel);\necharts.registerPreprocessor(function (option) {\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link;\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n});\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n});\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);"]},"metadata":{},"sourceType":"module"}