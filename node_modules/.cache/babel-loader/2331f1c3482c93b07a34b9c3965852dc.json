{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault_1 = require(\"./axisDefault\");\n\nvar Component_1 = require(\"../model/Component\");\n\nvar layout_1 = require(\"../util/layout\");\n\nvar OrdinalMeta_1 = require(\"../data/OrdinalMeta\");\n\nvar axisCommonTypes_1 = require(\"./axisCommonTypes\");\n\nfunction axisModelCreator(axisName, BaseAxisModelClass, extraDefaultOption) {\n  zrUtil.each(axisCommonTypes_1.AXIS_TYPES, function (v, axisType) {\n    var defaultOption = zrUtil.merge(zrUtil.merge({}, axisDefault_1[\"default\"][axisType], true), extraDefaultOption, true);\n\n    var AxisModel = function (_super) {\n      tslib_1.__extends(AxisModel, _super);\n\n      function AxisModel() {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _this = _super.apply(this, args) || this;\n\n        _this.type = axisName + 'Axis.' + axisType;\n        return _this;\n      }\n\n      AxisModel.prototype.mergeDefaultAndTheme = function (option, ecModel) {\n        var layoutMode = layout_1.fetchLayoutMode(this);\n        var inputPositionParams = layoutMode ? layout_1.getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = getAxisType(option);\n\n        if (layoutMode) {\n          layout_1.mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      };\n\n      AxisModel.prototype.optionUpdated = function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta_1[\"default\"].createByAxisModel(this);\n        }\n      };\n\n      AxisModel.prototype.getCategories = function (rawData) {\n        var option = this.option;\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      };\n\n      AxisModel.prototype.getOrdinalMeta = function () {\n        return this.__ordinalMeta;\n      };\n\n      AxisModel.type = axisName + 'Axis.' + axisType;\n      AxisModel.defaultOption = defaultOption;\n      return AxisModel;\n    }(BaseAxisModelClass);\n\n    Component_1[\"default\"].registerClass(AxisModel);\n  });\n  Component_1[\"default\"].registerSubTypeDefaulter(axisName + 'Axis', getAxisType);\n}\n\nexports[\"default\"] = axisModelCreator;\n\nfunction getAxisType(option) {\n  return option.type || (option.data ? 'category' : 'value');\n}","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/coord/axisModelCreator.js"],"names":["exports","__esModule","tslib_1","require","zrUtil","axisDefault_1","Component_1","layout_1","OrdinalMeta_1","axisCommonTypes_1","axisModelCreator","axisName","BaseAxisModelClass","extraDefaultOption","each","AXIS_TYPES","v","axisType","defaultOption","merge","AxisModel","_super","__extends","args","_i","arguments","length","_this","apply","type","prototype","mergeDefaultAndTheme","option","ecModel","layoutMode","fetchLayoutMode","inputPositionParams","getLayoutParams","themeModel","getTheme","get","getDefaultOption","getAxisType","mergeLayoutParam","optionUpdated","thisOption","__ordinalMeta","createByAxisModel","getCategories","rawData","data","categories","getOrdinalMeta","registerClass","registerSubTypeDefaulter"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault_1 = require(\"./axisDefault\");\n\nvar Component_1 = require(\"../model/Component\");\n\nvar layout_1 = require(\"../util/layout\");\n\nvar OrdinalMeta_1 = require(\"../data/OrdinalMeta\");\n\nvar axisCommonTypes_1 = require(\"./axisCommonTypes\");\n\nfunction axisModelCreator(axisName, BaseAxisModelClass, extraDefaultOption) {\n  zrUtil.each(axisCommonTypes_1.AXIS_TYPES, function (v, axisType) {\n    var defaultOption = zrUtil.merge(zrUtil.merge({}, axisDefault_1[\"default\"][axisType], true), extraDefaultOption, true);\n\n    var AxisModel = function (_super) {\n      tslib_1.__extends(AxisModel, _super);\n\n      function AxisModel() {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _this = _super.apply(this, args) || this;\n\n        _this.type = axisName + 'Axis.' + axisType;\n        return _this;\n      }\n\n      AxisModel.prototype.mergeDefaultAndTheme = function (option, ecModel) {\n        var layoutMode = layout_1.fetchLayoutMode(this);\n        var inputPositionParams = layoutMode ? layout_1.getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = getAxisType(option);\n\n        if (layoutMode) {\n          layout_1.mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      };\n\n      AxisModel.prototype.optionUpdated = function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta_1[\"default\"].createByAxisModel(this);\n        }\n      };\n\n      AxisModel.prototype.getCategories = function (rawData) {\n        var option = this.option;\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      };\n\n      AxisModel.prototype.getOrdinalMeta = function () {\n        return this.__ordinalMeta;\n      };\n\n      AxisModel.type = axisName + 'Axis.' + axisType;\n      AxisModel.defaultOption = defaultOption;\n      return AxisModel;\n    }(BaseAxisModelClass);\n\n    Component_1[\"default\"].registerClass(AxisModel);\n  });\n  Component_1[\"default\"].registerSubTypeDefaulter(axisName + 'Axis', getAxisType);\n}\n\nexports[\"default\"] = axisModelCreator;\n\nfunction getAxisType(option) {\n  return option.type || (option.data ? 'category' : 'value');\n}"]},"metadata":{},"sourceType":"script"}