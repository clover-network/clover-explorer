{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nimport { __extends } from \"tslib\";\nimport createListFromArray from '../helper/createListFromArray';\nimport SeriesModel from '../../model/Series';\n\nvar EffectScatterSeriesModel = function (_super) {\n  __extends(EffectScatterSeriesModel, _super);\n\n  function EffectScatterSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = EffectScatterSeriesModel.type;\n    _this.hasSymbolVisual = true;\n    return _this;\n  }\n\n  EffectScatterSeriesModel.prototype.getInitialData = function (option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      useEncodeDefaulter: true\n    });\n  };\n\n  EffectScatterSeriesModel.prototype.brushSelector = function (dataIndex, data, selectors) {\n    return selectors.point(data.getItemLayout(dataIndex));\n  };\n\n  EffectScatterSeriesModel.type = 'series.effectScatter';\n  EffectScatterSeriesModel.dependencies = ['grid', 'polar'];\n  EffectScatterSeriesModel.defaultOption = {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    effectType: 'ripple',\n    progressive: 0,\n    showEffectOn: 'render',\n    rippleEffect: {\n      period: 4,\n      scale: 2.5,\n      brushType: 'fill'\n    },\n    symbolSize: 10\n  };\n  return EffectScatterSeriesModel;\n}(SeriesModel);\n\nSeriesModel.registerClass(EffectScatterSeriesModel);\nexport default EffectScatterSeriesModel;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/esm/chart/effectScatter/EffectScatterSeries.js"],"names":["__extends","createListFromArray","SeriesModel","EffectScatterSeriesModel","_super","_this","apply","arguments","type","hasSymbolVisual","prototype","getInitialData","option","ecModel","getSource","useEncodeDefaulter","brushSelector","dataIndex","data","selectors","point","getItemLayout","dependencies","defaultOption","coordinateSystem","zlevel","z","legendHoverLink","effectType","progressive","showEffectOn","rippleEffect","period","scale","brushType","symbolSize","registerClass"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AAEA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,mBAAP,MAAgC,+BAAhC;AACA,OAAOC,WAAP,MAAwB,oBAAxB;;AAEA,IAAIC,wBAAwB,GAAG,UAAUC,MAAV,EAAkB;AAC/CJ,EAAAA,SAAS,CAACG,wBAAD,EAA2BC,MAA3B,CAAT;;AAEA,WAASD,wBAAT,GAAoC;AAClC,QAAIE,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;;AAEAF,IAAAA,KAAK,CAACG,IAAN,GAAaL,wBAAwB,CAACK,IAAtC;AACAH,IAAAA,KAAK,CAACI,eAAN,GAAwB,IAAxB;AACA,WAAOJ,KAAP;AACD;;AAEDF,EAAAA,wBAAwB,CAACO,SAAzB,CAAmCC,cAAnC,GAAoD,UAAUC,MAAV,EAAkBC,OAAlB,EAA2B;AAC7E,WAAOZ,mBAAmB,CAAC,KAAKa,SAAL,EAAD,EAAmB,IAAnB,EAAyB;AACjDC,MAAAA,kBAAkB,EAAE;AAD6B,KAAzB,CAA1B;AAGD,GAJD;;AAMAZ,EAAAA,wBAAwB,CAACO,SAAzB,CAAmCM,aAAnC,GAAmD,UAAUC,SAAV,EAAqBC,IAArB,EAA2BC,SAA3B,EAAsC;AACvF,WAAOA,SAAS,CAACC,KAAV,CAAgBF,IAAI,CAACG,aAAL,CAAmBJ,SAAnB,CAAhB,CAAP;AACD,GAFD;;AAIAd,EAAAA,wBAAwB,CAACK,IAAzB,GAAgC,sBAAhC;AACAL,EAAAA,wBAAwB,CAACmB,YAAzB,GAAwC,CAAC,MAAD,EAAS,OAAT,CAAxC;AACAnB,EAAAA,wBAAwB,CAACoB,aAAzB,GAAyC;AACvCC,IAAAA,gBAAgB,EAAE,aADqB;AAEvCC,IAAAA,MAAM,EAAE,CAF+B;AAGvCC,IAAAA,CAAC,EAAE,CAHoC;AAIvCC,IAAAA,eAAe,EAAE,IAJsB;AAKvCC,IAAAA,UAAU,EAAE,QAL2B;AAMvCC,IAAAA,WAAW,EAAE,CAN0B;AAOvCC,IAAAA,YAAY,EAAE,QAPyB;AAQvCC,IAAAA,YAAY,EAAE;AACZC,MAAAA,MAAM,EAAE,CADI;AAEZC,MAAAA,KAAK,EAAE,GAFK;AAGZC,MAAAA,SAAS,EAAE;AAHC,KARyB;AAavCC,IAAAA,UAAU,EAAE;AAb2B,GAAzC;AAeA,SAAOhC,wBAAP;AACD,CAvC8B,CAuC7BD,WAvC6B,CAA/B;;AAyCAA,WAAW,CAACkC,aAAZ,CAA0BjC,wBAA1B;AACA,eAAeA,wBAAf","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\nimport createListFromArray from '../helper/createListFromArray';\nimport SeriesModel from '../../model/Series';\n\nvar EffectScatterSeriesModel = function (_super) {\n  __extends(EffectScatterSeriesModel, _super);\n\n  function EffectScatterSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = EffectScatterSeriesModel.type;\n    _this.hasSymbolVisual = true;\n    return _this;\n  }\n\n  EffectScatterSeriesModel.prototype.getInitialData = function (option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      useEncodeDefaulter: true\n    });\n  };\n\n  EffectScatterSeriesModel.prototype.brushSelector = function (dataIndex, data, selectors) {\n    return selectors.point(data.getItemLayout(dataIndex));\n  };\n\n  EffectScatterSeriesModel.type = 'series.effectScatter';\n  EffectScatterSeriesModel.dependencies = ['grid', 'polar'];\n  EffectScatterSeriesModel.defaultOption = {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    effectType: 'ripple',\n    progressive: 0,\n    showEffectOn: 'render',\n    rippleEffect: {\n      period: 4,\n      scale: 2.5,\n      brushType: 'fill'\n    },\n    symbolSize: 10\n  };\n  return EffectScatterSeriesModel;\n}(SeriesModel);\n\nSeriesModel.registerClass(EffectScatterSeriesModel);\nexport default EffectScatterSeriesModel;"]},"metadata":{},"sourceType":"module"}