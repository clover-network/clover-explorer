{"ast":null,"code":"var _jsxFileName = \"/Users/wanglijie/wanglijie/clover-defi-wallet/src/pages/DappM/index.tsx\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Text } from 'rebass';\nimport Column, { AutoColumn } from '../../components/Column';\nimport Row, { RowBetween, RowCenter } from '../../components/Row';\nimport ImgDappExchange from \"../../assets/images/polkadot_exchange.svg\";\nimport SwapIcon from \"../../assets/images/swap_icon.svg\";\nimport LendingIcon from \"../../assets/images/lending_icon.svg\";\nimport AggregationIcon from \"../../assets/images/aggregation_icon.svg\";\nimport AuctionIcon from \"../../assets/images/auction_icon.svg\";\nimport InsuranceIcon from \"../../assets/images/insurance_icon.svg\";\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport InputBase from '@material-ui/core/InputBase';\nimport Tab from '@material-ui/core/Tab';\nimport './style.css';\nconst BodyWrapper = styled(AutoColumn)`\n  height: calc(100vh - 50px);\n`;\nconst HeadContainer = styled(RowBetween)`\n  margin-top: 50px;\n  padding: 0 20px;\n  height: 44px;\n`;\nconst DAppIconListTitle = styled(RowBetween)`\n  margin-top: 10px;\n  padding: 0 20px;\n  margin-left: 5px;\n`;\nconst DAppIconListWrapper = styled(RowBetween)`\n  margin-top: 15px;\n  padding: 0 20px;\n`;\nconst DappIconWrapper = styled.div`\n  text-align: center;\n  flex-grow: 1;\n  width: 50px;\n`;\nconst DappIconName = styled(Text)`\n  font-size: 12px;\n  color: #666666;\n  margin-top: 5px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nconst SwapContainer = styled.div`\n  margin: 15px 20px 0;\n  padding: 15px;\n  background: rgba(246, 136, 59, 0.08);\n  border-radius: 15px;\n`;\nconst TransferWrapper = styled(Row)`\n    position: relative;\n`;\nconst TransferImg = styled.img`\n  width: 35px;\n  height: 35px;\n  margin: 0 10px;\n`;\nconst SecondTitle = styled(Text)`\n  font-size: 18px;\n  color: #333333;\n  font-weight: 600;\n`;\nconst GrayBackground = styled.div`\n  width: 100%;\n  overflow-x: hidden;\n  height: fit-content;\n  background: linear-gradient(180deg, #FFFFFF 0%, #F3f3f3 100%);\n`;\nconst SwapButton = styled(RowCenter)`\n  padding: 0 15px;\n  height: 35px;\n  background: #FF7D30;\n  border-radius: 18px;\n  color: #ffffff;\n  margin-left: 10px;\n  position: absolute;\n  right: 0;\n  top: 0;\n`;\nconst Search = styled.img`\n  margin-left: 20px;\n  width: 27px;\n  height: 27px;\n`;\nconst DappListWrapper = styled.div`\n  background-color: #ffffff;\n  margin: 0 20px;\n  border-radius: 10px;\n`;\nconst DappContainer = styled(Row)`\n  align-items: stretch;\n  padding: 15px;\n  height: 80px;\n`;\nconst DappContentWrapper = styled(Column)`\n  max-width: 80%;\n  margin-left: 10px;\n  justify-content: space-between;\n`;\nconst DappName = styled(Text)`\n  font-size: 16px;\n  font-weight: bold;\n  color: #000000;\n`;\nconst DappDescription = styled(Text)`\n  font-size: 12px;\n  font-weight: normal;\n  color: #666666;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nexport default class DappM extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.searchDapps = () => {\n      this.props.history.push('/search');\n    };\n\n    this.moreDapps = () => {\n      this.props.history.push('/moredapps');\n    };\n\n    this.goDappsDetail = (url, dappName) => {\n      this.props.history.push({\n        pathname: '/dappsdetail',\n        state: {\n          url: url,\n          dappName: dappName\n        }\n      });\n    };\n\n    this.handleChangeFrom = event => {\n      this.setState({\n        fromCurrencyType: event.target.value\n      });\n    };\n\n    this.handleChangeTo = event => {\n      this.setState({\n        toCurrencyType: event.target.value\n      });\n    };\n\n    this.handleChange = (event, value) => {\n      const {\n        allDappList\n      } = this.state;\n      this.setState({\n        currentIndex: value,\n        dapplist: allDappList[value]\n      });\n    };\n\n    this.handleChangeIndex = index => {\n      const {\n        allDappList\n      } = this.state;\n      this.setState({\n        currentIndex: index,\n        dapplist: allDappList[index]\n      });\n    };\n\n    const dappLists = [[{\n      dappName: 'Polkaswap',\n      describe: 'Polkaswap is a DEX project for the Polkadot ecosystem. It provides a standard bridging interface and will give the easy possibility to list and exchange tokens for all substrate parachains and other blockchains like Ethereum and Bitcoin.',\n      url: 'https://polkaswap.io/',\n      icon: ImgDappExchange\n    }, {\n      dappName: 'MANTRA DAO',\n      describe: 'MANTRA DAO is a community governed DeFi platform focusing on staking, lending, and governance.',\n      url: 'https://mantradao.com/',\n      icon: ImgDappExchange\n    }, {\n      dappName: 'Reef Finance',\n      describe: 'Reef the crosschain DeFi operating system',\n      url: 'https://reef.finance/',\n      icon: ImgDappExchange\n    }], [{\n      dappName: 'Ren',\n      describe: 'Ren is an open protocol that enables the permissionless and private transfer of value between any blockchain.',\n      url: 'https://renproject.io/',\n      icon: ImgDappExchange\n    }], [{\n      dappName: 'Xaya',\n      describe: 'Decentralised Complex Gaming',\n      url: 'https://xaya.io/',\n      icon: ImgDappExchange\n    }], [{\n      dappName: 'Polkaswap',\n      describe: 'Polkaswap is a DEX project for the Polkadot ecosystem. It provides a standard bridging interface and will give the easy possibility to list and exchange tokens for all substrate parachains and other blockchains like Ethereum and Bitcoin.',\n      url: 'https://polkaswap.io/',\n      icon: ImgDappExchange\n    }, {\n      dappName: 'Polkastarter',\n      describe: 'Polkastarter is a permissionless DEX built for cross-chain token pools and auctions, enabling projects to raise capital on a decentralized and interoperable environment based on Polkadot.',\n      url: 'https://www.polkastarter.com/',\n      icon: ImgDappExchange\n    }], [{\n      dappName: 'Chads.VC',\n      describe: 'CHAD is the first deflationary MEME token built on Polkadot',\n      url: 'https://www.chads.vc/',\n      icon: ImgDappExchange\n    }]];\n    this.state = {\n      tabList: [{\n        tabName: \"DeFi\",\n        id: 1\n      }, {\n        tabName: \"Bridge\",\n        id: 2\n      }, {\n        tabName: \"Grant\",\n        id: 3\n      }, {\n        tabName: \"Exchange\",\n        id: 4\n      }, {\n        tabName: \"NFT\",\n        id: 5\n      }],\n      fromCurrencyType: 'CLV',\n      toCurrencyType: 'ETH',\n      currentIndex: 0,\n      allDappList: dappLists,\n      dapplist: dappLists[0],\n      isScrollTop: true\n    };\n    this.windowOnScroll();\n  }\n\n  windowOnScroll() {\n    let _this = this;\n\n    window.onscroll = function () {\n      let h = document.documentElement.scrollTop;\n      console.log(h);\n\n      if (h > 10) {\n        if (_this.state.isScrollTop) {\n          console.log('111');\n\n          _this.setState({\n            contentClass: \"conditionArea conditionArea_fixed\",\n            isScrollTop: false\n          });\n        }\n      } else {\n        if (!_this.state.isScrollTop) {\n          console.log(\"333\");\n\n          _this.setState({\n            contentClass: \"conditionArea\",\n            isScrollTop: true\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    const {\n      fromCurrencyType,\n      toCurrencyType,\n      tabList,\n      currentIndex,\n      dapplist\n    } = this.state;\n    const recommendDapps = [{\n      icon: SwapIcon,\n      appName: 'Swap'\n    }, {\n      icon: LendingIcon,\n      appName: 'Lending'\n    }, {\n      icon: AggregationIcon,\n      appName: 'Aggregation'\n    }, {\n      icon: AuctionIcon,\n      appName: 'Auction'\n    }, {\n      icon: InsuranceIcon,\n      appName: 'Insurance'\n    }];\n    const slideStyles = {\n      tabs: {\n        marginBottom: '10px'\n      },\n      slide: {\n        padding: '10px 0',\n        minHeight: 'fit-content',\n        color: '#fff',\n        overflow: 'hidden'\n      }\n    };\n    const BootstrapInput = withStyles(theme => ({\n      input: {\n        position: 'relative',\n        border: 'none',\n        fontSize: 16,\n        width: 'fit-content',\n        '&:focus': {\n          backgroundColor: 'rgba(246, 136, 59, 0.08)'\n        }\n      }\n    }))(InputBase);\n    const AntTab = withStyles(theme => ({\n      root: {\n        textTransform: 'none',\n        fontSize: '15px',\n        '&$selected': {\n          color: '#FF7D30',\n          fontWeight: theme.typography.fontWeightMedium\n        }\n      },\n      selected: {}\n    }))(Tab);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"set_head_fixed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"set_text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 13\n      }\n    }, \"\\u6211\\u662F\\u5934\\u90E8\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"conditionArea\",\n      className: this.state.contentClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 15\n      }\n    }, \"\\u7F6E\\u9876\\u5757\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"set_displayContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 13\n      }\n    }, \"\\u5185\\u5BB9\\u533A\\u57DF\"))) // <AppBody>\n    //   <BodyWrapper gap={'md'}>\n    //     <HeadContainer>\n    //       <img width=\"148\" height=\"18\" src={Application} alt=\"\"/>\n    //       <Search src={SearchIcon} alt='search' onClick={this.searchDapps} />\n    //     </HeadContainer>\n    //     <div>\n    //       <DAppIconListTitle>\n    //         <SecondTitle>My DApps</SecondTitle>\n    //         <Text color='#333333' fontSize='14px' onClick={this.moreDapps}>more</Text>\n    //       </DAppIconListTitle>\n    //       <DAppIconListWrapper>\n    //         {recommendDapps.map((dapp) => (\n    //             <DappIconWrapper onClick={() => { this.goDappsDetail('https://swap.clover.finance/#/', dapp.appName); }}>\n    //               <img width='50' height='50' src={dapp.icon} alt=\"\" />\n    //               <DappIconName>{dapp.appName}</DappIconName>\n    //             </DappIconWrapper>\n    //         ))}\n    //       </DAppIconListWrapper>\n    //     </div>\n    //     <div>\n    //       <DAppIconListTitle>\n    //         <SecondTitle>Recommend DApps</SecondTitle>\n    //       </DAppIconListTitle>\n    //       <DAppIconListWrapper>\n    //         {recommendDapps.map((dapp) => (\n    //             <DappIconWrapper onClick={() => { this.goDappsDetail('https://swap.clover.finance/#/', dapp.appName); }}>\n    //               <img width='50' height='50' src={dapp.icon} alt=\"\" />\n    //               <DappIconName>{dapp.appName}</DappIconName>\n    //             </DappIconWrapper>\n    //         ))}\n    //       </DAppIconListWrapper>\n    //     </div>\n    //     <div>\n    //       <DAppIconListTitle>\n    //         <SecondTitle>Swap</SecondTitle>\n    //       </DAppIconListTitle>\n    //       <SwapContainer>\n    //         <TransferWrapper>\n    //           <Select\n    //               style={{ color: '#000000', fontSize: '16px', fontWeight: 'bold' }}\n    //               native\n    //               value={fromCurrencyType}\n    //               onChange={this.handleChangeFrom}\n    //               input={<BootstrapInput />}\n    //           >\n    //             <option value='CLV'>CLV</option>\n    //             <option value='DOT'>DOT</option>\n    //             <option value='ETH'>ETH</option>\n    //             <option value='USDT'>USDT</option>\n    //           </Select>\n    //           <TransferImg src={TransferIcon}></TransferImg>\n    //           <Select\n    //               style={{ color: '#000000', fontSize: '16px', fontWeight: 'bold' }}\n    //               native\n    //               value={toCurrencyType}\n    //               onChange={this.handleChangeTo}\n    //               input={<BootstrapInput />}\n    //           >\n    //             <option value='CLV'>CLV</option>\n    //             <option value='DOT'>DOT</option>\n    //             <option value='ETH'>ETH</option>\n    //             <option value='USDT'>USDT</option>\n    //           </Select>\n    //           <SwapButton onClick={() => { this.goDappsDetail('https://swap.clover.finance/#/', 'Swap'); }}>\n    //             <Text fontSize='13px'>Swap</Text>\n    //           </SwapButton>\n    //         </TransferWrapper>\n    //         <Text fontSize='12px' marginTop='10px'><span style={{ marginRight: '10px' }}>PRICE</span>1DAL=2.3452CLV</Text>\n    //       </SwapContainer>\n    //     </div>\n    //     <div id=\"conditionArea\" className={this.state.contentClass}>\n    //       <div className=\"content_name\">\n    //         <span>置顶块</span>\n    //       </div>\n    //     </div>\n    //     <div className=\"set_displayContent\">\n    //       <p>内容区域</p>\n    //     </div>\n    //     {/*<GrayBackground>*/}\n    //     {/*  <Tabs className={this.state.contentClass} value={currentIndex} onChange={this.handleChange} style={slideStyles.tabs} variant='scrollable'*/}\n    //     {/*        TabIndicatorProps={{*/}\n    //     {/*          style: {*/}\n    //     {/*            height: '4px',*/}\n    //     {/*            width: '17px',*/}\n    //     {/*            backgroundColor: 'rgba(246, 136, 59, 1)',*/}\n    //     {/*            borderRadius: '2px',*/}\n    //     {/*            marginLeft: '28px'*/}\n    //     {/*          }*/}\n    //     {/*        }}*/}\n    //     {/*  >*/}\n    //     {/*    {tabList.map((res: any) => (*/}\n    //     {/*        <AntTab label={res.tabName}/>*/}\n    //     {/*    ))}*/}\n    //     {/*  </Tabs>*/}\n    //     {/*  <DappListWrapper className=\"set_displayContent\">*/}\n    //     {/*    <SwipeableViews index={currentIndex} onChangeIndex={this.handleChangeIndex}>*/}\n    //     {/*      {tabList.map(() => (*/}\n    //     {/*          <div style={slideStyles.slide}>*/}\n    //     {/*            {dapplist.map((dapp: any) => (*/}\n    //     {/*                <DappContainer onClick={() => { this.goDappsDetail(dapp.url, dapp.dappName); }}>*/}\n    //     {/*                  <img height=\"50\" width=\"50\" src={dapp.icon} alt='Polkadot Exchange' />*/}\n    //     {/*                  <DappContentWrapper>*/}\n    //     {/*                    <Column>*/}\n    //     {/*                      <DappName>{dapp.dappName}</DappName>*/}\n    //     {/*                      <DappDescription>{dapp.describe}</DappDescription>*/}\n    //     {/*                    </Column>*/}\n    //     {/*                  </DappContentWrapper>*/}\n    //     {/*                </DappContainer>*/}\n    //     {/*            ))}*/}\n    //     {/*          </div>*/}\n    //     {/*      ))}*/}\n    //     {/*    </SwipeableViews>*/}\n    //     {/*  </DappListWrapper>*/}\n    //     {/*</GrayBackground>*/}\n    //   </BodyWrapper>\n    // </AppBody>\n    ;\n  }\n\n}","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/src/pages/DappM/index.tsx"],"names":["React","Component","styled","Text","Column","AutoColumn","Row","RowBetween","RowCenter","withStyles","InputBase","Tab","BodyWrapper","HeadContainer","DAppIconListTitle","DAppIconListWrapper","DappIconWrapper","div","DappIconName","SwapContainer","TransferWrapper","TransferImg","img","SecondTitle","GrayBackground","SwapButton","Search","DappListWrapper","DappContainer","DappContentWrapper","DappName","DappDescription","DappM","constructor","props","context","searchDapps","history","push","moreDapps","goDappsDetail","url","dappName","pathname","state","handleChangeFrom","event","setState","fromCurrencyType","target","value","handleChangeTo","toCurrencyType","handleChange","allDappList","currentIndex","dapplist","handleChangeIndex","index","dappLists","describe","icon","ImgDappExchange","tabList","tabName","id","isScrollTop","windowOnScroll","_this","window","onscroll","h","document","documentElement","scrollTop","console","log","contentClass","render","recommendDapps","SwapIcon","appName","LendingIcon","AggregationIcon","AuctionIcon","InsuranceIcon","slideStyles","tabs","marginBottom","slide","padding","minHeight","color","overflow","BootstrapInput","theme","input","position","border","fontSize","width","backgroundColor","AntTab","root","textTransform","fontWeight","typography","fontWeightMedium","selected"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport { Text } from 'rebass'\nimport AppBody from '../AppBody'\nimport Column, { AutoColumn } from '../../components/Column'\nimport Row, { RowBetween, RowCenter } from '../../components/Row'\nimport ImgDappExchange from '../../assets/images/polkadot_exchange.svg'\nimport Application from '../../assets/images/application.svg'\nimport SearchIcon from '../../assets/images/search_icon.svg'\nimport SwapIcon from '../../assets/images/swap_icon.svg'\nimport LendingIcon from '../../assets/images/lending_icon.svg'\nimport AggregationIcon from '../../assets/images/aggregation_icon.svg'\nimport AuctionIcon from '../../assets/images/auction_icon.svg'\nimport InsuranceIcon from '../../assets/images/insurance_icon.svg'\nimport TransferIcon from '../../assets/images/transfer_icon.svg'\nimport SwipeableViews from 'react-swipeable-views';\nimport Select from '@material-ui/core/Select';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport InputBase from '@material-ui/core/InputBase';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport './style.css';\n\nconst BodyWrapper = styled(AutoColumn)`\n  height: calc(100vh - 50px);\n`;\n\nconst HeadContainer = styled(RowBetween)`\n  margin-top: 50px;\n  padding: 0 20px;\n  height: 44px;\n`;\n\nconst DAppIconListTitle = styled(RowBetween)`\n  margin-top: 10px;\n  padding: 0 20px;\n  margin-left: 5px;\n`;\n\nconst DAppIconListWrapper = styled(RowBetween)`\n  margin-top: 15px;\n  padding: 0 20px;\n`;\n\nconst DappIconWrapper = styled.div`\n  text-align: center;\n  flex-grow: 1;\n  width: 50px;\n`;\n\nconst DappIconName = styled(Text)`\n  font-size: 12px;\n  color: #666666;\n  margin-top: 5px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst SwapContainer = styled.div`\n  margin: 15px 20px 0;\n  padding: 15px;\n  background: rgba(246, 136, 59, 0.08);\n  border-radius: 15px;\n`;\n\nconst TransferWrapper = styled(Row)`\n    position: relative;\n`;\n\nconst TransferImg = styled.img`\n  width: 35px;\n  height: 35px;\n  margin: 0 10px;\n`\n\nconst SecondTitle = styled(Text)`\n  font-size: 18px;\n  color: #333333;\n  font-weight: 600;\n`;\n\nconst GrayBackground = styled.div`\n  width: 100%;\n  overflow-x: hidden;\n  height: fit-content;\n  background: linear-gradient(180deg, #FFFFFF 0%, #F3f3f3 100%);\n`;\n\nconst SwapButton = styled(RowCenter)`\n  padding: 0 15px;\n  height: 35px;\n  background: #FF7D30;\n  border-radius: 18px;\n  color: #ffffff;\n  margin-left: 10px;\n  position: absolute;\n  right: 0;\n  top: 0;\n`;\n\nconst Search = styled.img`\n  margin-left: 20px;\n  width: 27px;\n  height: 27px;\n`;\n\nconst DappListWrapper = styled.div`\n  background-color: #ffffff;\n  margin: 0 20px;\n  border-radius: 10px;\n`;\n\nconst DappContainer = styled(Row)`\n  align-items: stretch;\n  padding: 15px;\n  height: 80px;\n`;\n\nconst DappContentWrapper = styled(Column)`\n  max-width: 80%;\n  margin-left: 10px;\n  justify-content: space-between;\n`;\n\nconst DappName = styled(Text)`\n  font-size: 16px;\n  font-weight: bold;\n  color: #000000;\n`;\n\nconst DappDescription = styled(Text)`\n  font-size: 12px;\n  font-weight: normal;\n  color: #666666;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport default class DappM extends Component<any, any> {\n  constructor(props: any, context: any) {\n    super(props, context);\n    const dappLists = [\n      [\n        {\n          dappName: 'Polkaswap',\n          describe: 'Polkaswap is a DEX project for the Polkadot ecosystem. It provides a standard bridging interface and will give the easy possibility to list and exchange tokens for all substrate parachains and other blockchains like Ethereum and Bitcoin.',\n          url: 'https://polkaswap.io/',\n          icon: ImgDappExchange\n        },\n        {\n          dappName: 'MANTRA DAO',\n          describe: 'MANTRA DAO is a community governed DeFi platform focusing on staking, lending, and governance.',\n          url: 'https://mantradao.com/',\n          icon: ImgDappExchange\n        },\n        {\n          dappName: 'Reef Finance',\n          describe: 'Reef the crosschain DeFi operating system',\n          url: 'https://reef.finance/',\n          icon: ImgDappExchange\n        },\n      ],\n      [\n        {\n          dappName: 'Ren',\n          describe: 'Ren is an open protocol that enables the permissionless and private transfer of value between any blockchain.',\n          url: 'https://renproject.io/',\n          icon: ImgDappExchange\n        }\n      ],\n      [\n        {\n          dappName: 'Xaya',\n          describe: 'Decentralised Complex Gaming',\n          url: 'https://xaya.io/',\n          icon: ImgDappExchange\n        }\n      ],\n      [\n        {\n          dappName: 'Polkaswap',\n          describe: 'Polkaswap is a DEX project for the Polkadot ecosystem. It provides a standard bridging interface and will give the easy possibility to list and exchange tokens for all substrate parachains and other blockchains like Ethereum and Bitcoin.',\n          url: 'https://polkaswap.io/',\n          icon: ImgDappExchange\n        },\n        {\n          dappName: 'Polkastarter',\n          describe: 'Polkastarter is a permissionless DEX built for cross-chain token pools and auctions, enabling projects to raise capital on a decentralized and interoperable environment based on Polkadot.',\n          url: 'https://www.polkastarter.com/',\n          icon: ImgDappExchange\n        }\n      ],\n      [\n        {\n          dappName: 'Chads.VC',\n          describe: 'CHAD is the first deflationary MEME token built on Polkadot',\n          url: 'https://www.chads.vc/',\n          icon: ImgDappExchange\n        }\n      ],\n    ]\n    this.state = {\n      tabList: [\n        {tabName:\"DeFi\",id:1},\n        {tabName:\"Bridge\",id:2},\n        {tabName:\"Grant\",id:3},\n        {tabName:\"Exchange\",id:4},\n        {tabName:\"NFT\",id:5}\n      ],\n      fromCurrencyType: 'CLV',\n      toCurrencyType: 'ETH',\n      currentIndex: 0,\n      allDappList: dappLists,\n      dapplist: dappLists[0],\n      isScrollTop: true\n    }\n    this.windowOnScroll();\n  }\n\n  windowOnScroll(){\n    let _this = this;\n    window.onscroll = function(){\n      let h = document.documentElement.scrollTop;\n      console.log(h);\n      if(h > 10){\n        if(_this.state.isScrollTop){\n          console.log('111');\n          _this.setState({\n            contentClass:\"conditionArea conditionArea_fixed\",\n            isScrollTop: false\n          });\n        }\n      }else{\n        if(!_this.state.isScrollTop){\n          console.log(\"333\");\n          _this.setState({\n            contentClass:\"conditionArea\",\n            isScrollTop: true\n          });\n        }\n\n      }\n    }\n  };\n\n  searchDapps = () => {\n    this.props.history.push('/search');\n  }\n\n  moreDapps = () => {\n    this.props.history.push('/moredapps');\n  }\n\n  goDappsDetail = (url: any, dappName: string) => {\n    this.props.history.push({pathname: '/dappsdetail', state: {url: url, dappName: dappName}});\n  }\n\n  handleChangeFrom = (event: any) => {\n    this.setState({\n      fromCurrencyType: event.target.value\n    });\n  };\n\n  handleChangeTo = (event: any) => {\n    this.setState({\n      toCurrencyType: event.target.value\n    });\n  };\n\n  handleChange = (event: any, value: any) => {\n    const { allDappList } = this.state;\n    this.setState({\n      currentIndex: value,\n      dapplist: allDappList[value]\n    });\n  };\n\n  handleChangeIndex = (index: any) => {\n    const { allDappList } = this.state;\n    this.setState({\n      currentIndex: index,\n      dapplist: allDappList[index]\n    });\n  };\n\n  render() {\n    const { fromCurrencyType, toCurrencyType, tabList, currentIndex, dapplist } = this.state;\n\n    const recommendDapps = [\n      {\n        icon: SwapIcon,\n        appName: 'Swap'\n      },\n      {\n        icon: LendingIcon,\n        appName: 'Lending'\n      },\n      {\n        icon: AggregationIcon,\n        appName: 'Aggregation'\n      },\n      {\n        icon: AuctionIcon,\n        appName: 'Auction'\n      },\n      {\n        icon: InsuranceIcon,\n        appName: 'Insurance'\n      },\n    ];\n\n    const slideStyles = {\n      tabs: {\n        marginBottom: '10px',\n      },\n      slide: {\n        padding: '10px 0',\n        minHeight: 'fit-content',\n        color: '#fff',\n        overflow: 'hidden'\n      }\n    };\n\n    const BootstrapInput = withStyles((theme) => ({\n      input: {\n        position: 'relative',\n        border: 'none',\n        fontSize: 16,\n        width: 'fit-content',\n        '&:focus': {\n          backgroundColor: 'rgba(246, 136, 59, 0.08)'\n        },\n      },\n    }))(InputBase);\n\n    const AntTab = withStyles((theme) => ({\n      root: {\n        textTransform: 'none',\n        fontSize: '15px',\n        '&$selected': {\n          color: '#FF7D30',\n          fontWeight: theme.typography.fontWeightMedium,\n        },\n      },\n      selected: {},\n    }))(Tab);\n\n    return (\n        <div className=\"container\">\n          <div className=\"set_head_fixed\">\n            <span className=\"set_text\">我是头部</span>\n          </div>\n          <div id=\"conditionArea\" className={this.state.contentClass}>\n            <div className=\"content_name\">\n              <span>置顶块</span>\n            </div>\n          </div>\n          <div className=\"set_displayContent\">\n            <p>内容区域</p>\n          </div>\n        </div>\n        // <AppBody>\n        //   <BodyWrapper gap={'md'}>\n        //     <HeadContainer>\n        //       <img width=\"148\" height=\"18\" src={Application} alt=\"\"/>\n        //       <Search src={SearchIcon} alt='search' onClick={this.searchDapps} />\n        //     </HeadContainer>\n        //     <div>\n        //       <DAppIconListTitle>\n        //         <SecondTitle>My DApps</SecondTitle>\n        //         <Text color='#333333' fontSize='14px' onClick={this.moreDapps}>more</Text>\n        //       </DAppIconListTitle>\n        //       <DAppIconListWrapper>\n        //         {recommendDapps.map((dapp) => (\n        //             <DappIconWrapper onClick={() => { this.goDappsDetail('https://swap.clover.finance/#/', dapp.appName); }}>\n        //               <img width='50' height='50' src={dapp.icon} alt=\"\" />\n        //               <DappIconName>{dapp.appName}</DappIconName>\n        //             </DappIconWrapper>\n        //         ))}\n        //       </DAppIconListWrapper>\n        //     </div>\n        //     <div>\n        //       <DAppIconListTitle>\n        //         <SecondTitle>Recommend DApps</SecondTitle>\n        //       </DAppIconListTitle>\n        //       <DAppIconListWrapper>\n        //         {recommendDapps.map((dapp) => (\n        //             <DappIconWrapper onClick={() => { this.goDappsDetail('https://swap.clover.finance/#/', dapp.appName); }}>\n        //               <img width='50' height='50' src={dapp.icon} alt=\"\" />\n        //               <DappIconName>{dapp.appName}</DappIconName>\n        //             </DappIconWrapper>\n        //         ))}\n        //       </DAppIconListWrapper>\n        //     </div>\n        //     <div>\n        //       <DAppIconListTitle>\n        //         <SecondTitle>Swap</SecondTitle>\n        //       </DAppIconListTitle>\n        //       <SwapContainer>\n        //         <TransferWrapper>\n        //           <Select\n        //               style={{ color: '#000000', fontSize: '16px', fontWeight: 'bold' }}\n        //               native\n        //               value={fromCurrencyType}\n        //               onChange={this.handleChangeFrom}\n        //               input={<BootstrapInput />}\n        //           >\n        //             <option value='CLV'>CLV</option>\n        //             <option value='DOT'>DOT</option>\n        //             <option value='ETH'>ETH</option>\n        //             <option value='USDT'>USDT</option>\n        //           </Select>\n        //           <TransferImg src={TransferIcon}></TransferImg>\n        //           <Select\n        //               style={{ color: '#000000', fontSize: '16px', fontWeight: 'bold' }}\n        //               native\n        //               value={toCurrencyType}\n        //               onChange={this.handleChangeTo}\n        //               input={<BootstrapInput />}\n        //           >\n        //             <option value='CLV'>CLV</option>\n        //             <option value='DOT'>DOT</option>\n        //             <option value='ETH'>ETH</option>\n        //             <option value='USDT'>USDT</option>\n        //           </Select>\n        //           <SwapButton onClick={() => { this.goDappsDetail('https://swap.clover.finance/#/', 'Swap'); }}>\n        //             <Text fontSize='13px'>Swap</Text>\n        //           </SwapButton>\n        //         </TransferWrapper>\n        //         <Text fontSize='12px' marginTop='10px'><span style={{ marginRight: '10px' }}>PRICE</span>1DAL=2.3452CLV</Text>\n        //       </SwapContainer>\n        //     </div>\n        //     <div id=\"conditionArea\" className={this.state.contentClass}>\n        //       <div className=\"content_name\">\n        //         <span>置顶块</span>\n        //       </div>\n        //     </div>\n        //     <div className=\"set_displayContent\">\n        //       <p>内容区域</p>\n        //     </div>\n        //     {/*<GrayBackground>*/}\n        //     {/*  <Tabs className={this.state.contentClass} value={currentIndex} onChange={this.handleChange} style={slideStyles.tabs} variant='scrollable'*/}\n        //     {/*        TabIndicatorProps={{*/}\n        //     {/*          style: {*/}\n        //     {/*            height: '4px',*/}\n        //     {/*            width: '17px',*/}\n        //     {/*            backgroundColor: 'rgba(246, 136, 59, 1)',*/}\n        //     {/*            borderRadius: '2px',*/}\n        //     {/*            marginLeft: '28px'*/}\n        //     {/*          }*/}\n        //     {/*        }}*/}\n        //     {/*  >*/}\n        //     {/*    {tabList.map((res: any) => (*/}\n        //     {/*        <AntTab label={res.tabName}/>*/}\n        //     {/*    ))}*/}\n        //     {/*  </Tabs>*/}\n        //     {/*  <DappListWrapper className=\"set_displayContent\">*/}\n        //     {/*    <SwipeableViews index={currentIndex} onChangeIndex={this.handleChangeIndex}>*/}\n        //     {/*      {tabList.map(() => (*/}\n        //     {/*          <div style={slideStyles.slide}>*/}\n        //     {/*            {dapplist.map((dapp: any) => (*/}\n        //     {/*                <DappContainer onClick={() => { this.goDappsDetail(dapp.url, dapp.dappName); }}>*/}\n        //     {/*                  <img height=\"50\" width=\"50\" src={dapp.icon} alt='Polkadot Exchange' />*/}\n        //     {/*                  <DappContentWrapper>*/}\n        //     {/*                    <Column>*/}\n        //     {/*                      <DappName>{dapp.dappName}</DappName>*/}\n        //     {/*                      <DappDescription>{dapp.describe}</DappDescription>*/}\n        //     {/*                    </Column>*/}\n        //     {/*                  </DappContentWrapper>*/}\n        //     {/*                </DappContainer>*/}\n        //     {/*            ))}*/}\n        //     {/*          </div>*/}\n        //     {/*      ))}*/}\n        //     {/*    </SwipeableViews>*/}\n        //     {/*  </DappListWrapper>*/}\n        //     {/*</GrayBackground>*/}\n        //   </BodyWrapper>\n        // </AppBody>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}