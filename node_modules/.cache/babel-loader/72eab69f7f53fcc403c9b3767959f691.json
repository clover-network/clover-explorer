{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar graphic_1 = require(\"../graphic\");\n\nvar SausageShape = function () {\n  function SausageShape() {\n    this.cx = 0;\n    this.cy = 0;\n    this.r0 = 0;\n    this.r = 0;\n    this.startAngle = 0;\n    this.endAngle = Math.PI * 2;\n    this.clockwise = true;\n  }\n\n  return SausageShape;\n}();\n\nvar SausagePath = function (_super) {\n  tslib_1.__extends(SausagePath, _super);\n\n  function SausagePath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'sausage';\n    return _this;\n  }\n\n  SausagePath.prototype.getDefaultShape = function () {\n    return new SausageShape();\n  };\n\n  SausagePath.prototype.buildPath = function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var dr = (r - r0) * 0.5;\n    var rCenter = r0 + dr;\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitStartX = Math.cos(startAngle);\n    var unitStartY = Math.sin(startAngle);\n    var unitEndX = Math.cos(endAngle);\n    var unitEndY = Math.sin(endAngle);\n    var lessThanCircle = clockwise ? endAngle - startAngle < Math.PI * 2 : startAngle - endAngle < Math.PI * 2;\n\n    if (lessThanCircle) {\n      ctx.moveTo(unitStartX * r0 + x, unitStartY * r0 + y);\n      ctx.arc(unitStartX * rCenter + x, unitStartY * rCenter + y, dr, -Math.PI + startAngle, startAngle, !clockwise);\n    }\n\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.moveTo(unitEndX * r + x, unitEndY * r + y);\n    ctx.arc(unitEndX * rCenter + x, unitEndY * rCenter + y, dr, endAngle - Math.PI * 2, endAngle - Math.PI, !clockwise);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n      ctx.moveTo(unitStartX * r0 + x, unitEndY * r0 + y);\n    }\n\n    ctx.closePath();\n  };\n\n  return SausagePath;\n}(graphic_1.Path);\n\nexports[\"default\"] = SausagePath;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/util/shape/sausage.js"],"names":["exports","__esModule","tslib_1","require","graphic_1","SausageShape","cx","cy","r0","r","startAngle","endAngle","Math","PI","clockwise","SausagePath","_super","__extends","opts","_this","call","type","prototype","getDefaultShape","buildPath","ctx","shape","x","y","max","dr","rCenter","unitStartX","cos","unitStartY","sin","unitEndX","unitEndY","lessThanCircle","moveTo","arc","closePath","Path"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar graphic_1 = require(\"../graphic\");\n\nvar SausageShape = function () {\n  function SausageShape() {\n    this.cx = 0;\n    this.cy = 0;\n    this.r0 = 0;\n    this.r = 0;\n    this.startAngle = 0;\n    this.endAngle = Math.PI * 2;\n    this.clockwise = true;\n  }\n\n  return SausageShape;\n}();\n\nvar SausagePath = function (_super) {\n  tslib_1.__extends(SausagePath, _super);\n\n  function SausagePath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'sausage';\n    return _this;\n  }\n\n  SausagePath.prototype.getDefaultShape = function () {\n    return new SausageShape();\n  };\n\n  SausagePath.prototype.buildPath = function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var dr = (r - r0) * 0.5;\n    var rCenter = r0 + dr;\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitStartX = Math.cos(startAngle);\n    var unitStartY = Math.sin(startAngle);\n    var unitEndX = Math.cos(endAngle);\n    var unitEndY = Math.sin(endAngle);\n    var lessThanCircle = clockwise ? endAngle - startAngle < Math.PI * 2 : startAngle - endAngle < Math.PI * 2;\n\n    if (lessThanCircle) {\n      ctx.moveTo(unitStartX * r0 + x, unitStartY * r0 + y);\n      ctx.arc(unitStartX * rCenter + x, unitStartY * rCenter + y, dr, -Math.PI + startAngle, startAngle, !clockwise);\n    }\n\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.moveTo(unitEndX * r + x, unitEndY * r + y);\n    ctx.arc(unitEndX * rCenter + x, unitEndY * rCenter + y, dr, endAngle - Math.PI * 2, endAngle - Math.PI, !clockwise);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n      ctx.moveTo(unitStartX * r0 + x, unitEndY * r0 + y);\n    }\n\n    ctx.closePath();\n  };\n\n  return SausagePath;\n}(graphic_1.Path);\n\nexports[\"default\"] = SausagePath;"]},"metadata":{},"sourceType":"script"}