{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nimport * as echarts from '../echarts';\nimport * as zrUtil from 'zrender/esm/core/util';\nimport { updateCenterAndZoom } from './roamHelper';\necharts.registerAction({\n  type: 'geoRoam',\n  event: 'geoRoam',\n  update: 'updateTransform'\n}, function (payload, ecModel) {\n  var componentType = payload.componentType || 'series';\n  ecModel.eachComponent({\n    mainType: componentType,\n    query: payload\n  }, function (componentModel) {\n    var geo = componentModel.coordinateSystem;\n\n    if (geo.type !== 'geo') {\n      return;\n    }\n\n    var res = updateCenterAndZoom(geo, payload, componentModel.get('scaleLimit'));\n    componentModel.setCenter && componentModel.setCenter(res.center);\n    componentModel.setZoom && componentModel.setZoom(res.zoom);\n\n    if (componentType === 'series') {\n      zrUtil.each(componentModel.seriesGroup, function (seriesModel) {\n        seriesModel.setCenter(res.center);\n        seriesModel.setZoom(res.zoom);\n      });\n    }\n  });\n});","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/esm/action/geoRoam.js"],"names":["echarts","zrUtil","updateCenterAndZoom","registerAction","type","event","update","payload","ecModel","componentType","eachComponent","mainType","query","componentModel","geo","coordinateSystem","res","get","setCenter","center","setZoom","zoom","each","seriesGroup","seriesModel"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AAEA,OAAO,KAAKA,OAAZ,MAAyB,YAAzB;AACA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;AACA,SAASC,mBAAT,QAAoC,cAApC;AACAF,OAAO,CAACG,cAAR,CAAuB;AACrBC,EAAAA,IAAI,EAAE,SADe;AAErBC,EAAAA,KAAK,EAAE,SAFc;AAGrBC,EAAAA,MAAM,EAAE;AAHa,CAAvB,EAIG,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AAC7B,MAAIC,aAAa,GAAGF,OAAO,CAACE,aAAR,IAAyB,QAA7C;AACAD,EAAAA,OAAO,CAACE,aAAR,CAAsB;AACpBC,IAAAA,QAAQ,EAAEF,aADU;AAEpBG,IAAAA,KAAK,EAAEL;AAFa,GAAtB,EAGG,UAAUM,cAAV,EAA0B;AAC3B,QAAIC,GAAG,GAAGD,cAAc,CAACE,gBAAzB;;AAEA,QAAID,GAAG,CAACV,IAAJ,KAAa,KAAjB,EAAwB;AACtB;AACD;;AAED,QAAIY,GAAG,GAAGd,mBAAmB,CAACY,GAAD,EAAMP,OAAN,EAAeM,cAAc,CAACI,GAAf,CAAmB,YAAnB,CAAf,CAA7B;AACAJ,IAAAA,cAAc,CAACK,SAAf,IAA4BL,cAAc,CAACK,SAAf,CAAyBF,GAAG,CAACG,MAA7B,CAA5B;AACAN,IAAAA,cAAc,CAACO,OAAf,IAA0BP,cAAc,CAACO,OAAf,CAAuBJ,GAAG,CAACK,IAA3B,CAA1B;;AAEA,QAAIZ,aAAa,KAAK,QAAtB,EAAgC;AAC9BR,MAAAA,MAAM,CAACqB,IAAP,CAAYT,cAAc,CAACU,WAA3B,EAAwC,UAAUC,WAAV,EAAuB;AAC7DA,QAAAA,WAAW,CAACN,SAAZ,CAAsBF,GAAG,CAACG,MAA1B;AACAK,QAAAA,WAAW,CAACJ,OAAZ,CAAoBJ,GAAG,CAACK,IAAxB;AACD,OAHD;AAID;AACF,GApBD;AAqBD,CA3BD","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport * as echarts from '../echarts';\nimport * as zrUtil from 'zrender/esm/core/util';\nimport { updateCenterAndZoom } from './roamHelper';\necharts.registerAction({\n  type: 'geoRoam',\n  event: 'geoRoam',\n  update: 'updateTransform'\n}, function (payload, ecModel) {\n  var componentType = payload.componentType || 'series';\n  ecModel.eachComponent({\n    mainType: componentType,\n    query: payload\n  }, function (componentModel) {\n    var geo = componentModel.coordinateSystem;\n\n    if (geo.type !== 'geo') {\n      return;\n    }\n\n    var res = updateCenterAndZoom(geo, payload, componentModel.get('scaleLimit'));\n    componentModel.setCenter && componentModel.setCenter(res.center);\n    componentModel.setZoom && componentModel.setZoom(res.zoom);\n\n    if (componentType === 'series') {\n      zrUtil.each(componentModel.seriesGroup, function (seriesModel) {\n        seriesModel.setCenter(res.center);\n        seriesModel.setZoom(res.zoom);\n      });\n    }\n  });\n});"]},"metadata":{},"sourceType":"module"}