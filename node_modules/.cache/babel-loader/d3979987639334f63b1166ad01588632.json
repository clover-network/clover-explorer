{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar is_array_like_1 = require(\"./is-array-like\");\n\nvar pull_at_1 = require(\"./pull-at\");\n\nvar remove = function (arr, predicate) {\n  /**\n   * const arr = [1, 2, 3, 4]\n   * const evens = remove(arr, n => n % 2 == 0)\n   * console.log(arr) // => [1, 3]\n   * console.log(evens) // => [2, 4]\n   */\n  var result = [];\n\n  if (!is_array_like_1.default(arr)) {\n    return result;\n  }\n\n  var i = -1;\n  var indexes = [];\n  var length = arr.length;\n\n  while (++i < length) {\n    var value = arr[i];\n\n    if (predicate(value, i, arr)) {\n      result.push(value);\n      indexes.push(i);\n    }\n  }\n\n  pull_at_1.default(arr, indexes);\n  return result;\n};\n\nexports.default = remove;","map":{"version":3,"sources":["../src/remove.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,eAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AAEA,IAAM,MAAM,GAAG,UAAY,GAAZ,EAAsB,SAAtB,EAA8E;AAC3F;;;;;AAKG;AACH,MAAM,MAAM,GAAG,EAAf;;AACA,MAAI,CAAC,eAAA,CAAA,OAAA,CAAY,GAAZ,CAAL,EAAuB;AACrB,WAAO,MAAP;AACD;;AACD,MAAI,CAAC,GAAG,CAAC,CAAT;AACA,MAAM,OAAO,GAAG,EAAhB;AACA,MAAM,MAAM,GAAG,GAAG,CAAC,MAAnB;;AAEA,SAAO,EAAE,CAAF,GAAM,MAAb,EAAqB;AACnB,QAAM,KAAK,GAAG,GAAG,CAAC,CAAD,CAAjB;;AACA,QAAI,SAAS,CAAC,KAAD,EAAQ,CAAR,EAAW,GAAX,CAAb,EAA8B;AAC5B,MAAA,MAAM,CAAC,IAAP,CAAY,KAAZ;AACA,MAAA,OAAO,CAAC,IAAR,CAAa,CAAb;AACD;AACF;;AACD,EAAA,SAAA,CAAA,OAAA,CAAO,GAAP,EAAY,OAAZ;AACA,SAAO,MAAP;AACD,CAxBD;;AA0BA,OAAA,CAAA,OAAA,GAAe,MAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar is_array_like_1 = require(\"./is-array-like\");\nvar pull_at_1 = require(\"./pull-at\");\nvar remove = function (arr, predicate) {\n    /**\n     * const arr = [1, 2, 3, 4]\n     * const evens = remove(arr, n => n % 2 == 0)\n     * console.log(arr) // => [1, 3]\n     * console.log(evens) // => [2, 4]\n     */\n    var result = [];\n    if (!is_array_like_1.default(arr)) {\n        return result;\n    }\n    var i = -1;\n    var indexes = [];\n    var length = arr.length;\n    while (++i < length) {\n        var value = arr[i];\n        if (predicate(value, i, arr)) {\n            result.push(value);\n            indexes.push(i);\n        }\n    }\n    pull_at_1.default(arr, indexes);\n    return result;\n};\nexports.default = remove;\n//# sourceMappingURL=remove.js.map"]},"metadata":{},"sourceType":"script"}