{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/esm/core/util';\nimport SymbolDraw from '../helper/SymbolDraw';\nimport SymbolClz from '../helper/Symbol';\nimport lineAnimationDiff from './lineAnimationDiff';\nimport * as graphic from '../../util/graphic';\nimport * as modelUtil from '../../util/model';\nimport { ECPolyline, ECPolygon } from './poly';\nimport ChartView from '../../view/Chart';\nimport { prepareDataCoordInfo, getStackedOnPoint } from './helper';\nimport { createGridClipPath, createPolarClipPath } from '../helper/createClipPathFromCoordSys';\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem';\nimport { setStatesStylesFromModel, setStatesFlag, enableHoverEmphasis } from '../../util/states';\nimport { setLabelStyle, getLabelStatesModels, labelInner } from '../../label/labelStyle';\nimport { getDefaultLabel, getDefaultInterpolatedLabel } from '../helper/labelHelper';\nimport { getECData } from '../../util/innerStore';\nimport { createFloat32Array } from '../../util/vendor';\n\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    if (points1[i] !== points2[i]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction bboxFromPoints(points) {\n  var minX = Infinity;\n  var minY = Infinity;\n  var maxX = -Infinity;\n  var maxY = -Infinity;\n\n  for (var i = 0; i < points.length;) {\n    var x = points[i++];\n    var y = points[i++];\n\n    if (!isNaN(x)) {\n      minX = Math.min(x, minX);\n      maxX = Math.max(x, maxX);\n    }\n\n    if (!isNaN(y)) {\n      minY = Math.min(y, minY);\n      maxY = Math.max(y, maxY);\n    }\n  }\n\n  return [[minX, minY], [maxX, maxY]];\n}\n\nfunction getBoundingDiff(points1, points2) {\n  var _a = bboxFromPoints(points1),\n      min1 = _a[0],\n      max1 = _a[1];\n\n  var _b = bboxFromPoints(points2),\n      min2 = _b[0],\n      max2 = _b[1];\n\n  return Math.max(Math.abs(min1[0] - min2[0]), Math.abs(min1[1] - min2[1]), Math.abs(max1[0] - max2[0]), Math.abs(max1[1] - max2[1]));\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var len = data.count();\n  var points = createFloat32Array(len * 2);\n\n  for (var idx = 0; idx < len; idx++) {\n    var pt = getStackedOnPoint(dataCoordInfo, coordSys, data, idx);\n    points[idx * 2] = pt[0];\n    points[idx * 2 + 1] = pt[1];\n  }\n\n  return points;\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n  var i = 0;\n  var stepPt = [];\n  var pt = [];\n  var nextPt = [];\n\n  for (; i < points.length - 2; i += 2) {\n    nextPt[0] = points[i + 2];\n    nextPt[1] = points[i + 3];\n    pt[0] = points[i];\n    pt[1] = points[i + 1];\n    stepPoints.push(pt[0], pt[1]);\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n        break;\n\n      case 'middle':\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n        stepPoints.push(stepPt2[0], stepPt2[1]);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n    }\n  }\n\n  stepPoints.push(points[i++], points[i++]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Visual map on line style is only supported on cartesian2d.');\n    }\n\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim;\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Visual map on line style only support x or y dimension.');\n    }\n\n    return;\n  }\n\n  var axis = coordSys.getAxis(coordDim);\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      offset: 0,\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10;\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  });\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  }\n\n  if (isAuto && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  }\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    labelMap[labelItem.tickValue] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0);\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex)[categoryAxis.isHorizontal() ? 1 : 0] * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isPointNull(x, y) {\n  return isNaN(x) || isNaN(y);\n}\n\nfunction getLastIndexNotNull(points) {\n  var len = points.length / 2;\n\n  for (; len > 0; len--) {\n    if (!isPointNull(points[len * 2 - 2], points[len * 2 - 1])) {\n      break;\n    }\n  }\n\n  return len - 1;\n}\n\nfunction getPointAtIndex(points, idx) {\n  return [points[idx * 2], points[idx * 2 + 1]];\n}\n\nfunction getIndexRange(points, xOrY, dim) {\n  var len = points.length / 2;\n  var dimIdx = dim === 'x' ? 0 : 1;\n  var a;\n  var b;\n  var prevIndex = 0;\n  var nextIndex = -1;\n\n  for (var i = 0; i < len; i++) {\n    b = points[i * 2 + dimIdx];\n\n    if (isNaN(b) || isNaN(points[i * 2 + 1 - dimIdx])) {\n      continue;\n    }\n\n    if (i === 0) {\n      a = b;\n      continue;\n    }\n\n    if (a <= xOrY && b >= xOrY || a >= xOrY && b <= xOrY) {\n      nextIndex = i;\n      break;\n    }\n\n    prevIndex = i;\n    a = b;\n  }\n\n  return {\n    range: [prevIndex, nextIndex],\n    t: (xOrY - a) / (b - a)\n  };\n}\n\nfunction createLineClipPath(lineView, coordSys, hasAnimation, seriesModel) {\n  if (isCoordinateSystemType(coordSys, 'cartesian2d')) {\n    var endLabelModel_1 = seriesModel.getModel('endLabel');\n    var showEndLabel = endLabelModel_1.get('show');\n    var valueAnimation_1 = endLabelModel_1.get('valueAnimation');\n    var data_1 = seriesModel.getData();\n    var labelAnimationRecord_1 = {\n      lastFrameIndex: 0\n    };\n    var during = showEndLabel ? function (percent, clipRect) {\n      lineView._endLabelOnDuring(percent, clipRect, data_1, labelAnimationRecord_1, valueAnimation_1, endLabelModel_1, coordSys);\n    } : null;\n    var isHorizontal = coordSys.getBaseAxis().isHorizontal();\n    var clipPath = createGridClipPath(coordSys, hasAnimation, seriesModel, function () {\n      var endLabel = lineView._endLabel;\n\n      if (endLabel && hasAnimation) {\n        if (labelAnimationRecord_1.originalX != null) {\n          endLabel.attr({\n            x: labelAnimationRecord_1.originalX,\n            y: labelAnimationRecord_1.originalY\n          });\n        }\n      }\n    }, during);\n\n    if (!seriesModel.get('clip', true)) {\n      var rectShape = clipPath.shape;\n      var expandSize = Math.max(rectShape.width, rectShape.height);\n\n      if (isHorizontal) {\n        rectShape.y -= expandSize;\n        rectShape.height += expandSize * 2;\n      } else {\n        rectShape.x -= expandSize;\n        rectShape.width += expandSize * 2;\n      }\n    }\n\n    if (during) {\n      during(1, clipPath);\n    }\n\n    return clipPath;\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      if (seriesModel.get(['endLabel', 'show'])) {\n        console.warn('endLabel is not supported for lines in polar systems.');\n      }\n    }\n\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\n  }\n}\n\nfunction getEndLabelStateSpecified(endLabelModel, coordSys) {\n  var baseAxis = coordSys.getBaseAxis();\n  var isHorizontal = baseAxis.isHorizontal();\n  var isBaseInversed = baseAxis.inverse;\n  var align = isHorizontal ? isBaseInversed ? 'right' : 'left' : 'center';\n  var verticalAlign = isHorizontal ? 'middle' : isBaseInversed ? 'top' : 'bottom';\n  return {\n    normal: {\n      align: endLabelModel.get('align') || align,\n      verticalAlign: endLabelModel.get('verticalAlign') || verticalAlign,\n      padding: endLabelModel.get('distance') || 0\n    }\n  };\n}\n\nvar LineView = function (_super) {\n  __extends(LineView, _super);\n\n  function LineView() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  LineView.prototype.init = function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  };\n\n  LineView.prototype.render = function (seriesModel, ecModel, api) {\n    var _this = this;\n\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.getLayout('points') || [];\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = isAreaChart && getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys);\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup);\n    var step = !isCoordSysPolar ? seriesModel.get('step') : false;\n    var clipShapeForSymbol;\n\n    if (coordSys && coordSys.getArea && seriesModel.get('clip', true)) {\n      clipShapeForSymbol = coordSys.getArea();\n\n      if (clipShapeForSymbol.width != null) {\n        clipShapeForSymbol.x -= 0.1;\n        clipShapeForSymbol.y -= 0.1;\n        clipShapeForSymbol.width += 0.2;\n        clipShapeForSymbol.height += 0.2;\n      } else if (clipShapeForSymbol.r0) {\n        clipShapeForSymbol.r0 -= 0.5;\n        clipShapeForSymbol.r += 0.5;\n      }\n    }\n\n    this._clipShapeForSymbol = clipShapeForSymbol;\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol,\n        disableAnimation: true,\n        getSymbolPoint: function (idx) {\n          return [points[idx * 2], points[idx * 2 + 1]];\n        }\n      });\n      hasAnimation && this._initSymbolLabelAnimation(data, coordSys, clipShapeForSymbol);\n\n      if (step) {\n        points = turnPointsIntoStep(points, coordSys, step);\n\n        if (stackedOnPoints) {\n          stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n        }\n      }\n\n      polyline = this._newPolyline(points);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints);\n      }\n\n      if (!isCoordSysPolar) {\n        this._initOrUpdateEndLabel(seriesModel, coordSys);\n      }\n\n      lineGroup.setClipPath(createLineClipPath(this, coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        polygon = this._newPolygon(points, stackedOnPoints);\n      } else if (polygon && !isAreaChart) {\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      }\n\n      if (!isCoordSysPolar) {\n        this._initOrUpdateEndLabel(seriesModel, coordSys);\n      }\n\n      lineGroup.setClipPath(createLineClipPath(this, coordSys, false, seriesModel));\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol,\n        disableAnimation: true,\n        getSymbolPoint: function (idx) {\n          return [points[idx * 2], points[idx * 2 + 1]];\n        }\n      });\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._doUpdateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          if (step) {\n            points = turnPointsIntoStep(points, coordSys, step);\n\n            if (stackedOnPoints) {\n              stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n            }\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('style')[data.getVisual('drawType')];\n    var focus = seriesModel.get(['emphasis', 'focus']);\n    var blurScope = seriesModel.get(['emphasis', 'blurScope']);\n    polyline.useStyle(zrUtil.defaults(lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    setStatesStylesFromModel(polyline, seriesModel, 'lineStyle');\n\n    if (polyline.style.lineWidth > 0 && seriesModel.get(['emphasis', 'lineStyle', 'width']) === 'bolder') {\n      var emphasisLineStyle = polyline.getState('emphasis').style;\n      emphasisLineStyle.lineWidth = polyline.style.lineWidth + 1;\n    }\n\n    getECData(polyline).seriesIndex = seriesModel.seriesIndex;\n    enableHoverEmphasis(polyline, focus, blurScope);\n    var smooth = getSmooth(seriesModel.get('smooth'));\n    var smoothMonotone = seriesModel.get('smoothMonotone');\n    var connectNulls = seriesModel.get('connectNulls');\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: smoothMonotone,\n      connectNulls: connectNulls\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel',\n        decal: data.getVisual('style').decal\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: smoothMonotone,\n        connectNulls: connectNulls\n      });\n      setStatesStylesFromModel(polygon, seriesModel, 'areaStyle');\n      getECData(polygon).seriesIndex = seriesModel.seriesIndex;\n      enableHoverEmphasis(polygon, focus, blurScope);\n    }\n\n    var changePolyState = function (toState) {\n      _this._changePolyState(toState);\n    };\n\n    data.eachItemGraphicEl(function (el) {\n      el && (el.onHoverStateChange = changePolyState);\n    });\n    this._polyline.onHoverStateChange = changePolyState;\n    this._data = data;\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  };\n\n  LineView.prototype.dispose = function () {};\n\n  LineView.prototype.highlight = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    this._changePolyState('emphasis');\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var points = data.getLayout('points');\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        var x = points[dataIndex * 2];\n        var y = points[dataIndex * 2 + 1];\n\n        if (isNaN(x) || isNaN(y)) {\n          return;\n        }\n\n        if (this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(x, y)) {\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.x = x;\n        symbol.y = y;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol);\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  };\n\n  LineView.prototype.downplay = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    this._changePolyState('normal');\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  };\n\n  LineView.prototype._changePolyState = function (toState) {\n    var polygon = this._polygon;\n    setStatesFlag(this._polyline, toState);\n    polygon && setStatesFlag(polygon, toState);\n  };\n\n  LineView.prototype._newPolyline = function (points) {\n    var polyline = this._polyline;\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new ECPolyline({\n      shape: {\n        points: points\n      },\n      segmentIgnoreThreshold: 2,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  };\n\n  LineView.prototype._newPolygon = function (points, stackedOnPoints) {\n    var polygon = this._polygon;\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new ECPolygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      segmentIgnoreThreshold: 2\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  };\n\n  LineView.prototype._initSymbolLabelAnimation = function (data, coordSys, clipShape) {\n    var isHorizontalOrRadial;\n    var isCoordSysPolar;\n    var baseAxis = coordSys.getBaseAxis();\n    var isAxisInverse = baseAxis.inverse;\n\n    if (coordSys.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n      isCoordSysPolar = false;\n    } else if (coordSys.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n      isCoordSysPolar = true;\n    }\n\n    var seriesModel = data.hostModel;\n    var seriesDuration = seriesModel.get('animationDuration');\n\n    if (typeof seriesDuration === 'function') {\n      seriesDuration = seriesDuration(null);\n    }\n\n    var seriesDalay = seriesModel.get('animationDelay') || 0;\n    var seriesDalayValue = typeof seriesDalay === 'function' ? seriesDalay(null) : seriesDalay;\n    data.eachItemGraphicEl(function (symbol, idx) {\n      var el = symbol;\n\n      if (el) {\n        var point = [symbol.x, symbol.y];\n        var start = void 0;\n        var end = void 0;\n        var current = void 0;\n\n        if (isCoordSysPolar) {\n          var polarClip = clipShape;\n          var coord = coordSys.pointToCoord(point);\n\n          if (isHorizontalOrRadial) {\n            start = polarClip.startAngle;\n            end = polarClip.endAngle;\n            current = -coord[1] / 180 * Math.PI;\n          } else {\n            start = polarClip.r0;\n            end = polarClip.r;\n            current = coord[0];\n          }\n        } else {\n          var gridClip = clipShape;\n\n          if (isHorizontalOrRadial) {\n            start = gridClip.x;\n            end = gridClip.x + gridClip.width;\n            current = symbol.x;\n          } else {\n            start = gridClip.y + gridClip.height;\n            end = gridClip.y;\n            current = symbol.y;\n          }\n        }\n\n        var ratio = end === start ? 0 : (current - start) / (end - start);\n\n        if (isAxisInverse) {\n          ratio = 1 - ratio;\n        }\n\n        var delay = typeof seriesDalay === 'function' ? seriesDalay(idx) : seriesDuration * ratio + seriesDalayValue;\n        var symbolPath = el.getSymbolPath();\n        var text = symbolPath.getTextContent();\n        el.attr({\n          scaleX: 0,\n          scaleY: 0\n        });\n        el.animateTo({\n          scaleX: 1,\n          scaleY: 1\n        }, {\n          duration: 200,\n          delay: delay\n        });\n\n        if (text) {\n          text.animateFrom({\n            style: {\n              opacity: 0\n            }\n          }, {\n            duration: 300,\n            delay: delay\n          });\n        }\n\n        symbolPath.disableLabelAnimation = true;\n      }\n    });\n  };\n\n  LineView.prototype._initOrUpdateEndLabel = function (seriesModel, coordSys) {\n    var endLabelModel = seriesModel.getModel('endLabel');\n\n    if (endLabelModel.get('show')) {\n      var data_2 = seriesModel.getData();\n      var polyline = this._polyline;\n      var endLabel = this._endLabel;\n\n      if (!endLabel) {\n        endLabel = this._endLabel = new graphic.Text({\n          z2: 200\n        });\n        endLabel.ignoreClip = true;\n        polyline.setTextContent(this._endLabel);\n        polyline.disableLabelAnimation = true;\n      }\n\n      var dataIndex = getLastIndexNotNull(data_2.getLayout('points'));\n\n      if (dataIndex >= 0) {\n        setLabelStyle(endLabel, getLabelStatesModels(seriesModel, 'endLabel'), {\n          labelFetcher: seriesModel,\n          labelDataIndex: dataIndex,\n          defaultText: function (dataIndex, opt, overrideValue) {\n            return overrideValue ? getDefaultInterpolatedLabel(data_2, overrideValue) : getDefaultLabel(data_2, dataIndex);\n          },\n          enableTextSetter: true\n        }, getEndLabelStateSpecified(endLabelModel, coordSys));\n      }\n    } else if (this._endLabel) {\n      this._polyline.removeTextContent();\n\n      this._endLabel = null;\n    }\n  };\n\n  LineView.prototype._endLabelOnDuring = function (percent, clipRect, data, animationRecord, valueAnimation, endLabelModel, coordSys) {\n    var endLabel = this._endLabel;\n    var polyline = this._polyline;\n\n    if (endLabel) {\n      if (percent < 1 && animationRecord.originalX == null) {\n        animationRecord.originalX = endLabel.x;\n        animationRecord.originalY = endLabel.y;\n      }\n\n      var points = data.getLayout('points');\n      var seriesModel = data.hostModel;\n      var connectNulls = seriesModel.get('connectNulls');\n      var precision = endLabelModel.get('precision');\n      var baseAxis = coordSys.getBaseAxis();\n      var isHorizontal = baseAxis.isHorizontal();\n      var isBaseInversed = baseAxis.inverse;\n      var clipShape = clipRect.shape;\n      var xOrY = isBaseInversed ? isHorizontal ? clipShape.x : clipShape.y + clipShape.height : isHorizontal ? clipShape.x + clipShape.width : clipShape.y;\n      var dim = isHorizontal ? 'x' : 'y';\n      var dataIndexRange = getIndexRange(points, xOrY, dim);\n      var indices = dataIndexRange.range;\n      var diff = indices[1] - indices[0];\n      var value = void 0;\n\n      if (diff >= 1) {\n        if (diff > 1 && !connectNulls) {\n          var pt = getPointAtIndex(points, indices[0]);\n          endLabel.attr({\n            x: pt[0],\n            y: pt[1]\n          });\n          valueAnimation && (value = seriesModel.getRawValue(indices[0]));\n        } else {\n          var pt = polyline.getPointOn(xOrY, dim);\n          pt && endLabel.attr({\n            x: pt[0],\n            y: pt[1]\n          });\n          var startValue = seriesModel.getRawValue(indices[0]);\n          var endValue = seriesModel.getRawValue(indices[1]);\n          valueAnimation && (value = modelUtil.interpolateRawValues(data, precision, startValue, endValue, dataIndexRange.t));\n        }\n\n        animationRecord.lastFrameIndex = indices[0];\n      } else {\n        var idx = percent === 1 || animationRecord.lastFrameIndex > 0 ? indices[0] : 0;\n        var pt = getPointAtIndex(points, idx);\n        valueAnimation && (value = seriesModel.getRawValue(idx));\n        endLabel.attr({\n          x: pt[0],\n          y: pt[1]\n        });\n      }\n\n      if (valueAnimation) {\n        labelInner(endLabel).setLabelText(value);\n      }\n    }\n  };\n\n  LineView.prototype._doUpdateAnimation = function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    }\n\n    if (getBoundingDiff(current, next) > 3000 || polygon && getBoundingDiff(stackedOnCurrent, stackedOnNext) > 3000) {\n      polyline.setShape({\n        points: next\n      });\n\n      if (polygon) {\n        polygon.setShape({\n          points: next,\n          stackedOnPoints: stackedOnNext\n        });\n      }\n\n      return;\n    }\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    var target = {\n      shape: {\n        points: next\n      }\n    };\n\n    if (diff.current !== current) {\n      target.shape.__points = diff.next;\n    }\n\n    polyline.stopAnimation();\n    graphic.updateProps(polyline, target, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      polygon.stopAnimation();\n      graphic.updateProps(polygon, {\n        shape: {\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n\n      if (polyline.shape.points !== polygon.shape.points) {\n        polygon.shape.points = polyline.shape.points;\n      }\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        polygon && polygon.dirtyShape();\n        var points = polyline.shape.__points;\n\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          var offset = updatedDataInfo[i].ptIdx * 2;\n          el.x = points[offset];\n          el.y = points[offset + 1];\n          el.markRedraw();\n        }\n      });\n    }\n  };\n\n  LineView.prototype.remove = function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true);\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._endLabel = this._data = null;\n  };\n\n  LineView.type = 'line';\n  return LineView;\n}(ChartView);\n\nChartView.registerClass(LineView);\nexport default ChartView;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/esm/chart/line/LineView.js"],"names":["__extends","zrUtil","SymbolDraw","SymbolClz","lineAnimationDiff","graphic","modelUtil","ECPolyline","ECPolygon","ChartView","prepareDataCoordInfo","getStackedOnPoint","createGridClipPath","createPolarClipPath","isCoordinateSystemType","setStatesStylesFromModel","setStatesFlag","enableHoverEmphasis","setLabelStyle","getLabelStatesModels","labelInner","getDefaultLabel","getDefaultInterpolatedLabel","getECData","createFloat32Array","isPointsSame","points1","points2","length","i","bboxFromPoints","points","minX","Infinity","minY","maxX","maxY","x","y","isNaN","Math","min","max","getBoundingDiff","_a","min1","max1","_b","min2","max2","abs","getSmooth","smooth","getStackedOnPoints","coordSys","data","dataCoordInfo","valueDim","len","count","idx","pt","turnPointsIntoStep","stepTurnAt","baseAxis","getBaseAxis","baseIndex","dim","stepPoints","stepPt","nextPt","push","middle","stepPt2","getVisualGradient","visualMetaList","getVisual","type","process","env","NODE_ENV","console","warn","coordDim","visualMeta","dimIndex","dimension","dimName","dimensions","dimInfo","getDimensionInfo","axis","getAxis","colorStops","map","stops","stop","offset","coord","toGlobalCoord","dataToCoord","value","color","stopLen","outerColors","slice","reverse","tinyExtent","minCoord","maxCoord","coordSpan","each","unshift","gradient","LinearGradient","getIsIgnoreFunc","seriesModel","showAllSymbol","get","isAuto","categoryAxis","getAxesByScale","canShowAllSymbolForCategory","categoryDataDim","mapDimension","labelMap","getViewLabels","labelItem","tickValue","dataIndex","hasOwnProperty","axisExtent","getExtent","availSize","scale","dataLen","step","round","getSymbolSize","isHorizontal","isPointNull","getLastIndexNotNull","getPointAtIndex","getIndexRange","xOrY","dimIdx","a","b","prevIndex","nextIndex","range","t","createLineClipPath","lineView","hasAnimation","endLabelModel_1","getModel","showEndLabel","valueAnimation_1","data_1","getData","labelAnimationRecord_1","lastFrameIndex","during","percent","clipRect","_endLabelOnDuring","clipPath","endLabel","_endLabel","originalX","attr","originalY","rectShape","shape","expandSize","width","height","getEndLabelStateSpecified","endLabelModel","isBaseInversed","inverse","align","verticalAlign","normal","padding","LineView","_super","apply","arguments","prototype","init","lineGroup","Group","symbolDraw","group","add","_symbolDraw","_lineGroup","render","ecModel","api","_this","coordinateSystem","lineStyleModel","areaStyleModel","getLayout","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","isEmpty","valueOrigin","stackedOnPoints","showSymbol","isIgnoreFunc","oldData","_data","eachItemGraphicEl","el","__temp","remove","setItemGraphicEl","clipShapeForSymbol","getArea","r0","r","_clipShapeForSymbol","_step","updateData","isIgnore","clipShape","disableAnimation","getSymbolPoint","_initSymbolLabelAnimation","_newPolyline","_newPolygon","_initOrUpdateEndLabel","setClipPath","_stackedOnPoints","_points","_doUpdateAnimation","setShape","visualColor","focus","blurScope","useStyle","defaults","getLineStyle","fill","stroke","lineJoin","style","lineWidth","emphasisLineStyle","getState","seriesIndex","smoothMonotone","connectNulls","stackedOnSeries","getCalculationInfo","stackedOnSmooth","getAreaStyle","opacity","decal","changePolyState","toState","_changePolyState","onHoverStateChange","_valueOrigin","dispose","highlight","payload","queryDataIndex","Array","symbol","getItemGraphicEl","contain","setZ","stopSymbolAnimation","call","downplay","segmentIgnoreThreshold","z2","isHorizontalOrRadial","isAxisInverse","hostModel","seriesDuration","seriesDalay","seriesDalayValue","point","start","end","current","polarClip","pointToCoord","startAngle","endAngle","PI","gridClip","ratio","delay","symbolPath","getSymbolPath","text","getTextContent","scaleX","scaleY","animateTo","duration","animateFrom","disableLabelAnimation","data_2","Text","ignoreClip","setTextContent","labelFetcher","labelDataIndex","defaultText","opt","overrideValue","enableTextSetter","removeTextContent","animationRecord","valueAnimation","precision","dataIndexRange","indices","diff","getRawValue","getPointOn","startValue","endValue","interpolateRawValues","setLabelText","stackedOnCurrent","next","stackedOnNext","__points","target","stopAnimation","updateProps","updatedDataInfo","diffStatus","status","cmd","idx1","ptIdx","animators","dirtyShape","markRedraw","removeAll","registerClass"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/esm/core/util';\nimport SymbolDraw from '../helper/SymbolDraw';\nimport SymbolClz from '../helper/Symbol';\nimport lineAnimationDiff from './lineAnimationDiff';\nimport * as graphic from '../../util/graphic';\nimport * as modelUtil from '../../util/model';\nimport { ECPolyline, ECPolygon } from './poly';\nimport ChartView from '../../view/Chart';\nimport { prepareDataCoordInfo, getStackedOnPoint } from './helper';\nimport { createGridClipPath, createPolarClipPath } from '../helper/createClipPathFromCoordSys';\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem';\nimport { setStatesStylesFromModel, setStatesFlag, enableHoverEmphasis } from '../../util/states';\nimport { setLabelStyle, getLabelStatesModels, labelInner } from '../../label/labelStyle';\nimport { getDefaultLabel, getDefaultInterpolatedLabel } from '../helper/labelHelper';\nimport { getECData } from '../../util/innerStore';\nimport { createFloat32Array } from '../../util/vendor';\n\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    if (points1[i] !== points2[i]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction bboxFromPoints(points) {\n  var minX = Infinity;\n  var minY = Infinity;\n  var maxX = -Infinity;\n  var maxY = -Infinity;\n\n  for (var i = 0; i < points.length;) {\n    var x = points[i++];\n    var y = points[i++];\n\n    if (!isNaN(x)) {\n      minX = Math.min(x, minX);\n      maxX = Math.max(x, maxX);\n    }\n\n    if (!isNaN(y)) {\n      minY = Math.min(y, minY);\n      maxY = Math.max(y, maxY);\n    }\n  }\n\n  return [[minX, minY], [maxX, maxY]];\n}\n\nfunction getBoundingDiff(points1, points2) {\n  var _a = bboxFromPoints(points1),\n      min1 = _a[0],\n      max1 = _a[1];\n\n  var _b = bboxFromPoints(points2),\n      min2 = _b[0],\n      max2 = _b[1];\n\n  return Math.max(Math.abs(min1[0] - min2[0]), Math.abs(min1[1] - min2[1]), Math.abs(max1[0] - max2[0]), Math.abs(max1[1] - max2[1]));\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var len = data.count();\n  var points = createFloat32Array(len * 2);\n\n  for (var idx = 0; idx < len; idx++) {\n    var pt = getStackedOnPoint(dataCoordInfo, coordSys, data, idx);\n    points[idx * 2] = pt[0];\n    points[idx * 2 + 1] = pt[1];\n  }\n\n  return points;\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n  var i = 0;\n  var stepPt = [];\n  var pt = [];\n  var nextPt = [];\n\n  for (; i < points.length - 2; i += 2) {\n    nextPt[0] = points[i + 2];\n    nextPt[1] = points[i + 3];\n    pt[0] = points[i];\n    pt[1] = points[i + 1];\n    stepPoints.push(pt[0], pt[1]);\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n        break;\n\n      case 'middle':\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n        stepPoints.push(stepPt2[0], stepPt2[1]);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n    }\n  }\n\n  stepPoints.push(points[i++], points[i++]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Visual map on line style is only supported on cartesian2d.');\n    }\n\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim;\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Visual map on line style only support x or y dimension.');\n    }\n\n    return;\n  }\n\n  var axis = coordSys.getAxis(coordDim);\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      offset: 0,\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10;\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  });\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  }\n\n  if (isAuto && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  }\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    labelMap[labelItem.tickValue] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0);\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex)[categoryAxis.isHorizontal() ? 1 : 0] * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isPointNull(x, y) {\n  return isNaN(x) || isNaN(y);\n}\n\nfunction getLastIndexNotNull(points) {\n  var len = points.length / 2;\n\n  for (; len > 0; len--) {\n    if (!isPointNull(points[len * 2 - 2], points[len * 2 - 1])) {\n      break;\n    }\n  }\n\n  return len - 1;\n}\n\nfunction getPointAtIndex(points, idx) {\n  return [points[idx * 2], points[idx * 2 + 1]];\n}\n\nfunction getIndexRange(points, xOrY, dim) {\n  var len = points.length / 2;\n  var dimIdx = dim === 'x' ? 0 : 1;\n  var a;\n  var b;\n  var prevIndex = 0;\n  var nextIndex = -1;\n\n  for (var i = 0; i < len; i++) {\n    b = points[i * 2 + dimIdx];\n\n    if (isNaN(b) || isNaN(points[i * 2 + 1 - dimIdx])) {\n      continue;\n    }\n\n    if (i === 0) {\n      a = b;\n      continue;\n    }\n\n    if (a <= xOrY && b >= xOrY || a >= xOrY && b <= xOrY) {\n      nextIndex = i;\n      break;\n    }\n\n    prevIndex = i;\n    a = b;\n  }\n\n  return {\n    range: [prevIndex, nextIndex],\n    t: (xOrY - a) / (b - a)\n  };\n}\n\nfunction createLineClipPath(lineView, coordSys, hasAnimation, seriesModel) {\n  if (isCoordinateSystemType(coordSys, 'cartesian2d')) {\n    var endLabelModel_1 = seriesModel.getModel('endLabel');\n    var showEndLabel = endLabelModel_1.get('show');\n    var valueAnimation_1 = endLabelModel_1.get('valueAnimation');\n    var data_1 = seriesModel.getData();\n    var labelAnimationRecord_1 = {\n      lastFrameIndex: 0\n    };\n    var during = showEndLabel ? function (percent, clipRect) {\n      lineView._endLabelOnDuring(percent, clipRect, data_1, labelAnimationRecord_1, valueAnimation_1, endLabelModel_1, coordSys);\n    } : null;\n    var isHorizontal = coordSys.getBaseAxis().isHorizontal();\n    var clipPath = createGridClipPath(coordSys, hasAnimation, seriesModel, function () {\n      var endLabel = lineView._endLabel;\n\n      if (endLabel && hasAnimation) {\n        if (labelAnimationRecord_1.originalX != null) {\n          endLabel.attr({\n            x: labelAnimationRecord_1.originalX,\n            y: labelAnimationRecord_1.originalY\n          });\n        }\n      }\n    }, during);\n\n    if (!seriesModel.get('clip', true)) {\n      var rectShape = clipPath.shape;\n      var expandSize = Math.max(rectShape.width, rectShape.height);\n\n      if (isHorizontal) {\n        rectShape.y -= expandSize;\n        rectShape.height += expandSize * 2;\n      } else {\n        rectShape.x -= expandSize;\n        rectShape.width += expandSize * 2;\n      }\n    }\n\n    if (during) {\n      during(1, clipPath);\n    }\n\n    return clipPath;\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      if (seriesModel.get(['endLabel', 'show'])) {\n        console.warn('endLabel is not supported for lines in polar systems.');\n      }\n    }\n\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\n  }\n}\n\nfunction getEndLabelStateSpecified(endLabelModel, coordSys) {\n  var baseAxis = coordSys.getBaseAxis();\n  var isHorizontal = baseAxis.isHorizontal();\n  var isBaseInversed = baseAxis.inverse;\n  var align = isHorizontal ? isBaseInversed ? 'right' : 'left' : 'center';\n  var verticalAlign = isHorizontal ? 'middle' : isBaseInversed ? 'top' : 'bottom';\n  return {\n    normal: {\n      align: endLabelModel.get('align') || align,\n      verticalAlign: endLabelModel.get('verticalAlign') || verticalAlign,\n      padding: endLabelModel.get('distance') || 0\n    }\n  };\n}\n\nvar LineView = function (_super) {\n  __extends(LineView, _super);\n\n  function LineView() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  LineView.prototype.init = function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  };\n\n  LineView.prototype.render = function (seriesModel, ecModel, api) {\n    var _this = this;\n\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.getLayout('points') || [];\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = isAreaChart && getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys);\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup);\n    var step = !isCoordSysPolar ? seriesModel.get('step') : false;\n    var clipShapeForSymbol;\n\n    if (coordSys && coordSys.getArea && seriesModel.get('clip', true)) {\n      clipShapeForSymbol = coordSys.getArea();\n\n      if (clipShapeForSymbol.width != null) {\n        clipShapeForSymbol.x -= 0.1;\n        clipShapeForSymbol.y -= 0.1;\n        clipShapeForSymbol.width += 0.2;\n        clipShapeForSymbol.height += 0.2;\n      } else if (clipShapeForSymbol.r0) {\n        clipShapeForSymbol.r0 -= 0.5;\n        clipShapeForSymbol.r += 0.5;\n      }\n    }\n\n    this._clipShapeForSymbol = clipShapeForSymbol;\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol,\n        disableAnimation: true,\n        getSymbolPoint: function (idx) {\n          return [points[idx * 2], points[idx * 2 + 1]];\n        }\n      });\n      hasAnimation && this._initSymbolLabelAnimation(data, coordSys, clipShapeForSymbol);\n\n      if (step) {\n        points = turnPointsIntoStep(points, coordSys, step);\n\n        if (stackedOnPoints) {\n          stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n        }\n      }\n\n      polyline = this._newPolyline(points);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints);\n      }\n\n      if (!isCoordSysPolar) {\n        this._initOrUpdateEndLabel(seriesModel, coordSys);\n      }\n\n      lineGroup.setClipPath(createLineClipPath(this, coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        polygon = this._newPolygon(points, stackedOnPoints);\n      } else if (polygon && !isAreaChart) {\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      }\n\n      if (!isCoordSysPolar) {\n        this._initOrUpdateEndLabel(seriesModel, coordSys);\n      }\n\n      lineGroup.setClipPath(createLineClipPath(this, coordSys, false, seriesModel));\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol,\n        disableAnimation: true,\n        getSymbolPoint: function (idx) {\n          return [points[idx * 2], points[idx * 2 + 1]];\n        }\n      });\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._doUpdateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          if (step) {\n            points = turnPointsIntoStep(points, coordSys, step);\n\n            if (stackedOnPoints) {\n              stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n            }\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('style')[data.getVisual('drawType')];\n    var focus = seriesModel.get(['emphasis', 'focus']);\n    var blurScope = seriesModel.get(['emphasis', 'blurScope']);\n    polyline.useStyle(zrUtil.defaults(lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    setStatesStylesFromModel(polyline, seriesModel, 'lineStyle');\n\n    if (polyline.style.lineWidth > 0 && seriesModel.get(['emphasis', 'lineStyle', 'width']) === 'bolder') {\n      var emphasisLineStyle = polyline.getState('emphasis').style;\n      emphasisLineStyle.lineWidth = polyline.style.lineWidth + 1;\n    }\n\n    getECData(polyline).seriesIndex = seriesModel.seriesIndex;\n    enableHoverEmphasis(polyline, focus, blurScope);\n    var smooth = getSmooth(seriesModel.get('smooth'));\n    var smoothMonotone = seriesModel.get('smoothMonotone');\n    var connectNulls = seriesModel.get('connectNulls');\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: smoothMonotone,\n      connectNulls: connectNulls\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel',\n        decal: data.getVisual('style').decal\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: smoothMonotone,\n        connectNulls: connectNulls\n      });\n      setStatesStylesFromModel(polygon, seriesModel, 'areaStyle');\n      getECData(polygon).seriesIndex = seriesModel.seriesIndex;\n      enableHoverEmphasis(polygon, focus, blurScope);\n    }\n\n    var changePolyState = function (toState) {\n      _this._changePolyState(toState);\n    };\n\n    data.eachItemGraphicEl(function (el) {\n      el && (el.onHoverStateChange = changePolyState);\n    });\n    this._polyline.onHoverStateChange = changePolyState;\n    this._data = data;\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  };\n\n  LineView.prototype.dispose = function () {};\n\n  LineView.prototype.highlight = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    this._changePolyState('emphasis');\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var points = data.getLayout('points');\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        var x = points[dataIndex * 2];\n        var y = points[dataIndex * 2 + 1];\n\n        if (isNaN(x) || isNaN(y)) {\n          return;\n        }\n\n        if (this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(x, y)) {\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.x = x;\n        symbol.y = y;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol);\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  };\n\n  LineView.prototype.downplay = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    this._changePolyState('normal');\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  };\n\n  LineView.prototype._changePolyState = function (toState) {\n    var polygon = this._polygon;\n    setStatesFlag(this._polyline, toState);\n    polygon && setStatesFlag(polygon, toState);\n  };\n\n  LineView.prototype._newPolyline = function (points) {\n    var polyline = this._polyline;\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new ECPolyline({\n      shape: {\n        points: points\n      },\n      segmentIgnoreThreshold: 2,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  };\n\n  LineView.prototype._newPolygon = function (points, stackedOnPoints) {\n    var polygon = this._polygon;\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new ECPolygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      segmentIgnoreThreshold: 2\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  };\n\n  LineView.prototype._initSymbolLabelAnimation = function (data, coordSys, clipShape) {\n    var isHorizontalOrRadial;\n    var isCoordSysPolar;\n    var baseAxis = coordSys.getBaseAxis();\n    var isAxisInverse = baseAxis.inverse;\n\n    if (coordSys.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n      isCoordSysPolar = false;\n    } else if (coordSys.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n      isCoordSysPolar = true;\n    }\n\n    var seriesModel = data.hostModel;\n    var seriesDuration = seriesModel.get('animationDuration');\n\n    if (typeof seriesDuration === 'function') {\n      seriesDuration = seriesDuration(null);\n    }\n\n    var seriesDalay = seriesModel.get('animationDelay') || 0;\n    var seriesDalayValue = typeof seriesDalay === 'function' ? seriesDalay(null) : seriesDalay;\n    data.eachItemGraphicEl(function (symbol, idx) {\n      var el = symbol;\n\n      if (el) {\n        var point = [symbol.x, symbol.y];\n        var start = void 0;\n        var end = void 0;\n        var current = void 0;\n\n        if (isCoordSysPolar) {\n          var polarClip = clipShape;\n          var coord = coordSys.pointToCoord(point);\n\n          if (isHorizontalOrRadial) {\n            start = polarClip.startAngle;\n            end = polarClip.endAngle;\n            current = -coord[1] / 180 * Math.PI;\n          } else {\n            start = polarClip.r0;\n            end = polarClip.r;\n            current = coord[0];\n          }\n        } else {\n          var gridClip = clipShape;\n\n          if (isHorizontalOrRadial) {\n            start = gridClip.x;\n            end = gridClip.x + gridClip.width;\n            current = symbol.x;\n          } else {\n            start = gridClip.y + gridClip.height;\n            end = gridClip.y;\n            current = symbol.y;\n          }\n        }\n\n        var ratio = end === start ? 0 : (current - start) / (end - start);\n\n        if (isAxisInverse) {\n          ratio = 1 - ratio;\n        }\n\n        var delay = typeof seriesDalay === 'function' ? seriesDalay(idx) : seriesDuration * ratio + seriesDalayValue;\n        var symbolPath = el.getSymbolPath();\n        var text = symbolPath.getTextContent();\n        el.attr({\n          scaleX: 0,\n          scaleY: 0\n        });\n        el.animateTo({\n          scaleX: 1,\n          scaleY: 1\n        }, {\n          duration: 200,\n          delay: delay\n        });\n\n        if (text) {\n          text.animateFrom({\n            style: {\n              opacity: 0\n            }\n          }, {\n            duration: 300,\n            delay: delay\n          });\n        }\n\n        symbolPath.disableLabelAnimation = true;\n      }\n    });\n  };\n\n  LineView.prototype._initOrUpdateEndLabel = function (seriesModel, coordSys) {\n    var endLabelModel = seriesModel.getModel('endLabel');\n\n    if (endLabelModel.get('show')) {\n      var data_2 = seriesModel.getData();\n      var polyline = this._polyline;\n      var endLabel = this._endLabel;\n\n      if (!endLabel) {\n        endLabel = this._endLabel = new graphic.Text({\n          z2: 200\n        });\n        endLabel.ignoreClip = true;\n        polyline.setTextContent(this._endLabel);\n        polyline.disableLabelAnimation = true;\n      }\n\n      var dataIndex = getLastIndexNotNull(data_2.getLayout('points'));\n\n      if (dataIndex >= 0) {\n        setLabelStyle(endLabel, getLabelStatesModels(seriesModel, 'endLabel'), {\n          labelFetcher: seriesModel,\n          labelDataIndex: dataIndex,\n          defaultText: function (dataIndex, opt, overrideValue) {\n            return overrideValue ? getDefaultInterpolatedLabel(data_2, overrideValue) : getDefaultLabel(data_2, dataIndex);\n          },\n          enableTextSetter: true\n        }, getEndLabelStateSpecified(endLabelModel, coordSys));\n      }\n    } else if (this._endLabel) {\n      this._polyline.removeTextContent();\n\n      this._endLabel = null;\n    }\n  };\n\n  LineView.prototype._endLabelOnDuring = function (percent, clipRect, data, animationRecord, valueAnimation, endLabelModel, coordSys) {\n    var endLabel = this._endLabel;\n    var polyline = this._polyline;\n\n    if (endLabel) {\n      if (percent < 1 && animationRecord.originalX == null) {\n        animationRecord.originalX = endLabel.x;\n        animationRecord.originalY = endLabel.y;\n      }\n\n      var points = data.getLayout('points');\n      var seriesModel = data.hostModel;\n      var connectNulls = seriesModel.get('connectNulls');\n      var precision = endLabelModel.get('precision');\n      var baseAxis = coordSys.getBaseAxis();\n      var isHorizontal = baseAxis.isHorizontal();\n      var isBaseInversed = baseAxis.inverse;\n      var clipShape = clipRect.shape;\n      var xOrY = isBaseInversed ? isHorizontal ? clipShape.x : clipShape.y + clipShape.height : isHorizontal ? clipShape.x + clipShape.width : clipShape.y;\n      var dim = isHorizontal ? 'x' : 'y';\n      var dataIndexRange = getIndexRange(points, xOrY, dim);\n      var indices = dataIndexRange.range;\n      var diff = indices[1] - indices[0];\n      var value = void 0;\n\n      if (diff >= 1) {\n        if (diff > 1 && !connectNulls) {\n          var pt = getPointAtIndex(points, indices[0]);\n          endLabel.attr({\n            x: pt[0],\n            y: pt[1]\n          });\n          valueAnimation && (value = seriesModel.getRawValue(indices[0]));\n        } else {\n          var pt = polyline.getPointOn(xOrY, dim);\n          pt && endLabel.attr({\n            x: pt[0],\n            y: pt[1]\n          });\n          var startValue = seriesModel.getRawValue(indices[0]);\n          var endValue = seriesModel.getRawValue(indices[1]);\n          valueAnimation && (value = modelUtil.interpolateRawValues(data, precision, startValue, endValue, dataIndexRange.t));\n        }\n\n        animationRecord.lastFrameIndex = indices[0];\n      } else {\n        var idx = percent === 1 || animationRecord.lastFrameIndex > 0 ? indices[0] : 0;\n        var pt = getPointAtIndex(points, idx);\n        valueAnimation && (value = seriesModel.getRawValue(idx));\n        endLabel.attr({\n          x: pt[0],\n          y: pt[1]\n        });\n      }\n\n      if (valueAnimation) {\n        labelInner(endLabel).setLabelText(value);\n      }\n    }\n  };\n\n  LineView.prototype._doUpdateAnimation = function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    }\n\n    if (getBoundingDiff(current, next) > 3000 || polygon && getBoundingDiff(stackedOnCurrent, stackedOnNext) > 3000) {\n      polyline.setShape({\n        points: next\n      });\n\n      if (polygon) {\n        polygon.setShape({\n          points: next,\n          stackedOnPoints: stackedOnNext\n        });\n      }\n\n      return;\n    }\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    var target = {\n      shape: {\n        points: next\n      }\n    };\n\n    if (diff.current !== current) {\n      target.shape.__points = diff.next;\n    }\n\n    polyline.stopAnimation();\n    graphic.updateProps(polyline, target, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      polygon.stopAnimation();\n      graphic.updateProps(polygon, {\n        shape: {\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n\n      if (polyline.shape.points !== polygon.shape.points) {\n        polygon.shape.points = polyline.shape.points;\n      }\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        polygon && polygon.dirtyShape();\n        var points = polyline.shape.__points;\n\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          var offset = updatedDataInfo[i].ptIdx * 2;\n          el.x = points[offset];\n          el.y = points[offset + 1];\n          el.markRedraw();\n        }\n      });\n    }\n  };\n\n  LineView.prototype.remove = function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true);\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._endLabel = this._data = null;\n  };\n\n  LineView.type = 'line';\n  return LineView;\n}(ChartView);\n\nChartView.registerClass(LineView);\nexport default ChartView;"]},"metadata":{},"sourceType":"module"}