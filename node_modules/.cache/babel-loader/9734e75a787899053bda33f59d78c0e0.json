{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { deepAssign } from '../../utils';\nimport { adaptor } from './adaptor';\nimport { BOX_RANGE, BOX_RANGE_ALIAS } from './constant';\n\nvar Box =\n/** @class */\nfunction (_super) {\n  __extends(Box, _super);\n\n  function Box() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n\n\n    _this.type = 'box';\n    return _this;\n  }\n  /**\n   * 获取 箱型图 默认配置项\n   */\n\n\n  Box.prototype.getDefaultOptions = function () {\n    var _a;\n\n    return deepAssign({}, _super.prototype.getDefaultOptions.call(this), {\n      meta: (_a = {}, _a[BOX_RANGE] = {\n        min: 0,\n        alias: BOX_RANGE_ALIAS\n      }, _a),\n      // 默认区域交互\n      interactions: [{\n        type: 'active-region'\n      }],\n      // 默认 tooltips 共享，不显示 markers\n      tooltip: {\n        showMarkers: false,\n        showCrosshairs: true,\n        shared: true\n      }\n    });\n  };\n  /**\n   * 获取 箱型图 的适配器\n   */\n\n\n  Box.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n\n  return Box;\n}(Plot);\n\nexport { Box };","map":{"version":3,"sources":["../../../src/plots/box/index.ts"],"names":[],"mappings":";AAAA,SAAS,IAAT,QAAqB,iBAArB;AACA,SAAS,UAAT,QAA2B,aAA3B;AAGA,SAAS,OAAT,QAAwB,WAAxB;AACA,SAAS,SAAT,EAAoB,eAApB,QAA2C,YAA3C;;AAGA,IAAA,GAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyB,EAAA,SAAA,CAAA,GAAA,EAAA,MAAA,CAAA;;AAAzB,WAAA,GAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AACE;;;AACO,IAAA,KAAA,CAAA,IAAA,GAAe,KAAf;;AA6BR;AA3BC;;AAEG;;;AACO,EAAA,GAAA,CAAA,SAAA,CAAA,iBAAA,GAAV,YAAA;;;AACE,WAAO,UAAU,CAAC,EAAD,EAAK,MAAA,CAAA,SAAA,CAAM,iBAAN,CAAuB,IAAvB,CAAuB,IAAvB,CAAL,EAAgC;AAC/C,MAAA,IAAI,GAAA,EAAA,GAAA,EAAA,EACF,EAAA,CAAC,SAAD,CAAA,GAAa;AAAE,QAAA,GAAG,EAAE,CAAP;AAAU,QAAA,KAAK,EAAE;AAAjB,OADX,EAEH,EAFG,CAD2C;AAK/C;AACA,MAAA,YAAY,EAAE,CAAC;AAAE,QAAA,IAAI,EAAE;AAAR,OAAD,CANiC;AAQ/C;AACA,MAAA,OAAO,EAAE;AACP,QAAA,WAAW,EAAE,KADN;AAEP,QAAA,cAAc,EAAE,IAFT;AAGP,QAAA,MAAM,EAAE;AAHD;AATsC,KAAhC,CAAjB;AAeD,GAhBS;AAkBV;;AAEG;;;AACO,EAAA,GAAA,CAAA,SAAA,CAAA,gBAAA,GAAV,YAAA;AACE,WAAO,OAAP;AACD,GAFS;;AAGZ,SAAA,GAAA;AAAC,CA/BD,CAAyB,IAAzB,CAAA","sourcesContent":["import { Plot } from '../../core/plot';\nimport { deepAssign } from '../../utils';\nimport { Adaptor } from '../../core/adaptor';\nimport { BoxOptions } from './types';\nimport { adaptor } from './adaptor';\nimport { BOX_RANGE, BOX_RANGE_ALIAS } from './constant';\nexport { BoxOptions };\n\nexport class Box extends Plot<BoxOptions> {\n  /** 图表类型 */\n  public type: string = 'box';\n\n  /**\n   * 获取 箱型图 默认配置项\n   */\n  protected getDefaultOptions(): Partial<BoxOptions> {\n    return deepAssign({}, super.getDefaultOptions(), {\n      meta: {\n        [BOX_RANGE]: { min: 0, alias: BOX_RANGE_ALIAS },\n      },\n\n      // 默认区域交互\n      interactions: [{ type: 'active-region' }],\n\n      // 默认 tooltips 共享，不显示 markers\n      tooltip: {\n        showMarkers: false,\n        showCrosshairs: true,\n        shared: true,\n      },\n    });\n  }\n\n  /**\n   * 获取 箱型图 的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<BoxOptions> {\n    return adaptor;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}