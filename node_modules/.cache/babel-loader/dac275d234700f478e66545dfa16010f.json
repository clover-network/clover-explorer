{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport { ActivityIndicator, Animated, Text, View } from 'react-native';\nimport Icon from '../icon';\nimport { WithTheme } from '../style';\nimport ToastStyles from './style/index';\n\nvar ToastContainer = function (_React$Component) {\n  _inherits(ToastContainer, _React$Component);\n\n  function ToastContainer(props) {\n    _classCallCheck(this, ToastContainer);\n\n    var _this = _possibleConstructorReturn(this, (ToastContainer.__proto__ || Object.getPrototypeOf(ToastContainer)).call(this, props));\n\n    _this.state = {\n      fadeAnim: new Animated.Value(0)\n    };\n    return _this;\n  }\n\n  _createClass(ToastContainer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _props = this.props,\n          onClose = _props.onClose,\n          onAnimationEnd = _props.onAnimationEnd;\n      var duration = this.props.duration;\n      var timing = Animated.timing;\n\n      if (this.anim) {\n        this.anim = null;\n      }\n\n      var animArr = [timing(this.state.fadeAnim, {\n        toValue: 1,\n        duration: 200,\n        useNativeDriver: true\n      }), Animated.delay(duration * 1000)];\n\n      if (duration > 0) {\n        animArr.push(timing(this.state.fadeAnim, {\n          toValue: 0,\n          duration: 200,\n          useNativeDriver: true\n        }));\n      }\n\n      this.anim = Animated.sequence(animArr);\n      this.anim.start(function () {\n        if (duration > 0) {\n          _this2.anim = null;\n\n          if (onClose) {\n            onClose();\n          }\n\n          if (onAnimationEnd) {\n            onAnimationEnd();\n          }\n        }\n      });\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.anim) {\n        this.anim.stop();\n        this.anim = null;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _props2 = this.props,\n          _props2$type = _props2.type,\n          type = _props2$type === undefined ? '' : _props2$type,\n          content = _props2.content,\n          mask = _props2.mask;\n      return React.createElement(WithTheme, {\n        styles: this.props.styles,\n        themeStyles: ToastStyles\n      }, function (styles) {\n        var iconType = {\n          success: 'check-circle',\n          fail: 'close-circle',\n          offline: 'frown'\n        };\n        var iconDom = null;\n\n        if (type === 'loading') {\n          iconDom = React.createElement(ActivityIndicator, {\n            animating: true,\n            style: [styles.centering],\n            color: 'white',\n            size: 'large'\n          });\n        } else if (type === 'info') {\n          iconDom = null;\n        } else {\n          iconDom = React.createElement(Icon, {\n            name: iconType[type],\n            style: styles.image,\n            color: 'white',\n            size: 36\n          });\n        }\n\n        return React.createElement(View, {\n          style: [styles.container],\n          pointerEvents: mask ? undefined : 'box-none'\n        }, React.createElement(View, {\n          style: [styles.innerContainer]\n        }, React.createElement(Animated.View, {\n          style: {\n            opacity: _this3.state.fadeAnim\n          }\n        }, React.createElement(View, {\n          style: [styles.innerWrap, iconDom ? styles.iconToast : styles.textToast]\n        }, iconDom, React.createElement(Text, {\n          style: styles.content\n        }, content)))));\n      });\n    }\n  }]);\n\n  return ToastContainer;\n}(React.Component);\n\nexport default ToastContainer;\nToastContainer.defaultProps = {\n  duration: 3,\n  mask: true,\n  onClose: function onClose() {}\n};","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@ant-design/react-native/es/toast/ToastContainer.js"],"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","ActivityIndicator","Animated","Text","View","Icon","WithTheme","ToastStyles","ToastContainer","_React$Component","props","_this","__proto__","Object","getPrototypeOf","call","state","fadeAnim","Value","key","value","componentDidMount","_this2","_props","onClose","onAnimationEnd","duration","timing","anim","animArr","toValue","useNativeDriver","delay","push","sequence","start","componentWillUnmount","stop","render","_this3","_props2","_props2$type","type","undefined","content","mask","createElement","styles","themeStyles","iconType","success","fail","offline","iconDom","animating","style","centering","color","size","name","image","container","pointerEvents","innerContainer","opacity","innerWrap","iconToast","textToast","Component","defaultProps"],"mappings":"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","sourcesContent":["import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport { ActivityIndicator, Animated, Text, View } from 'react-native';\nimport Icon from '../icon';\nimport { WithTheme } from '../style';\nimport ToastStyles from './style/index';\n\nvar ToastContainer = function (_React$Component) {\n    _inherits(ToastContainer, _React$Component);\n\n    function ToastContainer(props) {\n        _classCallCheck(this, ToastContainer);\n\n        var _this = _possibleConstructorReturn(this, (ToastContainer.__proto__ || Object.getPrototypeOf(ToastContainer)).call(this, props));\n\n        _this.state = {\n            fadeAnim: new Animated.Value(0)\n        };\n        return _this;\n    }\n\n    _createClass(ToastContainer, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var _this2 = this;\n\n            var _props = this.props,\n                onClose = _props.onClose,\n                onAnimationEnd = _props.onAnimationEnd;\n\n            var duration = this.props.duration;\n            var timing = Animated.timing;\n            if (this.anim) {\n                this.anim = null;\n            }\n            var animArr = [timing(this.state.fadeAnim, {\n                toValue: 1,\n                duration: 200,\n                useNativeDriver: true\n            }), Animated.delay(duration * 1000)];\n            if (duration > 0) {\n                animArr.push(timing(this.state.fadeAnim, {\n                    toValue: 0,\n                    duration: 200,\n                    useNativeDriver: true\n                }));\n            }\n            this.anim = Animated.sequence(animArr);\n            this.anim.start(function () {\n                if (duration > 0) {\n                    _this2.anim = null;\n                    if (onClose) {\n                        onClose();\n                    }\n                    if (onAnimationEnd) {\n                        onAnimationEnd();\n                    }\n                }\n            });\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            if (this.anim) {\n                this.anim.stop();\n                this.anim = null;\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this3 = this;\n\n            var _props2 = this.props,\n                _props2$type = _props2.type,\n                type = _props2$type === undefined ? '' : _props2$type,\n                content = _props2.content,\n                mask = _props2.mask;\n\n            return React.createElement(\n                WithTheme,\n                { styles: this.props.styles, themeStyles: ToastStyles },\n                function (styles) {\n                    var iconType = {\n                        success: 'check-circle',\n                        fail: 'close-circle',\n                        offline: 'frown'\n                    };\n                    var iconDom = null;\n                    if (type === 'loading') {\n                        iconDom = React.createElement(ActivityIndicator, { animating: true, style: [styles.centering], color: 'white', size: 'large' });\n                    } else if (type === 'info') {\n                        iconDom = null;\n                    } else {\n                        iconDom = React.createElement(Icon, { name: iconType[type], style: styles.image, color: 'white', size: 36 });\n                    }\n                    return React.createElement(\n                        View,\n                        { style: [styles.container], pointerEvents: mask ? undefined : 'box-none' },\n                        React.createElement(\n                            View,\n                            { style: [styles.innerContainer] },\n                            React.createElement(\n                                Animated.View,\n                                { style: { opacity: _this3.state.fadeAnim } },\n                                React.createElement(\n                                    View,\n                                    { style: [styles.innerWrap, iconDom ? styles.iconToast : styles.textToast] },\n                                    iconDom,\n                                    React.createElement(\n                                        Text,\n                                        { style: styles.content },\n                                        content\n                                    )\n                                )\n                            )\n                        )\n                    );\n                }\n            );\n        }\n    }]);\n\n    return ToastContainer;\n}(React.Component);\n\nexport default ToastContainer;\n\nToastContainer.defaultProps = {\n    duration: 3,\n    mask: true,\n    onClose: function onClose() {}\n};"]},"metadata":{},"sourceType":"module"}