{"ast":null,"code":"function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar TreeLayout = require('./layout/base');\n\nvar indentedTree = require('./layout/indented');\n\nvar separateTree = require('./layout/separate-root');\n\nvar util = require('./util');\n\nvar VALID_DIRECTIONS = ['LR', // left to right\n'RL', // right to left\n'H' // horizontal\n];\nvar DEFAULT_DIRECTION = VALID_DIRECTIONS[0];\n\nvar IndentedLayout = /*#__PURE__*/function (_TreeLayout) {\n  _inheritsLoose(IndentedLayout, _TreeLayout);\n\n  function IndentedLayout() {\n    return _TreeLayout.apply(this, arguments) || this;\n  }\n\n  var _proto = IndentedLayout.prototype;\n\n  _proto.execute = function execute() {\n    var me = this;\n    var options = me.options;\n    var root = me.rootNode;\n    options.isHorizontal = true; // default indent 20 and sink first children;\n\n    var _options$indent = options.indent,\n        indent = _options$indent === void 0 ? 20 : _options$indent,\n        _options$dropCap = options.dropCap,\n        dropCap = _options$dropCap === void 0 ? true : _options$dropCap;\n    var direction = options.direction || DEFAULT_DIRECTION;\n\n    if (direction && VALID_DIRECTIONS.indexOf(direction) === -1) {\n      throw new TypeError(\"Invalid direction: \" + direction);\n    }\n\n    if (direction === VALID_DIRECTIONS[0]) {\n      // LR\n      indentedTree(root, indent, dropCap);\n    } else if (direction === VALID_DIRECTIONS[1]) {\n      // RL\n      indentedTree(root, indent, dropCap);\n      root.right2left();\n    } else if (direction === VALID_DIRECTIONS[2]) {\n      // H\n      // separate into left and right trees\n      var _separateTree = separateTree(root, options),\n          left = _separateTree.left,\n          right = _separateTree.right;\n\n      indentedTree(left, indent, dropCap);\n      left.right2left();\n      indentedTree(right, indent, dropCap);\n      var bbox = left.getBoundingBox();\n      right.translate(bbox.width, 0);\n      root.x = right.x - root.width / 2;\n    }\n\n    return root;\n  };\n\n  return IndentedLayout;\n}(TreeLayout);\n\nvar DEFAULT_OPTIONS = {};\n\nfunction indentedLayout(root, options) {\n  options = util.assign({}, DEFAULT_OPTIONS, options);\n  return new IndentedLayout(root, options).execute();\n}\n\nmodule.exports = indentedLayout;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@antv/hierarchy/lib/indented.js"],"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","TreeLayout","require","indentedTree","separateTree","util","VALID_DIRECTIONS","DEFAULT_DIRECTION","IndentedLayout","_TreeLayout","apply","arguments","_proto","execute","me","options","root","rootNode","isHorizontal","_options$indent","indent","_options$dropCap","dropCap","direction","indexOf","TypeError","right2left","_separateTree","left","right","bbox","getBoundingBox","translate","width","x","DEFAULT_OPTIONS","indentedLayout","assign","module","exports"],"mappings":"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","sourcesContent":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar TreeLayout = require('./layout/base');\n\nvar indentedTree = require('./layout/indented');\n\nvar separateTree = require('./layout/separate-root');\n\nvar util = require('./util');\n\nvar VALID_DIRECTIONS = ['LR', // left to right\n'RL', // right to left\n'H' // horizontal\n];\nvar DEFAULT_DIRECTION = VALID_DIRECTIONS[0];\n\nvar IndentedLayout = /*#__PURE__*/function (_TreeLayout) {\n  _inheritsLoose(IndentedLayout, _TreeLayout);\n\n  function IndentedLayout() {\n    return _TreeLayout.apply(this, arguments) || this;\n  }\n\n  var _proto = IndentedLayout.prototype;\n\n  _proto.execute = function execute() {\n    var me = this;\n    var options = me.options;\n    var root = me.rootNode;\n    options.isHorizontal = true; // default indent 20 and sink first children;\n\n    var _options$indent = options.indent,\n        indent = _options$indent === void 0 ? 20 : _options$indent,\n        _options$dropCap = options.dropCap,\n        dropCap = _options$dropCap === void 0 ? true : _options$dropCap;\n    var direction = options.direction || DEFAULT_DIRECTION;\n\n    if (direction && VALID_DIRECTIONS.indexOf(direction) === -1) {\n      throw new TypeError(\"Invalid direction: \" + direction);\n    }\n\n    if (direction === VALID_DIRECTIONS[0]) {\n      // LR\n      indentedTree(root, indent, dropCap);\n    } else if (direction === VALID_DIRECTIONS[1]) {\n      // RL\n      indentedTree(root, indent, dropCap);\n      root.right2left();\n    } else if (direction === VALID_DIRECTIONS[2]) {\n      // H\n      // separate into left and right trees\n      var _separateTree = separateTree(root, options),\n          left = _separateTree.left,\n          right = _separateTree.right;\n\n      indentedTree(left, indent, dropCap);\n      left.right2left();\n      indentedTree(right, indent, dropCap);\n      var bbox = left.getBoundingBox();\n      right.translate(bbox.width, 0);\n      root.x = right.x - root.width / 2;\n    }\n\n    return root;\n  };\n\n  return IndentedLayout;\n}(TreeLayout);\n\nvar DEFAULT_OPTIONS = {};\n\nfunction indentedLayout(root, options) {\n  options = util.assign({}, DEFAULT_OPTIONS, options);\n  return new IndentedLayout(root, options).execute();\n}\n\nmodule.exports = indentedLayout;"]},"metadata":{},"sourceType":"script"}