{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { Action } from '@antv/g2/lib/interaction';\nimport { getDelegationObject } from '@antv/g2/lib/interaction/action/util';\nimport { each, get, isFunction, isString } from '@antv/util';\nimport { adapteStyle, setStatisticContainerStyle } from '../../../utils/statistic';\n/**\n * Pie 中心文本事件的 Action\n */\n\nvar StatisticAction =\n/** @class */\nfunction (_super) {\n  __extends(StatisticAction, _super);\n\n  function StatisticAction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  StatisticAction.prototype.getAnnotations = function () {\n    var view = this.context.view; // @ts-ignore\n\n    return view.getController('annotation').option;\n  };\n\n  StatisticAction.prototype.getInitialAnnotation = function () {\n    return this.initialAnnotation;\n  };\n\n  StatisticAction.prototype.init = function () {\n    var _this = this;\n\n    var view = this.context.view;\n    view.removeInteraction('tooltip');\n    view.on('afterchangesize', function () {\n      var annotations = _this.getAnnotations();\n\n      _this.initialAnnotation = annotations;\n    });\n  };\n\n  StatisticAction.prototype.change = function () {\n    var _a = this.context,\n        view = _a.view,\n        event = _a.event;\n    var annotations = this.getAnnotations();\n\n    if (!this.initialAnnotation) {\n      this.initialAnnotation = annotations;\n    }\n\n    var data = ((event === null || event === void 0 ? void 0 : event.data) || {}).data;\n\n    if (event.type.match('legend-item')) {\n      var delegateObject = getDelegationObject(this.context); // @ts-ignore\n\n      var colorField_1 = view.getGroupedFields()[0];\n\n      if (delegateObject && colorField_1) {\n        var item_1 = delegateObject.item;\n        data = view.getData().find(function (d) {\n          return d[colorField_1] === item_1.value;\n        });\n      }\n    }\n\n    if (data) {\n      var annotationController_1 = view.getController('annotation');\n      annotationController_1.clear(true); // @ts-ignore\n\n      var _b = view.getScaleFields(),\n          angleField_1 = _b[1],\n          colorField_2 = _b[2];\n\n      var angleScale_1 = view.getScaleByField(angleField_1);\n      var colorScale_1 = view.getScaleByField(colorField_2);\n      var annotationOptions_1 = annotations.filter(function (a) {\n        return !get(a, 'key', '').match('statistic');\n      });\n      var statisticOptions = annotations.filter(function (a) {\n        return get(a, 'key', '').match('statistic');\n      });\n      var titleOpt_1 = statisticOptions.filter(function (opt) {\n        return opt.key === 'top-statistic';\n      });\n      var contentOpt_1 = statisticOptions.filter(function (opt) {\n        return opt.key === 'bottom-statistic';\n      });\n      each(statisticOptions, function (option) {\n        var text;\n        var transform;\n\n        if (option.key === 'top-statistic') {\n          text = colorScale_1 ? colorScale_1.getText(data[colorField_2]) : null;\n          transform = contentOpt_1 ? 'translate(-50%, -100%)' : 'translate(-50%, -50%)';\n        } else {\n          text = angleScale_1 ? angleScale_1.getText(data[angleField_1]) : data[angleField_1];\n          transform = titleOpt_1 ? 'translate(-50%, 0)' : 'translate(-50%,-50%)';\n        }\n\n        annotationOptions_1.push(__assign(__assign({}, option), {\n          html: function (container, view) {\n            var coordinate = view.getCoordinate();\n            var containerWidth = coordinate.getRadius() * coordinate.innerRadius * 2;\n            var style = isFunction(option.style) ? option.style() : option.style;\n            setStatisticContainerStyle(container, __assign({\n              width: containerWidth + \"px\",\n              transform: transform\n            }, adapteStyle(style)));\n            var filteredData = view.getData();\n\n            if (option.customHtml) {\n              return option.customHtml(container, view, data, filteredData);\n            }\n\n            if (option.formatter) {\n              text = option.formatter(data, filteredData);\n            } // todo G2 层修复可以返回空字符串 & G2 层修复允许返回非字符串的内容，比如数值 number\n\n\n            return text ? isString(text) ? text : \"\" + text : '<div></div>';\n          }\n        }));\n        annotationOptions_1.forEach(function (opt) {\n          // @ts-ignore\n          annotationController_1.annotation(opt);\n        });\n        view.render(true);\n      });\n    }\n  };\n\n  StatisticAction.prototype.reset = function () {\n    var view = this.context.view;\n    var annotationController = view.getController('annotation');\n    annotationController.clear(true);\n    var initialStatistic = this.getInitialAnnotation();\n    each(initialStatistic, function (a) {\n      view.annotation()[a.type](a);\n    });\n    view.render(true);\n  };\n\n  return StatisticAction;\n}(Action);\n\nexport { StatisticAction };","map":{"version":3,"sources":["../../../../src/plots/pie/interactions/pie-statistic-action.ts"],"names":[],"mappings":";AAAA,SAAS,MAAT,QAAuB,0BAAvB;AAEA,SAAS,mBAAT,QAAoC,sCAApC;AACA,SAAS,IAAT,EAAe,GAAf,EAAoB,UAApB,EAAgC,QAAhC,QAAgD,YAAhD;AACA,SAAS,WAAT,EAAsB,0BAAtB,QAAwD,0BAAxD;AAEA;;AAEG;;AACH,IAAA,eAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqC,EAAA,SAAA,CAAA,eAAA,EAAA,MAAA,CAAA;;AAArC,WAAA,eAAA,GAAA;;AA4GC;;AAzGS,EAAA,eAAA,CAAA,SAAA,CAAA,cAAA,GAAR,YAAA;AACE,QAAM,IAAI,GAAG,KAAK,OAAL,CAAa,IAA1B,CADF,CAEE;;AACA,WAAO,IAAI,CAAC,aAAL,CAAmB,YAAnB,EAAiC,MAAxC;AACD,GAJO;;AAMA,EAAA,eAAA,CAAA,SAAA,CAAA,oBAAA,GAAR,YAAA;AACE,WAAO,KAAK,iBAAZ;AACD,GAFO;;AAIR,EAAA,eAAA,CAAA,SAAA,CAAA,IAAA,GAAA,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACU,QAAA,IAAI,GAAK,KAAK,OAAL,CAAL,IAAJ;AACR,IAAA,IAAI,CAAC,iBAAL,CAAuB,SAAvB;AAEA,IAAA,IAAI,CAAC,EAAL,CAAQ,iBAAR,EAA2B,YAAA;AACzB,UAAM,WAAW,GAAG,KAAI,CAAC,cAAL,EAApB;;AACA,MAAA,KAAI,CAAC,iBAAL,GAAyB,WAAzB;AACD,KAHD;AAID,GARD;;AAUO,EAAA,eAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACQ,QAAA,EAAA,GAAkB,KAAK,OAAvB;AAAA,QAAE,IAAI,GAAA,EAAA,CAAA,IAAN;AAAA,QAAQ,KAAK,GAAA,EAAA,CAAA,KAAb;AACN,QAAM,WAAW,GAAG,KAAK,cAAL,EAApB;;AACA,QAAI,CAAC,KAAK,iBAAV,EAA6B;AAC3B,WAAK,iBAAL,GAAyB,WAAzB;AACD;;AAEK,QAAA,IAAI,GAAK,CAAA,CAAA,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAK,KAAA,CAAL,GAAA,KAAK,CAAE,IAAP,KAAe,EAAf,EAAL,IAAJ;;AACN,QAAI,KAAK,CAAC,IAAN,CAAW,KAAX,CAAiB,aAAjB,CAAJ,EAAqC;AACnC,UAAM,cAAc,GAAG,mBAAmB,CAAC,KAAK,OAAN,CAA1C,CADmC,CAEnC;;AACA,UAAM,YAAU,GAAG,IAAI,CAAC,gBAAL,GAAwB,CAAxB,CAAnB;;AACA,UAAI,cAAc,IAAI,YAAtB,EAAkC;AACxB,YAAA,MAAI,GAAK,cAAc,CAAnB,IAAJ;AACR,QAAA,IAAI,GAAG,IAAI,CAAC,OAAL,GAAe,IAAf,CAAoB,UAAC,CAAD,EAAE;AAAK,iBAAA,CAAC,CAAC,YAAD,CAAD,KAAkB,MAAI,CAAtB,KAAA;AAA4B,SAAvD,CAAP;AACD;AACF;;AAED,QAAI,IAAJ,EAAU;AACR,UAAM,sBAAoB,GAAG,IAAI,CAAC,aAAL,CAAmB,YAAnB,CAA7B;AACA,MAAA,sBAAoB,CAAC,KAArB,CAA2B,IAA3B,EAFQ,CAGR;;AACM,UAAA,EAAA,GAA6B,IAAI,CAAC,cAAL,EAA7B;AAAA,UAAG,YAAU,GAAA,EAAA,CAAA,CAAA,CAAb;AAAA,UAAe,YAAU,GAAA,EAAA,CAAA,CAAA,CAAzB;;AACN,UAAM,YAAU,GAAG,IAAI,CAAC,eAAL,CAAqB,YAArB,CAAnB;AACA,UAAM,YAAU,GAAG,IAAI,CAAC,eAAL,CAAqB,YAArB,CAAnB;AAEA,UAAM,mBAAiB,GAAG,WAAW,CAAC,MAAZ,CAAmB,UAAC,CAAD,EAAE;AAAK,eAAA,CAAC,GAAG,CAAC,CAAD,EAAI,KAAJ,EAAW,EAAX,CAAH,CAAkB,KAAlB,CAAD,WAAC,CAAD;AAAqC,OAA/D,CAA1B;AACA,UAAM,gBAAgB,GAAG,WAAW,CAAC,MAAZ,CAAmB,UAAC,CAAD,EAAE;AAAK,eAAA,GAAG,CAAC,CAAD,EAAI,KAAJ,EAAW,EAAX,CAAH,CAAkB,KAAlB,CAAA,WAAA,CAAA;AAAoC,OAA9D,CAAzB;AAEA,UAAM,UAAQ,GAAG,gBAAgB,CAAC,MAAjB,CAAwB,UAAC,GAAD,EAAS;AAAK,eAAA,GAAG,CAAC,GAAJ,KAAA,eAAA;AAA2B,OAAjE,CAAjB;AACA,UAAM,YAAU,GAAG,gBAAgB,CAAC,MAAjB,CAAwB,UAAC,GAAD,EAAS;AAAK,eAAA,GAAG,CAAC,GAAJ,KAAA,kBAAA;AAA8B,OAApE,CAAnB;AACA,MAAA,IAAI,CAAC,gBAAD,EAAmB,UAAC,MAAD,EAAO;AAC5B,YAAI,IAAJ;AACA,YAAI,SAAJ;;AACA,YAAI,MAAM,CAAC,GAAP,KAAe,eAAnB,EAAoC;AAClC,UAAA,IAAI,GAAG,YAAU,GAAG,YAAU,CAAC,OAAX,CAAmB,IAAI,CAAC,YAAD,CAAvB,CAAH,GAA0C,IAA3D;AACA,UAAA,SAAS,GAAG,YAAU,GAAG,wBAAH,GAA8B,uBAApD;AACD,SAHD,MAGO;AACL,UAAA,IAAI,GAAG,YAAU,GAAG,YAAU,CAAC,OAAX,CAAmB,IAAI,CAAC,YAAD,CAAvB,CAAH,GAA0C,IAAI,CAAC,YAAD,CAA/D;AACA,UAAA,SAAS,GAAG,UAAQ,GAAG,oBAAH,GAA0B,sBAA9C;AACD;;AAED,QAAA,mBAAiB,CAAC,IAAlB,CAAsB,QAAA,CAAA,QAAA,CAAA,EAAA,EACjB,MADiB,CAAA,EACX;AACT,UAAA,IAAI,EAAE,UAAC,SAAD,EAAY,IAAZ,EAAgB;AACpB,gBAAM,UAAU,GAAG,IAAI,CAAC,aAAL,EAAnB;AACA,gBAAM,cAAc,GAAG,UAAU,CAAC,SAAX,KAAyB,UAAU,CAAC,WAApC,GAAkD,CAAzE;AAEA,gBAAM,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC,KAAR,CAAV,GAA2B,MAAM,CAAC,KAAP,EAA3B,GAA4C,MAAM,CAAC,KAAjE;AACA,YAAA,0BAA0B,CAAC,SAAD,EAAU,QAAA,CAAA;AAClC,cAAA,KAAK,EAAK,cAAc,GAAA,IADU;AAElC,cAAA,SAAS,EAAA;AAFyB,aAAA,EAI/B,WAAW,CAAC,KAAD,CAJoB,CAAV,CAA1B;AAMA,gBAAM,YAAY,GAAG,IAAI,CAAC,OAAL,EAArB;;AACA,gBAAI,MAAM,CAAC,UAAX,EAAuB;AACrB,qBAAO,MAAM,CAAC,UAAP,CAAkB,SAAlB,EAA6B,IAA7B,EAAmC,IAAnC,EAAyC,YAAzC,CAAP;AACD;;AACD,gBAAI,MAAM,CAAC,SAAX,EAAsB;AACpB,cAAA,IAAI,GAAG,MAAM,CAAC,SAAP,CAAiB,IAAjB,EAAuB,YAAvB,CAAP;AACD,aAjBmB,CAkBpB;;;AACA,mBAAO,IAAI,GAAI,QAAQ,CAAC,IAAD,CAAR,GAAiB,IAAjB,GAAwB,KAAG,IAA/B,GAAyC,aAApD;AACD;AArBQ,SADW,CAAtB;AAwBA,QAAA,mBAAiB,CAAC,OAAlB,CAA0B,UAAC,GAAD,EAAI;AAC5B;AACA,UAAA,sBAAoB,CAAC,UAArB,CAAgC,GAAhC;AACD,SAHD;AAIA,QAAA,IAAI,CAAC,MAAL,CAAY,IAAZ;AACD,OAxCG,CAAJ;AAyCD;AACF,GAzEM;;AA2EA,EAAA,eAAA,CAAA,SAAA,CAAA,KAAA,GAAP,YAAA;AACU,QAAA,IAAI,GAAK,KAAK,OAAL,CAAL,IAAJ;AACR,QAAM,oBAAoB,GAAG,IAAI,CAAC,aAAL,CAAmB,YAAnB,CAA7B;AACA,IAAA,oBAAoB,CAAC,KAArB,CAA2B,IAA3B;AACA,QAAM,gBAAgB,GAAG,KAAK,oBAAL,EAAzB;AACA,IAAA,IAAI,CAAC,gBAAD,EAAmB,UAAC,CAAD,EAAE;AACvB,MAAA,IAAI,CAAC,UAAL,GAAkB,CAAC,CAAC,IAApB,EAA0B,CAA1B;AACD,KAFG,CAAJ;AAGA,IAAA,IAAI,CAAC,MAAL,CAAY,IAAZ;AACD,GATM;;AAUT,SAAA,eAAA;AAAC,CA5GD,CAAqC,MAArC,CAAA","sourcesContent":["import { Action } from '@antv/g2/lib/interaction';\nimport { ComponentOption } from '@antv/g2/lib/interface';\nimport { getDelegationObject } from '@antv/g2/lib/interaction/action/util';\nimport { each, get, isFunction, isString } from '@antv/util';\nimport { adapteStyle, setStatisticContainerStyle } from '../../../utils/statistic';\n\n/**\n * Pie 中心文本事件的 Action\n */\nexport class StatisticAction extends Action {\n  private initialAnnotation;\n\n  private getAnnotations(): object[] {\n    const view = this.context.view;\n    // @ts-ignore\n    return view.getController('annotation').option;\n  }\n\n  private getInitialAnnotation(): ComponentOption[] | null {\n    return this.initialAnnotation;\n  }\n\n  init() {\n    const { view } = this.context;\n    view.removeInteraction('tooltip');\n\n    view.on('afterchangesize', () => {\n      const annotations = this.getAnnotations();\n      this.initialAnnotation = annotations;\n    });\n  }\n\n  public change() {\n    const { view, event } = this.context;\n    const annotations = this.getAnnotations();\n    if (!this.initialAnnotation) {\n      this.initialAnnotation = annotations;\n    }\n\n    let { data } = event?.data || {};\n    if (event.type.match('legend-item')) {\n      const delegateObject = getDelegationObject(this.context);\n      // @ts-ignore\n      const colorField = view.getGroupedFields()[0];\n      if (delegateObject && colorField) {\n        const { item } = delegateObject;\n        data = view.getData().find((d) => d[colorField] === item.value);\n      }\n    }\n\n    if (data) {\n      const annotationController = view.getController('annotation');\n      annotationController.clear(true);\n      // @ts-ignore\n      const [, angleField, colorField] = view.getScaleFields();\n      const angleScale = view.getScaleByField(angleField);\n      const colorScale = view.getScaleByField(colorField);\n\n      const annotationOptions = annotations.filter((a) => !get(a, 'key', '').match('statistic'));\n      const statisticOptions = annotations.filter((a) => get(a, 'key', '').match('statistic'));\n\n      const titleOpt = statisticOptions.filter((opt: any) => opt.key === 'top-statistic');\n      const contentOpt = statisticOptions.filter((opt: any) => opt.key === 'bottom-statistic');\n      each(statisticOptions, (option) => {\n        let text;\n        let transform;\n        if (option.key === 'top-statistic') {\n          text = colorScale ? colorScale.getText(data[colorField]) : null;\n          transform = contentOpt ? 'translate(-50%, -100%)' : 'translate(-50%, -50%)';\n        } else {\n          text = angleScale ? angleScale.getText(data[angleField]) : data[angleField];\n          transform = titleOpt ? 'translate(-50%, 0)' : 'translate(-50%,-50%)';\n        }\n\n        annotationOptions.push({\n          ...option,\n          html: (container, view) => {\n            const coordinate = view.getCoordinate();\n            const containerWidth = coordinate.getRadius() * coordinate.innerRadius * 2;\n\n            const style = isFunction(option.style) ? option.style() : option.style;\n            setStatisticContainerStyle(container, {\n              width: `${containerWidth}px`,\n              transform,\n              // user's style setting has high priority\n              ...adapteStyle(style),\n            });\n            const filteredData = view.getData();\n            if (option.customHtml) {\n              return option.customHtml(container, view, data, filteredData);\n            }\n            if (option.formatter) {\n              text = option.formatter(data, filteredData);\n            }\n            // todo G2 层修复可以返回空字符串 & G2 层修复允许返回非字符串的内容，比如数值 number\n            return text ? (isString(text) ? text : `${text}`) : '<div></div>';\n          },\n        });\n        annotationOptions.forEach((opt) => {\n          // @ts-ignore\n          annotationController.annotation(opt);\n        });\n        view.render(true);\n      });\n    }\n  }\n\n  public reset() {\n    const { view } = this.context;\n    const annotationController = view.getController('annotation');\n    annotationController.clear(true);\n    const initialStatistic = this.getInitialAnnotation();\n    each(initialStatistic, (a) => {\n      view.annotation()[a.type](a);\n    });\n    view.render(true);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}