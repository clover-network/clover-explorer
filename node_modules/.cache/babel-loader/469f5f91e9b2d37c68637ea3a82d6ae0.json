{"ast":null,"code":"var _jsxFileName = \"/Users/wanglijie/wanglijie/clover-defi-wallet/src/pages/AssetsMDetails/index.tsx\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Text } from 'rebass';\nimport AppBody from '../AppBody';\nimport { AutoColumn } from '../../components/Column';\nimport { RowBetween } from '../../components/Row';\nimport CloseBtn from \"../../assets/images/closeBtn.svg\"; // import { ResponsivePie } from '@nivo/pie';\n// import { ResponsiveLine } from '@nivo/line';\n// import { ResponsiveBar } from \"@nivo/bar\";\n// import { getOrdinalColorScale } from '@nivo/colors';\n\nimport { PieChart, Pie, Cell, Sector } from 'recharts';\nconst BodyWrapper = styled(AutoColumn)`\n`;\nconst HeadContainer = styled(RowBetween)`\n  margin-top: 50px;\n  padding: 0 20px;\n  height: 44px;\n`;\nconst PieChartWrapper = styled.div`\n  //margin: 20px 0;\n  height: 250px;\n  display: flex;\n  justify-content: center;\n`;\nconst LineChartWrapper = styled.div`\n  margin: 0 30px;\n  height: 250px;\n  background: linear-gradient(180deg,#FFFFFF 0%, #FFF6FA 50%, #FFFFFF 100%);\n  border-radius: 15px;\n`;\nconst BarChartWrapper = styled.div`\n  position: relative;\n  margin: 20px 30px;\n  height: 220px;\n  background: linear-gradient(180deg, #FFFFFF 0%, #EFFBFF 50%, #FFFFFF 100%);\n  border-radius: 15px;\n`;\nexport default class AssetsMDetail extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.goBack = () => {\n      this.props.history.goBack();\n    };\n\n    this.state = {\n      activeIndex: 0\n    };\n  }\n\n  render() {\n    const pieData = [{\n      \"id\": \"Total assets\",\n      \"label\": \"Total assets\",\n      \"value\": 75,\n      \"color\": \"#FF7D30\"\n    }, {\n      \"id\": \"Total liabilities\",\n      \"label\": \"Total liabilities\",\n      \"value\": 25,\n      \"color\": \"#FF589D\"\n    }];\n    const pieInnerStyles = {\n      root: {\n        fontFamily: \"consolas, sans-serif\",\n        textAlign: \"center\",\n        position: \"relative\",\n        width: 600,\n        height: 600\n      },\n      overlay: {\n        height: 110,\n        width: 110,\n        borderRadius: '50%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        backgroundColor: '#ffffff',\n        boxShadow: '0px 5px 10px 2px rgba(255, 125, 48, 0.15)',\n        position: \"absolute\",\n        top: 200,\n        right: 133,\n        bottom: 0,\n        alignItems: \"center\"\n      },\n      number: {\n        color: \"#333333\",\n        fontSize: \"15px\",\n        fontWeight: 'bold'\n      },\n      text: {\n        color: \"#999999\",\n        fontSize: \"12px\",\n        fontWeight: \"normal\"\n      }\n    };\n    const lineData = [{\n      \"id\": \"Total liabilities\",\n      \"color\": \"#406AFE\",\n      \"data\": [{\n        \"x\": \"2020.07.20\",\n        \"y\": 50.00\n      }, {\n        \"x\": \"2020.08\",\n        \"y\": 100.00\n      }, {\n        \"x\": \"2020.08.10\",\n        \"y\": 400.00\n      }, {\n        \"x\": \"2020.08.20\",\n        \"y\": 150.00\n      }, {\n        \"x\": \"2020.09\",\n        \"y\": 490.00\n      }, {\n        \"x\": \"2020.09.10\",\n        \"y\": 300.00\n      }, {\n        \"x\": \"2020.09.20\",\n        \"y\": 200.00\n      }, {\n        \"x\": \"2020.10\",\n        \"y\": 300.00\n      }, {\n        \"x\": \"2020.10.10\",\n        \"y\": 500.00\n      }, {\n        \"x\": \"2020.10.20\",\n        \"y\": 890.00\n      }, {\n        \"x\": \"2020.11\",\n        \"y\": 450.00\n      }, {\n        \"x\": \"2020.11.10\",\n        \"y\": 500.00\n      }]\n    }, {\n      \"id\": \"NetAssets\",\n      \"color\": \"#FF71C5\",\n      \"data\": [{\n        \"x\": \"2020.07.20\",\n        \"y\": 100.00\n      }, {\n        \"x\": \"2020.08\",\n        \"y\": 200.00\n      }, {\n        \"x\": \"2020.08.10\",\n        \"y\": 500.00\n      }, {\n        \"x\": \"2020.08.20\",\n        \"y\": 350.00\n      }, {\n        \"x\": \"2020.09\",\n        \"y\": 590.00\n      }, {\n        \"x\": \"2020.09.10\",\n        \"y\": 400.00\n      }, {\n        \"x\": \"2020.09.20\",\n        \"y\": 300.00\n      }, {\n        \"x\": \"2020.10\",\n        \"y\": 400.00\n      }, {\n        \"x\": \"2020.10.10\",\n        \"y\": 600.00\n      }, {\n        \"x\": \"2020.10.20\",\n        \"y\": 790.00\n      }, {\n        \"x\": \"2020.11\",\n        \"y\": 550.00\n      }, {\n        \"x\": \"2020.11.10\",\n        \"y\": 600.00\n      }]\n    }, {\n      \"id\": \"TotalAssets\",\n      \"color\": \"#F6883B\",\n      \"data\": [{\n        \"x\": \"2020.07.20\",\n        \"y\": 200.00\n      }, {\n        \"x\": \"2020.08\",\n        \"y\": 300.00\n      }, {\n        \"x\": \"2020.08.10\",\n        \"y\": 600.00\n      }, {\n        \"x\": \"2020.08.20\",\n        \"y\": 450.00\n      }, {\n        \"x\": \"2020.09\",\n        \"y\": 790.00\n      }, {\n        \"x\": \"2020.09.10\",\n        \"y\": 600.00\n      }, {\n        \"x\": \"2020.09.20\",\n        \"y\": 500.00\n      }, {\n        \"x\": \"2020.10\",\n        \"y\": 600.00\n      }, {\n        \"x\": \"2020.10.10\",\n        \"y\": 800.00\n      }, {\n        \"x\": \"2020.10.20\",\n        \"y\": 990.00\n      }, {\n        \"x\": \"2020.11\",\n        \"y\": 750.00\n      }, {\n        \"x\": \"2020.11.10\",\n        \"y\": 800.00\n      }]\n    }];\n    const barData = [{\n      currency: 'CLV',\n      earnings: 25.03,\n      color: '#FF7D30'\n    }, {\n      currency: 'cETH',\n      earnings: 20.00,\n      color: '#FF71C5'\n    }, {\n      currency: 'ACA',\n      earnings: 15.00,\n      color: '#406AFE'\n    }, {\n      currency: 'aUSD',\n      earnings: 10.00,\n      color: '#F6883B'\n    }, {\n      currency: 'bUSD',\n      earnings: -10.00,\n      color: '#FF71C5'\n    }, {\n      currency: 'cUSD',\n      earnings: -15.00,\n      color: '#FF7D30'\n    }];\n\n    const BarComponent = props => {\n      return /*#__PURE__*/React.createElement(\"g\", {\n        transform: `translate(${props.x},${props.y})`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"rect\", {\n        width: props.width,\n        height: props.height,\n        fill: props.color,\n        rx: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"text\", {\n        x: props.width + 5,\n        y: props.data.value > 0 ? -17 : props.height + 17,\n        textAnchor: \"end\",\n        dominantBaseline: \"central\",\n        fill: \"#666666\",\n        style: {\n          fontWeight: 400,\n          fontSize: 13\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }\n      }, props.data.value > 0 ? `+$${props.data.value}` : `-$${props.data.value * -1}`));\n    };\n\n    const barInnerStyles = {\n      overlay: {\n        width: 115,\n        height: 30,\n        display: 'flex',\n        flexDirection: 'row',\n        position: \"absolute\",\n        top: 0,\n        right: 0\n      },\n      span: {\n        width: '3px',\n        height: '100%',\n        backgroundColor: '#FF7D30',\n        marginRight: '5px'\n      },\n      divWrapper: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      number: {\n        color: \"#333333\",\n        fontSize: \"13px\"\n      },\n      text: {\n        color: \"#999999\",\n        textAlign: 'center',\n        fontSize: \"10px\",\n        lineHeight: '14px'\n      }\n    };\n    const data = [{\n      name: 'Group A',\n      value: 400\n    }, {\n      name: 'Group B',\n      value: 300\n    }];\n    const COLORS = ['#FF7D30', '#FF589D'];\n\n    const renderActiveShape = props => {\n      const RADIAN = Math.PI / 180;\n      const {\n        cx,\n        cy,\n        midAngle,\n        innerRadius,\n        outerRadius,\n        startAngle,\n        endAngle,\n        fill,\n        payload,\n        percent,\n        value\n      } = props;\n      const sin = Math.sin(-RADIAN * midAngle);\n      const cos = Math.cos(-RADIAN * midAngle);\n      const sx = cx + (outerRadius + 10) * cos;\n      const sy = cy + (outerRadius + 10) * sin;\n      const mx = cx + (outerRadius + 30) * cos;\n      const my = cy + (outerRadius + 30) * sin;\n      const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n      const ey = my;\n      const textAnchor = cos >= 0 ? 'start' : 'end';\n      return /*#__PURE__*/React.createElement(\"g\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"text\", {\n        x: cx,\n        y: cy,\n        dy: 8,\n        textAnchor: \"middle\",\n        fill: fill,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 21\n        }\n      }, payload.name), /*#__PURE__*/React.createElement(Sector, {\n        cx: cx,\n        cy: cy,\n        innerRadius: innerRadius,\n        outerRadius: outerRadius,\n        startAngle: startAngle,\n        endAngle: endAngle,\n        fill: fill,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Sector, {\n        cx: cx,\n        cy: cy,\n        startAngle: startAngle,\n        endAngle: endAngle,\n        innerRadius: outerRadius + 6,\n        outerRadius: outerRadius + 10,\n        fill: fill,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"path\", {\n        d: `M${sx},${sy}L${mx},${my}L${ex},${ey}`,\n        stroke: fill,\n        fill: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"circle\", {\n        cx: ex,\n        cy: ey,\n        r: 2,\n        fill: fill,\n        stroke: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"text\", {\n        x: ex + (cos >= 0 ? 1 : -1) * 12,\n        y: ey,\n        textAnchor: textAnchor,\n        fill: \"#333\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 21\n        }\n      }, `PV ${value}`), /*#__PURE__*/React.createElement(\"text\", {\n        x: ex + (cos >= 0 ? 1 : -1) * 12,\n        y: ey,\n        dy: 18,\n        textAnchor: textAnchor,\n        fill: \"#999\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 21\n        }\n      }, `(Rate ${(percent * 100).toFixed(2)}%)`));\n    };\n\n    const renderPieChart = /*#__PURE__*/React.createElement(PieChart, {\n      width: 200,\n      height: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Pie, {\n      data: pieData,\n      activeIndex: this.state.activeIndex,\n      activeShape: renderActiveShape // cx={120}\n      // cy={200}\n      ,\n      innerRadius: 68,\n      outerRadius: 80,\n      fill: \"#8884d8\",\n      startAngle: 90,\n      endAngle: -270,\n      paddingAngle: 5,\n      cornerRadius: 5,\n      dataKey: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 17\n      }\n    }, data.map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n      key: `cell-${index}`,\n      fill: COLORS[index % COLORS.length],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 52\n      }\n    }))));\n    return /*#__PURE__*/React.createElement(AppBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BodyWrapper, {\n      gap: 'md',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(HeadContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"23px\",\n      fontWeight: \"bold\",\n      color: \"#333333\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 25\n      }\n    }, \"Assets\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: CloseBtn,\n      alt: \"\",\n      width: \"15px\",\n      height: \"15px\",\n      onClick: this.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"18px\",\n      fontWeight: \"bold\",\n      color: \"#333333\",\n      marginLeft: \"25px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 21\n      }\n    }, \"Assets distribution\"), /*#__PURE__*/React.createElement(PieChartWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 21\n      }\n    }, renderPieChart)));\n  }\n\n}","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/src/pages/AssetsMDetails/index.tsx"],"names":["React","Component","styled","Text","AppBody","AutoColumn","RowBetween","PieChart","Pie","Cell","Sector","BodyWrapper","HeadContainer","PieChartWrapper","div","LineChartWrapper","BarChartWrapper","AssetsMDetail","constructor","props","context","goBack","history","state","activeIndex","render","pieData","pieInnerStyles","root","fontFamily","textAlign","position","width","height","overlay","borderRadius","display","flexDirection","justifyContent","backgroundColor","boxShadow","top","right","bottom","alignItems","number","color","fontSize","fontWeight","text","lineData","barData","currency","earnings","BarComponent","x","y","data","value","barInnerStyles","span","marginRight","divWrapper","lineHeight","name","COLORS","renderActiveShape","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","toFixed","renderPieChart","map","entry","index","length","CloseBtn"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport styled from 'styled-components'\nimport { Text } from 'rebass'\nimport AppBody from '../AppBody'\nimport Column, { AutoColumn, ColumnCenter } from '../../components/Column'\nimport Row, {RowBetween, RowEnd} from '../../components/Row'\nimport CloseBtn from '../../assets/images/closeBtn.svg'\n// import { ResponsivePie } from '@nivo/pie';\n// import { ResponsiveLine } from '@nivo/line';\n// import { ResponsiveBar } from \"@nivo/bar\";\n// import { getOrdinalColorScale } from '@nivo/colors';\nimport { LineChart, Line, PieChart, Pie, Cell, Tooltip, Sector } from 'recharts';\n\nconst BodyWrapper = styled(AutoColumn)`\n`;\n\nconst HeadContainer = styled(RowBetween)`\n  margin-top: 50px;\n  padding: 0 20px;\n  height: 44px;\n`;\n\nconst PieChartWrapper = styled.div`\n  //margin: 20px 0;\n  height: 250px;\n  display: flex;\n  justify-content: center;\n`;\n\nconst LineChartWrapper = styled.div`\n  margin: 0 30px;\n  height: 250px;\n  background: linear-gradient(180deg,#FFFFFF 0%, #FFF6FA 50%, #FFFFFF 100%);\n  border-radius: 15px;\n`;\n\nconst BarChartWrapper = styled.div`\n  position: relative;\n  margin: 20px 30px;\n  height: 220px;\n  background: linear-gradient(180deg, #FFFFFF 0%, #EFFBFF 50%, #FFFFFF 100%);\n  border-radius: 15px;\n`;\n\nexport default class AssetsMDetail extends Component<any, any> {\n    constructor(props: any, context: any) {\n        super(props, context);\n        this.state = {\n            activeIndex: 0,\n        };\n\n    }\n\n    goBack = () => {\n        this.props.history.goBack();\n    }\n    render() {\n        const pieData = [\n            {\n                \"id\": \"Total assets\",\n                \"label\": \"Total assets\",\n                \"value\": 75,\n                \"color\": \"#FF7D30\"\n            },\n            {\n                \"id\": \"Total liabilities\",\n                \"label\": \"Total liabilities\",\n                \"value\": 25,\n                \"color\": \"#FF589D\"\n            },\n        ];\n\n        const pieInnerStyles = {\n            root: {\n                fontFamily: \"consolas, sans-serif\",\n                textAlign: \"center\",\n                position: \"relative\",\n                width: 600,\n                height: 600,\n            },\n            overlay: {\n                height: 110,\n                width: 110,\n                borderRadius: '50%',\n                display: 'flex',\n                flexDirection: 'column' as 'column',\n                justifyContent: 'center' as 'center',\n                backgroundColor: '#ffffff',\n                boxShadow: '0px 5px 10px 2px rgba(255, 125, 48, 0.15)',\n                position: \"absolute\" as \"absolute\",\n                top: 200,\n                right: 133,\n                bottom: 0,\n                alignItems: \"center\" as \"center\",\n            },\n            number: {\n                color: \"#333333\",\n                fontSize: \"15px\",\n                fontWeight: 'bold' as 'bold'\n            },\n            text: {\n                color: \"#999999\",\n                fontSize: \"12px\",\n                fontWeight: \"normal\" as \"normal\"\n            }\n        };\n\n        const lineData = [\n            {\n                \"id\": \"Total liabilities\",\n                \"color\": \"#406AFE\",\n                \"data\": [\n                    {\n                        \"x\": \"2020.07.20\",\n                        \"y\": 50.00\n                    },\n                    {\n                        \"x\": \"2020.08\",\n                        \"y\": 100.00\n                    },\n                    {\n                        \"x\": \"2020.08.10\",\n                        \"y\": 400.00\n                    },\n                    {\n                        \"x\": \"2020.08.20\",\n                        \"y\": 150.00\n                    },\n                    {\n                        \"x\": \"2020.09\",\n                        \"y\": 490.00\n                    },\n                    {\n                        \"x\": \"2020.09.10\",\n                        \"y\": 300.00\n                    },\n                    {\n                        \"x\": \"2020.09.20\",\n                        \"y\": 200.00\n                    },\n                    {\n                        \"x\": \"2020.10\",\n                        \"y\": 300.00\n                    },\n                    {\n                        \"x\": \"2020.10.10\",\n                        \"y\": 500.00\n                    },\n                    {\n                        \"x\": \"2020.10.20\",\n                        \"y\": 890.00\n                    },\n                    {\n                        \"x\": \"2020.11\",\n                        \"y\": 450.00\n                    },\n                    {\n                        \"x\": \"2020.11.10\",\n                        \"y\": 500.00\n                    },\n                ]\n            },\n            {\n                \"id\": \"NetAssets\",\n                \"color\": \"#FF71C5\",\n                \"data\": [\n                    {\n                        \"x\": \"2020.07.20\",\n                        \"y\": 100.00\n                    },\n                    {\n                        \"x\": \"2020.08\",\n                        \"y\": 200.00\n                    },\n                    {\n                        \"x\": \"2020.08.10\",\n                        \"y\": 500.00\n                    },\n                    {\n                        \"x\": \"2020.08.20\",\n                        \"y\": 350.00\n                    },\n                    {\n                        \"x\": \"2020.09\",\n                        \"y\": 590.00\n                    },\n                    {\n                        \"x\": \"2020.09.10\",\n                        \"y\": 400.00\n                    },\n                    {\n                        \"x\": \"2020.09.20\",\n                        \"y\": 300.00\n                    },\n                    {\n                        \"x\": \"2020.10\",\n                        \"y\": 400.00\n                    },\n                    {\n                        \"x\": \"2020.10.10\",\n                        \"y\": 600.00\n                    },\n                    {\n                        \"x\": \"2020.10.20\",\n                        \"y\": 790.00\n                    },\n                    {\n                        \"x\": \"2020.11\",\n                        \"y\": 550.00\n                    },\n                    {\n                        \"x\": \"2020.11.10\",\n                        \"y\": 600.00\n                    },\n                ]\n            },\n            {\n                \"id\": \"TotalAssets\",\n                \"color\": \"#F6883B\",\n                \"data\": [\n                    {\n                        \"x\": \"2020.07.20\",\n                        \"y\": 200.00\n                    },\n                    {\n                        \"x\": \"2020.08\",\n                        \"y\": 300.00\n                    },\n                    {\n                        \"x\": \"2020.08.10\",\n                        \"y\": 600.00\n                    },\n                    {\n                        \"x\": \"2020.08.20\",\n                        \"y\": 450.00\n                    },\n                    {\n                        \"x\": \"2020.09\",\n                        \"y\": 790.00\n                    },\n                    {\n                        \"x\": \"2020.09.10\",\n                        \"y\": 600.00\n                    },\n                    {\n                        \"x\": \"2020.09.20\",\n                        \"y\": 500.00\n                    },\n                    {\n                        \"x\": \"2020.10\",\n                        \"y\": 600.00\n                    },\n                    {\n                        \"x\": \"2020.10.10\",\n                        \"y\": 800.00\n                    },\n                    {\n                        \"x\": \"2020.10.20\",\n                        \"y\": 990.00\n                    },\n                    {\n                        \"x\": \"2020.11\",\n                        \"y\": 750.00\n                    },\n                    {\n                        \"x\": \"2020.11.10\",\n                        \"y\": 800.00\n                    },\n                ]\n            },\n        ];\n\n        const barData = [\n            { currency: 'CLV', earnings: 25.03, color: '#FF7D30' },\n            { currency: 'cETH', earnings: 20.00, color: '#FF71C5' },\n            { currency: 'ACA', earnings: 15.00, color: '#406AFE' },\n            { currency: 'aUSD', earnings: 10.00, color: '#F6883B' },\n            { currency: 'bUSD', earnings: -10.00, color: '#FF71C5' },\n            { currency: 'cUSD', earnings: -15.00, color: '#FF7D30' }\n        ];\n\n        const BarComponent = (props: any) => {\n            return (\n                <g transform={`translate(${props.x},${props.y})`}>\n                    <rect\n                        width={props.width}\n                        height={props.height}\n                        fill={props.color}\n                        rx={1}\n                    />\n                    <text\n                        x={props.width + 5}\n                        y={props.data.value > 0 ? -17 : props.height + 17}\n                        textAnchor=\"end\"\n                        dominantBaseline=\"central\"\n                        fill='#666666'\n                        style={{\n                            fontWeight: 400,\n                            fontSize: 13,\n                        }}\n                    >\n                        {props.data.value > 0 ? `+$${props.data.value}` : `-$${props.data.value * -1}`}\n                    </text>\n                </g>\n            )\n        }\n\n        const barInnerStyles = {\n            overlay: {\n                width: 115,\n                height: 30,\n                display: 'flex',\n                flexDirection: 'row' as 'row',\n                position: \"absolute\" as \"absolute\",\n                top: 0,\n                right: 0,\n            },\n            span: {\n                width: '3px',\n                height: '100%',\n                backgroundColor: '#FF7D30',\n                marginRight: '5px'\n            },\n            divWrapper: {\n                display: 'flex',\n                flexDirection: 'column' as 'column',\n            },\n            number: {\n                color: \"#333333\",\n                fontSize: \"13px\",\n            },\n            text: {\n                color: \"#999999\",\n                textAlign: 'center' as 'center',\n                fontSize: \"10px\",\n                lineHeight: '14px',\n            }\n        };\n\n        const data = [\n            { name: 'Group A', value: 400 },\n            { name: 'Group B', value: 300 },\n        ];\n        const COLORS = ['#FF7D30', '#FF589D'];\n        const renderActiveShape = (props: any) => {\n            const RADIAN = Math.PI / 180;\n            const {\n                cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\n                fill, payload, percent, value,\n            } = props;\n            const sin = Math.sin(-RADIAN * midAngle);\n            const cos = Math.cos(-RADIAN * midAngle);\n            const sx = cx + (outerRadius + 10) * cos;\n            const sy = cy + (outerRadius + 10) * sin;\n            const mx = cx + (outerRadius + 30) * cos;\n            const my = cy + (outerRadius + 30) * sin;\n            const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n            const ey = my;\n            const textAnchor = cos >= 0 ? 'start' : 'end';\n\n            return (\n                <g>\n                    <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>{payload.name}</text>\n                    <Sector\n                        cx={cx}\n                        cy={cy}\n                        innerRadius={innerRadius}\n                        outerRadius={outerRadius}\n                        startAngle={startAngle}\n                        endAngle={endAngle}\n                        fill={fill}\n                    />\n                    <Sector\n                        cx={cx}\n                        cy={cy}\n                        startAngle={startAngle}\n                        endAngle={endAngle}\n                        innerRadius={outerRadius + 6}\n                        outerRadius={outerRadius + 10}\n                        fill={fill}\n                    />\n                    <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n                    <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n                    <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{`PV ${value}`}</text>\n                    <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\n                        {`(Rate ${(percent * 100).toFixed(2)}%)`}\n                    </text>\n                </g>\n            );\n        };\n\n        const renderPieChart = (\n            <PieChart width={200} height={200}>\n                <Pie\n                    data={pieData}\n                    activeIndex={this.state.activeIndex}\n                    activeShape={renderActiveShape}\n                    // cx={120}\n                    // cy={200}\n                    innerRadius={68}\n                    outerRadius={80}\n                    fill=\"#8884d8\"\n                    startAngle={90}\n                    endAngle={-270}\n                    paddingAngle={5}\n                    cornerRadius={5}\n                    dataKey=\"value\"\n                >\n                    {\n                        data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                    }\n                </Pie>\n                {/*<Tooltip />*/}\n                {/*<Tooltip content={*/}\n                {/*    <div*/}\n                {/*    key={t.id}*/}\n                {/*    style={{*/}\n                {/*        color: '#999999',*/}\n                {/*        fontSize: '11px',*/}\n                {/*        backgroundColor: '#ffffff',*/}\n                {/*        borderRadius: '5px',*/}\n                {/*        padding: '3px 10px',*/}\n                {/*        boxShadow: '0px 0px 10px 2px rgba(0, 0, 0, 0.15)',*/}\n                {/*    }}*/}\n                {/*    >*/}\n                {/*        <span style={{*/}\n                {/*            display: 'inline-block',*/}\n                {/*            marginRight: '5px',*/}\n                {/*            width: '8px',*/}\n                {/*            height: '8px',*/}\n                {/*            borderRadius: '4px',*/}\n                {/*            background: t.color*/}\n                {/*        }}></span>*/}\n                {/*        {t.id}*/}\n                {/*        <span style={{color: '#333333', marginLeft: '5px', fontSize: '13px'}}>${t.value}</span>*/}\n                {/*    </div>*/}\n                {/*}*/}\n                {/*/>*/}\n            </PieChart>\n        );\n        return (\n            <AppBody>\n                <BodyWrapper gap={'md'}>\n                    <HeadContainer>\n                        <Text fontSize='23px' fontWeight='bold' color='#333333'>Assets</Text>\n                        <img src={CloseBtn} alt=\"\" width='15px' height='15px' onClick={this.goBack} />\n                    </HeadContainer>\n                    <Text fontSize='18px' fontWeight='bold' color='#333333' marginLeft='25px'>Assets distribution</Text>\n                    <PieChartWrapper>\n                        {renderPieChart}\n                    </PieChartWrapper>\n                    {/*<div style={{height: 250}}>*/}\n                    {/*    <ResponsivePie*/}\n                    {/*        data={pieData}*/}\n                    {/*        margin={{ top: 20, right: 0, bottom: 50, left: 0 }}*/}\n                    {/*        startAngle={1}*/}\n                    {/*        innerRadius={0.88}*/}\n                    {/*        padAngle={3}*/}\n                    {/*        cornerRadius={5}*/}\n                    {/*        colors={['#FF7D30', '#FF589D']}*/}\n                    {/*        borderWidth={1}*/}\n                    {/*        borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}*/}\n                    {/*        radialLabelsSkipAngle={10}*/}\n                    {/*        radialLabelsTextColor=\"#333333\"*/}\n                    {/*        radialLabelsLinkColor={{ from: 'color' }}*/}\n                    {/*        sliceLabelsSkipAngle={10}*/}\n                    {/*        sliceLabelsTextColor=\"#333333\"*/}\n                    {/*        enableRadialLabels={false}*/}\n                    {/*        enableSliceLabels={false}*/}\n                    {/*        tooltip={function(e){*/}\n                    {/*            var t=e.datum;*/}\n                    {/*            return <div*/}\n                    {/*                key={t.id}*/}\n                    {/*                style={{*/}\n                    {/*                    color: '#999999',*/}\n                    {/*                    fontSize: '11px',*/}\n                    {/*                    backgroundColor: '#ffffff',*/}\n                    {/*                    borderRadius: '5px',*/}\n                    {/*                    padding: '3px 10px',*/}\n                    {/*                    boxShadow: '0px 0px 10px 2px rgba(0, 0, 0, 0.15)',*/}\n                    {/*                }}*/}\n                    {/*            >*/}\n                    {/*                <span style={{*/}\n                    {/*                    display: 'inline-block',*/}\n                    {/*                    marginRight: '5px',*/}\n                    {/*                    width: '8px',*/}\n                    {/*                    height: '8px',*/}\n                    {/*                    borderRadius: '4px',*/}\n                    {/*                    background: t.color*/}\n                    {/*                }}></span>*/}\n                    {/*                {t.id}*/}\n                    {/*                <span style={{color: '#333333', marginLeft: '5px', fontSize: '13px'}}>${t.value}</span>*/}\n                    {/*            </div>*/}\n                    {/*        }}*/}\n                    {/*        legends={[*/}\n                    {/*            {*/}\n                    {/*                anchor: 'bottom',*/}\n                    {/*                direction: 'row',*/}\n                    {/*                justify: false,*/}\n                    {/*                translateX: 0,*/}\n                    {/*                translateY: 40,*/}\n                    {/*                itemsSpacing: 20,*/}\n                    {/*                itemWidth: 100,*/}\n                    {/*                itemHeight: 18,*/}\n                    {/*                itemTextColor: '#999',*/}\n                    {/*                itemDirection: 'left-to-right',*/}\n                    {/*                itemOpacity: 1,*/}\n                    {/*                symbolSize: 8,*/}\n                    {/*                symbolShape: 'circle',*/}\n                    {/*                effects: [*/}\n                    {/*                    {*/}\n                    {/*                        on: 'hover',*/}\n                    {/*                        style: {*/}\n                    {/*                            itemTextColor: '#000',*/}\n                    {/*                        }*/}\n                    {/*                    }*/}\n                    {/*                ]*/}\n                    {/*            }*/}\n                    {/*        ]}*/}\n                    {/*        theme={{*/}\n                    {/*            legends: {*/}\n                    {/*                text: {*/}\n                    {/*                    color: '#666666'*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }}*/}\n                    {/*    />*/}\n                    {/*    <div style={pieInnerStyles.overlay}>*/}\n                    {/*        <span style={pieInnerStyles.number}>$234995.300</span>*/}\n                    {/*        <span style={pieInnerStyles.text}>Net assets</span>*/}\n                    {/*    </div>*/}\n                    {/*</div>*/}\n\n                    {/*<Text fontSize='18px' fontWeight='bold' color='#333333' marginLeft='25px'>Assets trend</Text>*/}\n                    {/*<LineChartWrapper>*/}\n                    {/*    <ResponsiveLine*/}\n                    {/*        data={lineData}*/}\n                    {/*        margin={{ top: 30, right: 0, bottom: 50, left: 0 }}*/}\n                    {/*        xScale={{ type: 'point' }}*/}\n                    {/*        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}*/}\n                    {/*        yFormat=\" >-.2f\"*/}\n                    {/*        axisTop={null}*/}\n                    {/*        axisRight={null}*/}\n                    {/*        axisLeft={null}*/}\n                    {/*        axisBottom={{*/}\n                    {/*            orient: 'bottom',*/}\n                    {/*            tickSize: 0,*/}\n                    {/*            tickPadding: 15,*/}\n                    {/*            tickRotation: 0,*/}\n                    {/*            tickValues: [\"2020.08\", \"2020.09\", \"2020.10\", \"2020.11\"],*/}\n                    {/*        }}*/}\n                    {/*        enableArea={true}*/}\n                    {/*        enableGridX={false}*/}\n                    {/*        enableGridY={false}*/}\n                    {/*        crosshairType=\"top\"*/}\n                    {/*        curve='monotoneX'*/}\n                    {/*        colors={['#406AFE', '#FF71C5', '#F6883B']}*/}\n                    {/*        pointSize={5}*/}\n                    {/*        pointColor=\"#ffffff\"*/}\n                    {/*        pointBorderWidth={2}*/}\n                    {/*        pointBorderColor={{ from: 'serieColor' }}*/}\n                    {/*        pointLabelYOffset={-12}*/}\n                    {/*        enablePoints={false}*/}\n                    {/*        useMesh={true}*/}\n                    {/*        enableSlices='x'*/}\n                    {/*        animate={true}*/}\n                    {/*        sliceTooltip={({ slice }) => {*/}\n                    {/*            return (*/}\n                    {/*                <div*/}\n                    {/*                    style={{*/}\n                    {/*                        background: 'white',*/}\n                    {/*                        padding: '9px 12px',*/}\n                    {/*                        opacity: '0.92',*/}\n                    {/*                        width: '130px',*/}\n                    {/*                        height: '140px',*/}\n                    {/*                        borderRadius: '10px',*/}\n                    {/*                        boxShadow: '0px 0px 10px 2px rgba(0, 0, 0, 0.15)',*/}\n                    {/*                    }}*/}\n                    {/*                >*/}\n                    {/*                    {slice.points.map(point => (*/}\n                    {/*                        <div*/}\n                    {/*                            key={point.id}*/}\n                    {/*                            style={{*/}\n                    {/*                                color: '#999999',*/}\n                    {/*                                padding: '3px 0',*/}\n                    {/*                                fontSize: '11px'*/}\n                    {/*                            }}*/}\n                    {/*                        >*/}\n                    {/*                            <div>*/}\n                    {/*                                <span style={{*/}\n                    {/*                                    display: 'inline-block',*/}\n                    {/*                                    marginRight: '5px',*/}\n                    {/*                                    width: '8px',*/}\n                    {/*                                    height: '8px',*/}\n                    {/*                                    borderRadius: '4px',*/}\n                    {/*                                    background: point.serieColor*/}\n                    {/*                                }}></span>*/}\n                    {/*                                {point.serieId}*/}\n                    {/*                            </div>*/}\n                    {/*                            <span style={{color: '#333333', marginLeft: '13px', fontSize: '13px'}}>${point.data.yFormatted}</span>*/}\n                    {/*                        </div>*/}\n                    {/*                    ))}*/}\n                    {/*                </div>*/}\n                    {/*            )*/}\n                    {/*        }}*/}\n                    {/*        defs={[*/}\n                    {/*            {*/}\n                    {/*                id: 'gradientA',*/}\n                    {/*                type: 'linearGradient',*/}\n                    {/*                colors: [*/}\n                    {/*                    { offset: 0, color: '#F6883B' },*/}\n                    {/*                    { offset: 60, color: '#ffffff' },*/}\n                    {/*                ],*/}\n                    {/*            },*/}\n                    {/*            {*/}\n                    {/*                id: 'gradientB',*/}\n                    {/*                type: 'linearGradient',*/}\n                    {/*                colors: [*/}\n                    {/*                    { offset: 0, color: '#FF71C5' },*/}\n                    {/*                    { offset: 60, color: '#ffffff' },*/}\n                    {/*                ],*/}\n                    {/*            },*/}\n                    {/*            {*/}\n                    {/*                id: 'gradientC',*/}\n                    {/*                type: 'linearGradient',*/}\n                    {/*                colors: [*/}\n                    {/*                    { offset: 0, color: '#406AFE' },*/}\n                    {/*                    { offset: 100, color: '#ffffff' },*/}\n                    {/*                ],*/}\n                    {/*            },*/}\n                    {/*        ]}*/}\n                    {/*        fill={[*/}\n                    {/*            { match: d => d.id === 'TotalAssets', id: 'gradientA' },*/}\n                    {/*            { match: d => d.id === 'NetAssets', id: 'gradientB' },*/}\n                    {/*            { match: d => d.id === 'Total liabilities', id: 'gradientC' },*/}\n                    {/*        ]}*/}\n                    {/*        // legends={[*/}\n                    {/*        //     {*/}\n                    {/*        //         anchor: 'top',*/}\n                    {/*        //         direction: 'row',*/}\n                    {/*        //         justify: false,*/}\n                    {/*        //         translateX: 10,*/}\n                    {/*        //         translateY: -40,*/}\n                    {/*        //         itemsSpacing: 0,*/}\n                    {/*        //         itemDirection: 'left-to-right',*/}\n                    {/*        //         itemWidth: 100,*/}\n                    {/*        //         itemHeight: 20,*/}\n                    {/*        //         symbolSize: 8,*/}\n                    {/*        //         symbolShape: 'circle',*/}\n                    {/*        //     }*/}\n                    {/*        // ]}*/}\n                    {/*        theme={{*/}\n                    {/*            axis: {*/}\n                    {/*                ticks: {*/}\n                    {/*                    text: {*/}\n                    {/*                        fill: \"#666666\",*/}\n                    {/*                    },*/}\n                    {/*                },*/}\n                    {/*            },*/}\n                    {/*            // legends: {*/}\n                    {/*            //     text: {*/}\n                    {/*            //         fill: \"#999999\",*/}\n                    {/*            //     }*/}\n                    {/*            // }*/}\n                    {/*        }}*/}\n                    {/*    />*/}\n                    {/*</LineChartWrapper>*/}\n\n                    {/*<Text fontSize='18px' fontWeight='bold' color='#333333' marginLeft='25px'>Profit and loss of assets</Text>*/}\n                    {/*<BarChartWrapper>*/}\n                    {/*    <ResponsiveBar*/}\n                    {/*        enableGridY={false}*/}\n                    {/*        margin={{ top: 60, right: 20, bottom: 60, left: 20 }}*/}\n                    {/*        padding={0.6}*/}\n                    {/*        colors={getOrdinalColorScale(barData.map(c => c.color), 'index')}*/}\n                    {/*        axisBottom={{*/}\n                    {/*            tickSize: 0,*/}\n                    {/*            tickPadding: 35,*/}\n                    {/*            tickRotation: 0,*/}\n                    {/*        }}*/}\n                    {/*        axisLeft={null}*/}\n                    {/*        borderRadius={5}*/}\n                    {/*        labelTextColor='#666666'*/}\n                    {/*        barComponent={BarComponent}*/}\n                    {/*        data={barData}*/}\n                    {/*        keys={[\"earnings\"]}*/}\n                    {/*        indexBy=\"currency\"*/}\n                    {/*        markers={[*/}\n                    {/*            {*/}\n                    {/*                axis: 'y',*/}\n                    {/*                value: 0,*/}\n                    {/*                lineStyle: { stroke: 'rgba(64, 106, 254, 0.12)'},*/}\n                    {/*            },*/}\n                    {/*        ]}*/}\n                    {/*    />*/}\n                    {/*    <div style={barInnerStyles.overlay}>*/}\n                    {/*        <span style={barInnerStyles.span}></span>*/}\n                    {/*        <div style={barInnerStyles.divWrapper}>*/}\n                    {/*            <span style={barInnerStyles.text}>Earnings today</span>*/}\n                    {/*            <span style={barInnerStyles.number}>$1254576.03</span>*/}\n                    {/*        </div>*/}\n                    {/*    </div>*/}\n                    {/*</BarChartWrapper>*/}\n                </BodyWrapper>\n            </AppBody>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}