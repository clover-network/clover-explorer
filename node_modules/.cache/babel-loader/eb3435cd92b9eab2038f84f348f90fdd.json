{"ast":null,"code":"import { __assign } from \"tslib\";\nvar DEFAULT_TRIGGER = 'click';\nvar ALLOW_EVENTS = ['click', 'drag'];\nvar DEFAULT_KEY = undefined;\nvar ALLOW_KEYS = ['shift', 'ctrl', 'control', 'alt', 'meta', undefined];\nexport default {\n  getDefaultCfg: function getDefaultCfg() {\n    return {\n      trigger: DEFAULT_TRIGGER,\n      key: DEFAULT_KEY,\n      edgeConfig: {}\n    };\n  },\n  getEvents: function getEvents() {\n    var self = this; // 检测输入是否合法\n\n    if (!(ALLOW_EVENTS.indexOf(self.trigger.toLowerCase()) > -1)) {\n      self.trigger = DEFAULT_TRIGGER; // eslint-disable-next-line no-console\n\n      console.warn(\"Behavior create-edge 的 trigger 参数不合法，请输入 'click'，'drag'\");\n    }\n\n    if (self.key && ALLOW_KEYS.indexOf(self.key.toLowerCase()) === -1) {\n      self.trigger = DEFAULT_KEY; // eslint-disable-next-line no-console\n\n      console.warn(\"Behavior create-edge 的 key 参数不合法，请输入 'shift'，'ctrl'，'alt'，'control'，或 undefined\");\n    }\n\n    var events;\n\n    if (self.trigger === 'drag') {\n      events = {\n        'node:dragstart': 'onClick',\n        'combo:dragstart': 'onClick',\n        drag: 'updateEndPoint',\n        'node:drop': 'onClick',\n        'combo:drop': 'onClick',\n        'dragend': 'onDragEnd'\n      };\n    } else if (self.trigger === 'click') {\n      events = {\n        'node:click': 'onClick',\n        mousemove: 'updateEndPoint',\n        'edge:click': 'cancelCreating',\n        'canvas:click': 'cancelCreating',\n        'combo:click': 'onClick'\n      };\n    }\n\n    if (self.key) {\n      events.keydown = 'onKeyDown';\n      events.keyup = 'onKeyUp';\n    }\n\n    return events;\n  },\n  onDragEnd: function onDragEnd(ev) {\n    var self = this;\n    if (self.key && !self.keydown) return;\n    var item = ev.item;\n    if (!item || item.getID() === self.source || item.getType() !== 'node') self.cancelCreating({\n      item: self.edge,\n      x: ev.x,\n      y: ev.y\n    });\n  },\n  // 如果边的起点没有指定，则根据起点创建新边；如果起点已经指定而终点未指定，则指定终点\n  onClick: function onClick(ev) {\n    var self = this;\n    if (self.key && !self.keydown) return;\n    var node = ev.item;\n    var graph = self.graph;\n    var model = node.getModel(); // 如果起点已经指定而终点未指定，则指定终点\n\n    if (self.addingEdge && self.edge) {\n      if (!self.shouldEnd.call(self, ev)) return;\n      var updateCfg = {\n        target: model.id\n      };\n\n      if (self.source === model.id) {\n        updateCfg.type = 'loop';\n      }\n\n      graph.emit('beforecreateedge', {});\n      graph.updateItem(self.edge, updateCfg);\n      graph.emit('aftercreateedge', {\n        edge: self.edge\n      }); // 暂时将该边的 capture 恢复为 true\n\n      self.edge.getKeyShape().set('capture', true);\n      self.edge = null;\n      self.addingEdge = false;\n    } else {\n      // 如果边的起点没有指定，则根据起点创建新边\n      if (!self.shouldBegin.call(self, ev)) return;\n      self.edge = graph.addItem('edge', __assign({\n        source: model.id,\n        target: model.id\n      }, self.edgeConfig), false);\n      self.source = model.id;\n      self.addingEdge = true; // 暂时将该边的 capture 设置为 false，这样可以拾取到后面的元素\n\n      self.edge.getKeyShape().set('capture', false);\n    }\n  },\n  // 边的起点已经确定，边的末端跟随鼠标移动\n  updateEndPoint: function updateEndPoint(ev) {\n    var self = this;\n    if (self.key && !self.keydown) return;\n    var point = {\n      x: ev.x,\n      y: ev.y\n    }; // 若此时 source 节点已经被移除，结束添加边\n\n    if (!self.graph.findById(self.source)) {\n      self.addingEdge = false;\n      return;\n    }\n\n    if (self.addingEdge && self.edge) {\n      // 更新边的终点为鼠标位置\n      self.graph.updateItem(self.edge, {\n        target: point\n      }, false);\n    }\n  },\n  // 取消增加边，删除该边；或指定终点\n  cancelCreating: function cancelCreating(ev) {\n    var self = this;\n    if (self.key && !self.keydown) return;\n    var graph = self.graph;\n    var currentEdge = ev.item;\n\n    if (self.addingEdge && ev.target && ev.target.isCanvas && ev.target.isCanvas()) {\n      graph.removeItem(self.edge, false);\n      self.edge = null;\n      self.addingEdge = false;\n      return;\n    }\n\n    if (self.addingEdge && self.edge === currentEdge) {\n      var cancelEdge = true; // !graph.get('groupByTypes') 将会导致选中终点时实际上边在最上层，节点无法响应 click 事件\n\n      if (!graph.get('groupByTypes')) {\n        // 此时需要判断点击的位置是否在节点范围内，若在，则指定终点。否则取消增加边\n        var x = ev.x,\n            y = ev.y;\n        var nodes = graph.getNodes();\n        var length_1 = nodes.length;\n\n        for (var i = 0; i < length_1; i++) {\n          var node = nodes[i];\n          var model = node.getModel();\n          var nodeBBox = node.getBBox();\n\n          if (x <= nodeBBox.maxX && x >= nodeBBox.minX && y <= nodeBBox.maxY && y >= nodeBBox.minY) {\n            if (!self.shouldEnd.call(self, {\n              x: ev.x,\n              y: ev.y,\n              canvasX: ev.canvasX,\n              canvasY: ev.canvasY,\n              clientX: ev.clientX,\n              clientY: ev.clientY,\n              item: node\n            })) {\n              return;\n            }\n\n            graph.emit('beforecreateedge', {});\n            graph.updateItem(self.edge, {\n              target: model.id\n            });\n            graph.emit('aftercreateedge', {\n              edge: self.edge\n            });\n            cancelEdge = false;\n            break;\n          }\n        }\n      }\n\n      if (cancelEdge) graph.removeItem(self.edge, false);\n      self.edge = null;\n      self.addingEdge = false;\n    }\n  },\n  onKeyDown: function onKeyDown(e) {\n    var self = this;\n    var code = e.key;\n\n    if (!code) {\n      return;\n    }\n\n    if (code.toLowerCase() === self.key.toLowerCase()) {\n      self.keydown = true;\n    } else {\n      self.keydown = false;\n    }\n  },\n  onKeyUp: function onKeyUp() {\n    var self = this;\n\n    if (self.addingEdge && self.edge) {\n      // 清除正在增加的边\n      self.graph.removeItem(self.edge, false);\n      self.addingEdge = false;\n      self.edge = null;\n    }\n\n    this.keydown = false;\n  }\n};","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@antv/g6/es/behavior/create-edge.js"],"names":["__assign","DEFAULT_TRIGGER","ALLOW_EVENTS","DEFAULT_KEY","undefined","ALLOW_KEYS","getDefaultCfg","trigger","key","edgeConfig","getEvents","self","indexOf","toLowerCase","console","warn","events","drag","mousemove","keydown","keyup","onDragEnd","ev","item","getID","source","getType","cancelCreating","edge","x","y","onClick","node","graph","model","getModel","addingEdge","shouldEnd","call","updateCfg","target","id","type","emit","updateItem","getKeyShape","set","shouldBegin","addItem","updateEndPoint","point","findById","currentEdge","isCanvas","removeItem","cancelEdge","get","nodes","getNodes","length_1","length","i","nodeBBox","getBBox","maxX","minX","maxY","minY","canvasX","canvasY","clientX","clientY","onKeyDown","e","code","onKeyUp"],"mappings":"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","sourcesContent":["import { __assign } from \"tslib\";\nvar DEFAULT_TRIGGER = 'click';\nvar ALLOW_EVENTS = ['click', 'drag'];\nvar DEFAULT_KEY = undefined;\nvar ALLOW_KEYS = ['shift', 'ctrl', 'control', 'alt', 'meta', undefined];\nexport default {\n  getDefaultCfg: function getDefaultCfg() {\n    return {\n      trigger: DEFAULT_TRIGGER,\n      key: DEFAULT_KEY,\n      edgeConfig: {}\n    };\n  },\n  getEvents: function getEvents() {\n    var self = this; // 检测输入是否合法\n\n    if (!(ALLOW_EVENTS.indexOf(self.trigger.toLowerCase()) > -1)) {\n      self.trigger = DEFAULT_TRIGGER; // eslint-disable-next-line no-console\n\n      console.warn(\"Behavior create-edge 的 trigger 参数不合法，请输入 'click'，'drag'\");\n    }\n\n    if (self.key && ALLOW_KEYS.indexOf(self.key.toLowerCase()) === -1) {\n      self.trigger = DEFAULT_KEY; // eslint-disable-next-line no-console\n\n      console.warn(\"Behavior create-edge 的 key 参数不合法，请输入 'shift'，'ctrl'，'alt'，'control'，或 undefined\");\n    }\n\n    var events;\n\n    if (self.trigger === 'drag') {\n      events = {\n        'node:dragstart': 'onClick',\n        'combo:dragstart': 'onClick',\n        drag: 'updateEndPoint',\n        'node:drop': 'onClick',\n        'combo:drop': 'onClick',\n        'dragend': 'onDragEnd'\n      };\n    } else if (self.trigger === 'click') {\n      events = {\n        'node:click': 'onClick',\n        mousemove: 'updateEndPoint',\n        'edge:click': 'cancelCreating',\n        'canvas:click': 'cancelCreating',\n        'combo:click': 'onClick'\n      };\n    }\n\n    if (self.key) {\n      events.keydown = 'onKeyDown';\n      events.keyup = 'onKeyUp';\n    }\n\n    return events;\n  },\n  onDragEnd: function onDragEnd(ev) {\n    var self = this;\n    if (self.key && !self.keydown) return;\n    var item = ev.item;\n    if (!item || item.getID() === self.source || item.getType() !== 'node') self.cancelCreating({\n      item: self.edge,\n      x: ev.x,\n      y: ev.y\n    });\n  },\n  // 如果边的起点没有指定，则根据起点创建新边；如果起点已经指定而终点未指定，则指定终点\n  onClick: function onClick(ev) {\n    var self = this;\n    if (self.key && !self.keydown) return;\n    var node = ev.item;\n    var graph = self.graph;\n    var model = node.getModel(); // 如果起点已经指定而终点未指定，则指定终点\n\n    if (self.addingEdge && self.edge) {\n      if (!self.shouldEnd.call(self, ev)) return;\n      var updateCfg = {\n        target: model.id\n      };\n\n      if (self.source === model.id) {\n        updateCfg.type = 'loop';\n      }\n\n      graph.emit('beforecreateedge', {});\n      graph.updateItem(self.edge, updateCfg);\n      graph.emit('aftercreateedge', {\n        edge: self.edge\n      }); // 暂时将该边的 capture 恢复为 true\n\n      self.edge.getKeyShape().set('capture', true);\n      self.edge = null;\n      self.addingEdge = false;\n    } else {\n      // 如果边的起点没有指定，则根据起点创建新边\n      if (!self.shouldBegin.call(self, ev)) return;\n      self.edge = graph.addItem('edge', __assign({\n        source: model.id,\n        target: model.id\n      }, self.edgeConfig), false);\n      self.source = model.id;\n      self.addingEdge = true; // 暂时将该边的 capture 设置为 false，这样可以拾取到后面的元素\n\n      self.edge.getKeyShape().set('capture', false);\n    }\n  },\n  // 边的起点已经确定，边的末端跟随鼠标移动\n  updateEndPoint: function updateEndPoint(ev) {\n    var self = this;\n    if (self.key && !self.keydown) return;\n    var point = {\n      x: ev.x,\n      y: ev.y\n    }; // 若此时 source 节点已经被移除，结束添加边\n\n    if (!self.graph.findById(self.source)) {\n      self.addingEdge = false;\n      return;\n    }\n\n    if (self.addingEdge && self.edge) {\n      // 更新边的终点为鼠标位置\n      self.graph.updateItem(self.edge, {\n        target: point\n      }, false);\n    }\n  },\n  // 取消增加边，删除该边；或指定终点\n  cancelCreating: function cancelCreating(ev) {\n    var self = this;\n    if (self.key && !self.keydown) return;\n    var graph = self.graph;\n    var currentEdge = ev.item;\n\n    if (self.addingEdge && ev.target && ev.target.isCanvas && ev.target.isCanvas()) {\n      graph.removeItem(self.edge, false);\n      self.edge = null;\n      self.addingEdge = false;\n      return;\n    }\n\n    if (self.addingEdge && self.edge === currentEdge) {\n      var cancelEdge = true; // !graph.get('groupByTypes') 将会导致选中终点时实际上边在最上层，节点无法响应 click 事件\n\n      if (!graph.get('groupByTypes')) {\n        // 此时需要判断点击的位置是否在节点范围内，若在，则指定终点。否则取消增加边\n        var x = ev.x,\n            y = ev.y;\n        var nodes = graph.getNodes();\n        var length_1 = nodes.length;\n\n        for (var i = 0; i < length_1; i++) {\n          var node = nodes[i];\n          var model = node.getModel();\n          var nodeBBox = node.getBBox();\n\n          if (x <= nodeBBox.maxX && x >= nodeBBox.minX && y <= nodeBBox.maxY && y >= nodeBBox.minY) {\n            if (!self.shouldEnd.call(self, {\n              x: ev.x,\n              y: ev.y,\n              canvasX: ev.canvasX,\n              canvasY: ev.canvasY,\n              clientX: ev.clientX,\n              clientY: ev.clientY,\n              item: node\n            })) {\n              return;\n            }\n\n            graph.emit('beforecreateedge', {});\n            graph.updateItem(self.edge, {\n              target: model.id\n            });\n            graph.emit('aftercreateedge', {\n              edge: self.edge\n            });\n            cancelEdge = false;\n            break;\n          }\n        }\n      }\n\n      if (cancelEdge) graph.removeItem(self.edge, false);\n      self.edge = null;\n      self.addingEdge = false;\n    }\n  },\n  onKeyDown: function onKeyDown(e) {\n    var self = this;\n    var code = e.key;\n\n    if (!code) {\n      return;\n    }\n\n    if (code.toLowerCase() === self.key.toLowerCase()) {\n      self.keydown = true;\n    } else {\n      self.keydown = false;\n    }\n  },\n  onKeyUp: function onKeyUp() {\n    var self = this;\n\n    if (self.addingEdge && self.edge) {\n      // 清除正在增加的边\n      self.graph.removeItem(self.edge, false);\n      self.addingEdge = false;\n      self.edge = null;\n    }\n\n    this.keydown = false;\n  }\n};"]},"metadata":{},"sourceType":"module"}