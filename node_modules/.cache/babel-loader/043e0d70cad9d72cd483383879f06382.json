{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport RMCCascader from '../picker/cascader';\nimport MultiPicker from '../picker/MultiPicker';\nimport RMCPicker from '../picker/Picker';\n\nfunction getDefaultProps() {\n  return {\n    cols: 3,\n    cascade: true,\n    value: [],\n    onChange: function onChange() {}\n  };\n}\n\nvar PickerView = function (_React$Component) {\n  _inherits(PickerView, _React$Component);\n\n  function PickerView() {\n    _classCallCheck(this, PickerView);\n\n    var _this = _possibleConstructorReturn(this, (PickerView.__proto__ || Object.getPrototypeOf(PickerView)).apply(this, arguments));\n\n    _this.getCol = function () {\n      var _this$props = _this.props,\n          data = _this$props.data,\n          indicatorStyle = _this$props.indicatorStyle,\n          itemStyle = _this$props.itemStyle;\n      return data.map(function (col, index) {\n        return React.createElement(RMCPicker, {\n          key: index,\n          style: {\n            flex: 1\n          },\n          indicatorStyle: indicatorStyle,\n          itemStyle: itemStyle\n        }, col.map(function (item) {\n          return React.createElement(RMCPicker.Item, {\n            key: item.value,\n            value: item.value\n          }, item.label);\n        }));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PickerView, [{\n    key: 'render',\n    value: function render() {\n      // tslint:disable-next-line:no-this-assignment\n      var props = this.props;\n      var picker = void 0;\n\n      if (props.cascade) {\n        picker = React.createElement(RMCCascader, {\n          data: props.data,\n          value: props.value,\n          onChange: props.onChange,\n          onScrollChange: props.onScrollChange,\n          cols: props.cols,\n          indicatorStyle: props.indicatorStyle,\n          pickerItemStyle: props.itemStyle\n        });\n      } else {\n        picker = React.createElement(MultiPicker, {\n          selectedValue: props.value,\n          onValueChange: props.onChange,\n          onScrollChange: props.onScrollChange,\n          style: {\n            flexDirection: 'row'\n          }\n        }, this.getCol());\n      }\n\n      return picker;\n    }\n  }]);\n\n  return PickerView;\n}(React.Component);\n\nexport default PickerView;\nPickerView.defaultProps = getDefaultProps();","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@ant-design/react-native/es/picker-view/PickerView.js"],"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","RMCCascader","MultiPicker","RMCPicker","getDefaultProps","cols","cascade","value","onChange","PickerView","_React$Component","_this","__proto__","Object","getPrototypeOf","apply","arguments","getCol","_this$props","props","data","indicatorStyle","itemStyle","map","col","index","createElement","key","style","flex","item","Item","label","render","picker","onScrollChange","pickerItemStyle","selectedValue","onValueChange","flexDirection","Component","defaultProps"],"mappings":"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","sourcesContent":["import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport RMCCascader from '../picker/cascader';\nimport MultiPicker from '../picker/MultiPicker';\nimport RMCPicker from '../picker/Picker';\nfunction getDefaultProps() {\n    return {\n        cols: 3,\n        cascade: true,\n        value: [],\n        onChange: function onChange() {}\n    };\n}\n\nvar PickerView = function (_React$Component) {\n    _inherits(PickerView, _React$Component);\n\n    function PickerView() {\n        _classCallCheck(this, PickerView);\n\n        var _this = _possibleConstructorReturn(this, (PickerView.__proto__ || Object.getPrototypeOf(PickerView)).apply(this, arguments));\n\n        _this.getCol = function () {\n            var _this$props = _this.props,\n                data = _this$props.data,\n                indicatorStyle = _this$props.indicatorStyle,\n                itemStyle = _this$props.itemStyle;\n\n            return data.map(function (col, index) {\n                return React.createElement(\n                    RMCPicker,\n                    { key: index, style: { flex: 1 }, indicatorStyle: indicatorStyle, itemStyle: itemStyle },\n                    col.map(function (item) {\n                        return React.createElement(\n                            RMCPicker.Item,\n                            { key: item.value, value: item.value },\n                            item.label\n                        );\n                    })\n                );\n            });\n        };\n        return _this;\n    }\n\n    _createClass(PickerView, [{\n        key: 'render',\n        value: function render() {\n            // tslint:disable-next-line:no-this-assignment\n            var props = this.props;\n\n            var picker = void 0;\n            if (props.cascade) {\n                picker = React.createElement(RMCCascader, { data: props.data, value: props.value, onChange: props.onChange, onScrollChange: props.onScrollChange, cols: props.cols, indicatorStyle: props.indicatorStyle, pickerItemStyle: props.itemStyle });\n            } else {\n                picker = React.createElement(\n                    MultiPicker,\n                    { selectedValue: props.value, onValueChange: props.onChange, onScrollChange: props.onScrollChange, style: { flexDirection: 'row' } },\n                    this.getCol()\n                );\n            }\n            return picker;\n        }\n    }]);\n\n    return PickerView;\n}(React.Component);\n\nexport default PickerView;\n\nPickerView.defaultProps = getDefaultProps();"]},"metadata":{},"sourceType":"module"}