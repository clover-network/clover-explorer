{"ast":null,"code":"import { __spreadArrays } from \"tslib\";\nimport { isString, memoize, values } from '@antv/util';\nvar ctx = document.createElement('canvas').getContext('2d');\n/**\n * 计算文本在画布中的宽度\n * @param text 文本\n * @param font 字体\n */\n\nexport var measureTextWidth = memoize(function (text, font) {\n  if (font === void 0) {\n    font = {};\n  }\n\n  var fontSize = font.fontSize,\n      _a = font.fontFamily,\n      fontFamily = _a === void 0 ? 'sans-serif' : _a,\n      fontWeight = font.fontWeight,\n      fontStyle = font.fontStyle,\n      fontVariant = font.fontVariant; // @see https://developer.mozilla.org/zh-CN/docs/Web/CSS/font\n\n  ctx.font = [fontStyle, fontWeight, fontVariant, fontSize + \"px\", fontFamily].join(' ');\n  var metrics = ctx.measureText(isString(text) ? text : '');\n  return metrics.width;\n}, function (text, font) {\n  if (font === void 0) {\n    font = {};\n  }\n\n  return __spreadArrays([text], values(font)).join('');\n});","map":{"version":3,"sources":["../../src/utils/measure-text.ts"],"names":[],"mappings":";AAAA,SAAS,QAAT,EAAmB,OAAnB,EAA4B,MAA5B,QAA0C,YAA1C;AAEA,IAAM,GAAG,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,EAAiC,UAAjC,CAA4C,IAA5C,CAAZ;AAEA;;;;AAIG;;AACH,OAAO,IAAM,gBAAgB,GAAG,OAAO,CACrC,UAAC,IAAD,EAAe,IAAf,EAA6B;AAAd,MAAA,IAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,EAAA;AAAc;;AACnB,MAAA,QAAQ,GAAoE,IAAI,CAAxE,QAAR;AAAA,MAAU,EAAA,GAAkE,IAAI,CAA7C,UAAnC;AAAA,MAAU,UAAU,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,YAAH,GAAe,EAAnC;AAAA,MAAqC,UAAU,GAA6B,IAAI,CAAjC,UAA/C;AAAA,MAAiD,SAAS,GAAkB,IAAI,CAAtB,SAA1D;AAAA,MAA4D,WAAW,GAAK,IAAI,CAAT,WAAvE,CADmB,CAE3B;;AACA,EAAA,GAAG,CAAC,IAAJ,GAAW,CAAC,SAAD,EAAY,UAAZ,EAAwB,WAAxB,EAAwC,QAAQ,GAAA,IAAhD,EAAsD,UAAtD,EAAkE,IAAlE,CAAuE,GAAvE,CAAX;AACA,MAAM,OAAO,GAAG,GAAG,CAAC,WAAJ,CAAgB,QAAQ,CAAC,IAAD,CAAR,GAAiB,IAAjB,GAAwB,EAAxC,CAAhB;AACA,SAAO,OAAO,CAAC,KAAf;AACD,CAPoC,EAQrC,UAAC,IAAD,EAAe,IAAf,EAAwB;AAAT,MAAA,IAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,EAAA;AAAS;;AAAK,SAAA,cAAA,CAAA,CAAC,IAAD,CAAA,EAAU,MAAM,CAAC,IAAD,CAAhB,CAAA,CAAwB,IAAxB,CAA6B,EAA7B,CAAA;AAAgC,CARxB,CAAhC","sourcesContent":["import { isString, memoize, values } from '@antv/util';\n\nconst ctx = document.createElement('canvas').getContext('2d');\n\n/**\n * 计算文本在画布中的宽度\n * @param text 文本\n * @param font 字体\n */\nexport const measureTextWidth = memoize(\n  (text: string, font: any = {}): number => {\n    const { fontSize, fontFamily = 'sans-serif', fontWeight, fontStyle, fontVariant } = font;\n    // @see https://developer.mozilla.org/zh-CN/docs/Web/CSS/font\n    ctx.font = [fontStyle, fontWeight, fontVariant, `${fontSize}px`, fontFamily].join(' ');\n    const metrics = ctx.measureText(isString(text) ? text : '');\n    return metrics.width;\n  },\n  (text: string, font = {}) => [text, ...values(font)].join('')\n);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}