{"ast":null,"code":"var _jsxFileName = \"/Users/wanglijie/wanglijie/clover-defi-wallet/src/pages/AssetsMDetails/index.tsx\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Text } from 'rebass';\nimport AppBody from '../AppBody';\nimport { AutoColumn } from '../../components/Column';\nimport { RowBetween } from '../../components/Row';\nimport CloseBtn from \"../../assets/images/closeBtn.svg\";\nimport { ResponsivePie } from '@nivo/pie';\nimport { ResponsiveLine } from '@nivo/line';\nimport { ResponsiveBar } from \"@nivo/bar\";\nimport { getOrdinalColorScale } from '@nivo/colors';\nimport { useTooltip } from '@nivo/tooltip';\nconst BodyWrapper = styled(AutoColumn)`\n`;\nconst HeadContainer = styled(RowBetween)`\n  margin-top: 50px;\n  padding: 0 20px;\n  height: 44px;\n`;\nconst LineChartWrapper = styled.div`\n  margin: 0 30px;\n  height: 250px;\n  background: linear-gradient(180deg,#FFFFFF 0%, #FFF6FA 50%, #FFFFFF 100%);\n  border-radius: 15px;\n`;\nconst BarChartWrapper = styled.div`\n  position: relative;\n  margin: 20px 30px;\n  height: 220px;\n  background: linear-gradient(180deg, #FFFFFF 0%, #EFFBFF 50%, #FFFFFF 100%);\n  border-radius: 15px;\n`;\nexport default class AssetsMDetail extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.goBack = () => {\n      this.props.history.goBack();\n    };\n  }\n\n  render() {\n    const pieData = [{\n      \"id\": \"Total assets\",\n      \"label\": \"Total assets\",\n      \"value\": 75,\n      \"color\": \"#FF7D30\"\n    }, {\n      \"id\": \"Total liabilities\",\n      \"label\": \"Total liabilities\",\n      \"value\": 25,\n      \"color\": \"#FF589D\"\n    }];\n    const pieInnerStyles = {\n      root: {\n        fontFamily: \"consolas, sans-serif\",\n        textAlign: \"center\",\n        position: \"relative\",\n        width: 600,\n        height: 600\n      },\n      overlay: {\n        height: 110,\n        width: 110,\n        borderRadius: '50%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        backgroundColor: '#ffffff',\n        boxShadow: '0px 5px 10px 2px rgba(255, 125, 48, 0.15)',\n        position: \"absolute\",\n        top: 200,\n        right: 133,\n        bottom: 0,\n        alignItems: \"center\"\n      },\n      number: {\n        color: \"#333333\",\n        fontSize: \"15px\",\n        fontWeight: 'bold'\n      },\n      text: {\n        color: \"#999999\",\n        fontSize: \"12px\",\n        fontWeight: \"normal\"\n      }\n    };\n    const {\n      showTooltipFromEvent,\n      hideTooltip\n    } = useTooltip();\n    const lineData = [{\n      \"id\": \"Total liabilities\",\n      \"color\": \"#406AFE\",\n      \"data\": [{\n        \"x\": \"2020.07.20\",\n        \"y\": 50.00\n      }, {\n        \"x\": \"2020.08\",\n        \"y\": 100.00\n      }, {\n        \"x\": \"2020.08.10\",\n        \"y\": 400.00\n      }, {\n        \"x\": \"2020.08.20\",\n        \"y\": 150.00\n      }, {\n        \"x\": \"2020.09\",\n        \"y\": 490.00\n      }, {\n        \"x\": \"2020.09.10\",\n        \"y\": 300.00\n      }, {\n        \"x\": \"2020.09.20\",\n        \"y\": 200.00\n      }, {\n        \"x\": \"2020.10\",\n        \"y\": 300.00\n      }, {\n        \"x\": \"2020.10.10\",\n        \"y\": 500.00\n      }, {\n        \"x\": \"2020.10.20\",\n        \"y\": 890.00\n      }, {\n        \"x\": \"2020.11\",\n        \"y\": 450.00\n      }, {\n        \"x\": \"2020.11.10\",\n        \"y\": 500.00\n      }]\n    }, {\n      \"id\": \"NetAssets\",\n      \"color\": \"#FF71C5\",\n      \"data\": [{\n        \"x\": \"2020.07.20\",\n        \"y\": 100.00\n      }, {\n        \"x\": \"2020.08\",\n        \"y\": 200.00\n      }, {\n        \"x\": \"2020.08.10\",\n        \"y\": 500.00\n      }, {\n        \"x\": \"2020.08.20\",\n        \"y\": 350.00\n      }, {\n        \"x\": \"2020.09\",\n        \"y\": 590.00\n      }, {\n        \"x\": \"2020.09.10\",\n        \"y\": 400.00\n      }, {\n        \"x\": \"2020.09.20\",\n        \"y\": 300.00\n      }, {\n        \"x\": \"2020.10\",\n        \"y\": 400.00\n      }, {\n        \"x\": \"2020.10.10\",\n        \"y\": 600.00\n      }, {\n        \"x\": \"2020.10.20\",\n        \"y\": 790.00\n      }, {\n        \"x\": \"2020.11\",\n        \"y\": 550.00\n      }, {\n        \"x\": \"2020.11.10\",\n        \"y\": 600.00\n      }]\n    }, {\n      \"id\": \"TotalAssets\",\n      \"color\": \"#F6883B\",\n      \"data\": [{\n        \"x\": \"2020.07.20\",\n        \"y\": 200.00\n      }, {\n        \"x\": \"2020.08\",\n        \"y\": 300.00\n      }, {\n        \"x\": \"2020.08.10\",\n        \"y\": 600.00\n      }, {\n        \"x\": \"2020.08.20\",\n        \"y\": 450.00\n      }, {\n        \"x\": \"2020.09\",\n        \"y\": 790.00\n      }, {\n        \"x\": \"2020.09.10\",\n        \"y\": 600.00\n      }, {\n        \"x\": \"2020.09.20\",\n        \"y\": 500.00\n      }, {\n        \"x\": \"2020.10\",\n        \"y\": 600.00\n      }, {\n        \"x\": \"2020.10.10\",\n        \"y\": 800.00\n      }, {\n        \"x\": \"2020.10.20\",\n        \"y\": 990.00\n      }, {\n        \"x\": \"2020.11\",\n        \"y\": 750.00\n      }, {\n        \"x\": \"2020.11.10\",\n        \"y\": 800.00\n      }]\n    }];\n    const barData = [{\n      currency: 'CLV',\n      earnings: 25.03,\n      color: '#FF7D30'\n    }, {\n      currency: 'cETH',\n      earnings: 20.00,\n      color: '#FF71C5'\n    }, {\n      currency: 'ACA',\n      earnings: 15.00,\n      color: '#406AFE'\n    }, {\n      currency: 'aUSD',\n      earnings: 10.00,\n      color: '#F6883B'\n    }, {\n      currency: 'bUSD',\n      earnings: -10.00,\n      color: '#FF71C5'\n    }, {\n      currency: 'cUSD',\n      earnings: -15.00,\n      color: '#FF7D30'\n    }];\n\n    const BarComponent = props => {\n      return /*#__PURE__*/React.createElement(\"g\", {\n        transform: `translate(${props.x},${props.y})`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"rect\", {\n        width: props.width,\n        height: props.height,\n        fill: props.color,\n        rx: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"text\", {\n        x: props.width + 5,\n        y: props.data.value > 0 ? -17 : props.height + 17,\n        textAnchor: \"end\",\n        dominantBaseline: \"central\",\n        fill: \"#666666\",\n        style: {\n          fontWeight: 400,\n          fontSize: 13\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }\n      }, props.data.value > 0 ? `+$${props.data.value}` : `-$${props.data.value * -1}`));\n    };\n\n    const barInnerStyles = {\n      overlay: {\n        width: 115,\n        height: 30,\n        display: 'flex',\n        flexDirection: 'row',\n        position: \"absolute\",\n        top: 0,\n        right: 0\n      },\n      span: {\n        width: '3px',\n        height: '100%',\n        backgroundColor: '#FF7D30',\n        marginRight: '5px'\n      },\n      divWrapper: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      number: {\n        color: \"#333333\",\n        fontSize: \"13px\"\n      },\n      text: {\n        color: \"#999999\",\n        textAlign: 'center',\n        fontSize: \"10px\",\n        lineHeight: '14px'\n      }\n    };\n    return /*#__PURE__*/React.createElement(AppBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BodyWrapper, {\n      gap: 'md',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(HeadContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"23px\",\n      fontWeight: \"bold\",\n      color: \"#333333\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 25\n      }\n    }, \"Assets\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: CloseBtn,\n      alt: \"\",\n      width: \"15px\",\n      height: \"15px\",\n      onClick: this.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"18px\",\n      fontWeight: \"bold\",\n      color: \"#333333\",\n      marginLeft: \"25px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 21\n      }\n    }, \"Assets distribution\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 250\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ResponsivePie, {\n      data: pieData,\n      margin: {\n        top: 20,\n        right: 0,\n        bottom: 50,\n        left: 0\n      },\n      startAngle: 1,\n      innerRadius: 0.88,\n      padAngle: 3,\n      cornerRadius: 5,\n      colors: ['#FF7D30', '#FF589D'],\n      borderWidth: 1,\n      borderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.2]]\n      },\n      radialLabelsSkipAngle: 10,\n      radialLabelsTextColor: \"#333333\",\n      radialLabelsLinkColor: {\n        from: 'color'\n      },\n      sliceLabelsSkipAngle: 10,\n      sliceLabelsTextColor: \"#333333\",\n      enableRadialLabels: false,\n      enableSliceLabels: false,\n      tooltip: function (e) {\n        var t = e.datum;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: t.id,\n          style: {\n            color: '#999999',\n            fontSize: '11px',\n            backgroundColor: '#ffffff',\n            borderRadius: '5px',\n            padding: '3px 10px',\n            boxShadow: '0px 0px 10px 2px rgba(0, 0, 0, 0.15)'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 40\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            display: 'inline-block',\n            marginRight: '5px',\n            width: '8px',\n            height: '8px',\n            borderRadius: '4px',\n            background: t.color\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 37\n          }\n        }), t.id, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: '#333333',\n            marginLeft: '5px',\n            fontSize: '13px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 37\n          }\n        }, \"$\", t.value));\n      },\n      legends: [{\n        anchor: 'bottom',\n        direction: 'row',\n        justify: false,\n        translateX: 0,\n        translateY: 40,\n        itemsSpacing: 20,\n        itemWidth: 100,\n        itemHeight: 18,\n        itemTextColor: '#999',\n        itemDirection: 'left-to-right',\n        itemOpacity: 1,\n        symbolSize: 8,\n        symbolShape: 'circle',\n        effects: [{\n          on: 'hover',\n          style: {\n            itemTextColor: '#000'\n          }\n        }]\n      }],\n      theme: {\n        legends: {\n          text: {\n            color: '#666666'\n          }\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: pieInnerStyles.overlay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: pieInnerStyles.number,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 29\n      }\n    }, \"$234995.300\"), /*#__PURE__*/React.createElement(\"span\", {\n      style: pieInnerStyles.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 29\n      }\n    }, \"Net assets\"))), /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"18px\",\n      fontWeight: \"bold\",\n      color: \"#333333\",\n      marginLeft: \"25px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 21\n      }\n    }, \"Assets trend\"), /*#__PURE__*/React.createElement(LineChartWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ResponsiveLine, {\n      data: lineData,\n      margin: {\n        top: 30,\n        right: 0,\n        bottom: 50,\n        left: 0\n      },\n      xScale: {\n        type: 'point'\n      },\n      yScale: {\n        type: 'linear',\n        min: 'auto',\n        max: 'auto',\n        stacked: false,\n        reverse: false\n      },\n      yFormat: \" >-.2f\",\n      axisTop: null,\n      axisRight: null,\n      axisLeft: null,\n      axisBottom: {\n        orient: 'bottom',\n        tickSize: 0,\n        tickPadding: 15,\n        tickRotation: 0,\n        tickValues: [\"2020.08\", \"2020.09\", \"2020.10\", \"2020.11\"]\n      },\n      enableArea: true,\n      enableGridX: false,\n      enableGridY: false,\n      crosshairType: \"top\",\n      curve: \"monotoneX\",\n      colors: ['#406AFE', '#FF71C5', '#F6883B'],\n      pointSize: 5,\n      pointColor: \"#ffffff\",\n      pointBorderWidth: 2,\n      pointBorderColor: {\n        from: 'serieColor'\n      },\n      pointLabelYOffset: -12,\n      enablePoints: false,\n      useMesh: true,\n      enableSlices: \"x\",\n      animate: true,\n      sliceTooltip: ({\n        slice\n      }) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            background: 'white',\n            padding: '9px 12px',\n            opacity: '0.92',\n            width: '130px',\n            height: '140px',\n            borderRadius: '10px',\n            boxShadow: '0px 0px 10px 2px rgba(0, 0, 0, 0.15)'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 37\n          }\n        }, slice.points.map(point => /*#__PURE__*/React.createElement(\"div\", {\n          key: point.id,\n          style: {\n            color: '#999999',\n            padding: '3px 0',\n            fontSize: '11px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            display: 'inline-block',\n            marginRight: '5px',\n            width: '8px',\n            height: '8px',\n            borderRadius: '4px',\n            background: point.serieColor\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 53\n          }\n        }), point.serieId), /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: '#333333',\n            marginLeft: '13px',\n            fontSize: '13px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 49\n          }\n        }, \"$\", point.data.yFormatted))));\n      } // onMouseLeave={() => {\n      //     hideTooltip();\n      // }}\n      ,\n      defs: [{\n        id: 'gradientA',\n        type: 'linearGradient',\n        colors: [{\n          offset: 0,\n          color: '#F6883B'\n        }, {\n          offset: 60,\n          color: '#ffffff'\n        }]\n      }, {\n        id: 'gradientB',\n        type: 'linearGradient',\n        colors: [{\n          offset: 0,\n          color: '#FF71C5'\n        }, {\n          offset: 60,\n          color: '#ffffff'\n        }]\n      }, {\n        id: 'gradientC',\n        type: 'linearGradient',\n        colors: [{\n          offset: 0,\n          color: '#406AFE'\n        }, {\n          offset: 100,\n          color: '#ffffff'\n        }]\n      }],\n      fill: [{\n        match: d => d.id === 'TotalAssets',\n        id: 'gradientA'\n      }, {\n        match: d => d.id === 'NetAssets',\n        id: 'gradientB'\n      }, {\n        match: d => d.id === 'Total liabilities',\n        id: 'gradientC'\n      }] // legends={[\n      //     {\n      //         anchor: 'top',\n      //         direction: 'row',\n      //         justify: false,\n      //         translateX: 10,\n      //         translateY: -40,\n      //         itemsSpacing: 0,\n      //         itemDirection: 'left-to-right',\n      //         itemWidth: 100,\n      //         itemHeight: 20,\n      //         symbolSize: 8,\n      //         symbolShape: 'circle',\n      //     }\n      // ]}\n      ,\n      theme: {\n        axis: {\n          ticks: {\n            text: {\n              fill: \"#666666\"\n            }\n          }\n        } // legends: {\n        //     text: {\n        //         fill: \"#999999\",\n        //     }\n        // }\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"18px\",\n      fontWeight: \"bold\",\n      color: \"#333333\",\n      marginLeft: \"25px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 21\n      }\n    }, \"Profit and loss of assets\"), /*#__PURE__*/React.createElement(BarChartWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ResponsiveBar, {\n      enableGridY: false,\n      margin: {\n        top: 60,\n        right: 20,\n        bottom: 60,\n        left: 20\n      },\n      padding: 0.6,\n      colors: getOrdinalColorScale(barData.map(c => c.color), 'index'),\n      axisBottom: {\n        tickSize: 0,\n        tickPadding: 35,\n        tickRotation: 0\n      },\n      axisLeft: null,\n      borderRadius: 5,\n      labelTextColor: \"#666666\",\n      barComponent: BarComponent,\n      data: barData,\n      keys: [\"earnings\"],\n      indexBy: \"currency\",\n      markers: [{\n        axis: 'y',\n        value: 0,\n        lineStyle: {\n          stroke: 'rgba(64, 106, 254, 0.12)'\n        }\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: barInnerStyles.overlay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: barInnerStyles.span,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: barInnerStyles.divWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: barInnerStyles.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 33\n      }\n    }, \"Earnings today\"), /*#__PURE__*/React.createElement(\"span\", {\n      style: barInnerStyles.number,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 33\n      }\n    }, \"$1254576.03\"))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/src/pages/AssetsMDetails/index.tsx"],"names":["React","Component","styled","Text","AppBody","AutoColumn","RowBetween","ResponsivePie","ResponsiveLine","ResponsiveBar","getOrdinalColorScale","useTooltip","BodyWrapper","HeadContainer","LineChartWrapper","div","BarChartWrapper","AssetsMDetail","goBack","props","history","render","pieData","pieInnerStyles","root","fontFamily","textAlign","position","width","height","overlay","borderRadius","display","flexDirection","justifyContent","backgroundColor","boxShadow","top","right","bottom","alignItems","number","color","fontSize","fontWeight","text","showTooltipFromEvent","hideTooltip","lineData","barData","currency","earnings","BarComponent","x","y","data","value","barInnerStyles","span","marginRight","divWrapper","lineHeight","CloseBtn","left","from","modifiers","e","t","datum","id","padding","background","marginLeft","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemTextColor","itemDirection","itemOpacity","symbolSize","symbolShape","effects","on","style","legends","type","min","max","stacked","reverse","orient","tickSize","tickPadding","tickRotation","tickValues","slice","opacity","points","map","point","serieColor","serieId","yFormatted","colors","offset","match","d","axis","ticks","fill","c","lineStyle","stroke"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport styled from 'styled-components'\nimport { Text } from 'rebass'\nimport AppBody from '../AppBody'\nimport Column, { AutoColumn, ColumnCenter } from '../../components/Column'\nimport Row, {RowBetween, RowEnd} from '../../components/Row'\nimport CloseBtn from '../../assets/images/closeBtn.svg'\nimport { ResponsivePie } from '@nivo/pie';\nimport { ResponsiveLine } from '@nivo/line';\nimport { ResponsiveBar } from \"@nivo/bar\";\nimport { getOrdinalColorScale } from '@nivo/colors';\nimport { Crosshair, useTooltip } from '@nivo/tooltip'\n\n\nconst BodyWrapper = styled(AutoColumn)`\n`;\n\nconst HeadContainer = styled(RowBetween)`\n  margin-top: 50px;\n  padding: 0 20px;\n  height: 44px;\n`;\n\nconst LineChartWrapper = styled.div`\n  margin: 0 30px;\n  height: 250px;\n  background: linear-gradient(180deg,#FFFFFF 0%, #FFF6FA 50%, #FFFFFF 100%);\n  border-radius: 15px;\n`;\n\nconst BarChartWrapper = styled.div`\n  position: relative;\n  margin: 20px 30px;\n  height: 220px;\n  background: linear-gradient(180deg, #FFFFFF 0%, #EFFBFF 50%, #FFFFFF 100%);\n  border-radius: 15px;\n`;\n\nexport default class AssetsMDetail extends Component<any, any> {\n\n    goBack = () => {\n        this.props.history.goBack();\n    }\n    render() {\n        const pieData = [\n            {\n                \"id\": \"Total assets\",\n                \"label\": \"Total assets\",\n                \"value\": 75,\n                \"color\": \"#FF7D30\"\n            },\n            {\n                \"id\": \"Total liabilities\",\n                \"label\": \"Total liabilities\",\n                \"value\": 25,\n                \"color\": \"#FF589D\"\n            },\n        ];\n\n        const pieInnerStyles = {\n            root: {\n                fontFamily: \"consolas, sans-serif\",\n                textAlign: \"center\",\n                position: \"relative\",\n                width: 600,\n                height: 600,\n            },\n            overlay: {\n                height: 110,\n                width: 110,\n                borderRadius: '50%',\n                display: 'flex',\n                flexDirection: 'column' as 'column',\n                justifyContent: 'center' as 'center',\n                backgroundColor: '#ffffff',\n                boxShadow: '0px 5px 10px 2px rgba(255, 125, 48, 0.15)',\n                position: \"absolute\" as \"absolute\",\n                top: 200,\n                right: 133,\n                bottom: 0,\n                alignItems: \"center\" as \"center\",\n            },\n            number: {\n                color: \"#333333\",\n                fontSize: \"15px\",\n                fontWeight: 'bold' as 'bold'\n            },\n            text: {\n                color: \"#999999\",\n                fontSize: \"12px\",\n                fontWeight: \"normal\" as \"normal\"\n            }\n        };\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip();\n        const lineData = [\n            {\n                \"id\": \"Total liabilities\",\n                \"color\": \"#406AFE\",\n                \"data\": [\n                    {\n                        \"x\": \"2020.07.20\",\n                        \"y\": 50.00\n                    },\n                    {\n                        \"x\": \"2020.08\",\n                        \"y\": 100.00\n                    },\n                    {\n                        \"x\": \"2020.08.10\",\n                        \"y\": 400.00\n                    },\n                    {\n                        \"x\": \"2020.08.20\",\n                        \"y\": 150.00\n                    },\n                    {\n                        \"x\": \"2020.09\",\n                        \"y\": 490.00\n                    },\n                    {\n                        \"x\": \"2020.09.10\",\n                        \"y\": 300.00\n                    },\n                    {\n                        \"x\": \"2020.09.20\",\n                        \"y\": 200.00\n                    },\n                    {\n                        \"x\": \"2020.10\",\n                        \"y\": 300.00\n                    },\n                    {\n                        \"x\": \"2020.10.10\",\n                        \"y\": 500.00\n                    },\n                    {\n                        \"x\": \"2020.10.20\",\n                        \"y\": 890.00\n                    },\n                    {\n                        \"x\": \"2020.11\",\n                        \"y\": 450.00\n                    },\n                    {\n                        \"x\": \"2020.11.10\",\n                        \"y\": 500.00\n                    },\n                ]\n            },\n            {\n                \"id\": \"NetAssets\",\n                \"color\": \"#FF71C5\",\n                \"data\": [\n                    {\n                        \"x\": \"2020.07.20\",\n                        \"y\": 100.00\n                    },\n                    {\n                        \"x\": \"2020.08\",\n                        \"y\": 200.00\n                    },\n                    {\n                        \"x\": \"2020.08.10\",\n                        \"y\": 500.00\n                    },\n                    {\n                        \"x\": \"2020.08.20\",\n                        \"y\": 350.00\n                    },\n                    {\n                        \"x\": \"2020.09\",\n                        \"y\": 590.00\n                    },\n                    {\n                        \"x\": \"2020.09.10\",\n                        \"y\": 400.00\n                    },\n                    {\n                        \"x\": \"2020.09.20\",\n                        \"y\": 300.00\n                    },\n                    {\n                        \"x\": \"2020.10\",\n                        \"y\": 400.00\n                    },\n                    {\n                        \"x\": \"2020.10.10\",\n                        \"y\": 600.00\n                    },\n                    {\n                        \"x\": \"2020.10.20\",\n                        \"y\": 790.00\n                    },\n                    {\n                        \"x\": \"2020.11\",\n                        \"y\": 550.00\n                    },\n                    {\n                        \"x\": \"2020.11.10\",\n                        \"y\": 600.00\n                    },\n                ]\n            },\n            {\n                \"id\": \"TotalAssets\",\n                \"color\": \"#F6883B\",\n                \"data\": [\n                    {\n                        \"x\": \"2020.07.20\",\n                        \"y\": 200.00\n                    },\n                    {\n                        \"x\": \"2020.08\",\n                        \"y\": 300.00\n                    },\n                    {\n                        \"x\": \"2020.08.10\",\n                        \"y\": 600.00\n                    },\n                    {\n                        \"x\": \"2020.08.20\",\n                        \"y\": 450.00\n                    },\n                    {\n                        \"x\": \"2020.09\",\n                        \"y\": 790.00\n                    },\n                    {\n                        \"x\": \"2020.09.10\",\n                        \"y\": 600.00\n                    },\n                    {\n                        \"x\": \"2020.09.20\",\n                        \"y\": 500.00\n                    },\n                    {\n                        \"x\": \"2020.10\",\n                        \"y\": 600.00\n                    },\n                    {\n                        \"x\": \"2020.10.10\",\n                        \"y\": 800.00\n                    },\n                    {\n                        \"x\": \"2020.10.20\",\n                        \"y\": 990.00\n                    },\n                    {\n                        \"x\": \"2020.11\",\n                        \"y\": 750.00\n                    },\n                    {\n                        \"x\": \"2020.11.10\",\n                        \"y\": 800.00\n                    },\n                ]\n            },\n        ];\n\n        const barData = [\n            { currency: 'CLV', earnings: 25.03, color: '#FF7D30' },\n            { currency: 'cETH', earnings: 20.00, color: '#FF71C5' },\n            { currency: 'ACA', earnings: 15.00, color: '#406AFE' },\n            { currency: 'aUSD', earnings: 10.00, color: '#F6883B' },\n            { currency: 'bUSD', earnings: -10.00, color: '#FF71C5' },\n            { currency: 'cUSD', earnings: -15.00, color: '#FF7D30' }\n        ];\n\n        const BarComponent = (props: any) => {\n            return (\n                <g transform={`translate(${props.x},${props.y})`}>\n                    <rect\n                        width={props.width}\n                        height={props.height}\n                        fill={props.color}\n                        rx={1}\n                    />\n                    <text\n                        x={props.width + 5}\n                        y={props.data.value > 0 ? -17 : props.height + 17}\n                        textAnchor=\"end\"\n                        dominantBaseline=\"central\"\n                        fill='#666666'\n                        style={{\n                            fontWeight: 400,\n                            fontSize: 13,\n                        }}\n                    >\n                        {props.data.value > 0 ? `+$${props.data.value}` : `-$${props.data.value * -1}`}\n                    </text>\n                </g>\n            )\n        }\n\n        const barInnerStyles = {\n            overlay: {\n                width: 115,\n                height: 30,\n                display: 'flex',\n                flexDirection: 'row' as 'row',\n                position: \"absolute\" as \"absolute\",\n                top: 0,\n                right: 0,\n            },\n            span: {\n                width: '3px',\n                height: '100%',\n                backgroundColor: '#FF7D30',\n                marginRight: '5px'\n            },\n            divWrapper: {\n                display: 'flex',\n                flexDirection: 'column' as 'column',\n            },\n            number: {\n                color: \"#333333\",\n                fontSize: \"13px\",\n            },\n            text: {\n                color: \"#999999\",\n                textAlign: 'center' as 'center',\n                fontSize: \"10px\",\n                lineHeight: '14px',\n            }\n        };\n        return (\n            <AppBody>\n                <BodyWrapper gap={'md'}>\n                    <HeadContainer>\n                        <Text fontSize='23px' fontWeight='bold' color='#333333'>Assets</Text>\n                        <img src={CloseBtn} alt=\"\" width='15px' height='15px' onClick={this.goBack} />\n                    </HeadContainer>\n                    <Text fontSize='18px' fontWeight='bold' color='#333333' marginLeft='25px'>Assets distribution</Text>\n                    <div style={{height: 250}}>\n                        <ResponsivePie\n                            data={pieData}\n                            margin={{ top: 20, right: 0, bottom: 50, left: 0 }}\n                            startAngle={1}\n                            innerRadius={0.88}\n                            padAngle={3}\n                            cornerRadius={5}\n                            colors={['#FF7D30', '#FF589D']}\n                            borderWidth={1}\n                            borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\n                            radialLabelsSkipAngle={10}\n                            radialLabelsTextColor=\"#333333\"\n                            radialLabelsLinkColor={{ from: 'color' }}\n                            sliceLabelsSkipAngle={10}\n                            sliceLabelsTextColor=\"#333333\"\n                            enableRadialLabels={false}\n                            enableSliceLabels={false}\n                            tooltip={function(e){\n                                var t=e.datum;\n                                return <div\n                                    key={t.id}\n                                    style={{\n                                        color: '#999999',\n                                        fontSize: '11px',\n                                        backgroundColor: '#ffffff',\n                                        borderRadius: '5px',\n                                        padding: '3px 10px',\n                                        boxShadow: '0px 0px 10px 2px rgba(0, 0, 0, 0.15)',\n                                    }}\n                                >\n                                    <span style={{\n                                        display: 'inline-block',\n                                        marginRight: '5px',\n                                        width: '8px',\n                                        height: '8px',\n                                        borderRadius: '4px',\n                                        background: t.color\n                                    }}></span>\n                                    {t.id}\n                                    <span style={{color: '#333333', marginLeft: '5px', fontSize: '13px'}}>${t.value}</span>\n                                </div>\n                            }}\n                            legends={[\n                                {\n                                    anchor: 'bottom',\n                                    direction: 'row',\n                                    justify: false,\n                                    translateX: 0,\n                                    translateY: 40,\n                                    itemsSpacing: 20,\n                                    itemWidth: 100,\n                                    itemHeight: 18,\n                                    itemTextColor: '#999',\n                                    itemDirection: 'left-to-right',\n                                    itemOpacity: 1,\n                                    symbolSize: 8,\n                                    symbolShape: 'circle',\n                                    effects: [\n                                        {\n                                            on: 'hover',\n                                            style: {\n                                                itemTextColor: '#000',\n                                            }\n                                        }\n                                    ]\n                                }\n                            ]}\n                            theme={{\n                                legends: {\n                                    text: {\n                                        color: '#666666'\n                                    }\n                                }\n                            }}\n                        />\n                        <div style={pieInnerStyles.overlay}>\n                            <span style={pieInnerStyles.number}>$234995.300</span>\n                            <span style={pieInnerStyles.text}>Net assets</span>\n                        </div>\n                    </div>\n\n                    <Text fontSize='18px' fontWeight='bold' color='#333333' marginLeft='25px'>Assets trend</Text>\n                    <LineChartWrapper>\n                        <ResponsiveLine\n                            data={lineData}\n                            margin={{ top: 30, right: 0, bottom: 50, left: 0 }}\n                            xScale={{ type: 'point' }}\n                            yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}\n                            yFormat=\" >-.2f\"\n                            axisTop={null}\n                            axisRight={null}\n                            axisLeft={null}\n                            axisBottom={{\n                                orient: 'bottom',\n                                tickSize: 0,\n                                tickPadding: 15,\n                                tickRotation: 0,\n                                tickValues: [\"2020.08\", \"2020.09\", \"2020.10\", \"2020.11\"],\n                            }}\n                            enableArea={true}\n                            enableGridX={false}\n                            enableGridY={false}\n                            crosshairType=\"top\"\n                            curve='monotoneX'\n                            colors={['#406AFE', '#FF71C5', '#F6883B']}\n                            pointSize={5}\n                            pointColor=\"#ffffff\"\n                            pointBorderWidth={2}\n                            pointBorderColor={{ from: 'serieColor' }}\n                            pointLabelYOffset={-12}\n                            enablePoints={false}\n                            useMesh={true}\n                            enableSlices='x'\n                            animate={true}\n                            sliceTooltip={({ slice }) => {\n                                return (\n                                    <div\n                                        style={{\n                                            background: 'white',\n                                            padding: '9px 12px',\n                                            opacity: '0.92',\n                                            width: '130px',\n                                            height: '140px',\n                                            borderRadius: '10px',\n                                            boxShadow: '0px 0px 10px 2px rgba(0, 0, 0, 0.15)',\n                                        }}\n                                    >\n                                        {slice.points.map(point => (\n                                            <div\n                                                key={point.id}\n                                                style={{\n                                                    color: '#999999',\n                                                    padding: '3px 0',\n                                                    fontSize: '11px'\n                                                }}\n                                            >\n                                                <div>\n                                                    <span style={{\n                                                        display: 'inline-block',\n                                                        marginRight: '5px',\n                                                        width: '8px',\n                                                        height: '8px',\n                                                        borderRadius: '4px',\n                                                        background: point.serieColor\n                                                    }}></span>\n                                                    {point.serieId}\n                                                </div>\n                                                <span style={{color: '#333333', marginLeft: '13px', fontSize: '13px'}}>${point.data.yFormatted}</span>\n                                            </div>\n                                        ))}\n                                    </div>\n                                )\n                            }}\n                            // onMouseLeave={() => {\n                            //     hideTooltip();\n                            // }}\n                            defs={[\n                                {\n                                    id: 'gradientA',\n                                    type: 'linearGradient',\n                                    colors: [\n                                        { offset: 0, color: '#F6883B' },\n                                        { offset: 60, color: '#ffffff' },\n                                    ],\n                                },\n                                {\n                                    id: 'gradientB',\n                                    type: 'linearGradient',\n                                    colors: [\n                                        { offset: 0, color: '#FF71C5' },\n                                        { offset: 60, color: '#ffffff' },\n                                    ],\n                                },\n                                {\n                                    id: 'gradientC',\n                                    type: 'linearGradient',\n                                    colors: [\n                                        { offset: 0, color: '#406AFE' },\n                                        { offset: 100, color: '#ffffff' },\n                                    ],\n                                },\n                            ]}\n                            fill={[\n                                { match: d => d.id === 'TotalAssets', id: 'gradientA' },\n                                { match: d => d.id === 'NetAssets', id: 'gradientB' },\n                                { match: d => d.id === 'Total liabilities', id: 'gradientC' },\n                            ]}\n                            // legends={[\n                            //     {\n                            //         anchor: 'top',\n                            //         direction: 'row',\n                            //         justify: false,\n                            //         translateX: 10,\n                            //         translateY: -40,\n                            //         itemsSpacing: 0,\n                            //         itemDirection: 'left-to-right',\n                            //         itemWidth: 100,\n                            //         itemHeight: 20,\n                            //         symbolSize: 8,\n                            //         symbolShape: 'circle',\n                            //     }\n                            // ]}\n                            theme={{\n                                axis: {\n                                    ticks: {\n                                        text: {\n                                            fill: \"#666666\",\n                                        },\n                                    },\n                                },\n                                // legends: {\n                                //     text: {\n                                //         fill: \"#999999\",\n                                //     }\n                                // }\n                            }}\n                        />\n                    </LineChartWrapper>\n\n                    <Text fontSize='18px' fontWeight='bold' color='#333333' marginLeft='25px'>Profit and loss of assets</Text>\n                    <BarChartWrapper>\n                        <ResponsiveBar\n                            enableGridY={false}\n                            margin={{ top: 60, right: 20, bottom: 60, left: 20 }}\n                            padding={0.6}\n                            colors={getOrdinalColorScale(barData.map(c => c.color), 'index')}\n                            axisBottom={{\n                                tickSize: 0,\n                                tickPadding: 35,\n                                tickRotation: 0,\n                            }}\n                            axisLeft={null}\n                            borderRadius={5}\n                            labelTextColor='#666666'\n                            barComponent={BarComponent}\n                            data={barData}\n                            keys={[\"earnings\"]}\n                            indexBy=\"currency\"\n                            markers={[\n                                {\n                                    axis: 'y',\n                                    value: 0,\n                                    lineStyle: { stroke: 'rgba(64, 106, 254, 0.12)'},\n                                },\n                            ]}\n                        />\n                        <div style={barInnerStyles.overlay}>\n                            <span style={barInnerStyles.span}></span>\n                            <div style={barInnerStyles.divWrapper}>\n                                <span style={barInnerStyles.text}>Earnings today</span>\n                                <span style={barInnerStyles.number}>$1254576.03</span>\n                            </div>\n                        </div>\n                    </BarChartWrapper>\n                </BodyWrapper>\n            </AppBody>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}