{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder_1 = require(\"../axis/AxisBuilder\");\n\nvar labelStyle_1 = require(\"../../label/labelStyle\");\n\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n\nexports.buildElStyle = buildElStyle;\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get(['label', 'precision']),\n    formatter: axisPointerModel.get(['label', 'formatter'])\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2];\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2);\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get(['axisLine', 'lineStyle', 'color']);\n  }\n\n  elOption.label = {\n    x: position[0],\n    y: position[1],\n    style: labelStyle_1.createTextStyle(labelModel, {\n      text: text,\n      font: font,\n      fill: labelModel.getTextColor(),\n      padding: paddings,\n      backgroundColor: bgColor\n    }),\n    z2: 10\n  };\n}\n\nexports.buildLabelElOption = buildLabelElOption;\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  value = axis.scale.parse(value);\n  var text = axis.scale.getLabel({\n    value: value\n  }, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params_1 = {\n      value: axisHelper.getAxisRawValue(axis, {\n        value: value\n      }),\n      axisDimension: axis.dim,\n      axisIndex: axis.index,\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params_1.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params_1);\n    }\n  }\n\n  return text;\n}\n\nexports.getValueLabel = getValueLabel;\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nexports.getTransformedPosition = getTransformedPosition;\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder_1[\"default\"].innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get(['label', 'margin']);\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n\nexports.makeLineShape = makeLineShape;\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nexports.makeRectShape = makeRectShape;\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.makeSectorShape = makeSectorShape;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/component/axisPointer/viewHelper.js"],"names":["exports","__esModule","zrUtil","require","graphic","textContain","formatUtil","matrix","axisHelper","AxisBuilder_1","labelStyle_1","buildElStyle","axisPointerModel","axisPointerType","get","styleModel","getModel","style","getLineStyle","fill","getAreaStyle","stroke","buildLabelElOption","elOption","axisModel","api","labelPos","value","text","getValueLabel","axis","ecModel","precision","formatter","labelModel","paddings","normalizeCssArray","font","getFont","textRect","getBoundingRect","position","width","height","align","verticalAlign","confineInContainer","bgColor","label","x","y","createTextStyle","getTextColor","padding","backgroundColor","z2","viewWidth","getWidth","viewHeight","getHeight","Math","min","max","seriesDataIndices","opt","scale","parse","getLabel","params_1","getAxisRawValue","axisDimension","dim","axisIndex","index","seriesData","each","idxItem","series","getSeriesByIndex","seriesIndex","dataIndex","dataIndexInside","dataParams","getDataParams","push","isString","replace","isFunction","getTransformedPosition","layoutInfo","transform","create","rotate","rotation","translate","applyTransform","dataToCoord","labelOffset","labelDirection","labelMargin","buildCartesianSingleLabelElOption","textLayout","innerTextLayout","textAlign","textVerticalAlign","makeLineShape","p1","p2","xDimIndex","x1","y1","x2","y2","makeRectShape","xy","wh","makeSectorShape","cx","cy","r0","r","startAngle","endAngle","clockwise"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder_1 = require(\"../axis/AxisBuilder\");\n\nvar labelStyle_1 = require(\"../../label/labelStyle\");\n\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n\nexports.buildElStyle = buildElStyle;\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get(['label', 'precision']),\n    formatter: axisPointerModel.get(['label', 'formatter'])\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2];\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2);\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get(['axisLine', 'lineStyle', 'color']);\n  }\n\n  elOption.label = {\n    x: position[0],\n    y: position[1],\n    style: labelStyle_1.createTextStyle(labelModel, {\n      text: text,\n      font: font,\n      fill: labelModel.getTextColor(),\n      padding: paddings,\n      backgroundColor: bgColor\n    }),\n    z2: 10\n  };\n}\n\nexports.buildLabelElOption = buildLabelElOption;\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  value = axis.scale.parse(value);\n  var text = axis.scale.getLabel({\n    value: value\n  }, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params_1 = {\n      value: axisHelper.getAxisRawValue(axis, {\n        value: value\n      }),\n      axisDimension: axis.dim,\n      axisIndex: axis.index,\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params_1.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params_1);\n    }\n  }\n\n  return text;\n}\n\nexports.getValueLabel = getValueLabel;\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nexports.getTransformedPosition = getTransformedPosition;\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder_1[\"default\"].innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get(['label', 'margin']);\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n\nexports.makeLineShape = makeLineShape;\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nexports.makeRectShape = makeRectShape;\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.makeSectorShape = makeSectorShape;"]},"metadata":{},"sourceType":"script"}