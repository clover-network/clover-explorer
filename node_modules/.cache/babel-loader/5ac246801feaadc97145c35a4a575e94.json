{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar globalListener = require(\"./globalListener\");\n\nvar Component_1 = require(\"../../view/Component\");\n\nvar AxisPointerView = function (_super) {\n  tslib_1.__extends(AxisPointerView, _super);\n\n  function AxisPointerView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = AxisPointerView.type;\n    return _this;\n  }\n\n  AxisPointerView.prototype.render = function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click';\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  };\n\n  AxisPointerView.prototype.remove = function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n  };\n\n  AxisPointerView.prototype.dispose = function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n  };\n\n  AxisPointerView.type = 'axisPointer';\n  return AxisPointerView;\n}(Component_1[\"default\"]);\n\nComponent_1[\"default\"].registerClass(AxisPointerView);\nexports[\"default\"] = AxisPointerView;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/component/axisPointer/AxisPointerView.js"],"names":["exports","__esModule","tslib_1","require","globalListener","Component_1","AxisPointerView","_super","__extends","_this","apply","arguments","type","prototype","render","globalAxisPointerModel","ecModel","api","globalTooltipModel","getComponent","triggerOn","get","register","currTrigger","e","dispatchAction","indexOf","x","offsetX","y","offsetY","remove","unregister","dispose","registerClass"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AAEA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAIC,cAAc,GAAGD,OAAO,CAAC,kBAAD,CAA5B;;AAEA,IAAIE,WAAW,GAAGF,OAAO,CAAC,sBAAD,CAAzB;;AAEA,IAAIG,eAAe,GAAG,UAAUC,MAAV,EAAkB;AACtCL,EAAAA,OAAO,CAACM,SAAR,CAAkBF,eAAlB,EAAmCC,MAAnC;;AAEA,WAASD,eAAT,GAA2B;AACzB,QAAIG,KAAK,GAAGF,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACG,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;;AAEAF,IAAAA,KAAK,CAACG,IAAN,GAAaN,eAAe,CAACM,IAA7B;AACA,WAAOH,KAAP;AACD;;AAEDH,EAAAA,eAAe,CAACO,SAAhB,CAA0BC,MAA1B,GAAmC,UAAUC,sBAAV,EAAkCC,OAAlC,EAA2CC,GAA3C,EAAgD;AACjF,QAAIC,kBAAkB,GAAGF,OAAO,CAACG,YAAR,CAAqB,SAArB,CAAzB;AACA,QAAIC,SAAS,GAAGL,sBAAsB,CAACM,GAAvB,CAA2B,WAA3B,KAA2CH,kBAAkB,IAAIA,kBAAkB,CAACG,GAAnB,CAAuB,WAAvB,CAAjE,IAAwG,iBAAxH;AACAjB,IAAAA,cAAc,CAACkB,QAAf,CAAwB,aAAxB,EAAuCL,GAAvC,EAA4C,UAAUM,WAAV,EAAuBC,CAAvB,EAA0BC,cAA1B,EAA0C;AACpF,UAAIL,SAAS,KAAK,MAAd,KAAyBG,WAAW,KAAK,OAAhB,IAA2BH,SAAS,CAACM,OAAV,CAAkBH,WAAlB,KAAkC,CAAtF,CAAJ,EAA8F;AAC5FE,QAAAA,cAAc,CAAC;AACbb,UAAAA,IAAI,EAAE,mBADO;AAEbW,UAAAA,WAAW,EAAEA,WAFA;AAGbI,UAAAA,CAAC,EAAEH,CAAC,IAAIA,CAAC,CAACI,OAHG;AAIbC,UAAAA,CAAC,EAAEL,CAAC,IAAIA,CAAC,CAACM;AAJG,SAAD,CAAd;AAMD;AACF,KATD;AAUD,GAbD;;AAeAxB,EAAAA,eAAe,CAACO,SAAhB,CAA0BkB,MAA1B,GAAmC,UAAUf,OAAV,EAAmBC,GAAnB,EAAwB;AACzDb,IAAAA,cAAc,CAAC4B,UAAf,CAA0B,aAA1B,EAAyCf,GAAzC;AACD,GAFD;;AAIAX,EAAAA,eAAe,CAACO,SAAhB,CAA0BoB,OAA1B,GAAoC,UAAUjB,OAAV,EAAmBC,GAAnB,EAAwB;AAC1Db,IAAAA,cAAc,CAAC4B,UAAf,CAA0B,aAA1B,EAAyCf,GAAzC;AACD,GAFD;;AAIAX,EAAAA,eAAe,CAACM,IAAhB,GAAuB,aAAvB;AACA,SAAON,eAAP;AACD,CAnCqB,CAmCpBD,WAAW,CAAC,SAAD,CAnCS,CAAtB;;AAqCAA,WAAW,CAAC,SAAD,CAAX,CAAuB6B,aAAvB,CAAqC5B,eAArC;AACAN,OAAO,CAAC,SAAD,CAAP,GAAqBM,eAArB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar globalListener = require(\"./globalListener\");\n\nvar Component_1 = require(\"../../view/Component\");\n\nvar AxisPointerView = function (_super) {\n  tslib_1.__extends(AxisPointerView, _super);\n\n  function AxisPointerView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = AxisPointerView.type;\n    return _this;\n  }\n\n  AxisPointerView.prototype.render = function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click';\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  };\n\n  AxisPointerView.prototype.remove = function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n  };\n\n  AxisPointerView.prototype.dispose = function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n  };\n\n  AxisPointerView.type = 'axisPointer';\n  return AxisPointerView;\n}(Component_1[\"default\"]);\n\nComponent_1[\"default\"].registerClass(AxisPointerView);\nexports[\"default\"] = AxisPointerView;"]},"metadata":{},"sourceType":"script"}