{"ast":null,"code":"import React, { useMemo, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport isPlainObject from 'lodash/isPlainObject';\nimport filter from 'lodash/filter';\nimport omit from 'lodash/omit';\nimport { absoluteAngleDegrees, radiansToDegrees, positionFromAngle, degreesToRadians, useTheme, useMotionConfig, useAnimatedPath } from '@nivo/core';\nimport { useSpring, animated } from 'react-spring';\nvar annotationSpecPropType = PropTypes.shape({\n  match: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  type: PropTypes.oneOf(['circle', 'rect', 'dot']).isRequired,\n  noteX: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    abs: PropTypes.number.isRequired\n  })]).isRequired,\n  noteY: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    abs: PropTypes.number.isRequired\n  })]).isRequired,\n  noteWidth: PropTypes.number,\n  noteTextOffset: PropTypes.number,\n  note: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n  offset: PropTypes.number\n});\nvar defaultProps = {\n  noteWidth: 120,\n  noteTextOffset: 8,\n  animate: true,\n  motionStiffness: 90,\n  motionDamping: 13\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar defaultPositionAccessor = function defaultPositionAccessor(item) {\n  return {\n    x: item.x,\n    y: item.y\n  };\n};\n\nvar bindAnnotations = function bindAnnotations(_ref) {\n  var items = _ref.items,\n      annotations = _ref.annotations,\n      _ref$getPosition = _ref.getPosition,\n      getPosition = _ref$getPosition === void 0 ? defaultPositionAccessor : _ref$getPosition,\n      getDimensions = _ref.getDimensions;\n  return annotations.reduce(function (acc, annotation) {\n    filter(items, annotation.match).forEach(function (item) {\n      var position = getPosition(item);\n      var dimensions = getDimensions(item, annotation.offset || 0);\n      acc.push(_objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, omit(annotation, ['match', 'offset'])), position), dimensions), {}, {\n        datum: item,\n        size: annotation.size || dimensions.size\n      }));\n    });\n    return acc;\n  }, []);\n};\n\nvar getLinkAngle = function getLinkAngle(sourceX, sourceY, targetX, targetY) {\n  var angle = Math.atan2(targetY - sourceY, targetX - sourceX);\n  return absoluteAngleDegrees(radiansToDegrees(angle));\n};\n\nvar computeAnnotation = function computeAnnotation(_ref2) {\n  var type = _ref2.type,\n      x = _ref2.x,\n      y = _ref2.y,\n      size = _ref2.size,\n      width = _ref2.width,\n      height = _ref2.height,\n      noteX = _ref2.noteX,\n      noteY = _ref2.noteY,\n      _ref2$noteWidth = _ref2.noteWidth,\n      noteWidth = _ref2$noteWidth === void 0 ? defaultProps.noteWidth : _ref2$noteWidth,\n      _ref2$noteTextOffset = _ref2.noteTextOffset,\n      noteTextOffset = _ref2$noteTextOffset === void 0 ? defaultProps.noteTextOffset : _ref2$noteTextOffset;\n  var computedNoteX;\n  var computedNoteY;\n\n  if (isPlainObject(noteX)) {\n    if (noteX.abs !== undefined) {\n      computedNoteX = noteX.abs;\n    }\n  } else {\n    computedNoteX = x + noteX;\n  }\n\n  if (isPlainObject(noteY)) {\n    if (noteY.abs !== undefined) {\n      computedNoteY = noteY.abs;\n    }\n  } else {\n    computedNoteY = y + noteY;\n  }\n\n  var computedX = x;\n  var computedY = y;\n  var angle = getLinkAngle(x, y, computedNoteX, computedNoteY);\n\n  if (type === 'circle') {\n    var position = positionFromAngle(degreesToRadians(angle), size / 2);\n    computedX += position.x;\n    computedY += position.y;\n  }\n\n  if (type === 'rect') {\n    var eighth = Math.round((angle + 90) / 45) % 8;\n\n    if (eighth === 0) {\n      computedY -= height / 2;\n    }\n\n    if (eighth === 1) {\n      computedX += width / 2;\n      computedY -= height / 2;\n    }\n\n    if (eighth === 2) {\n      computedX += width / 2;\n    }\n\n    if (eighth === 3) {\n      computedX += width / 2;\n      computedY += height / 2;\n    }\n\n    if (eighth === 4) {\n      computedY += height / 2;\n    }\n\n    if (eighth === 5) {\n      computedX -= width / 2;\n      computedY += height / 2;\n    }\n\n    if (eighth === 6) {\n      computedX -= width / 2;\n    }\n\n    if (eighth === 7) {\n      computedX -= width / 2;\n      computedY -= height / 2;\n    }\n  }\n\n  var textX = computedNoteX;\n  var textY = computedNoteY - noteTextOffset;\n  var noteLineX = computedNoteX;\n  var noteLineY = computedNoteY;\n\n  if ((angle + 90) % 360 > 180) {\n    textX -= noteWidth;\n    noteLineX -= noteWidth;\n  } else {\n    noteLineX += noteWidth;\n  }\n\n  return {\n    points: [[computedX, computedY], [computedNoteX, computedNoteY], [noteLineX, noteLineY]],\n    text: [textX, textY],\n    angle: angle + 90\n  };\n};\n\nvar useAnnotations = function useAnnotations(_ref) {\n  var items = _ref.items,\n      annotations = _ref.annotations,\n      getPosition = _ref.getPosition,\n      getDimensions = _ref.getDimensions;\n  return useMemo(function () {\n    return bindAnnotations({\n      items: items,\n      annotations: annotations,\n      getPosition: getPosition,\n      getDimensions: getDimensions\n    });\n  }, [items, annotations, getPosition, getDimensions]);\n};\n\nvar useComputedAnnotations = function useComputedAnnotations(_ref2) {\n  var annotations = _ref2.annotations,\n      containerWidth = _ref2.containerWidth,\n      containerHeight = _ref2.containerHeight;\n  return useMemo(function () {\n    return annotations.map(function (annotation) {\n      return _objectSpread2(_objectSpread2({}, annotation), {}, {\n        computed: computeAnnotation(_objectSpread2({\n          containerWidth: containerWidth,\n          containerHeight: containerHeight\n        }, annotation))\n      });\n    });\n  }, [annotations, containerWidth, containerHeight]);\n};\n\nvar useComputedAnnotation = function useComputedAnnotation(_ref3) {\n  var type = _ref3.type,\n      containerWidth = _ref3.containerWidth,\n      containerHeight = _ref3.containerHeight,\n      x = _ref3.x,\n      y = _ref3.y,\n      size = _ref3.size,\n      width = _ref3.width,\n      height = _ref3.height,\n      noteX = _ref3.noteX,\n      noteY = _ref3.noteY,\n      noteWidth = _ref3.noteWidth,\n      noteTextOffset = _ref3.noteTextOffset;\n  return useMemo(function () {\n    return computeAnnotation({\n      type: type,\n      containerWidth: containerWidth,\n      containerHeight: containerHeight,\n      x: x,\n      y: y,\n      size: size,\n      width: width,\n      height: height,\n      noteX: noteX,\n      noteY: noteY,\n      noteWidth: noteWidth,\n      noteTextOffset: noteTextOffset\n    });\n  }, [type, containerWidth, containerHeight, x, y, size, width, height, noteX, noteY, noteWidth, noteTextOffset]);\n};\n\nvar AnnotationNote = memo(function (_ref) {\n  var datum = _ref.datum,\n      x = _ref.x,\n      y = _ref.y,\n      note = _ref.note;\n  var theme = useTheme();\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfiig = _useMotionConfig.config;\n\n  var animatedProps = useSpring({\n    x: x,\n    y: y,\n    config: springConfiig,\n    immediate: !animate\n  });\n\n  if (typeof note === 'function') {\n    return note({\n      x: x,\n      y: y,\n      datum: datum\n    });\n  }\n\n  return React.createElement(React.Fragment, null, theme.annotations.text.outlineWidth > 0 && React.createElement(animated.text, {\n    x: animatedProps.x,\n    y: animatedProps.y,\n    style: _objectSpread2(_objectSpread2({}, theme.annotations.text), {}, {\n      strokeLinejoin: 'round',\n      strokeWidth: theme.annotations.text.outlineWidth * 2,\n      stroke: theme.annotations.text.outlineColor\n    })\n  }, note), React.createElement(animated.text, {\n    x: animatedProps.x,\n    y: animatedProps.y,\n    style: omit(theme.annotations.text, ['outlineWidth', 'outlineColor'])\n  }, note));\n});\nAnnotationNote.displayName = 'AnnotationNote';\nAnnotationNote.defaultProps = {};\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _toArray(arr) {\n  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar AnnotationLink = memo(function (_ref) {\n  var isOutline = _ref.isOutline,\n      props = _objectWithoutProperties(_ref, [\"isOutline\"]);\n\n  var theme = useTheme();\n\n  var _props$points = _toArray(props.points),\n      point = _props$points[0],\n      points = _props$points.slice(1);\n\n  var path = points.reduce(function (acc, _ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        x = _ref3[0],\n        y = _ref3[1];\n\n    return \"\".concat(acc, \" L\").concat(x, \",\").concat(y);\n  }, \"M\".concat(point[0], \",\").concat(point[1]));\n  var animatedPath = useAnimatedPath(path);\n\n  if (isOutline && theme.annotations.link.outlineWidth <= 0) {\n    return null;\n  }\n\n  var style = _objectSpread2({}, theme.annotations.link);\n\n  if (isOutline) {\n    style.strokeLinecap = 'square';\n    style.strokeWidth = theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2;\n    style.stroke = theme.annotations.link.outlineColor;\n  }\n\n  return React.createElement(animated.path, {\n    fill: \"none\",\n    d: animatedPath,\n    style: style\n  });\n});\nAnnotationLink.displayName = 'AnnotationLink';\nAnnotationLink.defaultProps = {\n  isOutline: false\n};\nvar CircleAnnotationOutline = memo(function (_ref) {\n  var x = _ref.x,\n      y = _ref.y,\n      size = _ref.size;\n  var theme = useTheme();\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var animatedProps = useSpring({\n    x: x,\n    y: y,\n    radius: size / 2,\n    config: springConfig,\n    immediate: !animate\n  });\n  return React.createElement(React.Fragment, null, theme.annotations.outline.outlineWidth > 0 && React.createElement(animated.circle, {\n    cx: animatedProps.x,\n    cy: animatedProps.y,\n    r: animatedProps.radius,\n    style: _objectSpread2(_objectSpread2({}, theme.annotations.outline), {}, {\n      fill: 'none',\n      strokeWidth: theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2,\n      stroke: theme.annotations.outline.outlineColor\n    })\n  }), React.createElement(animated.circle, {\n    cx: animatedProps.x,\n    cy: animatedProps.y,\n    r: animatedProps.radius,\n    style: theme.annotations.outline\n  }));\n});\nCircleAnnotationOutline.displayName = 'CircleAnnotationOutline';\nvar DotAnnotationOutline = memo(function (_ref) {\n  var x = _ref.x,\n      y = _ref.y,\n      size = _ref.size;\n  var theme = useTheme();\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var animatedProps = useSpring({\n    x: x,\n    y: y,\n    radius: size / 2,\n    config: springConfig,\n    immediate: !animate\n  });\n  return React.createElement(React.Fragment, null, theme.annotations.outline.outlineWidth > 0 && React.createElement(animated.circle, {\n    cx: animatedProps.x,\n    cy: animatedProps.y,\n    r: animatedProps.radius,\n    style: _objectSpread2(_objectSpread2({}, theme.annotations.outline), {}, {\n      fill: 'none',\n      strokeWidth: theme.annotations.outline.outlineWidth * 2,\n      stroke: theme.annotations.outline.outlineColor\n    })\n  }), React.createElement(animated.circle, {\n    cx: animatedProps.x,\n    cy: animatedProps.y,\n    r: animatedProps.radius,\n    style: theme.annotations.symbol\n  }));\n});\nDotAnnotationOutline.displayName = 'DotAnnotationOutline';\nDotAnnotationOutline.defaultProps = {\n  size: 4\n};\nvar RectAnnotationOutline = memo(function (_ref) {\n  var x = _ref.x,\n      y = _ref.y,\n      width = _ref.width,\n      height = _ref.height;\n  var theme = useTheme();\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var animatedProps = useSpring({\n    x: x - width / 2,\n    y: y - height / 2,\n    width: width,\n    height: height,\n    config: springConfig,\n    immediate: !animate\n  });\n  return React.createElement(React.Fragment, null, theme.annotations.outline.outlineWidth > 0 && React.createElement(animated.rect, {\n    x: animatedProps.x,\n    y: animatedProps.y,\n    width: animatedProps.width,\n    height: animatedProps.height,\n    style: _objectSpread2(_objectSpread2({}, theme.annotations.outline), {}, {\n      fill: 'none',\n      strokeWidth: theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2,\n      stroke: theme.annotations.outline.outlineColor\n    })\n  }), React.createElement(animated.rect, {\n    x: animatedProps.x,\n    y: animatedProps.y,\n    width: animatedProps.width,\n    height: animatedProps.height,\n    style: theme.annotations.outline\n  }));\n});\nRectAnnotationOutline.displayName = 'RectAnnotationOutline';\nvar Annotation = memo(function (_ref) {\n  var datum = _ref.datum,\n      type = _ref.type,\n      containerWidth = _ref.containerWidth,\n      containerHeight = _ref.containerHeight,\n      x = _ref.x,\n      y = _ref.y,\n      size = _ref.size,\n      width = _ref.width,\n      height = _ref.height,\n      noteX = _ref.noteX,\n      noteY = _ref.noteY,\n      noteWidth = _ref.noteWidth,\n      noteTextOffset = _ref.noteTextOffset,\n      note = _ref.note;\n  var computed = useComputedAnnotation({\n    type: type,\n    containerWidth: containerWidth,\n    containerHeight: containerHeight,\n    x: x,\n    y: y,\n    size: size,\n    width: width,\n    height: height,\n    noteX: noteX,\n    noteY: noteY,\n    noteWidth: noteWidth,\n    noteTextOffset: noteTextOffset\n  });\n  return React.createElement(React.Fragment, null, React.createElement(AnnotationLink, {\n    points: computed.points,\n    isOutline: true\n  }), type === 'circle' && React.createElement(CircleAnnotationOutline, {\n    x: x,\n    y: y,\n    size: size\n  }), type === 'dot' && React.createElement(DotAnnotationOutline, {\n    x: x,\n    y: y,\n    size: size\n  }), type === 'rect' && React.createElement(RectAnnotationOutline, {\n    x: x,\n    y: y,\n    width: width,\n    height: height\n  }), React.createElement(AnnotationLink, {\n    points: computed.points\n  }), React.createElement(AnnotationNote, {\n    datum: datum,\n    x: computed.text[0],\n    y: computed.text[1],\n    note: note\n  }));\n});\nAnnotation.displayName = 'Annotation';\nAnnotation.defaultProps = {\n  noteWidth: defaultProps.noteWidth,\n  noteTextOffset: defaultProps.noteTextOffset\n};\n\nvar drawPoints = function drawPoints(ctx, points) {\n  points.forEach(function (_ref, index) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        x = _ref2[0],\n        y = _ref2[1];\n\n    if (index === 0) {\n      ctx.moveTo(x, y);\n    } else {\n      ctx.lineTo(x, y);\n    }\n  });\n};\n\nvar renderAnnotationsToCanvas = function renderAnnotationsToCanvas(ctx, _ref3) {\n  var annotations = _ref3.annotations,\n      theme = _ref3.theme;\n  if (annotations.length === 0) return;\n  ctx.save();\n  annotations.forEach(function (annotation) {\n    if (theme.annotations.link.outlineWidth > 0) {\n      ctx.lineCap = 'square';\n      ctx.strokeStyle = theme.annotations.link.outlineColor;\n      ctx.lineWidth = theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2;\n      ctx.beginPath();\n      drawPoints(ctx, annotation.computed.points);\n      ctx.stroke();\n      ctx.lineCap = 'butt';\n    }\n\n    if (annotation.type === 'circle' && theme.annotations.outline.outlineWidth > 0) {\n      ctx.strokeStyle = theme.annotations.outline.outlineColor;\n      ctx.lineWidth = theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2;\n      ctx.beginPath();\n      ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI);\n      ctx.stroke();\n    }\n\n    if (annotation.type === 'dot' && theme.annotations.symbol.outlineWidth > 0) {\n      ctx.strokeStyle = theme.annotations.symbol.outlineColor;\n      ctx.lineWidth = theme.annotations.symbol.outlineWidth * 2;\n      ctx.beginPath();\n      ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI);\n      ctx.stroke();\n    }\n\n    if (annotation.type === 'rect' && theme.annotations.outline.outlineWidth > 0) {\n      ctx.strokeStyle = theme.annotations.outline.outlineColor;\n      ctx.lineWidth = theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2;\n      ctx.beginPath();\n      ctx.rect(annotation.x - annotation.width / 2, annotation.y - annotation.height / 2, annotation.width, annotation.height);\n      ctx.stroke();\n    }\n\n    ctx.strokeStyle = theme.annotations.link.stroke;\n    ctx.lineWidth = theme.annotations.link.strokeWidth;\n    ctx.beginPath();\n    drawPoints(ctx, annotation.computed.points);\n    ctx.stroke();\n\n    if (annotation.type === 'circle') {\n      ctx.strokeStyle = theme.annotations.outline.stroke;\n      ctx.lineWidth = theme.annotations.outline.strokeWidth;\n      ctx.beginPath();\n      ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI);\n      ctx.stroke();\n    }\n\n    if (annotation.type === 'dot') {\n      ctx.fillStyle = theme.annotations.symbol.fill;\n      ctx.beginPath();\n      ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI);\n      ctx.fill();\n    }\n\n    if (annotation.type === 'rect') {\n      ctx.strokeStyle = theme.annotations.outline.stroke;\n      ctx.lineWidth = theme.annotations.outline.strokeWidth;\n      ctx.beginPath();\n      ctx.rect(annotation.x - annotation.width / 2, annotation.y - annotation.height / 2, annotation.width, annotation.height);\n      ctx.stroke();\n    }\n\n    if (typeof annotation.note === 'function') {\n      annotation.note(ctx, {\n        datum: annotation.datum,\n        x: annotation.computed.text[0],\n        y: annotation.computed.text[1],\n        theme: theme\n      });\n    } else {\n      ctx.font = \"\".concat(theme.annotations.text.fontSize, \"px \").concat(theme.annotations.text.fontFamily);\n      ctx.fillStyle = theme.annotations.text.fill;\n      ctx.strokeStyle = theme.annotations.text.outlineColor;\n      ctx.lineWidth = theme.annotations.text.outlineWidth * 2;\n\n      if (theme.annotations.text.outlineWidth > 0) {\n        ctx.lineJoin = 'round';\n        ctx.strokeText(annotation.note, annotation.computed.text[0], annotation.computed.text[1]);\n        ctx.lineJoin = 'miter';\n      }\n\n      ctx.fillText(annotation.note, annotation.computed.text[0], annotation.computed.text[1]);\n    }\n  });\n  ctx.restore();\n};\n\nexport { Annotation, annotationSpecPropType, bindAnnotations, computeAnnotation, defaultProps, getLinkAngle, renderAnnotationsToCanvas, useAnnotations, useComputedAnnotation, useComputedAnnotations };","map":{"version":3,"sources":["../src/props.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/compute.js","../src/hooks.js","../src/AnnotationNote.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../src/AnnotationLink.js","../src/CircleAnnotationOutline.js","../src/DotAnnotationOutline.js","../src/RectAnnotationOutline.js","../src/Annotation.js","../src/canvas.js"],"names":["annotationSpecPropType","match","PropTypes","type","noteX","abs","isRequired","noteY","noteWidth","noteTextOffset","note","offset","number","defaultProps","animate","motionStiffness","motionDamping","defineProperty","defaultPositionAccessor","x","item","y","bindAnnotations","items","annotations","getPosition","getDimensions","filter","annotation","position","dimensions","acc","omit","datum","size","getLinkAngle","angle","Math","targetY","targetX","absoluteAngleDegrees","radiansToDegrees","computeAnnotation","width","height","isPlainObject","computedNoteX","computedNoteY","computedX","computedY","positionFromAngle","degreesToRadians","eighth","textX","textY","noteLineX","noteLineY","points","text","useAnnotations","useMemo","useComputedAnnotations","containerWidth","containerHeight","computed","useComputedAnnotation","AnnotationNote","memo","theme","useTheme","springConfiig","useMotionConfig","animatedProps","useSpring","config","immediate","strokeLinejoin","strokeWidth","stroke","outlineColor","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","iterableToArray","objectWithoutPropertiesLoose","AnnotationLink","isOutline","props","point","path","animatedPath","useAnimatedPath","style","CircleAnnotationOutline","springConfig","radius","fill","outline","DotAnnotationOutline","symbol","RectAnnotationOutline","Annotation","drawPoints","index","ctx","renderAnnotationsToCanvas"],"mappings":"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","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\n\nexport const annotationSpecPropType = PropTypes.shape({\n    match: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    type: PropTypes.oneOf(['circle', 'rect', 'dot']).isRequired,\n\n    noteX: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.shape({\n            abs: PropTypes.number.isRequired,\n        }),\n    ]).isRequired,\n    noteY: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.shape({\n            abs: PropTypes.number.isRequired,\n        }),\n    ]).isRequired,\n    noteWidth: PropTypes.number,\n    noteTextOffset: PropTypes.number,\n    note: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n\n    offset: PropTypes.number,\n})\n\nexport const defaultProps = {\n    noteWidth: 120,\n    noteTextOffset: 8,\n\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 13,\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport isPlainObject from 'lodash/isPlainObject'\nimport filter from 'lodash/filter'\nimport omit from 'lodash/omit'\nimport {\n    radiansToDegrees,\n    absoluteAngleDegrees,\n    degreesToRadians,\n    positionFromAngle,\n} from '@nivo/core'\nimport { defaultProps } from './props'\n\nconst defaultPositionAccessor = item => ({ x: item.x, y: item.y })\n\nexport const bindAnnotations = ({\n    items,\n    annotations,\n    getPosition = defaultPositionAccessor,\n    getDimensions,\n}) =>\n    annotations.reduce((acc, annotation) => {\n        filter(items, annotation.match).forEach(item => {\n            const position = getPosition(item)\n            const dimensions = getDimensions(item, annotation.offset || 0)\n\n            acc.push({\n                ...omit(annotation, ['match', 'offset']),\n                ...position,\n                ...dimensions,\n                datum: item,\n                size: annotation.size || dimensions.size,\n            })\n        })\n\n        return acc\n    }, [])\n\nexport const getLinkAngle = (sourceX, sourceY, targetX, targetY) => {\n    const angle = Math.atan2(targetY - sourceY, targetX - sourceX)\n    return absoluteAngleDegrees(radiansToDegrees(angle))\n}\n\nexport const computeAnnotation = ({\n    type,\n    // containerWidth,\n    // containerHeight,\n    x,\n    y,\n    size,\n    width,\n    height,\n    noteX,\n    noteY,\n    noteWidth = defaultProps.noteWidth,\n    noteTextOffset = defaultProps.noteTextOffset,\n}) => {\n    let computedNoteX\n    let computedNoteY\n\n    if (isPlainObject(noteX)) {\n        if (noteX.abs !== undefined) {\n            computedNoteX = noteX.abs\n        }\n    } else {\n        computedNoteX = x + noteX\n    }\n\n    if (isPlainObject(noteY)) {\n        if (noteY.abs !== undefined) {\n            computedNoteY = noteY.abs\n        }\n    } else {\n        computedNoteY = y + noteY\n    }\n\n    let computedX = x\n    let computedY = y\n\n    const angle = getLinkAngle(x, y, computedNoteX, computedNoteY)\n\n    if (type === 'circle') {\n        const position = positionFromAngle(degreesToRadians(angle), size / 2)\n        computedX += position.x\n        computedY += position.y\n    }\n\n    if (type === 'rect') {\n        const eighth = Math.round((angle + 90) / 45) % 8\n        if (eighth === 0) {\n            computedY -= height / 2\n        }\n        if (eighth === 1) {\n            computedX += width / 2\n            computedY -= height / 2\n        }\n        if (eighth === 2) {\n            computedX += width / 2\n        }\n        if (eighth === 3) {\n            computedX += width / 2\n            computedY += height / 2\n        }\n        if (eighth === 4) {\n            computedY += height / 2\n        }\n        if (eighth === 5) {\n            computedX -= width / 2\n            computedY += height / 2\n        }\n        if (eighth === 6) {\n            computedX -= width / 2\n        }\n        if (eighth === 7) {\n            computedX -= width / 2\n            computedY -= height / 2\n        }\n    }\n\n    let textX = computedNoteX\n    let textY = computedNoteY - noteTextOffset\n\n    let noteLineX = computedNoteX\n    let noteLineY = computedNoteY\n\n    if ((angle + 90) % 360 > 180) {\n        textX -= noteWidth\n        noteLineX -= noteWidth\n    } else {\n        noteLineX += noteWidth\n    }\n\n    return {\n        points: [\n            [computedX, computedY],\n            [computedNoteX, computedNoteY],\n            [noteLineX, noteLineY],\n        ],\n        text: [textX, textY],\n        angle: angle + 90,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useMemo } from 'react'\nimport { bindAnnotations, computeAnnotation } from './compute'\n\nexport const useAnnotations = ({ items, annotations, getPosition, getDimensions }) =>\n    useMemo(\n        () =>\n            bindAnnotations({\n                items,\n                annotations,\n                getPosition,\n                getDimensions,\n            }),\n        [items, annotations, getPosition, getDimensions]\n    )\n\nexport const useComputedAnnotations = ({ annotations, containerWidth, containerHeight }) =>\n    useMemo(\n        () =>\n            annotations.map(annotation => ({\n                ...annotation,\n                computed: computeAnnotation({\n                    containerWidth,\n                    containerHeight,\n                    ...annotation,\n                }),\n            })),\n        [annotations, containerWidth, containerHeight]\n    )\n\nexport const useComputedAnnotation = ({\n    type,\n    containerWidth,\n    containerHeight,\n    x,\n    y,\n    size,\n    width,\n    height,\n    noteX,\n    noteY,\n    noteWidth,\n    noteTextOffset,\n}) =>\n    useMemo(\n        () =>\n            computeAnnotation({\n                type,\n                containerWidth,\n                containerHeight,\n                x,\n                y,\n                size,\n                width,\n                height,\n                noteX,\n                noteY,\n                noteWidth,\n                noteTextOffset,\n            }),\n        [\n            type,\n            containerWidth,\n            containerHeight,\n            x,\n            y,\n            size,\n            width,\n            height,\n            noteX,\n            noteY,\n            noteWidth,\n            noteTextOffset,\n        ]\n    )\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport omit from 'lodash/omit'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@nivo/core'\n\nconst AnnotationNote = memo(({ datum, x, y, note }) => {\n    const theme = useTheme()\n    const { animate, config: springConfiig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        config: springConfiig,\n        immediate: !animate,\n    })\n\n    if (typeof note === 'function') {\n        return note({ x, y, datum })\n    }\n\n    return (\n        <>\n            {theme.annotations.text.outlineWidth > 0 && (\n                <animated.text\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    style={{\n                        ...theme.annotations.text,\n                        strokeLinejoin: 'round',\n                        strokeWidth: theme.annotations.text.outlineWidth * 2,\n                        stroke: theme.annotations.text.outlineColor,\n                    }}\n                >\n                    {note}\n                </animated.text>\n            )}\n            <animated.text\n                x={animatedProps.x}\n                y={animatedProps.y}\n                style={omit(theme.annotations.text, ['outlineWidth', 'outlineColor'])}\n            >\n                {note}\n            </animated.text>\n        </>\n    )\n})\n\nAnnotationNote.displayName = 'AnnotationNote'\nAnnotationNote.propTypes = {\n    datum: PropTypes.object.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    note: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n}\nAnnotationNote.defaultProps = {}\n\nexport default AnnotationNote\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from 'react-spring'\nimport { useAnimatedPath, useTheme } from '@nivo/core'\n\nconst AnnotationLink = memo(({ isOutline, ...props }) => {\n    const theme = useTheme()\n    const [point, ...points] = props.points\n\n    const path = points.reduce((acc, [x, y]) => `${acc} L${x},${y}`, `M${point[0]},${point[1]}`)\n    const animatedPath = useAnimatedPath(path)\n\n    if (isOutline && theme.annotations.link.outlineWidth <= 0) {\n        return null\n    }\n\n    const style = { ...theme.annotations.link }\n    if (isOutline) {\n        style.strokeLinecap = 'square'\n        style.strokeWidth =\n            theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n        style.stroke = theme.annotations.link.outlineColor\n    }\n\n    return <animated.path fill=\"none\" d={animatedPath} style={style} />\n})\n\nAnnotationLink.displayName = 'AnnotationLink'\nAnnotationLink.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.array).isRequired,\n    isOutline: PropTypes.bool.isRequired,\n}\nAnnotationLink.defaultProps = {\n    isOutline: false,\n}\n\nexport default AnnotationLink\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nconst CircleAnnotationOutline = memo(({ x, y, size }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n})\n\nCircleAnnotationOutline.displayName = 'CircleAnnotationOutline'\nCircleAnnotationOutline.propTypes = {\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired,\n}\n\nexport default CircleAnnotationOutline\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nconst DotAnnotationOutline = memo(({ x, y, size }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth: theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.symbol}\n            />\n        </>\n    )\n})\n\nDotAnnotationOutline.displayName = 'DotAnnotationOutline'\nDotAnnotationOutline.propTypes = {\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired,\n}\nDotAnnotationOutline.defaultProps = {\n    size: 4,\n}\n\nexport default DotAnnotationOutline\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nconst RectAnnotationOutline = memo(({ x, y, width, height }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x: x - width / 2,\n        y: y - height / 2,\n        width,\n        height,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.rect\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    width={animatedProps.width}\n                    height={animatedProps.height}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                    }}\n                />\n            )}\n            <animated.rect\n                x={animatedProps.x}\n                y={animatedProps.y}\n                width={animatedProps.width}\n                height={animatedProps.height}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n})\n\nRectAnnotationOutline.displayName = 'RectAnnotationOutline'\nRectAnnotationOutline.propTypes = {\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n}\n\nexport default RectAnnotationOutline\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { defaultProps } from './props'\nimport { useComputedAnnotation } from './hooks'\nimport AnnotationNote from './AnnotationNote'\nimport AnnotationLink from './AnnotationLink'\nimport CircleAnnotationOutline from './CircleAnnotationOutline'\nimport DotAnnotationOutline from './DotAnnotationOutline'\nimport RectAnnotationOutline from './RectAnnotationOutline'\n\nconst Annotation = memo(\n    ({\n        datum,\n        type,\n        containerWidth,\n        containerHeight,\n        x,\n        y,\n        size,\n        width,\n        height,\n        noteX,\n        noteY,\n        noteWidth,\n        noteTextOffset,\n        note,\n    }) => {\n        const computed = useComputedAnnotation({\n            type,\n            containerWidth,\n            containerHeight,\n            x,\n            y,\n            size,\n            width,\n            height,\n            noteX,\n            noteY,\n            noteWidth,\n            noteTextOffset,\n        })\n\n        return (\n            <>\n                <AnnotationLink points={computed.points} isOutline={true} />\n                {type === 'circle' && <CircleAnnotationOutline x={x} y={y} size={size} />}\n                {type === 'dot' && <DotAnnotationOutline x={x} y={y} size={size} />}\n                {type === 'rect' && (\n                    <RectAnnotationOutline x={x} y={y} width={width} height={height} />\n                )}\n                <AnnotationLink points={computed.points} />\n                <AnnotationNote\n                    datum={datum}\n                    x={computed.text[0]}\n                    y={computed.text[1]}\n                    note={note}\n                />\n            </>\n        )\n    }\n)\n\nAnnotation.displayName = 'Annotation'\nAnnotation.propTypes = {\n    datum: PropTypes.object.isRequired,\n\n    type: PropTypes.oneOf(['circle', 'rect', 'dot']).isRequired,\n\n    containerWidth: PropTypes.number.isRequired,\n    containerHeight: PropTypes.number.isRequired,\n\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    width: PropTypes.number,\n    height: PropTypes.number,\n\n    noteX: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.shape({\n            abs: PropTypes.number.isRequired,\n        }),\n    ]).isRequired,\n    noteY: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.shape({\n            abs: PropTypes.number.isRequired,\n        }),\n    ]).isRequired,\n    noteWidth: PropTypes.number.isRequired,\n    noteTextOffset: PropTypes.number.isRequired,\n    note: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n}\nAnnotation.defaultProps = {\n    noteWidth: defaultProps.noteWidth,\n    noteTextOffset: defaultProps.noteTextOffset,\n}\n\nexport default Annotation\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst drawPoints = (ctx, points) => {\n    points.forEach(([x, y], index) => {\n        if (index === 0) {\n            ctx.moveTo(x, y)\n        } else {\n            ctx.lineTo(x, y)\n        }\n    })\n}\n\nexport const renderAnnotationsToCanvas = (ctx, { annotations, theme }) => {\n    if (annotations.length === 0) return\n\n    ctx.save()\n    annotations.forEach(annotation => {\n        if (theme.annotations.link.outlineWidth > 0) {\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.annotations.link.outlineColor\n            ctx.lineWidth =\n                theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n            ctx.beginPath()\n            drawPoints(ctx, annotation.computed.points)\n            ctx.stroke()\n            ctx.lineCap = 'butt'\n        }\n\n        if (annotation.type === 'circle' && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n        if (annotation.type === 'dot' && theme.annotations.symbol.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.symbol.outlineColor\n            ctx.lineWidth = theme.annotations.symbol.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n        if (annotation.type === 'rect' && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        ctx.strokeStyle = theme.annotations.link.stroke\n        ctx.lineWidth = theme.annotations.link.strokeWidth\n        ctx.beginPath()\n        drawPoints(ctx, annotation.computed.points)\n        ctx.stroke()\n\n        if (annotation.type === 'circle') {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n        if (annotation.type === 'dot') {\n            ctx.fillStyle = theme.annotations.symbol.fill\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.fill()\n        }\n        if (annotation.type === 'rect') {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        if (typeof annotation.note === 'function') {\n            annotation.note(ctx, {\n                datum: annotation.datum,\n                x: annotation.computed.text[0],\n                y: annotation.computed.text[1],\n                theme,\n            })\n        } else {\n            ctx.font = `${theme.annotations.text.fontSize}px ${theme.annotations.text.fontFamily}`\n            ctx.fillStyle = theme.annotations.text.fill\n            ctx.strokeStyle = theme.annotations.text.outlineColor\n            ctx.lineWidth = theme.annotations.text.outlineWidth * 2\n            if (theme.annotations.text.outlineWidth > 0) {\n                ctx.lineJoin = 'round'\n                ctx.strokeText(\n                    annotation.note,\n                    annotation.computed.text[0],\n                    annotation.computed.text[1]\n                )\n                ctx.lineJoin = 'miter'\n            }\n            ctx.fillText(annotation.note, annotation.computed.text[0], annotation.computed.text[1])\n        }\n    })\n    ctx.restore()\n}\n"]},"metadata":{},"sourceType":"module"}