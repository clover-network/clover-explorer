{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar event_1 = require(\"../core/event\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful_1 = require(\"../core/Eventful\");\n\nvar env_1 = require(\"../core/env\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar globalEventSupported = env_1[\"default\"].domSupported;\n\nvar localNativeListenerNames = function () {\n  var mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'wheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n  var touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\n  var pointerEventNameMap = {\n    pointerdown: 1,\n    pointerup: 1,\n    pointermove: 1,\n    pointerout: 1\n  };\n  var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n    var nm = name.replace('mouse', 'pointer');\n    return pointerEventNameMap.hasOwnProperty(nm) ? nm : name;\n  });\n  return {\n    mouse: mouseHandlerNames,\n    touch: touchHandlerNames,\n    pointer: pointerHandlerNames\n  };\n}();\n\nvar globalNativeListenerNames = {\n  mouse: ['mousemove', 'mouseup'],\n  pointer: ['pointermove', 'pointerup']\n};\nvar wheelEventSupported = false;\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n}\n\nfunction setTouchTimer(scope) {\n  scope.touching = true;\n\n  if (scope.touchTimer != null) {\n    clearTimeout(scope.touchTimer);\n    scope.touchTimer = null;\n  }\n\n  scope.touchTimer = setTimeout(function () {\n    scope.touching = false;\n    scope.touchTimer = null;\n  }, 700);\n}\n\nfunction markTouch(event) {\n  event && (event.zrByTouch = true);\n}\n\nfunction normalizeGlobalEvent(instance, event) {\n  return event_1.normalizeEvent(instance.dom, new FakeGlobalEvent(instance, event), true);\n}\n\nfunction isLocalEl(instance, el) {\n  var elTmp = el;\n  var isLocal = false;\n\n  while (elTmp && elTmp.nodeType !== 9 && !(isLocal = elTmp.domBelongToZr || elTmp !== el && elTmp === instance.painterRoot)) {\n    elTmp = elTmp.parentNode;\n  }\n\n  return isLocal;\n}\n\nvar FakeGlobalEvent = function () {\n  function FakeGlobalEvent(instance, event) {\n    this.stopPropagation = zrUtil.noop;\n    this.stopImmediatePropagation = zrUtil.noop;\n    this.preventDefault = zrUtil.noop;\n    this.type = event.type;\n    this.target = this.currentTarget = instance.dom;\n    this.pointerType = event.pointerType;\n    this.clientX = event.clientX;\n    this.clientY = event.clientY;\n  }\n\n  return FakeGlobalEvent;\n}();\n\nvar localDOMHandlers = {\n  mousedown: function (event) {\n    event = event_1.normalizeEvent(this.dom, event);\n    this.__mayPointerCapture = [event.zrX, event.zrY];\n    this.trigger('mousedown', event);\n  },\n  mousemove: function (event) {\n    event = event_1.normalizeEvent(this.dom, event);\n    var downPoint = this.__mayPointerCapture;\n\n    if (downPoint && (event.zrX !== downPoint[0] || event.zrY !== downPoint[1])) {\n      this.__togglePointerCapture(true);\n    }\n\n    this.trigger('mousemove', event);\n  },\n  mouseup: function (event) {\n    event = event_1.normalizeEvent(this.dom, event);\n\n    this.__togglePointerCapture(false);\n\n    this.trigger('mouseup', event);\n  },\n  mouseout: function (event) {\n    if (event.target !== this.dom) {\n      return;\n    }\n\n    event = event_1.normalizeEvent(this.dom, event);\n\n    if (this.__pointerCapturing) {\n      event.zrEventControl = 'no_globalout';\n    }\n\n    var element = event.toElement || event.relatedTarget;\n    event.zrIsToLocalDOM = isLocalEl(this, element);\n    this.trigger('mouseout', event);\n  },\n  wheel: function (event) {\n    wheelEventSupported = true;\n    event = event_1.normalizeEvent(this.dom, event);\n    this.trigger('mousewheel', event);\n  },\n  mousewheel: function (event) {\n    if (wheelEventSupported) {\n      return;\n    }\n\n    event = event_1.normalizeEvent(this.dom, event);\n    this.trigger('mousewheel', event);\n  },\n  touchstart: function (event) {\n    event = event_1.normalizeEvent(this.dom, event);\n    markTouch(event);\n    this.__lastTouchMoment = new Date();\n    this.handler.processGesture(event, 'start');\n    localDOMHandlers.mousemove.call(this, event);\n    localDOMHandlers.mousedown.call(this, event);\n  },\n  touchmove: function (event) {\n    event = event_1.normalizeEvent(this.dom, event);\n    markTouch(event);\n    this.handler.processGesture(event, 'change');\n    localDOMHandlers.mousemove.call(this, event);\n  },\n  touchend: function (event) {\n    event = event_1.normalizeEvent(this.dom, event);\n    markTouch(event);\n    this.handler.processGesture(event, 'end');\n    localDOMHandlers.mouseup.call(this, event);\n\n    if (+new Date() - +this.__lastTouchMoment < TOUCH_CLICK_DELAY) {\n      localDOMHandlers.click.call(this, event);\n    }\n  },\n  pointerdown: function (event) {\n    localDOMHandlers.mousedown.call(this, event);\n  },\n  pointermove: function (event) {\n    if (!isPointerFromTouch(event)) {\n      localDOMHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    localDOMHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    if (!isPointerFromTouch(event)) {\n      localDOMHandlers.mouseout.call(this, event);\n    }\n  }\n};\nzrUtil.each(['click', 'dblclick', 'contextmenu'], function (name) {\n  localDOMHandlers[name] = function (event) {\n    event = event_1.normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\nvar globalDOMHandlers = {\n  pointermove: function (event) {\n    if (!isPointerFromTouch(event)) {\n      globalDOMHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    globalDOMHandlers.mouseup.call(this, event);\n  },\n  mousemove: function (event) {\n    this.trigger('mousemove', event);\n  },\n  mouseup: function (event) {\n    var pointerCaptureReleasing = this.__pointerCapturing;\n\n    this.__togglePointerCapture(false);\n\n    this.trigger('mouseup', event);\n\n    if (pointerCaptureReleasing) {\n      event.zrEventControl = 'only_globalout';\n      this.trigger('mouseout', event);\n    }\n  }\n};\n\nfunction mountLocalDOMEventListeners(instance, scope) {\n  var domHandlers = scope.domHandlers;\n\n  if (env_1[\"default\"].pointerEventsSupported) {\n    zrUtil.each(localNativeListenerNames.pointer, function (nativeEventName) {\n      mountSingleDOMEventListener(scope, nativeEventName, function (event) {\n        domHandlers[nativeEventName].call(instance, event);\n      });\n    });\n  } else {\n    if (env_1[\"default\"].touchEventsSupported) {\n      zrUtil.each(localNativeListenerNames.touch, function (nativeEventName) {\n        mountSingleDOMEventListener(scope, nativeEventName, function (event) {\n          domHandlers[nativeEventName].call(instance, event);\n          setTouchTimer(scope);\n        });\n      });\n    }\n\n    zrUtil.each(localNativeListenerNames.mouse, function (nativeEventName) {\n      mountSingleDOMEventListener(scope, nativeEventName, function (event) {\n        event = event_1.getNativeEvent(event);\n\n        if (!scope.touching) {\n          domHandlers[nativeEventName].call(instance, event);\n        }\n      });\n    });\n  }\n}\n\nfunction mountGlobalDOMEventListeners(instance, scope) {\n  if (env_1[\"default\"].pointerEventsSupported) {\n    zrUtil.each(globalNativeListenerNames.pointer, mount);\n  } else if (!env_1[\"default\"].touchEventsSupported) {\n    zrUtil.each(globalNativeListenerNames.mouse, mount);\n  }\n\n  function mount(nativeEventName) {\n    function nativeEventListener(event) {\n      event = event_1.getNativeEvent(event);\n\n      if (!isLocalEl(instance, event.target)) {\n        event = normalizeGlobalEvent(instance, event);\n        scope.domHandlers[nativeEventName].call(instance, event);\n      }\n    }\n\n    mountSingleDOMEventListener(scope, nativeEventName, nativeEventListener, {\n      capture: true\n    });\n  }\n}\n\nfunction mountSingleDOMEventListener(scope, nativeEventName, listener, opt) {\n  scope.mounted[nativeEventName] = listener;\n  scope.listenerOpts[nativeEventName] = opt;\n  event_1.addEventListener(scope.domTarget, nativeEventName, listener, opt);\n}\n\nfunction unmountDOMEventListeners(scope) {\n  var mounted = scope.mounted;\n\n  for (var nativeEventName in mounted) {\n    if (mounted.hasOwnProperty(nativeEventName)) {\n      event_1.removeEventListener(scope.domTarget, nativeEventName, mounted[nativeEventName], scope.listenerOpts[nativeEventName]);\n    }\n  }\n\n  scope.mounted = {};\n}\n\nvar DOMHandlerScope = function () {\n  function DOMHandlerScope(domTarget, domHandlers) {\n    this.mounted = {};\n    this.listenerOpts = {};\n    this.touching = false;\n    this.domTarget = domTarget;\n    this.domHandlers = domHandlers;\n  }\n\n  return DOMHandlerScope;\n}();\n\nvar HandlerDomProxy = function (_super) {\n  tslib_1.__extends(HandlerDomProxy, _super);\n\n  function HandlerDomProxy(dom, painterRoot) {\n    var _this = _super.call(this) || this;\n\n    _this.__pointerCapturing = false;\n    _this.dom = dom;\n    _this.painterRoot = painterRoot;\n    _this._localHandlerScope = new DOMHandlerScope(dom, localDOMHandlers);\n\n    if (globalEventSupported) {\n      _this._globalHandlerScope = new DOMHandlerScope(document, globalDOMHandlers);\n    }\n\n    mountLocalDOMEventListeners(_this, _this._localHandlerScope);\n    return _this;\n  }\n\n  HandlerDomProxy.prototype.dispose = function () {\n    unmountDOMEventListeners(this._localHandlerScope);\n\n    if (globalEventSupported) {\n      unmountDOMEventListeners(this._globalHandlerScope);\n    }\n  };\n\n  HandlerDomProxy.prototype.setCursor = function (cursorStyle) {\n    this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\n  };\n\n  HandlerDomProxy.prototype.__togglePointerCapture = function (isPointerCapturing) {\n    this.__mayPointerCapture = null;\n\n    if (globalEventSupported && +this.__pointerCapturing ^ +isPointerCapturing) {\n      this.__pointerCapturing = isPointerCapturing;\n      var globalHandlerScope = this._globalHandlerScope;\n      isPointerCapturing ? mountGlobalDOMEventListeners(this, globalHandlerScope) : unmountDOMEventListeners(globalHandlerScope);\n    }\n  };\n\n  return HandlerDomProxy;\n}(Eventful_1[\"default\"]);\n\nexports[\"default\"] = HandlerDomProxy;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/zrender/lib/dom/HandlerProxy.js"],"names":["exports","__esModule","tslib_1","require","event_1","zrUtil","Eventful_1","env_1","TOUCH_CLICK_DELAY","globalEventSupported","domSupported","localNativeListenerNames","mouseHandlerNames","touchHandlerNames","pointerEventNameMap","pointerdown","pointerup","pointermove","pointerout","pointerHandlerNames","map","name","nm","replace","hasOwnProperty","mouse","touch","pointer","globalNativeListenerNames","wheelEventSupported","isPointerFromTouch","event","pointerType","setTouchTimer","scope","touching","touchTimer","clearTimeout","setTimeout","markTouch","zrByTouch","normalizeGlobalEvent","instance","normalizeEvent","dom","FakeGlobalEvent","isLocalEl","el","elTmp","isLocal","nodeType","domBelongToZr","painterRoot","parentNode","stopPropagation","noop","stopImmediatePropagation","preventDefault","type","target","currentTarget","clientX","clientY","localDOMHandlers","mousedown","__mayPointerCapture","zrX","zrY","trigger","mousemove","downPoint","__togglePointerCapture","mouseup","mouseout","__pointerCapturing","zrEventControl","element","toElement","relatedTarget","zrIsToLocalDOM","wheel","mousewheel","touchstart","__lastTouchMoment","Date","handler","processGesture","call","touchmove","touchend","click","each","globalDOMHandlers","pointerCaptureReleasing","mountLocalDOMEventListeners","domHandlers","pointerEventsSupported","nativeEventName","mountSingleDOMEventListener","touchEventsSupported","getNativeEvent","mountGlobalDOMEventListeners","mount","nativeEventListener","capture","listener","opt","mounted","listenerOpts","addEventListener","domTarget","unmountDOMEventListeners","removeEventListener","DOMHandlerScope","HandlerDomProxy","_super","__extends","_this","_localHandlerScope","_globalHandlerScope","document","prototype","dispose","setCursor","cursorStyle","style","cursor","isPointerCapturing","globalHandlerScope"],"mappings":"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","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar tslib_1 = require(\"tslib\");\nvar event_1 = require(\"../core/event\");\nvar zrUtil = require(\"../core/util\");\nvar Eventful_1 = require(\"../core/Eventful\");\nvar env_1 = require(\"../core/env\");\nvar TOUCH_CLICK_DELAY = 300;\nvar globalEventSupported = env_1[\"default\"].domSupported;\nvar localNativeListenerNames = (function () {\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'wheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n    var pointerEventNameMap = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNameMap.hasOwnProperty(nm) ? nm : name;\n    });\n    return {\n        mouse: mouseHandlerNames,\n        touch: touchHandlerNames,\n        pointer: pointerHandlerNames\n    };\n})();\nvar globalNativeListenerNames = {\n    mouse: ['mousemove', 'mouseup'],\n    pointer: ['pointermove', 'pointerup']\n};\nvar wheelEventSupported = false;\nfunction isPointerFromTouch(event) {\n    var pointerType = event.pointerType;\n    return pointerType === 'pen' || pointerType === 'touch';\n}\nfunction setTouchTimer(scope) {\n    scope.touching = true;\n    if (scope.touchTimer != null) {\n        clearTimeout(scope.touchTimer);\n        scope.touchTimer = null;\n    }\n    scope.touchTimer = setTimeout(function () {\n        scope.touching = false;\n        scope.touchTimer = null;\n    }, 700);\n}\nfunction markTouch(event) {\n    event && (event.zrByTouch = true);\n}\nfunction normalizeGlobalEvent(instance, event) {\n    return event_1.normalizeEvent(instance.dom, new FakeGlobalEvent(instance, event), true);\n}\nfunction isLocalEl(instance, el) {\n    var elTmp = el;\n    var isLocal = false;\n    while (elTmp && elTmp.nodeType !== 9\n        && !(isLocal = elTmp.domBelongToZr\n            || (elTmp !== el && elTmp === instance.painterRoot))) {\n        elTmp = elTmp.parentNode;\n    }\n    return isLocal;\n}\nvar FakeGlobalEvent = (function () {\n    function FakeGlobalEvent(instance, event) {\n        this.stopPropagation = zrUtil.noop;\n        this.stopImmediatePropagation = zrUtil.noop;\n        this.preventDefault = zrUtil.noop;\n        this.type = event.type;\n        this.target = this.currentTarget = instance.dom;\n        this.pointerType = event.pointerType;\n        this.clientX = event.clientX;\n        this.clientY = event.clientY;\n    }\n    return FakeGlobalEvent;\n}());\nvar localDOMHandlers = {\n    mousedown: function (event) {\n        event = event_1.normalizeEvent(this.dom, event);\n        this.__mayPointerCapture = [event.zrX, event.zrY];\n        this.trigger('mousedown', event);\n    },\n    mousemove: function (event) {\n        event = event_1.normalizeEvent(this.dom, event);\n        var downPoint = this.__mayPointerCapture;\n        if (downPoint && (event.zrX !== downPoint[0] || event.zrY !== downPoint[1])) {\n            this.__togglePointerCapture(true);\n        }\n        this.trigger('mousemove', event);\n    },\n    mouseup: function (event) {\n        event = event_1.normalizeEvent(this.dom, event);\n        this.__togglePointerCapture(false);\n        this.trigger('mouseup', event);\n    },\n    mouseout: function (event) {\n        if (event.target !== this.dom) {\n            return;\n        }\n        event = event_1.normalizeEvent(this.dom, event);\n        if (this.__pointerCapturing) {\n            event.zrEventControl = 'no_globalout';\n        }\n        var element = event.toElement || event.relatedTarget;\n        event.zrIsToLocalDOM = isLocalEl(this, element);\n        this.trigger('mouseout', event);\n    },\n    wheel: function (event) {\n        wheelEventSupported = true;\n        event = event_1.normalizeEvent(this.dom, event);\n        this.trigger('mousewheel', event);\n    },\n    mousewheel: function (event) {\n        if (wheelEventSupported) {\n            return;\n        }\n        event = event_1.normalizeEvent(this.dom, event);\n        this.trigger('mousewheel', event);\n    },\n    touchstart: function (event) {\n        event = event_1.normalizeEvent(this.dom, event);\n        markTouch(event);\n        this.__lastTouchMoment = new Date();\n        this.handler.processGesture(event, 'start');\n        localDOMHandlers.mousemove.call(this, event);\n        localDOMHandlers.mousedown.call(this, event);\n    },\n    touchmove: function (event) {\n        event = event_1.normalizeEvent(this.dom, event);\n        markTouch(event);\n        this.handler.processGesture(event, 'change');\n        localDOMHandlers.mousemove.call(this, event);\n    },\n    touchend: function (event) {\n        event = event_1.normalizeEvent(this.dom, event);\n        markTouch(event);\n        this.handler.processGesture(event, 'end');\n        localDOMHandlers.mouseup.call(this, event);\n        if (+new Date() - (+this.__lastTouchMoment) < TOUCH_CLICK_DELAY) {\n            localDOMHandlers.click.call(this, event);\n        }\n    },\n    pointerdown: function (event) {\n        localDOMHandlers.mousedown.call(this, event);\n    },\n    pointermove: function (event) {\n        if (!isPointerFromTouch(event)) {\n            localDOMHandlers.mousemove.call(this, event);\n        }\n    },\n    pointerup: function (event) {\n        localDOMHandlers.mouseup.call(this, event);\n    },\n    pointerout: function (event) {\n        if (!isPointerFromTouch(event)) {\n            localDOMHandlers.mouseout.call(this, event);\n        }\n    }\n};\nzrUtil.each(['click', 'dblclick', 'contextmenu'], function (name) {\n    localDOMHandlers[name] = function (event) {\n        event = event_1.normalizeEvent(this.dom, event);\n        this.trigger(name, event);\n    };\n});\nvar globalDOMHandlers = {\n    pointermove: function (event) {\n        if (!isPointerFromTouch(event)) {\n            globalDOMHandlers.mousemove.call(this, event);\n        }\n    },\n    pointerup: function (event) {\n        globalDOMHandlers.mouseup.call(this, event);\n    },\n    mousemove: function (event) {\n        this.trigger('mousemove', event);\n    },\n    mouseup: function (event) {\n        var pointerCaptureReleasing = this.__pointerCapturing;\n        this.__togglePointerCapture(false);\n        this.trigger('mouseup', event);\n        if (pointerCaptureReleasing) {\n            event.zrEventControl = 'only_globalout';\n            this.trigger('mouseout', event);\n        }\n    }\n};\nfunction mountLocalDOMEventListeners(instance, scope) {\n    var domHandlers = scope.domHandlers;\n    if (env_1[\"default\"].pointerEventsSupported) {\n        zrUtil.each(localNativeListenerNames.pointer, function (nativeEventName) {\n            mountSingleDOMEventListener(scope, nativeEventName, function (event) {\n                domHandlers[nativeEventName].call(instance, event);\n            });\n        });\n    }\n    else {\n        if (env_1[\"default\"].touchEventsSupported) {\n            zrUtil.each(localNativeListenerNames.touch, function (nativeEventName) {\n                mountSingleDOMEventListener(scope, nativeEventName, function (event) {\n                    domHandlers[nativeEventName].call(instance, event);\n                    setTouchTimer(scope);\n                });\n            });\n        }\n        zrUtil.each(localNativeListenerNames.mouse, function (nativeEventName) {\n            mountSingleDOMEventListener(scope, nativeEventName, function (event) {\n                event = event_1.getNativeEvent(event);\n                if (!scope.touching) {\n                    domHandlers[nativeEventName].call(instance, event);\n                }\n            });\n        });\n    }\n}\nfunction mountGlobalDOMEventListeners(instance, scope) {\n    if (env_1[\"default\"].pointerEventsSupported) {\n        zrUtil.each(globalNativeListenerNames.pointer, mount);\n    }\n    else if (!env_1[\"default\"].touchEventsSupported) {\n        zrUtil.each(globalNativeListenerNames.mouse, mount);\n    }\n    function mount(nativeEventName) {\n        function nativeEventListener(event) {\n            event = event_1.getNativeEvent(event);\n            if (!isLocalEl(instance, event.target)) {\n                event = normalizeGlobalEvent(instance, event);\n                scope.domHandlers[nativeEventName].call(instance, event);\n            }\n        }\n        mountSingleDOMEventListener(scope, nativeEventName, nativeEventListener, { capture: true });\n    }\n}\nfunction mountSingleDOMEventListener(scope, nativeEventName, listener, opt) {\n    scope.mounted[nativeEventName] = listener;\n    scope.listenerOpts[nativeEventName] = opt;\n    event_1.addEventListener(scope.domTarget, nativeEventName, listener, opt);\n}\nfunction unmountDOMEventListeners(scope) {\n    var mounted = scope.mounted;\n    for (var nativeEventName in mounted) {\n        if (mounted.hasOwnProperty(nativeEventName)) {\n            event_1.removeEventListener(scope.domTarget, nativeEventName, mounted[nativeEventName], scope.listenerOpts[nativeEventName]);\n        }\n    }\n    scope.mounted = {};\n}\nvar DOMHandlerScope = (function () {\n    function DOMHandlerScope(domTarget, domHandlers) {\n        this.mounted = {};\n        this.listenerOpts = {};\n        this.touching = false;\n        this.domTarget = domTarget;\n        this.domHandlers = domHandlers;\n    }\n    return DOMHandlerScope;\n}());\nvar HandlerDomProxy = (function (_super) {\n    tslib_1.__extends(HandlerDomProxy, _super);\n    function HandlerDomProxy(dom, painterRoot) {\n        var _this = _super.call(this) || this;\n        _this.__pointerCapturing = false;\n        _this.dom = dom;\n        _this.painterRoot = painterRoot;\n        _this._localHandlerScope = new DOMHandlerScope(dom, localDOMHandlers);\n        if (globalEventSupported) {\n            _this._globalHandlerScope = new DOMHandlerScope(document, globalDOMHandlers);\n        }\n        mountLocalDOMEventListeners(_this, _this._localHandlerScope);\n        return _this;\n    }\n    HandlerDomProxy.prototype.dispose = function () {\n        unmountDOMEventListeners(this._localHandlerScope);\n        if (globalEventSupported) {\n            unmountDOMEventListeners(this._globalHandlerScope);\n        }\n    };\n    HandlerDomProxy.prototype.setCursor = function (cursorStyle) {\n        this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\n    };\n    HandlerDomProxy.prototype.__togglePointerCapture = function (isPointerCapturing) {\n        this.__mayPointerCapture = null;\n        if (globalEventSupported\n            && ((+this.__pointerCapturing) ^ (+isPointerCapturing))) {\n            this.__pointerCapturing = isPointerCapturing;\n            var globalHandlerScope = this._globalHandlerScope;\n            isPointerCapturing\n                ? mountGlobalDOMEventListeners(this, globalHandlerScope)\n                : unmountDOMEventListeners(globalHandlerScope);\n        }\n    };\n    return HandlerDomProxy;\n}(Eventful_1[\"default\"]));\nexports[\"default\"] = HandlerDomProxy;\n"]},"metadata":{},"sourceType":"script"}