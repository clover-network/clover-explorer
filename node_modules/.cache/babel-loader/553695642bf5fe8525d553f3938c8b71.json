{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { getTheme } from '@antv/g2';\nimport { isNil, isObject } from '@antv/util';\nimport { deepAssign } from '../../utils';\nimport { getTooltipMapping } from '../../utils/tooltip';\nimport { geometry } from './base';\n/**\n * 柱形图其他的 adaptor\n * @param params\n */\n\nfunction otherAdaptor(params) {\n  var chart = params.chart,\n      options = params.options,\n      ext = params.ext;\n  var seriesField = options.seriesField,\n      isGroup = options.isGroup,\n      isStack = options.isStack,\n      marginRatio = options.marginRatio,\n      widthRatio = options.widthRatio,\n      groupField = options.groupField,\n      theme = options.theme;\n  var g = ext.geometry;\n  /**\n   * adjust\n   */\n\n  var adjust = [];\n\n  if (seriesField) {\n    // group\n    if (isGroup) {\n      adjust.push({\n        type: 'dodge',\n        dodgeBy: groupField || seriesField,\n        marginRatio: marginRatio\n      });\n    } // stack\n\n\n    if (isStack) {\n      adjust.push({\n        type: 'stack',\n        marginRatio: marginRatio\n      });\n    }\n  }\n\n  if (adjust.length) {\n    g.adjust(adjust);\n  } // widthRatio\n\n\n  if (!isNil(widthRatio)) {\n    chart.theme(deepAssign({}, isObject(theme) ? theme : getTheme(theme), {\n      // columWidthRatio 配置覆盖 theme 中的配置\n      columnWidthRatio: widthRatio\n    }));\n  }\n\n  return params;\n}\n\nexport function interval(params) {\n  var options = params.options;\n  var xField = options.xField,\n      yField = options.yField,\n      interval = options.interval,\n      seriesField = options.seriesField,\n      tooltip = options.tooltip;\n\n  var _a = getTooltipMapping(tooltip, [xField, yField, seriesField]),\n      fields = _a.fields,\n      formatter = _a.formatter; // 保障一定要存在 interval 映射\n\n\n  var ext = (interval ? geometry(deepAssign({}, params, {\n    options: {\n      type: 'interval',\n      colorField: seriesField,\n      tooltipFields: fields,\n      mapping: __assign({\n        tooltip: formatter\n      }, interval)\n    }\n  })) : params).ext;\n  return otherAdaptor(__assign(__assign({}, params), {\n    ext: ext\n  }));\n}","map":{"version":3,"sources":["../../../src/adaptor/geometries/interval.ts"],"names":[],"mappings":"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","sourcesContent":["import { Geometry, getTheme } from '@antv/g2';\nimport { isNil, isObject } from '@antv/util';\nimport { Params } from '../../core/adaptor';\nimport { deepAssign } from '../../utils';\nimport { getTooltipMapping } from '../../utils/tooltip';\nimport { GeometryOptions, MappingOptions, geometry } from './base';\n\nexport interface IntervalGeometryOptions extends GeometryOptions {\n  /** x 轴字段 */\n  readonly xField: string;\n  /** y 轴字段 */\n  readonly yField: string;\n  /** 拆分字段，在分组柱状图下同 groupField、colorField，在堆积柱状图下同 stackField、colorField  */\n  readonly seriesField?: string;\n  /** 是否分组柱形图 */\n  readonly isGroup?: boolean;\n  /** 是否堆积柱状图 */\n  readonly isStack?: boolean;\n  /** 柱状图宽度占比 [0-1] */\n  readonly widthRatio?: number;\n  /** 分组中柱子之间的间距 [0-1]，仅对分组柱状图适用 */\n  readonly marginRatio?: number;\n  /** 柱子样式配置 */\n  readonly interval?: MappingOptions;\n  /** 分组字段，优先级高于 seriesField , isGroup: true 时会根据 groupField 进行分组。*/\n  readonly groupField?: string;\n}\n\n/**\n * 柱形图其他的 adaptor\n * @param params\n */\nfunction otherAdaptor<O extends IntervalGeometryOptions>(params: Params<O>): Params<O> {\n  const { chart, options, ext } = params;\n  const { seriesField, isGroup, isStack, marginRatio, widthRatio, groupField, theme } = options;\n\n  const g = ext.geometry as Geometry;\n  /**\n   * adjust\n   */\n  const adjust = [];\n  if (seriesField) {\n    // group\n    if (isGroup) {\n      adjust.push({\n        type: 'dodge',\n        dodgeBy: groupField || seriesField,\n        marginRatio,\n      });\n    }\n    // stack\n    if (isStack) {\n      adjust.push({\n        type: 'stack',\n        marginRatio,\n      });\n    }\n  }\n\n  if (adjust.length) {\n    g.adjust(adjust);\n  }\n\n  // widthRatio\n  if (!isNil(widthRatio)) {\n    chart.theme(\n      deepAssign({}, isObject(theme) ? theme : getTheme(theme), {\n        // columWidthRatio 配置覆盖 theme 中的配置\n        columnWidthRatio: widthRatio,\n      })\n    );\n  }\n\n  return params;\n}\n\nexport function interval<O extends IntervalGeometryOptions>(params: Params<O>): Params<O> {\n  const { options } = params;\n  const { xField, yField, interval, seriesField, tooltip } = options;\n\n  const { fields, formatter } = getTooltipMapping(tooltip, [xField, yField, seriesField]);\n\n  // 保障一定要存在 interval 映射\n  const { ext } = interval\n    ? geometry(\n        deepAssign({}, params, {\n          options: {\n            type: 'interval',\n            colorField: seriesField,\n            tooltipFields: fields,\n            mapping: {\n              tooltip: formatter,\n              ...interval,\n            },\n          },\n        })\n      )\n    : params;\n\n  return otherAdaptor({\n    ...params,\n    ext,\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}