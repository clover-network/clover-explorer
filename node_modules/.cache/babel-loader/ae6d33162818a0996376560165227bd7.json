{"ast":null,"code":"import each from '@antv/util/lib/each';\nvar DEFAULT_TRIGGER = 'shift';\nvar ALLOW_EVENTS = ['shift', 'ctrl', 'alt', 'control'];\nexport default {\n  getDefaultCfg: function getDefaultCfg() {\n    return {\n      multiple: true,\n      trigger: DEFAULT_TRIGGER,\n      selectedState: 'selected'\n    };\n  },\n  getEvents: function getEvents() {\n    var self = this; // 检测输入是否合法\n\n    if (!(ALLOW_EVENTS.indexOf(self.trigger.toLowerCase()) > -1)) {\n      self.trigger = DEFAULT_TRIGGER; // eslint-disable-next-line no-console\n\n      console.warn(\"Behavior brush-select 的 trigger 参数不合法，请输入 'drag'、'shift'、'ctrl' 或 'alt'\");\n    }\n\n    if (!self.multiple) {\n      return {\n        'node:click': 'onClick',\n        'combo:click': 'onClick',\n        'canvas:click': 'onCanvasClick'\n      };\n    }\n\n    return {\n      'node:click': 'onClick',\n      'combo:click': 'onClick',\n      'canvas:click': 'onCanvasClick',\n      keyup: 'onKeyUp',\n      keydown: 'onKeyDown'\n    };\n  },\n  onClick: function onClick(evt) {\n    var _this = this;\n\n    var item = evt.item;\n\n    if (!item || item.destroyed) {\n      return;\n    }\n\n    var type = item.getType();\n\n    var _a = this,\n        graph = _a.graph,\n        keydown = _a.keydown,\n        multiple = _a.multiple,\n        shouldUpdate = _a.shouldUpdate,\n        shouldBegin = _a.shouldBegin;\n\n    if (!shouldBegin.call(this, evt)) {\n      return;\n    } // allow to select multiple nodes but did not press a key || do not allow the select multiple nodes\n\n\n    if (!keydown || !multiple) {\n      var selected = graph.findAllByState(type, this.selectedState);\n      each(selected, function (combo) {\n        if (combo !== item) {\n          graph.setItemState(combo, _this.selectedState, false);\n        }\n      });\n    }\n\n    if (item.hasState(this.selectedState)) {\n      if (shouldUpdate.call(this, evt)) {\n        graph.setItemState(item, this.selectedState, false);\n      }\n\n      var selectedNodes = graph.findAllByState('node', this.selectedState);\n      var selectedCombos = graph.findAllByState('combo', this.selectedState);\n      graph.emit('nodeselectchange', {\n        target: item,\n        selectedItems: {\n          nodes: selectedNodes,\n          combos: selectedCombos\n        },\n        select: false\n      });\n    } else {\n      if (shouldUpdate.call(this, evt)) {\n        graph.setItemState(item, this.selectedState, true);\n      }\n\n      var selectedNodes = graph.findAllByState('node', this.selectedState);\n      var selectedCombos = graph.findAllByState('combo', this.selectedState);\n      graph.emit('nodeselectchange', {\n        target: item,\n        selectedItems: {\n          nodes: selectedNodes,\n          combos: selectedCombos\n        },\n        select: true\n      });\n    }\n  },\n  onCanvasClick: function onCanvasClick() {\n    var _this = this;\n\n    var graph = this.graph;\n    var selected = graph.findAllByState('node', this.selectedState);\n    each(selected, function (node) {\n      graph.setItemState(node, _this.selectedState, false);\n    });\n    var selectedCombos = graph.findAllByState('combo', this.selectedState);\n    each(selectedCombos, function (combo) {\n      graph.setItemState(combo, _this.selectedState, false);\n    });\n    graph.emit('nodeselectchange', {\n      selectedItems: {\n        nodes: [],\n        edges: [],\n        combos: []\n      },\n      select: false\n    });\n  },\n  onKeyDown: function onKeyDown(e) {\n    var code = e.key;\n\n    if (!code) {\n      return;\n    }\n\n    if (code.toLowerCase() === this.trigger.toLowerCase() || code.toLowerCase() === 'control') {\n      this.keydown = true;\n    } else {\n      this.keydown = false;\n    }\n  },\n  onKeyUp: function onKeyUp() {\n    this.keydown = false;\n  }\n};","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@antv/g6/es/behavior/click-select.js"],"names":["each","DEFAULT_TRIGGER","ALLOW_EVENTS","getDefaultCfg","multiple","trigger","selectedState","getEvents","self","indexOf","toLowerCase","console","warn","keyup","keydown","onClick","evt","_this","item","destroyed","type","getType","_a","graph","shouldUpdate","shouldBegin","call","selected","findAllByState","combo","setItemState","hasState","selectedNodes","selectedCombos","emit","target","selectedItems","nodes","combos","select","onCanvasClick","node","edges","onKeyDown","e","code","key","onKeyUp"],"mappings":"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","sourcesContent":["import each from '@antv/util/lib/each';\nvar DEFAULT_TRIGGER = 'shift';\nvar ALLOW_EVENTS = ['shift', 'ctrl', 'alt', 'control'];\nexport default {\n  getDefaultCfg: function getDefaultCfg() {\n    return {\n      multiple: true,\n      trigger: DEFAULT_TRIGGER,\n      selectedState: 'selected'\n    };\n  },\n  getEvents: function getEvents() {\n    var self = this; // 检测输入是否合法\n\n    if (!(ALLOW_EVENTS.indexOf(self.trigger.toLowerCase()) > -1)) {\n      self.trigger = DEFAULT_TRIGGER; // eslint-disable-next-line no-console\n\n      console.warn(\"Behavior brush-select 的 trigger 参数不合法，请输入 'drag'、'shift'、'ctrl' 或 'alt'\");\n    }\n\n    if (!self.multiple) {\n      return {\n        'node:click': 'onClick',\n        'combo:click': 'onClick',\n        'canvas:click': 'onCanvasClick'\n      };\n    }\n\n    return {\n      'node:click': 'onClick',\n      'combo:click': 'onClick',\n      'canvas:click': 'onCanvasClick',\n      keyup: 'onKeyUp',\n      keydown: 'onKeyDown'\n    };\n  },\n  onClick: function onClick(evt) {\n    var _this = this;\n\n    var item = evt.item;\n\n    if (!item || item.destroyed) {\n      return;\n    }\n\n    var type = item.getType();\n\n    var _a = this,\n        graph = _a.graph,\n        keydown = _a.keydown,\n        multiple = _a.multiple,\n        shouldUpdate = _a.shouldUpdate,\n        shouldBegin = _a.shouldBegin;\n\n    if (!shouldBegin.call(this, evt)) {\n      return;\n    } // allow to select multiple nodes but did not press a key || do not allow the select multiple nodes\n\n\n    if (!keydown || !multiple) {\n      var selected = graph.findAllByState(type, this.selectedState);\n      each(selected, function (combo) {\n        if (combo !== item) {\n          graph.setItemState(combo, _this.selectedState, false);\n        }\n      });\n    }\n\n    if (item.hasState(this.selectedState)) {\n      if (shouldUpdate.call(this, evt)) {\n        graph.setItemState(item, this.selectedState, false);\n      }\n\n      var selectedNodes = graph.findAllByState('node', this.selectedState);\n      var selectedCombos = graph.findAllByState('combo', this.selectedState);\n      graph.emit('nodeselectchange', {\n        target: item,\n        selectedItems: {\n          nodes: selectedNodes,\n          combos: selectedCombos\n        },\n        select: false\n      });\n    } else {\n      if (shouldUpdate.call(this, evt)) {\n        graph.setItemState(item, this.selectedState, true);\n      }\n\n      var selectedNodes = graph.findAllByState('node', this.selectedState);\n      var selectedCombos = graph.findAllByState('combo', this.selectedState);\n      graph.emit('nodeselectchange', {\n        target: item,\n        selectedItems: {\n          nodes: selectedNodes,\n          combos: selectedCombos\n        },\n        select: true\n      });\n    }\n  },\n  onCanvasClick: function onCanvasClick() {\n    var _this = this;\n\n    var graph = this.graph;\n    var selected = graph.findAllByState('node', this.selectedState);\n    each(selected, function (node) {\n      graph.setItemState(node, _this.selectedState, false);\n    });\n    var selectedCombos = graph.findAllByState('combo', this.selectedState);\n    each(selectedCombos, function (combo) {\n      graph.setItemState(combo, _this.selectedState, false);\n    });\n    graph.emit('nodeselectchange', {\n      selectedItems: {\n        nodes: [],\n        edges: [],\n        combos: []\n      },\n      select: false\n    });\n  },\n  onKeyDown: function onKeyDown(e) {\n    var code = e.key;\n\n    if (!code) {\n      return;\n    }\n\n    if (code.toLowerCase() === this.trigger.toLowerCase() || code.toLowerCase() === 'control') {\n      this.keydown = true;\n    } else {\n      this.keydown = false;\n    }\n  },\n  onKeyUp: function onKeyUp() {\n    this.keydown = false;\n  }\n};"]},"metadata":{},"sourceType":"module"}