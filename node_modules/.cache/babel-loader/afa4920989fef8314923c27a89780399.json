{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nimport { retrieveRawValue } from '../../data/helper/dataProvider';\nimport { isArray } from 'zrender/esm/core/util';\nexport function getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimensionsAll('defaultedLabel');\n  var len = labelDims.length;\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      vals.push(retrieveRawValue(data, dataIndex, labelDims[i]));\n    }\n\n    return vals.join(' ');\n  }\n}\nexport function getDefaultInterpolatedLabel(data, interpolatedValue) {\n  var labelDims = data.mapDimensionsAll('defaultedLabel');\n\n  if (!isArray(interpolatedValue)) {\n    return interpolatedValue + '';\n  }\n\n  var vals = [];\n\n  for (var i = 0; i < labelDims.length; i++) {\n    var dimInfo = data.getDimensionInfo(labelDims[i]);\n\n    if (dimInfo) {\n      vals.push(interpolatedValue[dimInfo.index]);\n    }\n  }\n\n  return vals.join(' ');\n}","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/esm/chart/helper/labelHelper.js"],"names":["retrieveRawValue","isArray","getDefaultLabel","data","dataIndex","labelDims","mapDimensionsAll","len","length","vals","i","push","join","getDefaultInterpolatedLabel","interpolatedValue","dimInfo","getDimensionInfo","index"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AAEA,SAASA,gBAAT,QAAiC,gCAAjC;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,OAAO,SAASC,eAAT,CAAyBC,IAAzB,EAA+BC,SAA/B,EAA0C;AAC/C,MAAIC,SAAS,GAAGF,IAAI,CAACG,gBAAL,CAAsB,gBAAtB,CAAhB;AACA,MAAIC,GAAG,GAAGF,SAAS,CAACG,MAApB;;AAEA,MAAID,GAAG,KAAK,CAAZ,EAAe;AACb,WAAOP,gBAAgB,CAACG,IAAD,EAAOC,SAAP,EAAkBC,SAAS,CAAC,CAAD,CAA3B,CAAvB;AACD,GAFD,MAEO,IAAIE,GAAJ,EAAS;AACd,QAAIE,IAAI,GAAG,EAAX;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,SAAS,CAACG,MAA9B,EAAsCE,CAAC,EAAvC,EAA2C;AACzCD,MAAAA,IAAI,CAACE,IAAL,CAAUX,gBAAgB,CAACG,IAAD,EAAOC,SAAP,EAAkBC,SAAS,CAACK,CAAD,CAA3B,CAA1B;AACD;;AAED,WAAOD,IAAI,CAACG,IAAL,CAAU,GAAV,CAAP;AACD;AACF;AACD,OAAO,SAASC,2BAAT,CAAqCV,IAArC,EAA2CW,iBAA3C,EAA8D;AACnE,MAAIT,SAAS,GAAGF,IAAI,CAACG,gBAAL,CAAsB,gBAAtB,CAAhB;;AAEA,MAAI,CAACL,OAAO,CAACa,iBAAD,CAAZ,EAAiC;AAC/B,WAAOA,iBAAiB,GAAG,EAA3B;AACD;;AAED,MAAIL,IAAI,GAAG,EAAX;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,SAAS,CAACG,MAA9B,EAAsCE,CAAC,EAAvC,EAA2C;AACzC,QAAIK,OAAO,GAAGZ,IAAI,CAACa,gBAAL,CAAsBX,SAAS,CAACK,CAAD,CAA/B,CAAd;;AAEA,QAAIK,OAAJ,EAAa;AACXN,MAAAA,IAAI,CAACE,IAAL,CAAUG,iBAAiB,CAACC,OAAO,CAACE,KAAT,CAA3B;AACD;AACF;;AAED,SAAOR,IAAI,CAACG,IAAL,CAAU,GAAV,CAAP;AACD","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { retrieveRawValue } from '../../data/helper/dataProvider';\nimport { isArray } from 'zrender/esm/core/util';\nexport function getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimensionsAll('defaultedLabel');\n  var len = labelDims.length;\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      vals.push(retrieveRawValue(data, dataIndex, labelDims[i]));\n    }\n\n    return vals.join(' ');\n  }\n}\nexport function getDefaultInterpolatedLabel(data, interpolatedValue) {\n  var labelDims = data.mapDimensionsAll('defaultedLabel');\n\n  if (!isArray(interpolatedValue)) {\n    return interpolatedValue + '';\n  }\n\n  var vals = [];\n\n  for (var i = 0; i < labelDims.length; i++) {\n    var dimInfo = data.getDimensionInfo(labelDims[i]);\n\n    if (dimInfo) {\n      vals.push(interpolatedValue[dimInfo.index]);\n    }\n  }\n\n  return vals.join(' ');\n}"]},"metadata":{},"sourceType":"module"}