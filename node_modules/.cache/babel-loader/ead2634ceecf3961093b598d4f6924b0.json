{"ast":null,"code":"import isArray from 'is-any-array';\n\nfunction max(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var maxValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/ml-array-max/lib-es6/index.js"],"names":["isArray","max","input","options","arguments","length","undefined","TypeError","_options$fromIndex","fromIndex","_options$toIndex","toIndex","Number","isInteger","Error","maxValue","i"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,cAApB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB,MAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;;AAEA,MAAI,CAACJ,OAAO,CAACE,KAAD,CAAZ,EAAqB;AACnB,UAAM,IAAIK,SAAJ,CAAc,wBAAd,CAAN;AACD;;AAED,MAAIL,KAAK,CAACG,MAAN,KAAiB,CAArB,EAAwB;AACtB,UAAM,IAAIE,SAAJ,CAAc,yBAAd,CAAN;AACD;;AAED,MAAIC,kBAAkB,GAAGL,OAAO,CAACM,SAAjC;AAAA,MACIA,SAAS,GAAGD,kBAAkB,KAAK,KAAK,CAA5B,GAAgC,CAAhC,GAAoCA,kBADpD;AAAA,MAEIE,gBAAgB,GAAGP,OAAO,CAACQ,OAF/B;AAAA,MAGIA,OAAO,GAAGD,gBAAgB,KAAK,KAAK,CAA1B,GAA8BR,KAAK,CAACG,MAApC,GAA6CK,gBAH3D;;AAKA,MAAID,SAAS,GAAG,CAAZ,IAAiBA,SAAS,IAAIP,KAAK,CAACG,MAApC,IAA8C,CAACO,MAAM,CAACC,SAAP,CAAiBJ,SAAjB,CAAnD,EAAgF;AAC9E,UAAM,IAAIK,KAAJ,CAAU,0DAAV,CAAN;AACD;;AAED,MAAIH,OAAO,IAAIF,SAAX,IAAwBE,OAAO,GAAGT,KAAK,CAACG,MAAxC,IAAkD,CAACO,MAAM,CAACC,SAAP,CAAiBF,OAAjB,CAAvD,EAAkF;AAChF,UAAM,IAAIG,KAAJ,CAAU,+EAAV,CAAN;AACD;;AAED,MAAIC,QAAQ,GAAGb,KAAK,CAACO,SAAD,CAApB;;AAEA,OAAK,IAAIO,CAAC,GAAGP,SAAS,GAAG,CAAzB,EAA4BO,CAAC,GAAGL,OAAhC,EAAyCK,CAAC,EAA1C,EAA8C;AAC5C,QAAId,KAAK,CAACc,CAAD,CAAL,GAAWD,QAAf,EAAyBA,QAAQ,GAAGb,KAAK,CAACc,CAAD,CAAhB;AAC1B;;AAED,SAAOD,QAAP;AACD;;AAED,eAAed,GAAf","sourcesContent":["import isArray from 'is-any-array';\n\nfunction max(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var maxValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n"]},"metadata":{},"sourceType":"module"}