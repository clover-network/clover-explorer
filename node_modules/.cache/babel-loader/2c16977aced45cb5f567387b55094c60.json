{"ast":null,"code":"import { __assign } from \"tslib\";\nimport Global from '../global';\nimport { transform } from '@antv/matrix-util';\nimport { deepMix, each, mix, isBoolean, isPlainObject, clone } from '@antv/util';\nvar CLS_SHAPE_SUFFIX = '-shape';\nvar CLS_LABEL_SUFFIX = '-label';\nvar ARROWS = ['startArrow', 'endArrow'];\nexport var CLS_LABEL_BG_SUFFIX = '-label-bg'; // 单个 shape 带有一个 label，共用这段代码\n\nexport var shapeBase = {\n  // 默认样式及配置\n  options: {},\n  itemType: '',\n\n  /**\n   * 形状的类型，例如 circle，ellipse，polyline...\n   */\n  type: '',\n  getCustomConfig: function getCustomConfig(cfg) {\n    return {};\n  },\n  getOptions: function getOptions(cfg) {\n    return deepMix({\n      // 解决局部渲染导致的文字移动残影问题\n      labelCfg: {\n        style: {\n          fontFamily: typeof window !== 'undefined' ? window.getComputedStyle(document.body, null).getPropertyValue(\"font-family\") || 'Arial, sans-serif' : 'Arial, sans-serif'\n        }\n      },\n      descriptionCfg: {\n        style: {\n          fontFamily: typeof window !== 'undefined' ? window.getComputedStyle(document.body, null).getPropertyValue(\"font-family\") || 'Arial, sans-serif' : 'Arial, sans-serif'\n        }\n      }\n    }, this.options, this.getCustomConfig(cfg) || {}, cfg);\n  },\n\n  /**\n   * 绘制节点/边，包含文本\n   * @override\n   * @param  {Object} cfg 节点的配置项\n   * @param  {G.Group} group 节点的容器\n   * @return {IShape} 绘制的图形\n   */\n  draw: function draw(cfg, group) {\n    var shape = this.drawShape(cfg, group);\n    shape.set('className', this.itemType + CLS_SHAPE_SUFFIX);\n\n    if (cfg.label) {\n      var label = this.drawLabel(cfg, group);\n      label.set('className', this.itemType + CLS_LABEL_SUFFIX);\n    }\n\n    return shape;\n  },\n\n  /**\n   * 绘制完成后的操作，便于用户继承现有的节点、边\n   * @param cfg\n   * @param group\n   * @param keyShape\n   */\n  afterDraw: function afterDraw(cfg, group, keyShape) {},\n  drawShape: function drawShape(cfg, group) {\n    return null;\n  },\n  drawLabel: function drawLabel(cfg, group) {\n    var defaultLabelCfg = this.getOptions(cfg).labelCfg; // image的情况下有可能为null\n\n    var labelCfg = defaultLabelCfg || {};\n    var labelStyle = this.getLabelStyle(cfg, labelCfg, group);\n    var rotate = labelStyle.rotate;\n    delete labelStyle.rotate;\n    var label = group.addShape('text', {\n      attrs: labelStyle,\n      draggable: true,\n      className: 'text-shape',\n      name: 'text-shape'\n    });\n\n    if (rotate) {\n      var labelBBox = label.getBBox();\n      var labelMatrix = label.getMatrix();\n\n      if (!labelMatrix) {\n        labelMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n      }\n\n      if (labelStyle.rotateCenter) {\n        switch (labelStyle.rotateCenter) {\n          case 'center':\n            labelMatrix = transform(labelMatrix, [['t', -labelBBox.width / 2, -labelBBox.height / 2], ['r', rotate], ['t', labelBBox.width / 2, labelBBox.height / 2]]);\n            break;\n\n          case 'lefttop':\n            labelMatrix = transform(labelMatrix, [['t', -labelStyle.x, -labelStyle.y], ['r', rotate], ['t', labelStyle.x, labelStyle.y]]);\n            break;\n\n          case 'leftcenter':\n            labelMatrix = transform(labelMatrix, [['t', -labelStyle.x, -labelStyle.y - labelBBox.height / 2], ['r', rotate], ['t', labelStyle.x, labelStyle.y + labelBBox.height / 2]]);\n            break;\n\n          default:\n            labelMatrix = transform(labelMatrix, [['t', -labelBBox.width / 2, -labelBBox.height / 2], ['r', rotate], ['t', labelBBox.width / 2, labelBBox.height / 2]]);\n            break;\n        }\n      } else {\n        labelMatrix = transform(labelMatrix, [['t', -labelStyle.x, -labelStyle.y - labelBBox.height / 2], ['r', rotate], ['t', labelStyle.x, labelStyle.y + labelBBox.height / 2]]);\n      }\n\n      label.setMatrix(labelMatrix);\n    }\n\n    if (labelStyle.background) {\n      var rect = this.drawLabelBg(cfg, group, label);\n      var labelBgClassname = this.itemType + CLS_LABEL_BG_SUFFIX;\n      rect.set('classname', labelBgClassname);\n      label.toFront();\n    }\n\n    return label;\n  },\n  drawLabelBg: function drawLabelBg(cfg, group, label) {\n    var defaultLabelCfg = this.options.labelCfg;\n    var labelCfg = mix({}, defaultLabelCfg, cfg.labelCfg);\n    var style = this.getLabelBgStyleByPosition(label, cfg, labelCfg, group);\n    var rect = group.addShape('rect', {\n      name: 'text-bg-shape',\n      attrs: style\n    });\n    return rect;\n  },\n  getLabelStyleByPosition: function getLabelStyleByPosition(cfg, labelCfg, group) {\n    return {\n      text: cfg.label\n    };\n  },\n  getLabelBgStyleByPosition: function getLabelBgStyleByPosition(label, cfg, labelCfg, group) {\n    return {};\n  },\n\n  /**\n   * 获取文本的配置项\n   * @param cfg 节点的配置项\n   * @param labelCfg 文本的配置项\n   * @param group 父容器，label 的定位可能与图形相关\n   */\n  getLabelStyle: function getLabelStyle(cfg, labelCfg, group) {\n    var calculateStyle = this.getLabelStyleByPosition(cfg, labelCfg, group);\n    var attrName = this.itemType + \"Label\"; // 取 nodeLabel，edgeLabel 的配置项\n\n    var defaultStyle = Global[attrName] ? Global[attrName].style : null;\n\n    var labelStyle = __assign(__assign(__assign({}, defaultStyle), calculateStyle), labelCfg.style);\n\n    return labelStyle;\n  },\n\n  /**\n   * 获取图形的配置项\n   * @param cfg\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    return cfg.style;\n  },\n\n  /**\n   * 更新节点，包含文本\n   * @override\n   * @param  {Object} cfg 节点/边的配置项\n   * @param  {G6.Item} item 节点/边\n   */\n  update: function update(cfg, item) {\n    this.updateShapeStyle(cfg, item);\n    this.updateLabel(cfg, item);\n  },\n  updateShapeStyle: function updateShapeStyle(cfg, item) {\n    var group = item.getContainer();\n    var shape = item.getKeyShape();\n    var shapeStyle = mix({}, shape.attr(), cfg.style);\n\n    var _loop_1 = function _loop_1(key) {\n      var _a;\n\n      var style = shapeStyle[key];\n\n      if (isPlainObject(style)) {\n        // 更新图元素样式，支持更新子元素\n        var subShape = group.find(function (element) {\n          return element.get('name') === key;\n        });\n\n        if (subShape) {\n          subShape.attr(style);\n        }\n      } else {\n        shape.attr((_a = {}, _a[key] = style, _a));\n      }\n    };\n\n    for (var key in shapeStyle) {\n      _loop_1(key);\n    }\n  },\n  updateLabel: function updateLabel(cfg, item) {\n    var group = item.getContainer();\n    var defaultLabelCfg = this.getOptions({}).labelCfg;\n    var labelClassName = this.itemType + CLS_LABEL_SUFFIX;\n    var label = group.find(function (element) {\n      return element.get('className') === labelClassName;\n    });\n    var labelBgClassname = this.itemType + CLS_LABEL_BG_SUFFIX;\n    var labelBg = group.find(function (element) {\n      return element.get('classname') === labelBgClassname;\n    }); // 防止 cfg.label = \"\" 的情况\n\n    if (cfg.label || cfg.label === '') {\n      // 若传入的新配置中有 label，（用户没传入但原先有 label，label 也会有值）\n      if (!label) {\n        // 若原先不存在 label，则绘制一个新的 label\n        var newLabel = this.drawLabel(cfg, group);\n        newLabel.set('className', labelClassName);\n      } else {\n        // 若原先存在 label，则更新样式。与 getLabelStyle 不同在于这里需要融合当前 label 的样式\n        // 用于融合 style 以外的属性：position, offset, ...\n        var currentLabelCfg = {};\n\n        if (item.getModel) {\n          currentLabelCfg = item.getModel().labelCfg;\n        } // 这里不能去掉\n\n\n        var labelCfg = deepMix({}, defaultLabelCfg, currentLabelCfg, cfg.labelCfg); // 获取位置信息\n\n        var calculateStyle = this.getLabelStyleByPosition(cfg, labelCfg, group); // 取 nodeLabel，edgeLabel 的配置项\n\n        var cfgStyle = cfg.labelCfg ? cfg.labelCfg.style : undefined;\n        var cfgBgStyle = labelCfg.style && labelCfg.style.background; // 需要融合当前\b label 的样式 label.attr()。不再需要全局/默认样式，因为已经应用在当前的 label 上\n\n        var labelStyle = __assign(__assign(__assign({}, label.attr()), calculateStyle), cfgStyle);\n\n        var rotate = labelStyle.rotate;\n        delete labelStyle.rotate; // 计算 label 的旋转矩阵\n\n        if (rotate) {\n          // if G 4.x define the rotateAtStart, use it directly instead of using the following codes\n          var rotateMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n          rotateMatrix = transform(rotateMatrix, [['t', -labelStyle.x, -labelStyle.y], ['r', rotate], ['t', labelStyle.x, labelStyle.y]]);\n          label.resetMatrix();\n          label.attr(__assign(__assign({}, labelStyle), {\n            matrix: rotateMatrix\n          }));\n        } else {\n          label.resetMatrix();\n          label.attr(labelStyle);\n        }\n\n        if (!labelBg) {\n          if (labelStyle.background) {\n            labelBg = this.drawLabelBg(cfg, group, label);\n            labelBg.set('classname', labelBgClassname);\n            label.toFront();\n          }\n        } else if (labelStyle.background) {\n          var calculateBgStyle = this.getLabelBgStyleByPosition(label, cfg, labelCfg, group); // const labelBgStyle = Object.assign({}, labelBg.attr(), calculateBgStyle, cfgBgStyle);\n\n          var labelBgStyle = __assign(__assign({}, calculateBgStyle), cfgBgStyle);\n\n          labelBg.resetMatrix();\n\n          if (rotate) {\n            labelBg.rotateAtStart(rotate);\n          }\n\n          labelBg.attr(labelBgStyle);\n        } else {\n          group.removeChild(labelBg);\n        }\n      }\n    }\n  },\n  // update(cfg, item) // 默认不定义\n  afterUpdate: function afterUpdate(cfg, item) {},\n\n  /**\n   * 设置节点的状态，主要是交互状态，业务状态请在 draw 方法中实现\n   * 单图形的节点仅考虑 selected、active 状态，有其他状态需求的用户自己复写这个方法\n   * @override\n   * @param  {String} name 状态名称\n   * @param  {String | Boolean} value 状态值\n   * @param  {G6.Item} item 节点\n   */\n  setState: function setState(name, value, item) {\n    var _a, _b;\n\n    var shape = item.get('keyShape');\n\n    if (!shape) {\n      return;\n    }\n\n    var type = item.getType();\n    var stateName = isBoolean(value) ? name : name + \":\" + value;\n    var shapeStateStyle = this.getStateStyle(stateName, item);\n    var itemStateStyle = item.getStateStyle(stateName); // 不允许设置一个不存在的状态\n\n    if (!itemStateStyle && !shapeStateStyle) {\n      return;\n    } // 要设置或取消的状态的样式\n    // 当没有 state 状态时，默认使用 model.stateStyles 中的样式\n\n\n    var styles = mix({}, itemStateStyle || shapeStateStyle);\n    var group = item.getContainer();\n\n    if (value) {\n      var _loop_2 = function _loop_2(key) {\n        var _a;\n\n        var style = styles[key];\n\n        if (isPlainObject(style) && !ARROWS.includes(key)) {\n          var subShape = group.find(function (element) {\n            return element.get('name') === key;\n          });\n\n          if (subShape) {\n            subShape.attr(style);\n          }\n        } else {\n          // 非纯对象，则认为是设置到 keyShape 上面的\n          shape.attr((_a = {}, _a[key] = style, _a));\n        }\n      }; // style 为要设置的状态的样式\n\n\n      for (var key in styles) {\n        _loop_2(key);\n      }\n    } else {\n      // 所有生效的 state 的样式\n      var enableStatesStyle = clone(item.getCurrentStatesStyle());\n      var model = item.getModel(); // 原始样式\n      // const originStyle = clone(item.getOriginStyle());\n\n      var originStyle = mix({}, model.style, clone(item.getOriginStyle()));\n      var keyShapeName = shape.get('name');\n      var keyShapeStyles = shape.attr(); // 已有样式 - 要取消的状态的样式\n\n      var filtetDisableStatesStyle = {};\n\n      var _loop_3 = function _loop_3(p) {\n        var style = styles[p];\n\n        if (isPlainObject(style) && !ARROWS.includes(p)) {\n          var subShape = group.find(function (element) {\n            return element.get('name') === p;\n          });\n\n          if (subShape) {\n            var subShapeStyles_1 = subShape.attr(); // const current = subShapeStyles[p]\n\n            each(style, function (v, key) {\n              if (subShapeStyles_1[key] || subShapeStyles_1[key] === 0) {\n                delete subShapeStyles_1[key];\n              }\n            });\n            filtetDisableStatesStyle[p] = subShapeStyles_1;\n          }\n        } else {\n          // 从图元素现有的样式中删除本次要取消的 states 中存在的属性值。使用对象检索更快\n          var keptAttrs = {\n            x: 1,\n            y: 1,\n            cx: 1,\n            cy: 1\n          };\n\n          if (keyShapeStyles[p] && !keptAttrs[p]) {\n            delete keyShapeStyles[p];\n          }\n        }\n      }; // style 为要取消的状态的样式\n\n\n      for (var p in styles) {\n        _loop_3(p);\n      } // 从图元素现有的样式中删除本次要取消的 states 中存在的属性值后，\n      // 如果 keyShape 有 name 属性，则 filtetDisableStatesStyle 的格式为 { keyShapeName: {} }\n      // 否则为普通对象\n\n\n      if (!keyShapeName) {\n        mix(filtetDisableStatesStyle, keyShapeStyles);\n      } else {\n        filtetDisableStatesStyle[keyShapeName] = keyShapeStyles;\n      }\n\n      for (var key in enableStatesStyle) {\n        var enableStyle = enableStatesStyle[key];\n\n        if (!isPlainObject(enableStyle) || ARROWS.includes(key)) {\n          // 把样式属性merge到keyShape中\n          if (!keyShapeName) {\n            mix(originStyle, (_a = {}, _a[key] = enableStyle, _a));\n          } else {\n            mix(originStyle[keyShapeName], (_b = {}, _b[key] = enableStyle, _b));\n            delete originStyle[key];\n          }\n\n          delete enableStatesStyle[key];\n        }\n      }\n\n      var originstyles = {};\n      deepMix(originstyles, originStyle, filtetDisableStatesStyle, enableStatesStyle);\n\n      var _loop_4 = function _loop_4(originKey) {\n        var _a, _b;\n\n        var style = originstyles[originKey];\n\n        if (isPlainObject(style) && !ARROWS.includes(originKey)) {\n          var subShape = group.find(function (element) {\n            return element.get('name') === originKey;\n          });\n\n          if (subShape) {\n            subShape.attr(style);\n          }\n        } else {\n          // 当更新 combo 状态时，当不存在 keyShapeName 时候，则认为是设置到 keyShape 上面的\n          if (type === 'combo') {\n            if (!keyShapeName) {\n              shape.attr((_a = {}, _a[originKey] = style, _a));\n            }\n          } else {\n            shape.attr((_b = {}, _b[originKey] = style, _b));\n          }\n        }\n      };\n\n      for (var originKey in originstyles) {\n        _loop_4(originKey);\n      }\n    }\n  },\n\n  /**\n   * 获取不同状态下的样式\n   *\n   * @param {string} name 状态名称\n   * @param {Item} item Node或Edge的实例\n   * @return {object} 样式\n   */\n  getStateStyle: function getStateStyle(name, item) {\n    var model = item.getModel();\n    var type = item.getType();\n\n    var _a = this.getOptions(model),\n        stateStyles = _a.stateStyles,\n        _b = _a.style,\n        style = _b === void 0 ? {} : _b;\n\n    var modelStateStyle = model.stateStyles ? model.stateStyles[name] : stateStyles && stateStyles[name];\n\n    if (type === 'combo') {\n      return clone(modelStateStyle);\n    }\n\n    return mix({}, style, modelStateStyle);\n  },\n\n  /**\n   * 获取控制点\n   * @param  {Object} cfg 节点、边的配置项\n   * @return {Array|null} 控制点的数组,如果为 null，则没有控制点\n   */\n  getControlPoints: function getControlPoints(cfg) {\n    return cfg.controlPoints;\n  },\n\n  /**\n   * 获取控制点\n   * @param  {Object} cfg 节点、边的配置项\n   * @return {Array|null} 锚点的数组,如果为 null，则没有锚点\n   */\n  getAnchorPoints: function getAnchorPoints(cfg) {\n    var anchorPoints = this.getOptions(cfg).anchorPoints;\n    return anchorPoints;\n  }\n};","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@antv/g6/es/shape/shapeBase.js"],"names":["__assign","Global","transform","deepMix","each","mix","isBoolean","isPlainObject","clone","CLS_SHAPE_SUFFIX","CLS_LABEL_SUFFIX","ARROWS","CLS_LABEL_BG_SUFFIX","shapeBase","options","itemType","type","getCustomConfig","cfg","getOptions","labelCfg","style","fontFamily","window","getComputedStyle","document","body","getPropertyValue","descriptionCfg","draw","group","shape","drawShape","set","label","drawLabel","afterDraw","keyShape","defaultLabelCfg","labelStyle","getLabelStyle","rotate","addShape","attrs","draggable","className","name","labelBBox","getBBox","labelMatrix","getMatrix","rotateCenter","width","height","x","y","setMatrix","background","rect","drawLabelBg","labelBgClassname","toFront","getLabelBgStyleByPosition","getLabelStyleByPosition","text","calculateStyle","attrName","defaultStyle","getShapeStyle","update","item","updateShapeStyle","updateLabel","getContainer","getKeyShape","shapeStyle","attr","_loop_1","key","_a","subShape","find","element","get","labelClassName","labelBg","newLabel","currentLabelCfg","getModel","cfgStyle","undefined","cfgBgStyle","rotateMatrix","resetMatrix","matrix","calculateBgStyle","labelBgStyle","rotateAtStart","removeChild","afterUpdate","setState","value","_b","getType","stateName","shapeStateStyle","getStateStyle","itemStateStyle","styles","_loop_2","includes","enableStatesStyle","getCurrentStatesStyle","model","originStyle","getOriginStyle","keyShapeName","keyShapeStyles","filtetDisableStatesStyle","_loop_3","p","subShapeStyles_1","v","keptAttrs","cx","cy","enableStyle","originstyles","_loop_4","originKey","stateStyles","modelStateStyle","getControlPoints","controlPoints","getAnchorPoints","anchorPoints"],"mappings":"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","sourcesContent":["import { __assign } from \"tslib\";\nimport Global from '../global';\nimport { transform } from '@antv/matrix-util';\nimport { deepMix, each, mix, isBoolean, isPlainObject, clone } from '@antv/util';\nvar CLS_SHAPE_SUFFIX = '-shape';\nvar CLS_LABEL_SUFFIX = '-label';\nvar ARROWS = ['startArrow', 'endArrow'];\nexport var CLS_LABEL_BG_SUFFIX = '-label-bg'; // 单个 shape 带有一个 label，共用这段代码\n\nexport var shapeBase = {\n  // 默认样式及配置\n  options: {},\n  itemType: '',\n\n  /**\n   * 形状的类型，例如 circle，ellipse，polyline...\n   */\n  type: '',\n  getCustomConfig: function getCustomConfig(cfg) {\n    return {};\n  },\n  getOptions: function getOptions(cfg) {\n    return deepMix({\n      // 解决局部渲染导致的文字移动残影问题\n      labelCfg: {\n        style: {\n          fontFamily: typeof window !== 'undefined' ? window.getComputedStyle(document.body, null).getPropertyValue(\"font-family\") || 'Arial, sans-serif' : 'Arial, sans-serif'\n        }\n      },\n      descriptionCfg: {\n        style: {\n          fontFamily: typeof window !== 'undefined' ? window.getComputedStyle(document.body, null).getPropertyValue(\"font-family\") || 'Arial, sans-serif' : 'Arial, sans-serif'\n        }\n      }\n    }, this.options, this.getCustomConfig(cfg) || {}, cfg);\n  },\n\n  /**\n   * 绘制节点/边，包含文本\n   * @override\n   * @param  {Object} cfg 节点的配置项\n   * @param  {G.Group} group 节点的容器\n   * @return {IShape} 绘制的图形\n   */\n  draw: function draw(cfg, group) {\n    var shape = this.drawShape(cfg, group);\n    shape.set('className', this.itemType + CLS_SHAPE_SUFFIX);\n\n    if (cfg.label) {\n      var label = this.drawLabel(cfg, group);\n      label.set('className', this.itemType + CLS_LABEL_SUFFIX);\n    }\n\n    return shape;\n  },\n\n  /**\n   * 绘制完成后的操作，便于用户继承现有的节点、边\n   * @param cfg\n   * @param group\n   * @param keyShape\n   */\n  afterDraw: function afterDraw(cfg, group, keyShape) {},\n  drawShape: function drawShape(cfg, group) {\n    return null;\n  },\n  drawLabel: function drawLabel(cfg, group) {\n    var defaultLabelCfg = this.getOptions(cfg).labelCfg; // image的情况下有可能为null\n\n    var labelCfg = defaultLabelCfg || {};\n    var labelStyle = this.getLabelStyle(cfg, labelCfg, group);\n    var rotate = labelStyle.rotate;\n    delete labelStyle.rotate;\n    var label = group.addShape('text', {\n      attrs: labelStyle,\n      draggable: true,\n      className: 'text-shape',\n      name: 'text-shape'\n    });\n\n    if (rotate) {\n      var labelBBox = label.getBBox();\n      var labelMatrix = label.getMatrix();\n\n      if (!labelMatrix) {\n        labelMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n      }\n\n      if (labelStyle.rotateCenter) {\n        switch (labelStyle.rotateCenter) {\n          case 'center':\n            labelMatrix = transform(labelMatrix, [['t', -labelBBox.width / 2, -labelBBox.height / 2], ['r', rotate], ['t', labelBBox.width / 2, labelBBox.height / 2]]);\n            break;\n\n          case 'lefttop':\n            labelMatrix = transform(labelMatrix, [['t', -labelStyle.x, -labelStyle.y], ['r', rotate], ['t', labelStyle.x, labelStyle.y]]);\n            break;\n\n          case 'leftcenter':\n            labelMatrix = transform(labelMatrix, [['t', -labelStyle.x, -labelStyle.y - labelBBox.height / 2], ['r', rotate], ['t', labelStyle.x, labelStyle.y + labelBBox.height / 2]]);\n            break;\n\n          default:\n            labelMatrix = transform(labelMatrix, [['t', -labelBBox.width / 2, -labelBBox.height / 2], ['r', rotate], ['t', labelBBox.width / 2, labelBBox.height / 2]]);\n            break;\n        }\n      } else {\n        labelMatrix = transform(labelMatrix, [['t', -labelStyle.x, -labelStyle.y - labelBBox.height / 2], ['r', rotate], ['t', labelStyle.x, labelStyle.y + labelBBox.height / 2]]);\n      }\n\n      label.setMatrix(labelMatrix);\n    }\n\n    if (labelStyle.background) {\n      var rect = this.drawLabelBg(cfg, group, label);\n      var labelBgClassname = this.itemType + CLS_LABEL_BG_SUFFIX;\n      rect.set('classname', labelBgClassname);\n      label.toFront();\n    }\n\n    return label;\n  },\n  drawLabelBg: function drawLabelBg(cfg, group, label) {\n    var defaultLabelCfg = this.options.labelCfg;\n    var labelCfg = mix({}, defaultLabelCfg, cfg.labelCfg);\n    var style = this.getLabelBgStyleByPosition(label, cfg, labelCfg, group);\n    var rect = group.addShape('rect', {\n      name: 'text-bg-shape',\n      attrs: style\n    });\n    return rect;\n  },\n  getLabelStyleByPosition: function getLabelStyleByPosition(cfg, labelCfg, group) {\n    return {\n      text: cfg.label\n    };\n  },\n  getLabelBgStyleByPosition: function getLabelBgStyleByPosition(label, cfg, labelCfg, group) {\n    return {};\n  },\n\n  /**\n   * 获取文本的配置项\n   * @param cfg 节点的配置项\n   * @param labelCfg 文本的配置项\n   * @param group 父容器，label 的定位可能与图形相关\n   */\n  getLabelStyle: function getLabelStyle(cfg, labelCfg, group) {\n    var calculateStyle = this.getLabelStyleByPosition(cfg, labelCfg, group);\n    var attrName = this.itemType + \"Label\"; // 取 nodeLabel，edgeLabel 的配置项\n\n    var defaultStyle = Global[attrName] ? Global[attrName].style : null;\n\n    var labelStyle = __assign(__assign(__assign({}, defaultStyle), calculateStyle), labelCfg.style);\n\n    return labelStyle;\n  },\n\n  /**\n   * 获取图形的配置项\n   * @param cfg\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    return cfg.style;\n  },\n\n  /**\n   * 更新节点，包含文本\n   * @override\n   * @param  {Object} cfg 节点/边的配置项\n   * @param  {G6.Item} item 节点/边\n   */\n  update: function update(cfg, item) {\n    this.updateShapeStyle(cfg, item);\n    this.updateLabel(cfg, item);\n  },\n  updateShapeStyle: function updateShapeStyle(cfg, item) {\n    var group = item.getContainer();\n    var shape = item.getKeyShape();\n    var shapeStyle = mix({}, shape.attr(), cfg.style);\n\n    var _loop_1 = function _loop_1(key) {\n      var _a;\n\n      var style = shapeStyle[key];\n\n      if (isPlainObject(style)) {\n        // 更新图元素样式，支持更新子元素\n        var subShape = group.find(function (element) {\n          return element.get('name') === key;\n        });\n\n        if (subShape) {\n          subShape.attr(style);\n        }\n      } else {\n        shape.attr((_a = {}, _a[key] = style, _a));\n      }\n    };\n\n    for (var key in shapeStyle) {\n      _loop_1(key);\n    }\n  },\n  updateLabel: function updateLabel(cfg, item) {\n    var group = item.getContainer();\n    var defaultLabelCfg = this.getOptions({}).labelCfg;\n    var labelClassName = this.itemType + CLS_LABEL_SUFFIX;\n    var label = group.find(function (element) {\n      return element.get('className') === labelClassName;\n    });\n    var labelBgClassname = this.itemType + CLS_LABEL_BG_SUFFIX;\n    var labelBg = group.find(function (element) {\n      return element.get('classname') === labelBgClassname;\n    }); // 防止 cfg.label = \"\" 的情况\n\n    if (cfg.label || cfg.label === '') {\n      // 若传入的新配置中有 label，（用户没传入但原先有 label，label 也会有值）\n      if (!label) {\n        // 若原先不存在 label，则绘制一个新的 label\n        var newLabel = this.drawLabel(cfg, group);\n        newLabel.set('className', labelClassName);\n      } else {\n        // 若原先存在 label，则更新样式。与 getLabelStyle 不同在于这里需要融合当前 label 的样式\n        // 用于融合 style 以外的属性：position, offset, ...\n        var currentLabelCfg = {};\n\n        if (item.getModel) {\n          currentLabelCfg = item.getModel().labelCfg;\n        } // 这里不能去掉\n\n\n        var labelCfg = deepMix({}, defaultLabelCfg, currentLabelCfg, cfg.labelCfg); // 获取位置信息\n\n        var calculateStyle = this.getLabelStyleByPosition(cfg, labelCfg, group); // 取 nodeLabel，edgeLabel 的配置项\n\n        var cfgStyle = cfg.labelCfg ? cfg.labelCfg.style : undefined;\n        var cfgBgStyle = labelCfg.style && labelCfg.style.background; // 需要融合当前\b label 的样式 label.attr()。不再需要全局/默认样式，因为已经应用在当前的 label 上\n\n        var labelStyle = __assign(__assign(__assign({}, label.attr()), calculateStyle), cfgStyle);\n\n        var rotate = labelStyle.rotate;\n        delete labelStyle.rotate; // 计算 label 的旋转矩阵\n\n        if (rotate) {\n          // if G 4.x define the rotateAtStart, use it directly instead of using the following codes\n          var rotateMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n          rotateMatrix = transform(rotateMatrix, [['t', -labelStyle.x, -labelStyle.y], ['r', rotate], ['t', labelStyle.x, labelStyle.y]]);\n          label.resetMatrix();\n          label.attr(__assign(__assign({}, labelStyle), {\n            matrix: rotateMatrix\n          }));\n        } else {\n          label.resetMatrix();\n          label.attr(labelStyle);\n        }\n\n        if (!labelBg) {\n          if (labelStyle.background) {\n            labelBg = this.drawLabelBg(cfg, group, label);\n            labelBg.set('classname', labelBgClassname);\n            label.toFront();\n          }\n        } else if (labelStyle.background) {\n          var calculateBgStyle = this.getLabelBgStyleByPosition(label, cfg, labelCfg, group); // const labelBgStyle = Object.assign({}, labelBg.attr(), calculateBgStyle, cfgBgStyle);\n\n          var labelBgStyle = __assign(__assign({}, calculateBgStyle), cfgBgStyle);\n\n          labelBg.resetMatrix();\n\n          if (rotate) {\n            labelBg.rotateAtStart(rotate);\n          }\n\n          labelBg.attr(labelBgStyle);\n        } else {\n          group.removeChild(labelBg);\n        }\n      }\n    }\n  },\n  // update(cfg, item) // 默认不定义\n  afterUpdate: function afterUpdate(cfg, item) {},\n\n  /**\n   * 设置节点的状态，主要是交互状态，业务状态请在 draw 方法中实现\n   * 单图形的节点仅考虑 selected、active 状态，有其他状态需求的用户自己复写这个方法\n   * @override\n   * @param  {String} name 状态名称\n   * @param  {String | Boolean} value 状态值\n   * @param  {G6.Item} item 节点\n   */\n  setState: function setState(name, value, item) {\n    var _a, _b;\n\n    var shape = item.get('keyShape');\n\n    if (!shape) {\n      return;\n    }\n\n    var type = item.getType();\n    var stateName = isBoolean(value) ? name : name + \":\" + value;\n    var shapeStateStyle = this.getStateStyle(stateName, item);\n    var itemStateStyle = item.getStateStyle(stateName); // 不允许设置一个不存在的状态\n\n    if (!itemStateStyle && !shapeStateStyle) {\n      return;\n    } // 要设置或取消的状态的样式\n    // 当没有 state 状态时，默认使用 model.stateStyles 中的样式\n\n\n    var styles = mix({}, itemStateStyle || shapeStateStyle);\n    var group = item.getContainer();\n\n    if (value) {\n      var _loop_2 = function _loop_2(key) {\n        var _a;\n\n        var style = styles[key];\n\n        if (isPlainObject(style) && !ARROWS.includes(key)) {\n          var subShape = group.find(function (element) {\n            return element.get('name') === key;\n          });\n\n          if (subShape) {\n            subShape.attr(style);\n          }\n        } else {\n          // 非纯对象，则认为是设置到 keyShape 上面的\n          shape.attr((_a = {}, _a[key] = style, _a));\n        }\n      }; // style 为要设置的状态的样式\n\n\n      for (var key in styles) {\n        _loop_2(key);\n      }\n    } else {\n      // 所有生效的 state 的样式\n      var enableStatesStyle = clone(item.getCurrentStatesStyle());\n      var model = item.getModel(); // 原始样式\n      // const originStyle = clone(item.getOriginStyle());\n\n      var originStyle = mix({}, model.style, clone(item.getOriginStyle()));\n      var keyShapeName = shape.get('name');\n      var keyShapeStyles = shape.attr(); // 已有样式 - 要取消的状态的样式\n\n      var filtetDisableStatesStyle = {};\n\n      var _loop_3 = function _loop_3(p) {\n        var style = styles[p];\n\n        if (isPlainObject(style) && !ARROWS.includes(p)) {\n          var subShape = group.find(function (element) {\n            return element.get('name') === p;\n          });\n\n          if (subShape) {\n            var subShapeStyles_1 = subShape.attr(); // const current = subShapeStyles[p]\n\n            each(style, function (v, key) {\n              if (subShapeStyles_1[key] || subShapeStyles_1[key] === 0) {\n                delete subShapeStyles_1[key];\n              }\n            });\n            filtetDisableStatesStyle[p] = subShapeStyles_1;\n          }\n        } else {\n          // 从图元素现有的样式中删除本次要取消的 states 中存在的属性值。使用对象检索更快\n          var keptAttrs = {\n            x: 1,\n            y: 1,\n            cx: 1,\n            cy: 1\n          };\n\n          if (keyShapeStyles[p] && !keptAttrs[p]) {\n            delete keyShapeStyles[p];\n          }\n        }\n      }; // style 为要取消的状态的样式\n\n\n      for (var p in styles) {\n        _loop_3(p);\n      } // 从图元素现有的样式中删除本次要取消的 states 中存在的属性值后，\n      // 如果 keyShape 有 name 属性，则 filtetDisableStatesStyle 的格式为 { keyShapeName: {} }\n      // 否则为普通对象\n\n\n      if (!keyShapeName) {\n        mix(filtetDisableStatesStyle, keyShapeStyles);\n      } else {\n        filtetDisableStatesStyle[keyShapeName] = keyShapeStyles;\n      }\n\n      for (var key in enableStatesStyle) {\n        var enableStyle = enableStatesStyle[key];\n\n        if (!isPlainObject(enableStyle) || ARROWS.includes(key)) {\n          // 把样式属性merge到keyShape中\n          if (!keyShapeName) {\n            mix(originStyle, (_a = {}, _a[key] = enableStyle, _a));\n          } else {\n            mix(originStyle[keyShapeName], (_b = {}, _b[key] = enableStyle, _b));\n            delete originStyle[key];\n          }\n\n          delete enableStatesStyle[key];\n        }\n      }\n\n      var originstyles = {};\n      deepMix(originstyles, originStyle, filtetDisableStatesStyle, enableStatesStyle);\n\n      var _loop_4 = function _loop_4(originKey) {\n        var _a, _b;\n\n        var style = originstyles[originKey];\n\n        if (isPlainObject(style) && !ARROWS.includes(originKey)) {\n          var subShape = group.find(function (element) {\n            return element.get('name') === originKey;\n          });\n\n          if (subShape) {\n            subShape.attr(style);\n          }\n        } else {\n          // 当更新 combo 状态时，当不存在 keyShapeName 时候，则认为是设置到 keyShape 上面的\n          if (type === 'combo') {\n            if (!keyShapeName) {\n              shape.attr((_a = {}, _a[originKey] = style, _a));\n            }\n          } else {\n            shape.attr((_b = {}, _b[originKey] = style, _b));\n          }\n        }\n      };\n\n      for (var originKey in originstyles) {\n        _loop_4(originKey);\n      }\n    }\n  },\n\n  /**\n   * 获取不同状态下的样式\n   *\n   * @param {string} name 状态名称\n   * @param {Item} item Node或Edge的实例\n   * @return {object} 样式\n   */\n  getStateStyle: function getStateStyle(name, item) {\n    var model = item.getModel();\n    var type = item.getType();\n\n    var _a = this.getOptions(model),\n        stateStyles = _a.stateStyles,\n        _b = _a.style,\n        style = _b === void 0 ? {} : _b;\n\n    var modelStateStyle = model.stateStyles ? model.stateStyles[name] : stateStyles && stateStyles[name];\n\n    if (type === 'combo') {\n      return clone(modelStateStyle);\n    }\n\n    return mix({}, style, modelStateStyle);\n  },\n\n  /**\n   * 获取控制点\n   * @param  {Object} cfg 节点、边的配置项\n   * @return {Array|null} 控制点的数组,如果为 null，则没有控制点\n   */\n  getControlPoints: function getControlPoints(cfg) {\n    return cfg.controlPoints;\n  },\n\n  /**\n   * 获取控制点\n   * @param  {Object} cfg 节点、边的配置项\n   * @return {Array|null} 锚点的数组,如果为 null，则没有锚点\n   */\n  getAnchorPoints: function getAnchorPoints(cfg) {\n    var anchorPoints = this.getOptions(cfg).anchorPoints;\n    return anchorPoints;\n  }\n};"]},"metadata":{},"sourceType":"module"}