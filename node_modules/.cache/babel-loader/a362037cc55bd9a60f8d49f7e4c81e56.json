{"ast":null,"code":"import { __assign } from \"tslib\";\n/*\n * @Author: moyee\n * @Date: 2019-07-31 14:36:15\n * @LastEditors: moyee\n * @LastEditTime: 2019-08-23 11:13:43\n * @Description: 拖动群组\n */\n\nimport deepMix from '@antv/util/lib/deep-mix';\nimport Global from '../global';\nexport default {\n  getDefaultCfg: function getDefaultCfg() {\n    return {\n      delegate: true,\n      delegateStyle: {},\n      delegateShapes: {},\n      delegateShapeBBoxs: {}\n    };\n  },\n  getEvents: function getEvents() {\n    return {\n      dragstart: 'onDragStart',\n      drag: 'onDrag',\n      dragend: 'onDragEnd',\n      'canvas:mouseleave': 'onOutOfRange'\n    };\n  },\n  onDragStart: function onDragStart(evt) {\n    var graph = this.graph;\n    var target = evt.target; // 获取拖动的group的ID，如果拖动的不是group，则直接return\n\n    var groupId = target.get('groupId');\n\n    if (!groupId) {\n      return;\n    }\n\n    var customGroupControll = graph.get('customGroupControll');\n    var customGroup = customGroupControll.customGroup;\n    var currentGroup = customGroup[groupId].nodeGroup;\n    this.targetGroup = currentGroup;\n    this.mouseOrigin = {\n      x: evt.x,\n      y: evt.y\n    }; // 获取groupId的父Group的ID\n\n    var groups = graph.save().groups;\n    var parentGroupId = null;\n\n    for (var i = 0; i < groups.length; i++) {\n      var group = groups[i];\n\n      if (groupId === group.id) {\n        parentGroupId = group.parentId;\n        break;\n      }\n    }\n\n    if (parentGroupId) {\n      var parentGroup = customGroup[parentGroupId].nodeGroup;\n      customGroupControll.setGroupStyle(parentGroup.get('keyShape'), 'hover');\n    }\n  },\n  onDrag: function onDrag(evt) {\n    if (!this.mouseOrigin) {\n      return;\n    }\n\n    this.updateDelegate(evt);\n  },\n  onDragEnd: function onDragEnd(evt) {\n    var graph = this.graph; // 删除delegate shape\n\n    var groupId = evt.target.get('groupId');\n\n    if (this.delegateShapes[groupId]) {\n      this.delegateShapeBBox = this.delegateShapes[groupId].getBBox();\n      this.delegateShapes[groupId].remove();\n      delete this.delegateShapes[groupId];\n    }\n\n    if (!this.delegateShapeBBox) {\n      return;\n    } // 修改群组位置\n\n\n    var customGroupControll = graph.get('customGroupControll');\n    var delegateShapeBBoxs = this.delegateShapeBBoxs[groupId];\n    customGroupControll.updateGroup(groupId, delegateShapeBBoxs, this.mouseOrigin);\n    this.mouseOrigin = null;\n    this.shapeOrigin = null;\n    customGroupControll.resetNodePoint();\n    this.delegateShapeBBox = null;\n  },\n  updateDelegate: function updateDelegate(evt) {\n    var graph = this.graph;\n    var groupId = evt.target.get('groupId');\n    var item = this.targetGroup.get('keyShape');\n    var delegateShape = this.delegateShapes[groupId];\n    var groupBbox = item.getBBox();\n    var delegateType = item.get('type');\n\n    if (!delegateShape) {\n      var delegateGroup = graph.get('delegateGroup');\n      var bboxX = groupBbox.x,\n          bboxY = groupBbox.y,\n          width = groupBbox.width,\n          height = groupBbox.height;\n\n      var attrs = __assign({\n        width: width,\n        height: height\n      }, deepMix({}, Global.delegateStyle, this.delegateStyle)); // 如果delegate是circle\n\n\n      if (delegateType === 'circle') {\n        var r = width > height ? width / 2 : height / 2;\n        var cx = bboxX + r;\n        var cy = bboxY + r;\n        delegateShape = delegateGroup.addShape('circle', {\n          attrs: __assign({\n            x: cx,\n            y: cy,\n            r: r\n          }, attrs),\n          name: 'circle-delegate-shape'\n        });\n        this.shapeOrigin = {\n          x: cx,\n          y: cy\n        };\n      } else {\n        delegateShape = delegateGroup.addShape('rect', {\n          attrs: __assign({\n            x: bboxX,\n            y: bboxY\n          }, attrs),\n          name: 'rect-delegate-shape'\n        });\n        this.shapeOrigin = {\n          x: bboxX,\n          y: bboxY\n        };\n      } // delegateShape.set('capture', false);\n\n\n      this.delegateShapes[groupId] = delegateShape;\n      this.delegateShapeBBoxs[groupId] = delegateShape.getBBox();\n    } else {\n      var _a = this,\n          mouseOrigin = _a.mouseOrigin,\n          shapeOrigin = _a.shapeOrigin;\n\n      var deltaX = evt.x - mouseOrigin.x;\n      var deltaY = evt.y - mouseOrigin.y;\n      var x = deltaX + shapeOrigin.x;\n      var y = deltaY + shapeOrigin.y;\n      delegateShape.attr({\n        x: x,\n        y: y\n      });\n      this.delegateShapeBBoxs[groupId] = delegateShape.getBBox();\n    }\n  },\n  onOutOfRange: function onOutOfRange(e) {\n    var _this = this;\n\n    var canvasElement = this.graph.get('canvas').get('el');\n\n    var listener = function listener(ev) {\n      if (ev.target !== canvasElement) {\n        _this.onDragEnd(e); // 终止时需要判断此时是否在监听画布外的 mouseup 事件，若有则解绑\n\n\n        document.body.removeEventListener('mouseup', listener, true);\n      }\n    };\n\n    if (this.mouseOrigin) {\n      document.body.addEventListener('mouseup', listener, true);\n    }\n  }\n};","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@antv/g6/es/behavior/drag-group.js"],"names":["__assign","deepMix","Global","getDefaultCfg","delegate","delegateStyle","delegateShapes","delegateShapeBBoxs","getEvents","dragstart","drag","dragend","onDragStart","evt","graph","target","groupId","get","customGroupControll","customGroup","currentGroup","nodeGroup","targetGroup","mouseOrigin","x","y","groups","save","parentGroupId","i","length","group","id","parentId","parentGroup","setGroupStyle","onDrag","updateDelegate","onDragEnd","delegateShapeBBox","getBBox","remove","updateGroup","shapeOrigin","resetNodePoint","item","delegateShape","groupBbox","delegateType","delegateGroup","bboxX","bboxY","width","height","attrs","r","cx","cy","addShape","name","_a","deltaX","deltaY","attr","onOutOfRange","e","_this","canvasElement","listener","ev","document","body","removeEventListener","addEventListener"],"mappings":"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","sourcesContent":["import { __assign } from \"tslib\";\n/*\n * @Author: moyee\n * @Date: 2019-07-31 14:36:15\n * @LastEditors: moyee\n * @LastEditTime: 2019-08-23 11:13:43\n * @Description: 拖动群组\n */\n\nimport deepMix from '@antv/util/lib/deep-mix';\nimport Global from '../global';\nexport default {\n  getDefaultCfg: function getDefaultCfg() {\n    return {\n      delegate: true,\n      delegateStyle: {},\n      delegateShapes: {},\n      delegateShapeBBoxs: {}\n    };\n  },\n  getEvents: function getEvents() {\n    return {\n      dragstart: 'onDragStart',\n      drag: 'onDrag',\n      dragend: 'onDragEnd',\n      'canvas:mouseleave': 'onOutOfRange'\n    };\n  },\n  onDragStart: function onDragStart(evt) {\n    var graph = this.graph;\n    var target = evt.target; // 获取拖动的group的ID，如果拖动的不是group，则直接return\n\n    var groupId = target.get('groupId');\n\n    if (!groupId) {\n      return;\n    }\n\n    var customGroupControll = graph.get('customGroupControll');\n    var customGroup = customGroupControll.customGroup;\n    var currentGroup = customGroup[groupId].nodeGroup;\n    this.targetGroup = currentGroup;\n    this.mouseOrigin = {\n      x: evt.x,\n      y: evt.y\n    }; // 获取groupId的父Group的ID\n\n    var groups = graph.save().groups;\n    var parentGroupId = null;\n\n    for (var i = 0; i < groups.length; i++) {\n      var group = groups[i];\n\n      if (groupId === group.id) {\n        parentGroupId = group.parentId;\n        break;\n      }\n    }\n\n    if (parentGroupId) {\n      var parentGroup = customGroup[parentGroupId].nodeGroup;\n      customGroupControll.setGroupStyle(parentGroup.get('keyShape'), 'hover');\n    }\n  },\n  onDrag: function onDrag(evt) {\n    if (!this.mouseOrigin) {\n      return;\n    }\n\n    this.updateDelegate(evt);\n  },\n  onDragEnd: function onDragEnd(evt) {\n    var graph = this.graph; // 删除delegate shape\n\n    var groupId = evt.target.get('groupId');\n\n    if (this.delegateShapes[groupId]) {\n      this.delegateShapeBBox = this.delegateShapes[groupId].getBBox();\n      this.delegateShapes[groupId].remove();\n      delete this.delegateShapes[groupId];\n    }\n\n    if (!this.delegateShapeBBox) {\n      return;\n    } // 修改群组位置\n\n\n    var customGroupControll = graph.get('customGroupControll');\n    var delegateShapeBBoxs = this.delegateShapeBBoxs[groupId];\n    customGroupControll.updateGroup(groupId, delegateShapeBBoxs, this.mouseOrigin);\n    this.mouseOrigin = null;\n    this.shapeOrigin = null;\n    customGroupControll.resetNodePoint();\n    this.delegateShapeBBox = null;\n  },\n  updateDelegate: function updateDelegate(evt) {\n    var graph = this.graph;\n    var groupId = evt.target.get('groupId');\n    var item = this.targetGroup.get('keyShape');\n    var delegateShape = this.delegateShapes[groupId];\n    var groupBbox = item.getBBox();\n    var delegateType = item.get('type');\n\n    if (!delegateShape) {\n      var delegateGroup = graph.get('delegateGroup');\n      var bboxX = groupBbox.x,\n          bboxY = groupBbox.y,\n          width = groupBbox.width,\n          height = groupBbox.height;\n\n      var attrs = __assign({\n        width: width,\n        height: height\n      }, deepMix({}, Global.delegateStyle, this.delegateStyle)); // 如果delegate是circle\n\n\n      if (delegateType === 'circle') {\n        var r = width > height ? width / 2 : height / 2;\n        var cx = bboxX + r;\n        var cy = bboxY + r;\n        delegateShape = delegateGroup.addShape('circle', {\n          attrs: __assign({\n            x: cx,\n            y: cy,\n            r: r\n          }, attrs),\n          name: 'circle-delegate-shape'\n        });\n        this.shapeOrigin = {\n          x: cx,\n          y: cy\n        };\n      } else {\n        delegateShape = delegateGroup.addShape('rect', {\n          attrs: __assign({\n            x: bboxX,\n            y: bboxY\n          }, attrs),\n          name: 'rect-delegate-shape'\n        });\n        this.shapeOrigin = {\n          x: bboxX,\n          y: bboxY\n        };\n      } // delegateShape.set('capture', false);\n\n\n      this.delegateShapes[groupId] = delegateShape;\n      this.delegateShapeBBoxs[groupId] = delegateShape.getBBox();\n    } else {\n      var _a = this,\n          mouseOrigin = _a.mouseOrigin,\n          shapeOrigin = _a.shapeOrigin;\n\n      var deltaX = evt.x - mouseOrigin.x;\n      var deltaY = evt.y - mouseOrigin.y;\n      var x = deltaX + shapeOrigin.x;\n      var y = deltaY + shapeOrigin.y;\n      delegateShape.attr({\n        x: x,\n        y: y\n      });\n      this.delegateShapeBBoxs[groupId] = delegateShape.getBBox();\n    }\n  },\n  onOutOfRange: function onOutOfRange(e) {\n    var _this = this;\n\n    var canvasElement = this.graph.get('canvas').get('el');\n\n    var listener = function listener(ev) {\n      if (ev.target !== canvasElement) {\n        _this.onDragEnd(e); // 终止时需要判断此时是否在监听画布外的 mouseup 事件，若有则解绑\n\n\n        document.body.removeEventListener('mouseup', listener, true);\n      }\n    };\n\n    if (this.mouseOrigin) {\n      document.body.addEventListener('mouseup', listener, true);\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}