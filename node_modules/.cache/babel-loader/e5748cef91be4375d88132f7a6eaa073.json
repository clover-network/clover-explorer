{"ast":null,"code":"var DebugRect = function () {\n  function DebugRect(style) {\n    var dom = this.dom = document.createElement('div');\n    dom.className = 'ec-debug-dirty-rect';\n    style = Object.assign({}, style);\n    Object.assign(style, {\n      backgroundColor: 'rgba(0, 0, 255, 0.2)',\n      border: '1px solid #00f'\n    });\n    dom.style.cssText = \"\\nposition: absolute;\\nopacity: 0;\\ntransition: opacity 0.5s linear;\\npointer-events: none;\\n\";\n\n    for (var key in style) {\n      if (style.hasOwnProperty(key)) {\n        dom.style[key] = style[key];\n      }\n    }\n  }\n\n  DebugRect.prototype.update = function (rect) {\n    var domStyle = this.dom.style;\n    domStyle.width = rect.width + 'px';\n    domStyle.height = rect.height + 'px';\n    domStyle.left = rect.x + 'px';\n    domStyle.top = rect.y + 'px';\n  };\n\n  DebugRect.prototype.hide = function () {\n    this.dom.style.opacity = '0';\n  };\n\n  DebugRect.prototype.show = function (autoHideDelay) {\n    var _this = this;\n\n    clearTimeout(this._hideTimeout);\n    this.dom.style.opacity = '1';\n    this._hideTimeout = setTimeout(function () {\n      _this.hide();\n    }, autoHideDelay || 1000);\n  };\n\n  return DebugRect;\n}();\n\nexport default function showDebugDirtyRect(zr, opts) {\n  opts = opts || {};\n  var painter = zr.painter;\n\n  if (!painter.getLayers) {\n    throw new Error('Debug dirty rect can only been used on canvas renderer.');\n  }\n\n  if (painter.isSingleCanvas()) {\n    throw new Error('Debug dirty rect can only been used on zrender inited with container.');\n  }\n\n  var debugViewRoot = document.createElement('div');\n  debugViewRoot.style.cssText = \"\\nposition:absolute;\\nleft:0;\\ntop:0;\\nright:0;\\nbottom:0;\\npointer-events:none;\\n\";\n  debugViewRoot.className = 'ec-debug-dirty-rect-container';\n  var debugRects = [];\n  var dom = zr.dom;\n  dom.appendChild(debugViewRoot);\n  var computedStyle = getComputedStyle(dom);\n\n  if (computedStyle.position === 'static') {\n    dom.style.position = 'relative';\n  }\n\n  zr.on('rendered', function () {\n    if (painter.getLayers) {\n      var idx_1 = 0;\n      painter.eachBuiltinLayer(function (layer) {\n        if (!layer.debugGetPaintRects) {\n          return;\n        }\n\n        var paintRects = layer.debugGetPaintRects();\n\n        for (var i = 0; i < paintRects.length; i++) {\n          if (!paintRects[i].width || !paintRects[i].height) {\n            continue;\n          }\n\n          if (!debugRects[idx_1]) {\n            debugRects[idx_1] = new DebugRect(opts.style);\n            debugViewRoot.appendChild(debugRects[idx_1].dom);\n          }\n\n          debugRects[idx_1].show(opts.autoHideDelay);\n          debugRects[idx_1].update(paintRects[i]);\n          idx_1++;\n        }\n      });\n\n      for (var i = idx_1; i < debugRects.length; i++) {\n        debugRects[i].hide();\n      }\n    }\n  });\n}","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/zrender/esm/debug/showDebugDirtyRect.js"],"names":["DebugRect","style","dom","document","createElement","className","Object","assign","backgroundColor","border","cssText","key","hasOwnProperty","prototype","update","rect","domStyle","width","height","left","x","top","y","hide","opacity","show","autoHideDelay","_this","clearTimeout","_hideTimeout","setTimeout","showDebugDirtyRect","zr","opts","painter","getLayers","Error","isSingleCanvas","debugViewRoot","debugRects","appendChild","computedStyle","getComputedStyle","position","on","idx_1","eachBuiltinLayer","layer","debugGetPaintRects","paintRects","i","length"],"mappings":"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","sourcesContent":["var DebugRect = (function () {\n    function DebugRect(style) {\n        var dom = this.dom = document.createElement('div');\n        dom.className = 'ec-debug-dirty-rect';\n        style = Object.assign({}, style);\n        Object.assign(style, {\n            backgroundColor: 'rgba(0, 0, 255, 0.2)',\n            border: '1px solid #00f'\n        });\n        dom.style.cssText = \"\\nposition: absolute;\\nopacity: 0;\\ntransition: opacity 0.5s linear;\\npointer-events: none;\\n\";\n        for (var key in style) {\n            if (style.hasOwnProperty(key)) {\n                dom.style[key] = style[key];\n            }\n        }\n    }\n    DebugRect.prototype.update = function (rect) {\n        var domStyle = this.dom.style;\n        domStyle.width = rect.width + 'px';\n        domStyle.height = rect.height + 'px';\n        domStyle.left = rect.x + 'px';\n        domStyle.top = rect.y + 'px';\n    };\n    DebugRect.prototype.hide = function () {\n        this.dom.style.opacity = '0';\n    };\n    DebugRect.prototype.show = function (autoHideDelay) {\n        var _this = this;\n        clearTimeout(this._hideTimeout);\n        this.dom.style.opacity = '1';\n        this._hideTimeout = setTimeout(function () {\n            _this.hide();\n        }, autoHideDelay || 1000);\n    };\n    return DebugRect;\n}());\nexport default function showDebugDirtyRect(zr, opts) {\n    opts = opts || {};\n    var painter = zr.painter;\n    if (!painter.getLayers) {\n        throw new Error('Debug dirty rect can only been used on canvas renderer.');\n    }\n    if (painter.isSingleCanvas()) {\n        throw new Error('Debug dirty rect can only been used on zrender inited with container.');\n    }\n    var debugViewRoot = document.createElement('div');\n    debugViewRoot.style.cssText = \"\\nposition:absolute;\\nleft:0;\\ntop:0;\\nright:0;\\nbottom:0;\\npointer-events:none;\\n\";\n    debugViewRoot.className = 'ec-debug-dirty-rect-container';\n    var debugRects = [];\n    var dom = zr.dom;\n    dom.appendChild(debugViewRoot);\n    var computedStyle = getComputedStyle(dom);\n    if (computedStyle.position === 'static') {\n        dom.style.position = 'relative';\n    }\n    zr.on('rendered', function () {\n        if (painter.getLayers) {\n            var idx_1 = 0;\n            painter.eachBuiltinLayer(function (layer) {\n                if (!layer.debugGetPaintRects) {\n                    return;\n                }\n                var paintRects = layer.debugGetPaintRects();\n                for (var i = 0; i < paintRects.length; i++) {\n                    if (!paintRects[i].width || !paintRects[i].height) {\n                        continue;\n                    }\n                    if (!debugRects[idx_1]) {\n                        debugRects[idx_1] = new DebugRect(opts.style);\n                        debugViewRoot.appendChild(debugRects[idx_1].dom);\n                    }\n                    debugRects[idx_1].show(opts.autoHideDelay);\n                    debugRects[idx_1].update(paintRects[i]);\n                    idx_1++;\n                }\n            });\n            for (var i = idx_1; i < debugRects.length; i++) {\n                debugRects[i].hide();\n            }\n        }\n    });\n}\n"]},"metadata":{},"sourceType":"module"}