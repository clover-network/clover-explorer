{"ast":null,"code":"import { isFunction, map, isObject } from '@antv/util';\nimport { interaction, animation, theme } from '../../adaptor/common';\nimport { findGeometry } from '../../utils';\nimport { flow, pick, deepAssign } from '../../utils';\nimport { AXIS_META_CONFIG_KEYS } from '../../constant';\nimport { BOX_RANGE, BOX_SYNC_NAME } from './constant';\n/**\n * 字段\n * @param params\n */\n\nfunction field(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xField = options.xField,\n      yField = options.yField,\n      groupField = options.groupField,\n      color = options.color;\n  var yFieldName = Array.isArray(yField) ? BOX_RANGE : yField;\n  var geometry = chart.schema().position(xField + \"*\" + yFieldName).shape('box'); // set group field as color channel\n\n  if (groupField) {\n    geometry.color(groupField, color).adjust('dodge');\n  } // formate data when `yField` is Array\n\n\n  var data = options.data;\n\n  if (Array.isArray(yField)) {\n    var low_1 = yField[0],\n        q1_1 = yField[1],\n        median_1 = yField[2],\n        q3_1 = yField[3],\n        high_1 = yField[4];\n    data = map(data, function (obj) {\n      obj[BOX_RANGE] = [obj[low_1], obj[q1_1], obj[median_1], obj[q3_1], obj[high_1]];\n      return obj;\n    });\n  }\n\n  chart.data(data);\n  return params;\n}\n\nfunction outliersPoint(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xField = options.xField,\n      data = options.data,\n      outliersField = options.outliersField,\n      outliersStyle = options.outliersStyle,\n      padding = options.padding;\n  if (!outliersField) return params;\n  var outliersView = chart.createView({\n    padding: padding\n  });\n  outliersView.data(data);\n  outliersView.axis(false);\n  var geometry = outliersView.point().position(xField + \"*\" + outliersField).shape('circle');\n  /**\n   * style 的几种情况\n   * g.style({ fill: 'red' });\n   * g.style('x*y*color', (x, y, color) => ({ fill: 'red' }));\n   */\n\n  if (isFunction(outliersStyle)) {\n    geometry.style(xField + \"*\" + outliersField, function (_x, _outliers) {\n      var _a;\n\n      return outliersStyle((_a = {}, _a[xField] = _x, _a[outliersField] = _outliers, _a));\n    });\n  } else if (isObject(outliersStyle)) {\n    geometry.style(outliersStyle);\n  }\n\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\n\n\nfunction meta(params) {\n  var _a, _b;\n\n  var chart = params.chart,\n      options = params.options;\n  var meta = options.meta,\n      xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField,\n      outliersField = options.outliersField;\n  var yFieldName = Array.isArray(yField) ? BOX_RANGE : yField;\n  var baseMeta = {}; // make yField and outliersField share y mate\n\n  if (outliersField) {\n    var syncName = BOX_SYNC_NAME;\n    baseMeta = (_a = {}, _a[outliersField] = {\n      sync: syncName\n    }, _a[yFieldName] = {\n      sync: syncName\n    }, _a);\n  }\n\n  var scales = deepAssign(baseMeta, meta, (_b = {}, _b[xField] = pick(xAxis, AXIS_META_CONFIG_KEYS), _b[yFieldName] = pick(yAxis, AXIS_META_CONFIG_KEYS), _b));\n  chart.scale(scales);\n  return params;\n}\n/**\n * axis 配置\n * @param params\n */\n\n\nfunction axis(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField;\n  var yFieldName = Array.isArray(yField) ? BOX_RANGE : yField; // 为 false 则是不显示轴\n\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(BOX_RANGE, false);\n  } else {\n    chart.axis(yFieldName, yAxis);\n  }\n\n  return params;\n}\n/**\n * legend 配置\n * @param params\n */\n\n\nexport function legend(params) {\n  var chart = params.chart,\n      options = params.options;\n  var legend = options.legend,\n      groupField = options.groupField;\n\n  if (groupField) {\n    if (legend) {\n      chart.legend(groupField, legend);\n    } else {\n      // Grouped Box Chart default has legend, and it's position is `bottom`\n      chart.legend(groupField, {\n        position: 'bottom'\n      });\n    }\n  } else {\n    chart.legend(false);\n  }\n\n  return params;\n}\n/**\n * 样式\n * @param params\n */\n\nfunction style(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xField = options.xField,\n      yField = options.yField,\n      boxStyle = options.boxStyle;\n  var geometry = findGeometry(chart, 'schema');\n  var yFieldName = Array.isArray(yField) ? BOX_RANGE : yField;\n  /**\n   * style 的几种情况\n   * g.style({ fill: 'red' });\n   * g.style('x*y*color', (x, y, color) => ({ fill: 'red' }));\n   */\n\n  if (isFunction(boxStyle)) {\n    geometry.style(xField + \"*\" + yFieldName, function (_x, _y) {\n      var _a;\n\n      return boxStyle((_a = {}, _a[xField] = _x, _a[yFieldName] = _y, _a));\n    });\n  } else if (isObject(boxStyle)) {\n    geometry.style(boxStyle);\n  }\n\n  return params;\n}\n/**\n * tooltip 配置\n * @param params\n */\n\n\nexport function tooltip(params) {\n  var chart = params.chart,\n      options = params.options;\n  var tooltip = options.tooltip;\n\n  if (tooltip !== undefined) {\n    chart.tooltip(tooltip);\n  }\n\n  return params;\n}\n/**\n * 箱型图适配器\n * @param params\n */\n\nexport function adaptor(params) {\n  return flow(field, outliersPoint, meta, axis, style, legend, tooltip, interaction, animation, theme)(params);\n}","map":{"version":3,"sources":["../../../src/plots/box/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { isFunction, map, isObject } from '@antv/util';\nimport { Params } from '../../core/adaptor';\nimport { interaction, animation, theme } from '../../adaptor/common';\nimport { findGeometry } from '../../utils';\nimport { flow, pick, deepAssign } from '../../utils';\nimport { AXIS_META_CONFIG_KEYS } from '../../constant';\nimport { BoxOptions } from './types';\nimport { BOX_RANGE, BOX_SYNC_NAME } from './constant';\n\n/**\n * 字段\n * @param params\n */\nfunction field(params: Params<BoxOptions>): Params<BoxOptions> {\n  const { chart, options } = params;\n  const { xField, yField, groupField, color } = options;\n\n  const yFieldName = Array.isArray(yField) ? BOX_RANGE : yField;\n\n  const geometry = chart.schema().position(`${xField}*${yFieldName}`).shape('box');\n\n  // set group field as color channel\n  if (groupField) {\n    geometry.color(groupField, color).adjust('dodge');\n  }\n\n  // formate data when `yField` is Array\n  let data = options.data;\n  if (Array.isArray(yField)) {\n    const [low, q1, median, q3, high] = yField;\n    data = map(data, (obj) => {\n      obj[BOX_RANGE] = [obj[low], obj[q1], obj[median], obj[q3], obj[high]];\n      return obj;\n    });\n  }\n\n  chart.data(data);\n\n  return params;\n}\n\nfunction outliersPoint(params: Params<BoxOptions>): Params<BoxOptions> {\n  const { chart, options } = params;\n  const { xField, data, outliersField, outliersStyle, padding } = options;\n\n  if (!outliersField) return params;\n\n  const outliersView = chart.createView({ padding });\n  outliersView.data(data);\n  outliersView.axis(false);\n  const geometry = outliersView.point().position(`${xField}*${outliersField}`).shape('circle');\n\n  /**\n   * style 的几种情况\n   * g.style({ fill: 'red' });\n   * g.style('x*y*color', (x, y, color) => ({ fill: 'red' }));\n   */\n  if (isFunction(outliersStyle)) {\n    geometry.style(`${xField}*${outliersField}`, (_x: string, _outliers: number) => {\n      return outliersStyle({\n        [xField]: _x,\n        [outliersField]: _outliers,\n      });\n    });\n  } else if (isObject(outliersStyle)) {\n    geometry.style(outliersStyle);\n  }\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params: Params<BoxOptions>): Params<BoxOptions> {\n  const { chart, options } = params;\n  const { meta, xAxis, yAxis, xField, yField, outliersField } = options;\n  const yFieldName = Array.isArray(yField) ? BOX_RANGE : yField;\n\n  let baseMeta = {};\n\n  // make yField and outliersField share y mate\n  if (outliersField) {\n    const syncName = BOX_SYNC_NAME;\n    baseMeta = {\n      [outliersField]: { sync: syncName },\n      [yFieldName]: { sync: syncName },\n    };\n  }\n\n  const scales = deepAssign(baseMeta, meta, {\n    [xField]: pick(xAxis, AXIS_META_CONFIG_KEYS),\n    [yFieldName]: pick(yAxis, AXIS_META_CONFIG_KEYS),\n  });\n\n  chart.scale(scales);\n\n  return params;\n}\n\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params: Params<BoxOptions>): Params<BoxOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n  const yFieldName = Array.isArray(yField) ? BOX_RANGE : yField;\n\n  // 为 false 则是不显示轴\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(BOX_RANGE, false);\n  } else {\n    chart.axis(yFieldName, yAxis);\n  }\n\n  return params;\n}\n\n/**\n * legend 配置\n * @param params\n */\nexport function legend(params: Params<BoxOptions>): Params<BoxOptions> {\n  const { chart, options } = params;\n  const { legend, groupField } = options;\n\n  if (groupField) {\n    if (legend) {\n      chart.legend(groupField, legend);\n    } else {\n      // Grouped Box Chart default has legend, and it's position is `bottom`\n      chart.legend(groupField, { position: 'bottom' });\n    }\n  } else {\n    chart.legend(false);\n  }\n\n  return params;\n}\n\n/**\n * 样式\n * @param params\n */\nfunction style(params: Params<BoxOptions>): Params<BoxOptions> {\n  const { chart, options } = params;\n  const { xField, yField, boxStyle } = options;\n\n  const geometry = findGeometry(chart, 'schema');\n  const yFieldName = Array.isArray(yField) ? BOX_RANGE : yField;\n\n  /**\n   * style 的几种情况\n   * g.style({ fill: 'red' });\n   * g.style('x*y*color', (x, y, color) => ({ fill: 'red' }));\n   */\n  if (isFunction(boxStyle)) {\n    geometry.style(`${xField}*${yFieldName}`, (_x: string, _y: number) => {\n      return boxStyle({\n        [xField]: _x,\n        [yFieldName]: _y,\n      });\n    });\n  } else if (isObject(boxStyle)) {\n    geometry.style(boxStyle);\n  }\n\n  return params;\n}\n\n/**\n * tooltip 配置\n * @param params\n */\nexport function tooltip(params: Params<BoxOptions>): Params<BoxOptions> {\n  const { chart, options } = params;\n  const { tooltip } = options;\n\n  if (tooltip !== undefined) {\n    chart.tooltip(tooltip);\n  }\n\n  return params;\n}\n\n/**\n * 箱型图适配器\n * @param params\n */\nexport function adaptor(params: Params<BoxOptions>) {\n  return flow(field, outliersPoint, meta, axis, style, legend, tooltip, interaction, animation, theme)(params);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}