{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { isValidElement } from 'react';\nimport { Animated, Dimensions, Platform, ScrollView, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { WithTheme } from '../style';\nimport TabBarStyles from './style';\nvar WINDOW_WIDTH = Dimensions.get('window').width;\nexport var DefaultTabBar = function (_React$PureComponent) {\n  _inherits(DefaultTabBar, _React$PureComponent);\n\n  function DefaultTabBar(props) {\n    _classCallCheck(this, DefaultTabBar);\n\n    var _this = _possibleConstructorReturn(this, (DefaultTabBar.__proto__ || Object.getPrototypeOf(DefaultTabBar)).call(this, props));\n\n    _this._tabsMeasurements = [];\n\n    _this.updateView = function (offset) {\n      var position = Math.floor(offset.value);\n      var pageOffset = offset.value % 1;\n      var tabCount = _this.props.tabs.length;\n      var lastTabPosition = tabCount - 1;\n\n      if (tabCount === 0 || offset.value < 0 || offset.value > lastTabPosition) {\n        return;\n      }\n\n      if (_this.necessarilyMeasurementsCompleted(position, position === lastTabPosition)) {\n        _this.updateTabPanel(position, pageOffset);\n\n        _this.updateTabUnderline(position, pageOffset, tabCount);\n      }\n    };\n\n    _this.onPress = function (index) {\n      var _this$props = _this.props,\n          goToTab = _this$props.goToTab,\n          onTabClick = _this$props.onTabClick,\n          tabs = _this$props.tabs; // tslint:disable-next-line:no-unused-expression\n\n      onTabClick && onTabClick(tabs[index], index); // tslint:disable-next-line:no-unused-expression\n\n      goToTab && goToTab(index);\n    };\n\n    _this.renderTab = function (tab, index, width, onLayoutHandler, styles, theme) {\n      var _this$props2 = _this.props,\n          activeTextColor = _this$props2.tabBarActiveTextColor,\n          inactiveTextColor = _this$props2.tabBarInactiveTextColor,\n          textStyle = _this$props2.tabBarTextStyle,\n          activeTab = _this$props2.activeTab,\n          renderTab = _this$props2.renderTab;\n      var isTabActive = activeTab === index;\n      var textColor = isTabActive ? activeTextColor || theme.activeTextColor : inactiveTextColor || theme.inactiveTextColor;\n      return React.createElement(TouchableOpacity, {\n        activeOpacity: 1,\n        key: tab.title + '_' + index,\n        accessible: true,\n        accessibilityTraits: 'button',\n        onPress: function onPress() {\n          return _this.onPress(index);\n        },\n        onLayout: onLayoutHandler\n      }, React.createElement(View, {\n        style: _extends(_extends(_extends({}, StyleSheet.flatten(styles.tab)), _this.props.tabStyle), {\n          width: width\n        })\n      }, renderTab ? renderTab(tab) : isValidElement(tab.title) ? tab.title : React.createElement(Text, {\n        style: [_extends({\n          color: textColor\n        }, StyleSheet.flatten(styles.textStyle)), textStyle]\n      }, tab.title)));\n    };\n\n    _this.measureTab = function (page, event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n          x = _event$nativeEvent$la.x,\n          width = _event$nativeEvent$la.width,\n          height = _event$nativeEvent$la.height;\n      _this._tabsMeasurements[page] = {\n        left: x,\n        right: x + width,\n        width: width,\n        height: height\n      };\n\n      _this.updateView({\n        value: _this.props.scrollValue._value\n      });\n    };\n\n    _this.onTabContainerLayout = function (e) {\n      _this._tabContainerMeasurements = e.nativeEvent.layout;\n      var width = _this._tabContainerMeasurements.width; // fix: https://github.com/ant-design/ant-design-mobile-rn/issues/162\n      // if (width < WINDOW_WIDTH) {\n      // width = WINDOW_WIDTH;\n      // }\n\n      _this.setState({\n        _tabContainerWidth: width\n      });\n\n      if (!_this.props.dynamicTabUnderlineWidth) {\n        _this.state._widthTabUnderline.setValue(width / _this.props.tabs.length);\n      }\n\n      _this.updateView({\n        value: _this.props.scrollValue._value\n      });\n    };\n\n    _this.onContainerLayout = function (e) {\n      _this._containerMeasurements = e.nativeEvent.layout;\n\n      _this.setState({\n        _containerWidth: _this._containerMeasurements.width\n      });\n\n      _this.updateView({\n        value: _this.props.scrollValue._value\n      });\n    };\n\n    _this.state = {\n      _leftTabUnderline: new Animated.Value(0),\n      _widthTabUnderline: new Animated.Value(0),\n      _containerWidth: WINDOW_WIDTH,\n      _tabContainerWidth: WINDOW_WIDTH\n    };\n    return _this;\n  }\n\n  _createClass(DefaultTabBar, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.props.scrollValue.addListener(this.updateView);\n    }\n  }, {\n    key: 'necessarilyMeasurementsCompleted',\n    value: function necessarilyMeasurementsCompleted(position, isLastTab) {\n      return this._tabsMeasurements[position] && (isLastTab || this._tabsMeasurements[position + 1]) && this._tabContainerMeasurements && this._containerMeasurements;\n    }\n  }, {\n    key: 'updateTabPanel',\n    value: function updateTabPanel(position, pageOffset) {\n      var containerWidth = this._containerMeasurements.width;\n      var tabWidth = this._tabsMeasurements[position].width;\n      var nextTabMeasurements = this._tabsMeasurements[position + 1];\n      var nextTabWidth = nextTabMeasurements && nextTabMeasurements.width || 0;\n      var tabOffset = this._tabsMeasurements[position].left;\n      var absolutePageOffset = pageOffset * tabWidth;\n      var newScrollX = tabOffset + absolutePageOffset;\n      newScrollX -= (containerWidth - (1 - pageOffset) * tabWidth - pageOffset * nextTabWidth) / 2;\n      newScrollX = newScrollX >= 0 ? newScrollX : 0;\n\n      if (Platform.OS === 'android') {\n        this._scrollView.scrollTo({\n          x: newScrollX,\n          y: 0,\n          animated: false\n        });\n      } else {\n        var rightBoundScroll = this._tabContainerMeasurements.width - this._containerMeasurements.width;\n        newScrollX = newScrollX > rightBoundScroll ? rightBoundScroll : newScrollX;\n\n        this._scrollView.scrollTo({\n          x: newScrollX,\n          y: 0,\n          animated: false\n        });\n      }\n    }\n  }, {\n    key: 'updateTabUnderline',\n    value: function updateTabUnderline(position, pageOffset, tabCount) {\n      var dynamicTabUnderlineWidth = this.props.dynamicTabUnderlineWidth;\n\n      if (0 <= position && position <= tabCount - 1) {\n        if (dynamicTabUnderlineWidth) {\n          var nowLeft = this._tabsMeasurements[position].left;\n          var nowRight = this._tabsMeasurements[position].right;\n          var nextTabLeft = this._tabsMeasurements[position + 1].left;\n          var nextTabRight = this._tabsMeasurements[position + 1].right;\n          var newLineLeft = pageOffset * nextTabLeft + (1 - pageOffset) * nowLeft;\n          var newLineRight = pageOffset * nextTabRight + (1 - pageOffset) * nowRight;\n\n          this.state._leftTabUnderline.setValue(newLineLeft);\n\n          this.state._widthTabUnderline.setValue(newLineRight - newLineLeft);\n        } else {\n          var _nowLeft = position * this.state._tabContainerWidth / tabCount;\n\n          var _nextTabLeft = (position + 1) * this.state._tabContainerWidth / tabCount;\n\n          var _newLineLeft = pageOffset * _nextTabLeft + (1 - pageOffset) * _nowLeft;\n\n          this.state._leftTabUnderline.setValue(_newLineLeft);\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          tabs = _props.tabs,\n          _props$page = _props.page,\n          page = _props$page === undefined ? 0 : _props$page,\n          tabBarUnderlineStyle = _props.tabBarUnderlineStyle,\n          tabBarBackgroundColor = _props.tabBarBackgroundColor,\n          tabsContainerStyle = _props.tabsContainerStyle,\n          renderUnderline = _props.renderUnderline,\n          keyboardShouldPersistTaps = _props.keyboardShouldPersistTaps;\n      return React.createElement(WithTheme, {\n        styles: this.props.styles,\n        themeStyles: TabBarStyles\n      }, function (styles, theme) {\n        var tabUnderlineStyle = _extends(_extends({\n          position: 'absolute',\n          bottom: 0\n        }, StyleSheet.flatten(styles.underline)), StyleSheet.flatten(tabBarUnderlineStyle));\n\n        var dynamicTabUnderline = {\n          left: _this2.state._leftTabUnderline,\n          width: _this2.state._widthTabUnderline\n        };\n        var tabWidth = _this2.state._containerWidth / Math.min(page, tabs.length);\n        var underlineProps = {\n          style: _extends(_extends({}, dynamicTabUnderline), tabUnderlineStyle)\n        };\n        return React.createElement(View, {\n          style: [styles.container, {\n            backgroundColor: tabBarBackgroundColor\n          }],\n          onLayout: _this2.onContainerLayout\n        }, React.createElement(ScrollView, {\n          ref: function ref(scrollView) {\n            _this2._scrollView = scrollView;\n          },\n          horizontal: true,\n          showsHorizontalScrollIndicator: false,\n          showsVerticalScrollIndicator: false,\n          directionalLockEnabled: true,\n          bounces: false,\n          scrollsToTop: false,\n          scrollEnabled: tabs.length > page,\n          keyboardShouldPersistTaps: keyboardShouldPersistTaps,\n          renderToHardwareTextureAndroid: true\n        }, React.createElement(View, {\n          style: [styles.tabs, _extends(_extends({}, tabsContainerStyle), {\n            backgroundColor: tabBarBackgroundColor\n          })],\n          onLayout: _this2.onTabContainerLayout\n        }, tabs.map(function (name, index) {\n          var tab = {\n            title: name\n          };\n\n          if (tabs.length - 1 >= index) {\n            tab = tabs[index];\n          }\n\n          return _this2.renderTab(tab, index, tabWidth, _this2.measureTab.bind(_this2, index), styles, theme);\n        }), renderUnderline ? renderUnderline(underlineProps.style) : React.createElement(Animated.View, underlineProps))));\n      });\n    }\n  }]);\n\n  return DefaultTabBar;\n}(React.PureComponent);\nDefaultTabBar.defaultProps = {\n  animated: true,\n  tabs: [],\n  goToTab: function goToTab() {},\n  activeTab: 0,\n  page: 5,\n  tabBarUnderlineStyle: {},\n  tabBarBackgroundColor: '#fff',\n  tabBarActiveTextColor: '',\n  tabBarInactiveTextColor: '',\n  tabBarTextStyle: {},\n  dynamicTabUnderlineWidth: false\n};","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@ant-design/react-native/es/tabs/DefaultTabBar.js"],"names":["_extends","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","isValidElement","Animated","Dimensions","Platform","ScrollView","StyleSheet","Text","TouchableOpacity","View","WithTheme","TabBarStyles","WINDOW_WIDTH","get","width","DefaultTabBar","_React$PureComponent","props","_this","__proto__","Object","getPrototypeOf","call","_tabsMeasurements","updateView","offset","position","Math","floor","value","pageOffset","tabCount","tabs","length","lastTabPosition","necessarilyMeasurementsCompleted","updateTabPanel","updateTabUnderline","onPress","index","_this$props","goToTab","onTabClick","renderTab","tab","onLayoutHandler","styles","theme","_this$props2","activeTextColor","tabBarActiveTextColor","inactiveTextColor","tabBarInactiveTextColor","textStyle","tabBarTextStyle","activeTab","isTabActive","textColor","createElement","activeOpacity","key","title","accessible","accessibilityTraits","onLayout","style","flatten","tabStyle","color","measureTab","page","event","_event$nativeEvent$la","nativeEvent","layout","x","height","left","right","scrollValue","_value","onTabContainerLayout","e","_tabContainerMeasurements","setState","_tabContainerWidth","dynamicTabUnderlineWidth","state","_widthTabUnderline","setValue","onContainerLayout","_containerMeasurements","_containerWidth","_leftTabUnderline","Value","componentDidMount","addListener","isLastTab","containerWidth","tabWidth","nextTabMeasurements","nextTabWidth","tabOffset","absolutePageOffset","newScrollX","OS","_scrollView","scrollTo","y","animated","rightBoundScroll","nowLeft","nowRight","nextTabLeft","nextTabRight","newLineLeft","newLineRight","_nowLeft","_nextTabLeft","_newLineLeft","render","_this2","_props","_props$page","undefined","tabBarUnderlineStyle","tabBarBackgroundColor","tabsContainerStyle","renderUnderline","keyboardShouldPersistTaps","themeStyles","tabUnderlineStyle","bottom","underline","dynamicTabUnderline","min","underlineProps","container","backgroundColor","ref","scrollView","horizontal","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","directionalLockEnabled","bounces","scrollsToTop","scrollEnabled","renderToHardwareTextureAndroid","map","name","bind","PureComponent","defaultProps"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { isValidElement } from 'react';\nimport { Animated, Dimensions, Platform, ScrollView, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { WithTheme } from '../style';\nimport TabBarStyles from './style';\nvar WINDOW_WIDTH = Dimensions.get('window').width;\nexport var DefaultTabBar = function (_React$PureComponent) {\n    _inherits(DefaultTabBar, _React$PureComponent);\n\n    function DefaultTabBar(props) {\n        _classCallCheck(this, DefaultTabBar);\n\n        var _this = _possibleConstructorReturn(this, (DefaultTabBar.__proto__ || Object.getPrototypeOf(DefaultTabBar)).call(this, props));\n\n        _this._tabsMeasurements = [];\n        _this.updateView = function (offset) {\n            var position = Math.floor(offset.value);\n            var pageOffset = offset.value % 1;\n            var tabCount = _this.props.tabs.length;\n            var lastTabPosition = tabCount - 1;\n            if (tabCount === 0 || offset.value < 0 || offset.value > lastTabPosition) {\n                return;\n            }\n            if (_this.necessarilyMeasurementsCompleted(position, position === lastTabPosition)) {\n                _this.updateTabPanel(position, pageOffset);\n                _this.updateTabUnderline(position, pageOffset, tabCount);\n            }\n        };\n        _this.onPress = function (index) {\n            var _this$props = _this.props,\n                goToTab = _this$props.goToTab,\n                onTabClick = _this$props.onTabClick,\n                tabs = _this$props.tabs;\n            // tslint:disable-next-line:no-unused-expression\n\n            onTabClick && onTabClick(tabs[index], index);\n            // tslint:disable-next-line:no-unused-expression\n            goToTab && goToTab(index);\n        };\n        _this.renderTab = function (tab, index, width, onLayoutHandler, styles, theme) {\n            var _this$props2 = _this.props,\n                activeTextColor = _this$props2.tabBarActiveTextColor,\n                inactiveTextColor = _this$props2.tabBarInactiveTextColor,\n                textStyle = _this$props2.tabBarTextStyle,\n                activeTab = _this$props2.activeTab,\n                renderTab = _this$props2.renderTab;\n\n            var isTabActive = activeTab === index;\n            var textColor = isTabActive ? activeTextColor || theme.activeTextColor : inactiveTextColor || theme.inactiveTextColor;\n            return React.createElement(\n                TouchableOpacity,\n                { activeOpacity: 1, key: tab.title + '_' + index, accessible: true, accessibilityTraits: 'button', onPress: function onPress() {\n                        return _this.onPress(index);\n                    }, onLayout: onLayoutHandler },\n                React.createElement(\n                    View,\n                    { style: _extends(_extends(_extends({}, StyleSheet.flatten(styles.tab)), _this.props.tabStyle), { width: width }) },\n                    renderTab ? renderTab(tab) : isValidElement(tab.title) ? tab.title : React.createElement(\n                        Text,\n                        { style: [_extends({ color: textColor }, StyleSheet.flatten(styles.textStyle)), textStyle] },\n                        tab.title\n                    )\n                )\n            );\n        };\n        _this.measureTab = function (page, event) {\n            var _event$nativeEvent$la = event.nativeEvent.layout,\n                x = _event$nativeEvent$la.x,\n                width = _event$nativeEvent$la.width,\n                height = _event$nativeEvent$la.height;\n\n            _this._tabsMeasurements[page] = { left: x, right: x + width, width: width, height: height };\n            _this.updateView({ value: _this.props.scrollValue._value });\n        };\n        _this.onTabContainerLayout = function (e) {\n            _this._tabContainerMeasurements = e.nativeEvent.layout;\n            var width = _this._tabContainerMeasurements.width;\n            // fix: https://github.com/ant-design/ant-design-mobile-rn/issues/162\n            // if (width < WINDOW_WIDTH) {\n            // width = WINDOW_WIDTH;\n            // }\n            _this.setState({ _tabContainerWidth: width });\n            if (!_this.props.dynamicTabUnderlineWidth) {\n                _this.state._widthTabUnderline.setValue(width / _this.props.tabs.length);\n            }\n            _this.updateView({ value: _this.props.scrollValue._value });\n        };\n        _this.onContainerLayout = function (e) {\n            _this._containerMeasurements = e.nativeEvent.layout;\n            _this.setState({ _containerWidth: _this._containerMeasurements.width });\n            _this.updateView({ value: _this.props.scrollValue._value });\n        };\n        _this.state = {\n            _leftTabUnderline: new Animated.Value(0),\n            _widthTabUnderline: new Animated.Value(0),\n            _containerWidth: WINDOW_WIDTH,\n            _tabContainerWidth: WINDOW_WIDTH\n        };\n        return _this;\n    }\n\n    _createClass(DefaultTabBar, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            this.props.scrollValue.addListener(this.updateView);\n        }\n    }, {\n        key: 'necessarilyMeasurementsCompleted',\n        value: function necessarilyMeasurementsCompleted(position, isLastTab) {\n            return this._tabsMeasurements[position] && (isLastTab || this._tabsMeasurements[position + 1]) && this._tabContainerMeasurements && this._containerMeasurements;\n        }\n    }, {\n        key: 'updateTabPanel',\n        value: function updateTabPanel(position, pageOffset) {\n            var containerWidth = this._containerMeasurements.width;\n            var tabWidth = this._tabsMeasurements[position].width;\n            var nextTabMeasurements = this._tabsMeasurements[position + 1];\n            var nextTabWidth = nextTabMeasurements && nextTabMeasurements.width || 0;\n            var tabOffset = this._tabsMeasurements[position].left;\n            var absolutePageOffset = pageOffset * tabWidth;\n            var newScrollX = tabOffset + absolutePageOffset;\n            newScrollX -= (containerWidth - (1 - pageOffset) * tabWidth - pageOffset * nextTabWidth) / 2;\n            newScrollX = newScrollX >= 0 ? newScrollX : 0;\n            if (Platform.OS === 'android') {\n                this._scrollView.scrollTo({ x: newScrollX, y: 0, animated: false });\n            } else {\n                var rightBoundScroll = this._tabContainerMeasurements.width - this._containerMeasurements.width;\n                newScrollX = newScrollX > rightBoundScroll ? rightBoundScroll : newScrollX;\n                this._scrollView.scrollTo({ x: newScrollX, y: 0, animated: false });\n            }\n        }\n    }, {\n        key: 'updateTabUnderline',\n        value: function updateTabUnderline(position, pageOffset, tabCount) {\n            var dynamicTabUnderlineWidth = this.props.dynamicTabUnderlineWidth;\n\n            if (0 <= position && position <= tabCount - 1) {\n                if (dynamicTabUnderlineWidth) {\n                    var nowLeft = this._tabsMeasurements[position].left;\n                    var nowRight = this._tabsMeasurements[position].right;\n                    var nextTabLeft = this._tabsMeasurements[position + 1].left;\n                    var nextTabRight = this._tabsMeasurements[position + 1].right;\n                    var newLineLeft = pageOffset * nextTabLeft + (1 - pageOffset) * nowLeft;\n                    var newLineRight = pageOffset * nextTabRight + (1 - pageOffset) * nowRight;\n                    this.state._leftTabUnderline.setValue(newLineLeft);\n                    this.state._widthTabUnderline.setValue(newLineRight - newLineLeft);\n                } else {\n                    var _nowLeft = position * this.state._tabContainerWidth / tabCount;\n                    var _nextTabLeft = (position + 1) * this.state._tabContainerWidth / tabCount;\n                    var _newLineLeft = pageOffset * _nextTabLeft + (1 - pageOffset) * _nowLeft;\n                    this.state._leftTabUnderline.setValue(_newLineLeft);\n                }\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var _props = this.props,\n                tabs = _props.tabs,\n                _props$page = _props.page,\n                page = _props$page === undefined ? 0 : _props$page,\n                tabBarUnderlineStyle = _props.tabBarUnderlineStyle,\n                tabBarBackgroundColor = _props.tabBarBackgroundColor,\n                tabsContainerStyle = _props.tabsContainerStyle,\n                renderUnderline = _props.renderUnderline,\n                keyboardShouldPersistTaps = _props.keyboardShouldPersistTaps;\n\n            return React.createElement(\n                WithTheme,\n                { styles: this.props.styles, themeStyles: TabBarStyles },\n                function (styles, theme) {\n                    var tabUnderlineStyle = _extends(_extends({ position: 'absolute', bottom: 0 }, StyleSheet.flatten(styles.underline)), StyleSheet.flatten(tabBarUnderlineStyle));\n                    var dynamicTabUnderline = {\n                        left: _this2.state._leftTabUnderline,\n                        width: _this2.state._widthTabUnderline\n                    };\n                    var tabWidth = _this2.state._containerWidth / Math.min(page, tabs.length);\n                    var underlineProps = {\n                        style: _extends(_extends({}, dynamicTabUnderline), tabUnderlineStyle)\n                    };\n                    return React.createElement(\n                        View,\n                        { style: [styles.container, {\n                                backgroundColor: tabBarBackgroundColor\n                            }], onLayout: _this2.onContainerLayout },\n                        React.createElement(\n                            ScrollView,\n                            { ref: function ref(scrollView) {\n                                    _this2._scrollView = scrollView;\n                                }, horizontal: true, showsHorizontalScrollIndicator: false, showsVerticalScrollIndicator: false, directionalLockEnabled: true, bounces: false, scrollsToTop: false, scrollEnabled: tabs.length > page, keyboardShouldPersistTaps: keyboardShouldPersistTaps, renderToHardwareTextureAndroid: true },\n                            React.createElement(\n                                View,\n                                { style: [styles.tabs, _extends(_extends({}, tabsContainerStyle), { backgroundColor: tabBarBackgroundColor })], onLayout: _this2.onTabContainerLayout },\n                                tabs.map(function (name, index) {\n                                    var tab = { title: name };\n                                    if (tabs.length - 1 >= index) {\n                                        tab = tabs[index];\n                                    }\n                                    return _this2.renderTab(tab, index, tabWidth, _this2.measureTab.bind(_this2, index), styles, theme);\n                                }),\n                                renderUnderline ? renderUnderline(underlineProps.style) : React.createElement(Animated.View, underlineProps)\n                            )\n                        )\n                    );\n                }\n            );\n        }\n    }]);\n\n    return DefaultTabBar;\n}(React.PureComponent);\nDefaultTabBar.defaultProps = {\n    animated: true,\n    tabs: [],\n    goToTab: function goToTab() {},\n    activeTab: 0,\n    page: 5,\n    tabBarUnderlineStyle: {},\n    tabBarBackgroundColor: '#fff',\n    tabBarActiveTextColor: '',\n    tabBarInactiveTextColor: '',\n    tabBarTextStyle: {},\n    dynamicTabUnderlineWidth: false\n};"]},"metadata":{},"sourceType":"module"}