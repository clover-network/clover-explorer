{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { clone } from '@antv/util/lib';\nimport Base from '../base';\nimport { distance } from '../../util/math';\nvar DELTA = 0.05;\nvar lensDelegateStyle = {\n  stroke: '#000',\n  strokeOpacity: 0.8,\n  lineWidth: 2,\n  fillOpacity: 1,\n  fill: '#fff'\n};\n\nvar EdgeFilterLens =\n/** @class */\nfunction (_super) {\n  __extends(EdgeFilterLens, _super);\n\n  function EdgeFilterLens() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  EdgeFilterLens.prototype.getDefaultCfgs = function () {\n    return {\n      type: 'both',\n      trigger: 'mousemove',\n      r: 60,\n      delegateStyle: clone(lensDelegateStyle),\n      showLabel: 'edge',\n      scaleRBy: 'wheel'\n    };\n  }; // class-methods-use-this\n\n\n  EdgeFilterLens.prototype.getEvents = function () {\n    var events;\n\n    switch (this.get('trigger')) {\n      case 'click':\n        events = {\n          click: 'filter'\n        };\n        break;\n\n      case 'drag':\n        events = {\n          click: 'createDelegate'\n        };\n        break;\n\n      default:\n        events = {\n          mousemove: 'filter'\n        };\n        break;\n    }\n\n    return events;\n  };\n\n  EdgeFilterLens.prototype.init = function () {\n    var self = this;\n    var showLabel = self.get('showLabel');\n    var showNodeLabel = showLabel === 'node' || showLabel === 'both';\n    var showEdgeLabel = showLabel === 'edge' || showLabel === 'both';\n    self.set('showNodeLabel', showNodeLabel);\n    self.set('showEdgeLabel', showEdgeLabel);\n    var shouldShow = self.get('shouldShow');\n    if (!shouldShow) self.set('shouldShow', function () {\n      return true;\n    });\n  }; // Create the delegate when the trigger is drag\n\n\n  EdgeFilterLens.prototype.createDelegate = function (e) {\n    var self = this;\n    var lensDelegate = self.get('delegate');\n\n    if (!lensDelegate || lensDelegate.destroyed) {\n      self.filter(e);\n      lensDelegate = self.get('delegate'); // drag to move the lens\n\n      lensDelegate.on('dragstart', function (evt) {});\n      lensDelegate.on('drag', function (evt) {\n        self.filter(evt);\n      }); // 绑定调整范围（r）\n      // 由于 drag 用于改变 lens 位置，因此在此模式下，drag 不能用于调整 r\n      // scaling r\n\n      if (this.get('scaleRBy') === 'wheel') {\n        lensDelegate.on('mousewheel', function (evt) {\n          self.scaleRByWheel(evt);\n        });\n      }\n    }\n  };\n  /**\n   * Scale the range by wheel\n   * @param e mouse wheel event\n   */\n\n\n  EdgeFilterLens.prototype.scaleRByWheel = function (e) {\n    var self = this;\n    if (!e || !e.originalEvent) return;\n    if (e.preventDefault) e.preventDefault();\n    var graph = self.get('graph');\n    var ratio;\n    var lensDelegate = self.get('delegate');\n    var lensCenter = lensDelegate ? {\n      x: lensDelegate.attr('x'),\n      y: lensDelegate.attr('y')\n    } : undefined;\n    var mousePos = lensCenter || graph.getPointByClient(e.clientX, e.clientY);\n\n    if (e.originalEvent.wheelDelta < 0) {\n      ratio = 1 - DELTA;\n    } else {\n      ratio = 1 / (1 - DELTA);\n    }\n\n    var maxR = self.get('maxR');\n    var minR = self.get('minR');\n    var r = self.get('r');\n\n    if (r > (maxR || graph.get('height')) && ratio > 1 || r < (minR || graph.get('height') * 0.05) && ratio < 1) {\n      ratio = 1;\n    }\n\n    r *= ratio;\n    self.set('r', r);\n    self.filter(e);\n  };\n  /**\n   * Response function for mousemove, click, or drag to filter out the edges\n   * @param e mouse event\n   */\n\n\n  EdgeFilterLens.prototype.filter = function (e) {\n    var self = this;\n    var graph = self.get('graph');\n    var nodes = graph.getNodes();\n    var hitNodesMap = {};\n    var r = self.get('r');\n    var type = self.get('type');\n    var fCenter = {\n      x: e.x,\n      y: e.y\n    };\n    self.updateDelegate(fCenter, r);\n    var shouldShow = self.get('shouldShow');\n    var vShapes = self.get('vShapes');\n\n    if (vShapes) {\n      vShapes.forEach(function (shape) {\n        shape.remove();\n        shape.destroy();\n      });\n    }\n\n    vShapes = [];\n    nodes.forEach(function (node) {\n      var model = node.getModel();\n      var x = model.x,\n          y = model.y;\n\n      if (distance({\n        x: x,\n        y: y\n      }, fCenter) < r) {\n        hitNodesMap[model.id] = node;\n      }\n    });\n    var edges = graph.getEdges();\n    var hitEdges = [];\n    edges.forEach(function (edge) {\n      var model = edge.getModel();\n      var sourceId = model.source;\n      var targetId = model.target;\n\n      if (shouldShow(model)) {\n        if (type === 'only-source' || type === 'one') {\n          if (hitNodesMap[sourceId] && !hitNodesMap[targetId]) hitEdges.push(edge);\n        } else if (type === 'only-target' || type === 'one') {\n          if (hitNodesMap[targetId] && !hitNodesMap[sourceId]) hitEdges.push(edge);\n        } else if (type === 'both' && hitNodesMap[sourceId] && hitNodesMap[targetId]) {\n          hitEdges.push(edge);\n        }\n      }\n    });\n    var showNodeLabel = self.get('showNodeLabel');\n    var showEdgeLabel = self.get('showEdgelabel'); // copy the shapes in hitEdges\n\n    var group = graph.get('group');\n    hitEdges.forEach(function (edge) {\n      var shapes = edge.get('group').get('children');\n      shapes.forEach(function (shape) {\n        var shapeType = shape.get('type');\n        var vShape = group.addShape(shapeType, {\n          attrs: shape.attr()\n        });\n        vShapes.push(vShape);\n\n        if (showNodeLabel && shapeType === 'text') {\n          vShape.set('visible', true);\n        }\n      });\n    }); // copy the shape sof hitNodes\n\n    Object.keys(hitNodesMap).forEach(function (key) {\n      var node = hitNodesMap[key];\n      var clonedGroup = node.get('group').clone();\n      group.add(clonedGroup);\n      vShapes.push(clonedGroup);\n\n      if (showEdgeLabel) {\n        var shapes = clonedGroup.get('children');\n\n        for (var j = 0; j < shapes.length; j++) {\n          var shape = shapes[j];\n\n          if (shape.get('type') === 'text') {\n            shape.set('visible', true);\n          }\n        }\n      }\n    });\n    self.set('vShapes', vShapes);\n  };\n  /**\n   * Adjust part of the parameters, including trigger, type, r, maxR, minR, shouldShow, showLabel, and scaleRBy\n   * @param {EdgeFilterLensConfig} cfg\n   */\n\n\n  EdgeFilterLens.prototype.updateParams = function (cfg) {\n    var self = this;\n    var r = cfg.r,\n        trigger = cfg.trigger,\n        minR = cfg.minR,\n        maxR = cfg.maxR,\n        scaleRBy = cfg.scaleRBy,\n        showLabel = cfg.showLabel,\n        shouldShow = cfg.shouldShow;\n\n    if (!isNaN(cfg.r)) {\n      self.set('r', r);\n    }\n\n    if (!isNaN(maxR)) {\n      self.set('maxR', maxR);\n    }\n\n    if (!isNaN(minR)) {\n      self.set('minR', minR);\n    }\n\n    if (trigger === 'mousemove' || trigger === 'click') {\n      self.set('trigger', trigger);\n    }\n\n    if (scaleRBy === 'wheel' || scaleRBy === 'unset') {\n      self.set('scaleRBy', scaleRBy);\n      self.get('delegate').remove();\n      self.get('delegate').destroy();\n      var dPercentText = self.get('dPercentText');\n\n      if (dPercentText) {\n        dPercentText.remove();\n        dPercentText.destroy();\n      }\n    }\n\n    if (showLabel === 'node' || showLabel === 'both') {\n      self.set('showNodeLabel', true);\n    }\n\n    if (showLabel === 'edge' || showLabel === 'both') {\n      self.set('showEdgeLabel', true);\n    }\n\n    if (shouldShow) {\n      self.set('shouldShow', shouldShow);\n    }\n  };\n  /**\n   * Update the delegate shape of the lens\n   * @param {Point} mCenter the center of the shape\n   * @param {number} r the radius of the shape\n   */\n\n\n  EdgeFilterLens.prototype.updateDelegate = function (mCenter, r) {\n    var self = this;\n    var graph = self.get('graph');\n    var lensDelegate = self.get('delegate');\n\n    if (!lensDelegate || lensDelegate.destroyed) {\n      // 拖动多个\n      var parent_1 = graph.get('group');\n      var attrs = self.get('delegateStyle') || lensDelegateStyle; // model上的x, y是相对于图形中心的，delegateShape是g实例，x,y是绝对坐标\n\n      lensDelegate = parent_1.addShape('circle', {\n        attrs: __assign({\n          r: r,\n          x: mCenter.x,\n          y: mCenter.y\n        }, attrs),\n        name: 'lens-shape',\n        draggable: true\n      });\n\n      if (this.get('trigger') !== 'drag') {\n        // 调整范围 r 的监听\n        if (this.get('scaleRBy') === 'wheel') {\n          // 使用滚轮调整 r\n          lensDelegate.on('mousewheel', function (evt) {\n            self.scaleRByWheel(evt);\n          });\n        }\n      }\n    } else {\n      lensDelegate.attr({\n        x: mCenter.x,\n        y: mCenter.y,\n        r: r\n      });\n    }\n\n    self.set('delegate', lensDelegate);\n  };\n  /**\n   * Clear the filtering\n   */\n\n\n  EdgeFilterLens.prototype.clear = function () {\n    var self = this;\n    var vShapes = self.get('vShapes');\n\n    if (vShapes) {\n      vShapes.forEach(function (shape) {\n        shape.remove();\n        shape.destroy();\n      });\n    }\n\n    vShapes = [];\n    self.set('vShapes', vShapes);\n    var lensDelegate = self.get('delegate');\n\n    if (lensDelegate && !lensDelegate.destroyed) {\n      lensDelegate.remove();\n      lensDelegate.destroy();\n    }\n  };\n  /**\n   * Destroy the component\n   */\n\n\n  EdgeFilterLens.prototype.destroy = function () {\n    this.clear();\n  };\n\n  return EdgeFilterLens;\n}(Base);\n\nexport default EdgeFilterLens;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@antv/g6/es/plugins/edgeFilterLens/index.js"],"names":["__assign","__extends","clone","Base","distance","DELTA","lensDelegateStyle","stroke","strokeOpacity","lineWidth","fillOpacity","fill","EdgeFilterLens","_super","apply","arguments","prototype","getDefaultCfgs","type","trigger","r","delegateStyle","showLabel","scaleRBy","getEvents","events","get","click","mousemove","init","self","showNodeLabel","showEdgeLabel","set","shouldShow","createDelegate","e","lensDelegate","destroyed","filter","on","evt","scaleRByWheel","originalEvent","preventDefault","graph","ratio","lensCenter","x","attr","y","undefined","mousePos","getPointByClient","clientX","clientY","wheelDelta","maxR","minR","nodes","getNodes","hitNodesMap","fCenter","updateDelegate","vShapes","forEach","shape","remove","destroy","node","model","getModel","id","edges","getEdges","hitEdges","edge","sourceId","source","targetId","target","push","group","shapes","shapeType","vShape","addShape","attrs","Object","keys","key","clonedGroup","add","j","length","updateParams","cfg","isNaN","dPercentText","mCenter","parent_1","name","draggable","clear"],"mappings":"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","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { clone } from '@antv/util/lib';\nimport Base from '../base';\nimport { distance } from '../../util/math';\nvar DELTA = 0.05;\nvar lensDelegateStyle = {\n  stroke: '#000',\n  strokeOpacity: 0.8,\n  lineWidth: 2,\n  fillOpacity: 1,\n  fill: '#fff'\n};\n\nvar EdgeFilterLens =\n/** @class */\nfunction (_super) {\n  __extends(EdgeFilterLens, _super);\n\n  function EdgeFilterLens() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  EdgeFilterLens.prototype.getDefaultCfgs = function () {\n    return {\n      type: 'both',\n      trigger: 'mousemove',\n      r: 60,\n      delegateStyle: clone(lensDelegateStyle),\n      showLabel: 'edge',\n      scaleRBy: 'wheel'\n    };\n  }; // class-methods-use-this\n\n\n  EdgeFilterLens.prototype.getEvents = function () {\n    var events;\n\n    switch (this.get('trigger')) {\n      case 'click':\n        events = {\n          click: 'filter'\n        };\n        break;\n\n      case 'drag':\n        events = {\n          click: 'createDelegate'\n        };\n        break;\n\n      default:\n        events = {\n          mousemove: 'filter'\n        };\n        break;\n    }\n\n    return events;\n  };\n\n  EdgeFilterLens.prototype.init = function () {\n    var self = this;\n    var showLabel = self.get('showLabel');\n    var showNodeLabel = showLabel === 'node' || showLabel === 'both';\n    var showEdgeLabel = showLabel === 'edge' || showLabel === 'both';\n    self.set('showNodeLabel', showNodeLabel);\n    self.set('showEdgeLabel', showEdgeLabel);\n    var shouldShow = self.get('shouldShow');\n    if (!shouldShow) self.set('shouldShow', function () {\n      return true;\n    });\n  }; // Create the delegate when the trigger is drag\n\n\n  EdgeFilterLens.prototype.createDelegate = function (e) {\n    var self = this;\n    var lensDelegate = self.get('delegate');\n\n    if (!lensDelegate || lensDelegate.destroyed) {\n      self.filter(e);\n      lensDelegate = self.get('delegate'); // drag to move the lens\n\n      lensDelegate.on('dragstart', function (evt) {});\n      lensDelegate.on('drag', function (evt) {\n        self.filter(evt);\n      }); // 绑定调整范围（r）\n      // 由于 drag 用于改变 lens 位置，因此在此模式下，drag 不能用于调整 r\n      // scaling r\n\n      if (this.get('scaleRBy') === 'wheel') {\n        lensDelegate.on('mousewheel', function (evt) {\n          self.scaleRByWheel(evt);\n        });\n      }\n    }\n  };\n  /**\n   * Scale the range by wheel\n   * @param e mouse wheel event\n   */\n\n\n  EdgeFilterLens.prototype.scaleRByWheel = function (e) {\n    var self = this;\n    if (!e || !e.originalEvent) return;\n    if (e.preventDefault) e.preventDefault();\n    var graph = self.get('graph');\n    var ratio;\n    var lensDelegate = self.get('delegate');\n    var lensCenter = lensDelegate ? {\n      x: lensDelegate.attr('x'),\n      y: lensDelegate.attr('y')\n    } : undefined;\n    var mousePos = lensCenter || graph.getPointByClient(e.clientX, e.clientY);\n\n    if (e.originalEvent.wheelDelta < 0) {\n      ratio = 1 - DELTA;\n    } else {\n      ratio = 1 / (1 - DELTA);\n    }\n\n    var maxR = self.get('maxR');\n    var minR = self.get('minR');\n    var r = self.get('r');\n\n    if (r > (maxR || graph.get('height')) && ratio > 1 || r < (minR || graph.get('height') * 0.05) && ratio < 1) {\n      ratio = 1;\n    }\n\n    r *= ratio;\n    self.set('r', r);\n    self.filter(e);\n  };\n  /**\n   * Response function for mousemove, click, or drag to filter out the edges\n   * @param e mouse event\n   */\n\n\n  EdgeFilterLens.prototype.filter = function (e) {\n    var self = this;\n    var graph = self.get('graph');\n    var nodes = graph.getNodes();\n    var hitNodesMap = {};\n    var r = self.get('r');\n    var type = self.get('type');\n    var fCenter = {\n      x: e.x,\n      y: e.y\n    };\n    self.updateDelegate(fCenter, r);\n    var shouldShow = self.get('shouldShow');\n    var vShapes = self.get('vShapes');\n\n    if (vShapes) {\n      vShapes.forEach(function (shape) {\n        shape.remove();\n        shape.destroy();\n      });\n    }\n\n    vShapes = [];\n    nodes.forEach(function (node) {\n      var model = node.getModel();\n      var x = model.x,\n          y = model.y;\n\n      if (distance({\n        x: x,\n        y: y\n      }, fCenter) < r) {\n        hitNodesMap[model.id] = node;\n      }\n    });\n    var edges = graph.getEdges();\n    var hitEdges = [];\n    edges.forEach(function (edge) {\n      var model = edge.getModel();\n      var sourceId = model.source;\n      var targetId = model.target;\n\n      if (shouldShow(model)) {\n        if (type === 'only-source' || type === 'one') {\n          if (hitNodesMap[sourceId] && !hitNodesMap[targetId]) hitEdges.push(edge);\n        } else if (type === 'only-target' || type === 'one') {\n          if (hitNodesMap[targetId] && !hitNodesMap[sourceId]) hitEdges.push(edge);\n        } else if (type === 'both' && hitNodesMap[sourceId] && hitNodesMap[targetId]) {\n          hitEdges.push(edge);\n        }\n      }\n    });\n    var showNodeLabel = self.get('showNodeLabel');\n    var showEdgeLabel = self.get('showEdgelabel'); // copy the shapes in hitEdges\n\n    var group = graph.get('group');\n    hitEdges.forEach(function (edge) {\n      var shapes = edge.get('group').get('children');\n      shapes.forEach(function (shape) {\n        var shapeType = shape.get('type');\n        var vShape = group.addShape(shapeType, {\n          attrs: shape.attr()\n        });\n        vShapes.push(vShape);\n\n        if (showNodeLabel && shapeType === 'text') {\n          vShape.set('visible', true);\n        }\n      });\n    }); // copy the shape sof hitNodes\n\n    Object.keys(hitNodesMap).forEach(function (key) {\n      var node = hitNodesMap[key];\n      var clonedGroup = node.get('group').clone();\n      group.add(clonedGroup);\n      vShapes.push(clonedGroup);\n\n      if (showEdgeLabel) {\n        var shapes = clonedGroup.get('children');\n\n        for (var j = 0; j < shapes.length; j++) {\n          var shape = shapes[j];\n\n          if (shape.get('type') === 'text') {\n            shape.set('visible', true);\n          }\n        }\n      }\n    });\n    self.set('vShapes', vShapes);\n  };\n  /**\n   * Adjust part of the parameters, including trigger, type, r, maxR, minR, shouldShow, showLabel, and scaleRBy\n   * @param {EdgeFilterLensConfig} cfg\n   */\n\n\n  EdgeFilterLens.prototype.updateParams = function (cfg) {\n    var self = this;\n    var r = cfg.r,\n        trigger = cfg.trigger,\n        minR = cfg.minR,\n        maxR = cfg.maxR,\n        scaleRBy = cfg.scaleRBy,\n        showLabel = cfg.showLabel,\n        shouldShow = cfg.shouldShow;\n\n    if (!isNaN(cfg.r)) {\n      self.set('r', r);\n    }\n\n    if (!isNaN(maxR)) {\n      self.set('maxR', maxR);\n    }\n\n    if (!isNaN(minR)) {\n      self.set('minR', minR);\n    }\n\n    if (trigger === 'mousemove' || trigger === 'click') {\n      self.set('trigger', trigger);\n    }\n\n    if (scaleRBy === 'wheel' || scaleRBy === 'unset') {\n      self.set('scaleRBy', scaleRBy);\n      self.get('delegate').remove();\n      self.get('delegate').destroy();\n      var dPercentText = self.get('dPercentText');\n\n      if (dPercentText) {\n        dPercentText.remove();\n        dPercentText.destroy();\n      }\n    }\n\n    if (showLabel === 'node' || showLabel === 'both') {\n      self.set('showNodeLabel', true);\n    }\n\n    if (showLabel === 'edge' || showLabel === 'both') {\n      self.set('showEdgeLabel', true);\n    }\n\n    if (shouldShow) {\n      self.set('shouldShow', shouldShow);\n    }\n  };\n  /**\n   * Update the delegate shape of the lens\n   * @param {Point} mCenter the center of the shape\n   * @param {number} r the radius of the shape\n   */\n\n\n  EdgeFilterLens.prototype.updateDelegate = function (mCenter, r) {\n    var self = this;\n    var graph = self.get('graph');\n    var lensDelegate = self.get('delegate');\n\n    if (!lensDelegate || lensDelegate.destroyed) {\n      // 拖动多个\n      var parent_1 = graph.get('group');\n      var attrs = self.get('delegateStyle') || lensDelegateStyle; // model上的x, y是相对于图形中心的，delegateShape是g实例，x,y是绝对坐标\n\n      lensDelegate = parent_1.addShape('circle', {\n        attrs: __assign({\n          r: r,\n          x: mCenter.x,\n          y: mCenter.y\n        }, attrs),\n        name: 'lens-shape',\n        draggable: true\n      });\n\n      if (this.get('trigger') !== 'drag') {\n        // 调整范围 r 的监听\n        if (this.get('scaleRBy') === 'wheel') {\n          // 使用滚轮调整 r\n          lensDelegate.on('mousewheel', function (evt) {\n            self.scaleRByWheel(evt);\n          });\n        }\n      }\n    } else {\n      lensDelegate.attr({\n        x: mCenter.x,\n        y: mCenter.y,\n        r: r\n      });\n    }\n\n    self.set('delegate', lensDelegate);\n  };\n  /**\n   * Clear the filtering\n   */\n\n\n  EdgeFilterLens.prototype.clear = function () {\n    var self = this;\n    var vShapes = self.get('vShapes');\n\n    if (vShapes) {\n      vShapes.forEach(function (shape) {\n        shape.remove();\n        shape.destroy();\n      });\n    }\n\n    vShapes = [];\n    self.set('vShapes', vShapes);\n    var lensDelegate = self.get('delegate');\n\n    if (lensDelegate && !lensDelegate.destroyed) {\n      lensDelegate.remove();\n      lensDelegate.destroy();\n    }\n  };\n  /**\n   * Destroy the component\n   */\n\n\n  EdgeFilterLens.prototype.destroy = function () {\n    this.clear();\n  };\n\n  return EdgeFilterLens;\n}(Base);\n\nexport default EdgeFilterLens;"]},"metadata":{},"sourceType":"module"}