{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { adaptor } from './adaptor';\nimport { RANGE_VALUE, PERCENT } from './constant'; // 注册 shape\n\nimport './shapes/gauge';\n/**\n * 仪表盘盘\n */\n\nvar Gauge =\n/** @class */\nfunction (_super) {\n  __extends(Gauge, _super);\n\n  function Gauge() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n\n\n    _this.type = 'gauge';\n    return _this;\n  }\n\n  Gauge.prototype.getDefaultOptions = function () {\n    var _a;\n\n    return {\n      percent: 0,\n      range: {\n        ticks: []\n      },\n      innerRadius: 0.9,\n      radius: 0.95,\n      startAngle: -7 / 6 * Math.PI,\n      endAngle: 1 / 6 * Math.PI,\n      syncViewPadding: true,\n      axis: {\n        line: null,\n        label: {\n          offset: -24,\n          style: {\n            textAlign: 'center',\n            textBaseline: 'middle'\n          }\n        },\n        subTickLine: {\n          length: -8\n        },\n        tickLine: {\n          length: -12\n        },\n        grid: null\n      },\n      indicator: {\n        pointer: {\n          style: {\n            lineWidth: 5,\n            lineCap: 'round'\n          }\n        },\n        pin: {\n          style: {\n            r: 9.75,\n            lineWidth: 4.5,\n            fill: '#fff'\n          }\n        }\n      },\n      statistic: {\n        title: false\n      },\n      meta: (_a = {}, // 两个 view 的 scale 同步到 v 上\n      _a[RANGE_VALUE] = {\n        sync: 'v'\n      }, _a[PERCENT] = {\n        sync: 'v'\n      }, _a),\n      animation: false\n    };\n  };\n  /**\n   * 更新数据\n   * @param percent\n   */\n\n\n  Gauge.prototype.changeData = function (percent) {\n    this.update({\n      percent: percent\n    });\n  };\n  /**\n   * 获取适配器\n   */\n\n\n  Gauge.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n\n  return Gauge;\n}(Plot);\n\nexport { Gauge };","map":{"version":3,"sources":["../../../src/plots/gauge/index.ts"],"names":[],"mappings":";AAAA,SAAS,IAAT,QAAqB,iBAArB;AAGA,SAAS,OAAT,QAAwB,WAAxB;AACA,SAAS,WAAT,EAAsB,OAAtB,QAAqC,YAArC,C,CACA;;AACA,OAAO,gBAAP;AAIA;;AAEG;;AACH,IAAA,KAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA2B,EAAA,SAAA,CAAA,KAAA,EAAA,MAAA,CAAA;;AAA3B,WAAA,KAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AACE;;;AACO,IAAA,KAAA,CAAA,IAAA,GAAe,OAAf;;AA6ER;;AA3EW,EAAA,KAAA,CAAA,SAAA,CAAA,iBAAA,GAAV,YAAA;;;AACE,WAAO;AACL,MAAA,OAAO,EAAE,CADJ;AAEL,MAAA,KAAK,EAAE;AACL,QAAA,KAAK,EAAE;AADF,OAFF;AAKL,MAAA,WAAW,EAAE,GALR;AAML,MAAA,MAAM,EAAE,IANH;AAOL,MAAA,UAAU,EAAG,CAAC,CAAD,GAAK,CAAN,GAAW,IAAI,CAAC,EAPvB;AAQL,MAAA,QAAQ,EAAG,IAAI,CAAL,GAAU,IAAI,CAAC,EARpB;AASL,MAAA,eAAe,EAAE,IATZ;AAUL,MAAA,IAAI,EAAE;AACJ,QAAA,IAAI,EAAE,IADF;AAEJ,QAAA,KAAK,EAAE;AACL,UAAA,MAAM,EAAE,CAAC,EADJ;AAEL,UAAA,KAAK,EAAE;AACL,YAAA,SAAS,EAAE,QADN;AAEL,YAAA,YAAY,EAAE;AAFT;AAFF,SAFH;AASJ,QAAA,WAAW,EAAE;AACX,UAAA,MAAM,EAAE,CAAC;AADE,SATT;AAYJ,QAAA,QAAQ,EAAE;AACR,UAAA,MAAM,EAAE,CAAC;AADD,SAZN;AAeJ,QAAA,IAAI,EAAE;AAfF,OAVD;AA2BL,MAAA,SAAS,EAAE;AACT,QAAA,OAAO,EAAE;AACP,UAAA,KAAK,EAAE;AACL,YAAA,SAAS,EAAE,CADN;AAEL,YAAA,OAAO,EAAE;AAFJ;AADA,SADA;AAOT,QAAA,GAAG,EAAE;AACH,UAAA,KAAK,EAAE;AACL,YAAA,CAAC,EAAE,IADE;AAEL,YAAA,SAAS,EAAE,GAFN;AAGL,YAAA,IAAI,EAAE;AAHD;AADJ;AAPI,OA3BN;AA0CL,MAAA,SAAS,EAAE;AACT,QAAA,KAAK,EAAE;AADE,OA1CN;AA6CL,MAAA,IAAI,GAAA,EAAA,GAAA,EAAA,EACF;AACA,MAAA,EAAA,CAAC,WAAD,CAAA,GAAe;AACb,QAAA,IAAI,EAAE;AADO,OAFb,EAKF,EAAA,CAAC,OAAD,CAAA,GAAW;AACT,QAAA,IAAI,EAAE;AADG,OALT,EAQH,EARG,CA7CC;AAsDL,MAAA,SAAS,EAAE;AAtDN,KAAP;AAwDD,GAzDS;AA2DV;;;AAGG;;;AACI,EAAA,KAAA,CAAA,SAAA,CAAA,UAAA,GAAP,UAAkB,OAAlB,EAAiC;AAC/B,SAAK,MAAL,CAAY;AACV,MAAA,OAAO,EAAA;AADG,KAAZ;AAGD,GAJM;AAMP;;AAEG;;;AACO,EAAA,KAAA,CAAA,SAAA,CAAA,gBAAA,GAAV,YAAA;AACE,WAAO,OAAP;AACD,GAFS;;AAGZ,SAAA,KAAA;AAAC,CA/ED,CAA2B,IAA3B,CAAA","sourcesContent":["import { Plot } from '../../core/plot';\nimport { Adaptor } from '../../core/adaptor';\nimport { GaugeOptions } from './types';\nimport { adaptor } from './adaptor';\nimport { RANGE_VALUE, PERCENT } from './constant';\n// 注册 shape\nimport './shapes/gauge';\n\nexport { GaugeOptions };\n\n/**\n * 仪表盘盘\n */\nexport class Gauge extends Plot<GaugeOptions> {\n  /** 图表类型 */\n  public type: string = 'gauge';\n\n  protected getDefaultOptions() {\n    return {\n      percent: 0, // 当前指标值\n      range: {\n        ticks: [],\n      }, // 默认的刻度\n      innerRadius: 0.9,\n      radius: 0.95,\n      startAngle: (-7 / 6) * Math.PI,\n      endAngle: (1 / 6) * Math.PI,\n      syncViewPadding: true,\n      axis: {\n        line: null,\n        label: {\n          offset: -24,\n          style: {\n            textAlign: 'center',\n            textBaseline: 'middle',\n          },\n        },\n        subTickLine: {\n          length: -8,\n        },\n        tickLine: {\n          length: -12,\n        },\n        grid: null,\n      },\n      indicator: {\n        pointer: {\n          style: {\n            lineWidth: 5,\n            lineCap: 'round',\n          },\n        },\n        pin: {\n          style: {\n            r: 9.75,\n            lineWidth: 4.5,\n            fill: '#fff',\n          },\n        },\n      },\n      statistic: {\n        title: false,\n      },\n      meta: {\n        // 两个 view 的 scale 同步到 v 上\n        [RANGE_VALUE]: {\n          sync: 'v',\n        },\n        [PERCENT]: {\n          sync: 'v',\n        },\n      },\n      animation: false,\n    };\n  }\n\n  /**\n   * 更新数据\n   * @param percent\n   */\n  public changeData(percent: number) {\n    this.update({\n      percent,\n    });\n  }\n\n  /**\n   * 获取适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<GaugeOptions> {\n    return adaptor;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}