{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar config_1 = require(\"../config\");\n\nvar util = require(\"../core/util\");\n\nvar Layer_1 = require(\"./Layer\");\n\nvar requestAnimationFrame_1 = require(\"../animation/requestAnimationFrame\");\n\nvar Image_1 = require(\"../graphic/Image\");\n\nvar env_1 = require(\"../core/env\");\n\nvar graphic_1 = require(\"./graphic\");\n\nvar Element_1 = require(\"../Element\");\n\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div');\n  domRoot.style.cssText = ['position:relative', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n\nvar CanvasPainter = function () {\n  function CanvasPainter(root, storage, opts, id) {\n    this.type = 'canvas';\n    this._zlevelList = [];\n    this._prevDisplayList = [];\n    this._layers = {};\n    this._layerConfig = {};\n    this._needsManuallyCompositing = false;\n    this.type = 'canvas';\n    var singleCanvas = !root.nodeName || root.nodeName.toUpperCase() === 'CANVAS';\n    this._opts = opts = util.extend({}, opts || {});\n    this.dpr = opts.devicePixelRatio || config_1.devicePixelRatio;\n    this._singleCanvas = singleCanvas;\n    this.root = root;\n    var rootStyle = root.style;\n\n    if (rootStyle) {\n      rootStyle.webkitTapHighlightColor = 'transparent';\n      rootStyle.webkitUserSelect = 'none';\n      rootStyle.userSelect = 'none';\n      rootStyle['-webkit-touch-callout'] = 'none';\n      root.innerHTML = '';\n    }\n\n    this.storage = storage;\n    var zlevelList = this._zlevelList;\n    this._prevDisplayList = [];\n    var layers = this._layers;\n\n    if (!singleCanvas) {\n      this._width = this._getSize(0);\n      this._height = this._getSize(1);\n      var domRoot = this._domRoot = createRoot(this._width, this._height);\n      root.appendChild(domRoot);\n    } else {\n      var rootCanvas = root;\n      var width = rootCanvas.width;\n      var height = rootCanvas.height;\n\n      if (opts.width != null) {\n        width = opts.width;\n      }\n\n      if (opts.height != null) {\n        height = opts.height;\n      }\n\n      this.dpr = opts.devicePixelRatio || 1;\n      rootCanvas.width = width * this.dpr;\n      rootCanvas.height = height * this.dpr;\n      this._width = width;\n      this._height = height;\n      var mainLayer = new Layer_1[\"default\"](rootCanvas, this, this.dpr);\n      mainLayer.__builtin__ = true;\n      mainLayer.initContext();\n      layers[CANVAS_ZLEVEL] = mainLayer;\n      mainLayer.zlevel = CANVAS_ZLEVEL;\n      zlevelList.push(CANVAS_ZLEVEL);\n      this._domRoot = root;\n    }\n  }\n\n  CanvasPainter.prototype.getType = function () {\n    return 'canvas';\n  };\n\n  CanvasPainter.prototype.isSingleCanvas = function () {\n    return this._singleCanvas;\n  };\n\n  CanvasPainter.prototype.getViewportRoot = function () {\n    return this._domRoot;\n  };\n\n  CanvasPainter.prototype.getViewportRootOffset = function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  };\n\n  CanvasPainter.prototype.refresh = function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var prevList = this._prevDisplayList;\n    var zlevelList = this._zlevelList;\n    this._redrawId = Math.random();\n\n    this._paintList(list, prevList, paintAll, this._redrawId);\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        var clearColor = i === 0 ? this._backgroundColor : null;\n        layer.refresh(clearColor);\n      }\n    }\n\n    if (this._opts.useDirtyRect) {\n      this._prevDisplayList = list.slice();\n    }\n\n    return this;\n  };\n\n  CanvasPainter.prototype.refreshHover = function () {\n    this._paintHoverList(this.storage.getDisplayList(false));\n  };\n\n  CanvasPainter.prototype._paintHoverList = function (list) {\n    var len = list.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    var scope = {\n      inHover: true,\n      viewWidth: this._width,\n      viewHeight: this._height\n    };\n    var ctx;\n\n    for (var i = 0; i < len; i++) {\n      var el = list[i];\n\n      if (el.__inHover) {\n        if (!hoverLayer) {\n          hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n        }\n\n        if (!ctx) {\n          ctx = hoverLayer.ctx;\n          ctx.save();\n        }\n\n        graphic_1.brush(ctx, el, scope, i === len - 1);\n      }\n    }\n\n    if (ctx) {\n      ctx.restore();\n    }\n  };\n\n  CanvasPainter.prototype.getHoverLayer = function () {\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\n  };\n\n  CanvasPainter.prototype.paintOne = function (ctx, el) {\n    graphic_1.brushSingle(ctx, el);\n  };\n\n  CanvasPainter.prototype._paintList = function (list, prevList, paintAll, redrawId) {\n    if (this._redrawId !== redrawId) {\n      return;\n    }\n\n    paintAll = paintAll || false;\n\n    this._updateLayerStatus(list);\n\n    var _a = this._doPaintList(list, prevList, paintAll),\n        finished = _a.finished,\n        needsRefreshHover = _a.needsRefreshHover;\n\n    if (this._needsManuallyCompositing) {\n      this._compositeManually();\n    }\n\n    if (needsRefreshHover) {\n      this._paintHoverList(list);\n    }\n\n    if (!finished) {\n      var self_1 = this;\n      requestAnimationFrame_1[\"default\"](function () {\n        self_1._paintList(list, prevList, paintAll, redrawId);\n      });\n    } else {\n      this.eachLayer(function (layer) {\n        layer.afterBrush && layer.afterBrush();\n      });\n    }\n  };\n\n  CanvasPainter.prototype._compositeManually = function () {\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n    var width = this._domRoot.width;\n    var height = this._domRoot.height;\n    ctx.clearRect(0, 0, width, height);\n    this.eachBuiltinLayer(function (layer) {\n      if (layer.virtual) {\n        ctx.drawImage(layer.dom, 0, 0, width, height);\n      }\n    });\n  };\n\n  CanvasPainter.prototype._doPaintList = function (list, prevList, paintAll) {\n    var _this = this;\n\n    var layerList = [];\n    var useDirtyRect = this._opts.useDirtyRect;\n\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\n      var zlevel = this._zlevelList[zi];\n      var layer = this._layers[zlevel];\n\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\n        layerList.push(layer);\n      }\n    }\n\n    var finished = true;\n    var needsRefreshHover = false;\n\n    var _loop_1 = function (k) {\n      var layer = layerList[k];\n      var ctx = layer.ctx;\n      var repaintRects = useDirtyRect && layer.createRepaintRects(list, prevList, this_1._width, this_1._height);\n      ctx.save();\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n      var useTimer = !paintAll && layer.incremental && Date.now;\n      var startTime = useTimer && Date.now();\n      var clearColor = layer.zlevel === this_1._zlevelList[0] ? this_1._backgroundColor : null;\n\n      if (layer.__startIndex === layer.__endIndex) {\n        layer.clear(false, clearColor, repaintRects);\n      } else if (start === layer.__startIndex) {\n        var firstEl = list[start];\n\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n          layer.clear(false, clearColor, repaintRects);\n        }\n      }\n\n      if (start === -1) {\n        console.error('For some unknown reason. drawIndex is -1');\n        start = layer.__startIndex;\n      }\n\n      var i;\n\n      var repaint = function (repaintRect) {\n        var scope = {\n          inHover: false,\n          allClipped: false,\n          prevEl: null,\n          viewWidth: _this._width,\n          viewHeight: _this._height\n        };\n\n        for (i = start; i < layer.__endIndex; i++) {\n          var el = list[i];\n\n          if (el.__inHover) {\n            needsRefreshHover = true;\n          }\n\n          _this._doPaintEl(el, layer, useDirtyRect, repaintRect, scope, i === layer.__endIndex - 1);\n\n          if (useTimer) {\n            var dTime = Date.now() - startTime;\n\n            if (dTime > 15) {\n              break;\n            }\n          }\n        }\n\n        if (scope.prevElClipPaths) {\n          ctx.restore();\n        }\n      };\n\n      if (repaintRects) {\n        if (repaintRects.length === 0) {\n          i = layer.__endIndex;\n        } else {\n          var dpr = this_1.dpr;\n\n          for (var r = 0; r < repaintRects.length; ++r) {\n            var rect = repaintRects[r];\n            ctx.save();\n            ctx.beginPath();\n            ctx.rect(rect.x * dpr, rect.y * dpr, rect.width * dpr, rect.height * dpr);\n            ctx.clip();\n            repaint(rect);\n            ctx.restore();\n          }\n        }\n      } else {\n        ctx.save();\n        repaint();\n        ctx.restore();\n      }\n\n      layer.__drawIndex = i;\n\n      if (layer.__drawIndex < layer.__endIndex) {\n        finished = false;\n      }\n    };\n\n    var this_1 = this;\n\n    for (var k = 0; k < layerList.length; k++) {\n      _loop_1(k);\n    }\n\n    if (env_1[\"default\"].wxa) {\n      util.each(this._layers, function (layer) {\n        if (layer && layer.ctx && layer.ctx.draw) {\n          layer.ctx.draw();\n        }\n      });\n    }\n\n    return {\n      finished: finished,\n      needsRefreshHover: needsRefreshHover\n    };\n  };\n\n  CanvasPainter.prototype._doPaintEl = function (el, currentLayer, useDirtyRect, repaintRect, scope, isLast) {\n    var ctx = currentLayer.ctx;\n\n    if (useDirtyRect) {\n      var paintRect = el.getPaintRect();\n\n      if (!repaintRect || paintRect && paintRect.intersect(repaintRect)) {\n        graphic_1.brush(ctx, el, scope, isLast);\n        el.setPrevPaintRect(paintRect);\n      }\n    } else {\n      graphic_1.brush(ctx, el, scope, isLast);\n    }\n  };\n\n  CanvasPainter.prototype.getLayer = function (zlevel, virtual) {\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\n      zlevel = CANVAS_ZLEVEL;\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      layer = new Layer_1[\"default\"]('zr_' + zlevel, this, this.dpr);\n      layer.zlevel = zlevel;\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      } else if (this._layerConfig[zlevel - EL_AFTER_INCREMENTAL_INC]) {\n        util.merge(layer, this._layerConfig[zlevel - EL_AFTER_INCREMENTAL_INC], true);\n      }\n\n      if (virtual) {\n        layer.virtual = virtual;\n      }\n\n      this.insertLayer(zlevel, layer);\n      layer.initContext();\n    }\n\n    return layer;\n  };\n\n  CanvasPainter.prototype.insertLayer = function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var domRoot = this._domRoot;\n    var prevLayer = null;\n    var i = -1;\n\n    if (layersMap[zlevel]) {\n      util.logError('ZLevel ' + zlevel + ' has been used already');\n      return;\n    }\n\n    if (!isLayerValid(layer)) {\n      util.logError('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer;\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n\n    layer.__painter = this;\n  };\n\n  CanvasPainter.prototype.eachLayer = function (cb, context) {\n    var zlevelList = this._zlevelList;\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  };\n\n  CanvasPainter.prototype.eachBuiltinLayer = function (cb, context) {\n    var zlevelList = this._zlevelList;\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  };\n\n  CanvasPainter.prototype.eachOtherLayer = function (cb, context) {\n    var zlevelList = this._zlevelList;\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  };\n\n  CanvasPainter.prototype.getLayers = function () {\n    return this._layers;\n  };\n\n  CanvasPainter.prototype._updateLayerStatus = function (list) {\n    this.eachBuiltinLayer(function (layer, z) {\n      layer.__dirty = layer.__used = false;\n    });\n\n    function updatePrevLayer(idx) {\n      if (prevLayer) {\n        if (prevLayer.__endIndex !== idx) {\n          prevLayer.__dirty = true;\n        }\n\n        prevLayer.__endIndex = idx;\n      }\n    }\n\n    if (this._singleCanvas) {\n      for (var i_1 = 1; i_1 < list.length; i_1++) {\n        var el = list[i_1];\n\n        if (el.zlevel !== list[i_1 - 1].zlevel || el.incremental) {\n          this._needsManuallyCompositing = true;\n          break;\n        }\n      }\n    }\n\n    var prevLayer = null;\n    var incrementalLayerCount = 0;\n    var prevZlevel;\n    var i;\n\n    for (i = 0; i < list.length; i++) {\n      var el = list[i];\n      var zlevel = el.zlevel;\n      var layer = void 0;\n\n      if (prevZlevel !== zlevel) {\n        prevZlevel = zlevel;\n        incrementalLayerCount = 0;\n      }\n\n      if (el.incremental) {\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n        layer.incremental = true;\n        incrementalLayerCount = 1;\n      } else {\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n      }\n\n      if (!layer.__builtin__) {\n        util.logError('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n      }\n\n      if (layer !== prevLayer) {\n        layer.__used = true;\n\n        if (layer.__startIndex !== i) {\n          layer.__dirty = true;\n        }\n\n        layer.__startIndex = i;\n\n        if (!layer.incremental) {\n          layer.__drawIndex = i;\n        } else {\n          layer.__drawIndex = -1;\n        }\n\n        updatePrevLayer(i);\n        prevLayer = layer;\n      }\n\n      if (el.__dirty & Element_1[\"default\"].REDARAW_BIT && !el.__inHover) {\n        layer.__dirty = true;\n\n        if (layer.incremental && layer.__drawIndex < 0) {\n          layer.__drawIndex = i;\n        }\n      }\n    }\n\n    updatePrevLayer(i);\n    this.eachBuiltinLayer(function (layer, z) {\n      if (!layer.__used && layer.getElementCount() > 0) {\n        layer.__dirty = true;\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n      }\n\n      if (layer.__dirty && layer.__drawIndex < 0) {\n        layer.__drawIndex = layer.__startIndex;\n      }\n    });\n  };\n\n  CanvasPainter.prototype.clear = function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  };\n\n  CanvasPainter.prototype._clearLayer = function (layer) {\n    layer.clear();\n  };\n\n  CanvasPainter.prototype.setBackgroundColor = function (backgroundColor) {\n    this._backgroundColor = backgroundColor;\n    util.each(this._layers, function (layer) {\n      layer.setUnpainted();\n    });\n  };\n\n  CanvasPainter.prototype.configLayer = function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      for (var i = 0; i < this._zlevelList.length; i++) {\n        var _zlevel = this._zlevelList[i];\n\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n          var layer = this._layers[_zlevel];\n          util.merge(layer, layerConfig[zlevel], true);\n        }\n      }\n    }\n  };\n\n  CanvasPainter.prototype.delLayer = function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  };\n\n  CanvasPainter.prototype.resize = function (width, height) {\n    if (!this._domRoot.style) {\n      if (width == null || height == null) {\n        return;\n      }\n\n      this._width = width;\n      this._height = height;\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n    } else {\n      var domRoot = this._domRoot;\n      domRoot.style.display = 'none';\n      var opts = this._opts;\n      width != null && (opts.width = width);\n      height != null && (opts.height = height);\n      width = this._getSize(0);\n      height = this._getSize(1);\n      domRoot.style.display = '';\n\n      if (this._width !== width || height !== this._height) {\n        domRoot.style.width = width + 'px';\n        domRoot.style.height = height + 'px';\n\n        for (var id in this._layers) {\n          if (this._layers.hasOwnProperty(id)) {\n            this._layers[id].resize(width, height);\n          }\n        }\n\n        this.refresh(true);\n      }\n\n      this._width = width;\n      this._height = height;\n    }\n\n    return this;\n  };\n\n  CanvasPainter.prototype.clearLayer = function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  };\n\n  CanvasPainter.prototype.dispose = function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  };\n\n  CanvasPainter.prototype.getRenderedCanvas = function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas && !this._compositeManually) {\n      return this._layers[CANVAS_ZLEVEL].dom;\n    }\n\n    var imageLayer = new Layer_1[\"default\"]('image', this, opts.pixelRatio || this.dpr);\n    var ctx = imageLayer.ctx;\n    imageLayer.initContext();\n    imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\n\n    if (opts.pixelRatio <= this.dpr) {\n      this.refresh();\n      var width_1 = imageLayer.dom.width;\n      var height_1 = imageLayer.dom.height;\n      var ctx_1 = imageLayer.ctx;\n      this.eachLayer(function (layer) {\n        if (layer.__builtin__) {\n          ctx_1.drawImage(layer.dom, 0, 0, width_1, height_1);\n        } else if (layer.renderToCanvas) {\n          imageLayer.ctx.save();\n          layer.renderToCanvas(imageLayer.ctx);\n          imageLayer.ctx.restore();\n        }\n      });\n    } else {\n      var scope = {\n        inHover: false,\n        viewWidth: this._width,\n        viewHeight: this._height\n      };\n      var displayList = this.storage.getDisplayList(true);\n\n      for (var i = 0, len = displayList.length; i < len; i++) {\n        var el = displayList[i];\n        graphic_1.brush(ctx, el, scope, i === len - 1);\n      }\n    }\n\n    return imageLayer.dom;\n  };\n\n  CanvasPainter.prototype.getWidth = function () {\n    return this._width;\n  };\n\n  CanvasPainter.prototype.getHeight = function () {\n    return this._height;\n  };\n\n  CanvasPainter.prototype._getSize = function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root;\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  };\n\n  CanvasPainter.prototype.pathToImage = function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur * dpr;\n    var shadowOffsetX = style.shadowOffsetX * dpr;\n    var shadowOffsetY = style.shadowOffsetY * dpr;\n    var lineWidth = path.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      x: path.x,\n      y: path.y,\n      scaleX: path.scaleX,\n      scaleY: path.scaleY,\n      rotation: path.rotation,\n      originX: path.originX,\n      originY: path.originY\n    };\n    path.x = leftMargin - rect.x;\n    path.y = topMargin - rect.y;\n    path.rotation = 0;\n    path.scaleX = 1;\n    path.scaleY = 1;\n    path.updateTransform();\n\n    if (path) {\n      graphic_1.brush(ctx, path, {\n        inHover: false,\n        viewWidth: this._width,\n        viewHeight: this._height\n      }, true);\n    }\n\n    var imgShape = new Image_1[\"default\"]({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n    util.extend(path, pathTransform);\n    return imgShape;\n  };\n\n  return CanvasPainter;\n}();\n\nexports[\"default\"] = CanvasPainter;\n;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/zrender/lib/canvas/Painter.js"],"names":["exports","__esModule","config_1","require","util","Layer_1","requestAnimationFrame_1","Image_1","env_1","graphic_1","Element_1","HOVER_LAYER_ZLEVEL","CANVAS_ZLEVEL","EL_AFTER_INCREMENTAL_INC","INCREMENTAL_INC","parseInt10","val","parseInt","isLayerValid","layer","__builtin__","resize","refresh","createRoot","width","height","domRoot","document","createElement","style","cssText","join","CanvasPainter","root","storage","opts","id","type","_zlevelList","_prevDisplayList","_layers","_layerConfig","_needsManuallyCompositing","singleCanvas","nodeName","toUpperCase","_opts","extend","dpr","devicePixelRatio","_singleCanvas","rootStyle","webkitTapHighlightColor","webkitUserSelect","userSelect","innerHTML","zlevelList","layers","_width","_getSize","_height","_domRoot","appendChild","rootCanvas","mainLayer","initContext","zlevel","push","prototype","getType","isSingleCanvas","getViewportRoot","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","paintAll","list","getDisplayList","prevList","_redrawId","Math","random","_paintList","i","length","z","clearColor","_backgroundColor","useDirtyRect","slice","refreshHover","_paintHoverList","len","hoverLayer","_hoverlayer","clear","scope","inHover","viewWidth","viewHeight","ctx","el","__inHover","getLayer","save","brush","restore","getHoverLayer","paintOne","brushSingle","redrawId","_updateLayerStatus","_a","_doPaintList","finished","needsRefreshHover","_compositeManually","self_1","eachLayer","afterBrush","clearRect","eachBuiltinLayer","virtual","drawImage","dom","_this","layerList","zi","__dirty","_loop_1","k","repaintRects","createRepaintRects","this_1","start","__startIndex","__drawIndex","useTimer","incremental","Date","now","startTime","__endIndex","firstEl","notClear","console","error","repaint","repaintRect","allClipped","prevEl","_doPaintEl","dTime","prevElClipPaths","r","rect","beginPath","x","y","clip","wxa","each","draw","currentLayer","isLast","paintRect","getPaintRect","intersect","setPrevPaintRect","merge","insertLayer","layersMap","prevLayer","logError","splice","prevDom","nextSibling","insertBefore","firstChild","__painter","cb","context","call","eachOtherLayer","getLayers","__used","updatePrevLayer","idx","i_1","incrementalLayerCount","prevZlevel","REDARAW_BIT","getElementCount","_clearLayer","setBackgroundColor","backgroundColor","setUnpainted","configLayer","config","layerConfig","_zlevel","delLayer","parentNode","removeChild","indexOf","display","hasOwnProperty","clearLayer","dispose","getRenderedCanvas","imageLayer","pixelRatio","width_1","height_1","ctx_1","renderToCanvas","displayList","getWidth","getHeight","whIdx","wh","cwh","plt","prb","parseFloat","stl","defaultView","getComputedStyle","pathToImage","path","canvas","getContext","getBoundingRect","shadowBlurSize","shadowBlur","shadowOffsetX","shadowOffsetY","lineWidth","hasStroke","leftMargin","max","rightMargin","topMargin","bottomMargin","scale","pathTransform","scaleX","scaleY","rotation","originX","originY","updateTransform","imgShape","image"],"mappings":"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","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar config_1 = require(\"../config\");\nvar util = require(\"../core/util\");\nvar Layer_1 = require(\"./Layer\");\nvar requestAnimationFrame_1 = require(\"../animation/requestAnimationFrame\");\nvar Image_1 = require(\"../graphic/Image\");\nvar env_1 = require(\"../core/env\");\nvar graphic_1 = require(\"./graphic\");\nvar Element_1 = require(\"../Element\");\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\nfunction parseInt10(val) {\n    return parseInt(val, 10);\n}\nfunction isLayerValid(layer) {\n    if (!layer) {\n        return false;\n    }\n    if (layer.__builtin__) {\n        return true;\n    }\n    if (typeof (layer.resize) !== 'function'\n        || typeof (layer.refresh) !== 'function') {\n        return false;\n    }\n    return true;\n}\nfunction createRoot(width, height) {\n    var domRoot = document.createElement('div');\n    domRoot.style.cssText = [\n        'position:relative',\n        'width:' + width + 'px',\n        'height:' + height + 'px',\n        'padding:0',\n        'margin:0',\n        'border-width:0'\n    ].join(';') + ';';\n    return domRoot;\n}\nvar CanvasPainter = (function () {\n    function CanvasPainter(root, storage, opts, id) {\n        this.type = 'canvas';\n        this._zlevelList = [];\n        this._prevDisplayList = [];\n        this._layers = {};\n        this._layerConfig = {};\n        this._needsManuallyCompositing = false;\n        this.type = 'canvas';\n        var singleCanvas = !root.nodeName\n            || root.nodeName.toUpperCase() === 'CANVAS';\n        this._opts = opts = util.extend({}, opts || {});\n        this.dpr = opts.devicePixelRatio || config_1.devicePixelRatio;\n        this._singleCanvas = singleCanvas;\n        this.root = root;\n        var rootStyle = root.style;\n        if (rootStyle) {\n            rootStyle.webkitTapHighlightColor = 'transparent';\n            rootStyle.webkitUserSelect = 'none';\n            rootStyle.userSelect = 'none';\n            rootStyle['-webkit-touch-callout'] = 'none';\n            root.innerHTML = '';\n        }\n        this.storage = storage;\n        var zlevelList = this._zlevelList;\n        this._prevDisplayList = [];\n        var layers = this._layers;\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n            var domRoot = this._domRoot = createRoot(this._width, this._height);\n            root.appendChild(domRoot);\n        }\n        else {\n            var rootCanvas = root;\n            var width = rootCanvas.width;\n            var height = rootCanvas.height;\n            if (opts.width != null) {\n                width = opts.width;\n            }\n            if (opts.height != null) {\n                height = opts.height;\n            }\n            this.dpr = opts.devicePixelRatio || 1;\n            rootCanvas.width = width * this.dpr;\n            rootCanvas.height = height * this.dpr;\n            this._width = width;\n            this._height = height;\n            var mainLayer = new Layer_1[\"default\"](rootCanvas, this, this.dpr);\n            mainLayer.__builtin__ = true;\n            mainLayer.initContext();\n            layers[CANVAS_ZLEVEL] = mainLayer;\n            mainLayer.zlevel = CANVAS_ZLEVEL;\n            zlevelList.push(CANVAS_ZLEVEL);\n            this._domRoot = root;\n        }\n    }\n    CanvasPainter.prototype.getType = function () {\n        return 'canvas';\n    };\n    CanvasPainter.prototype.isSingleCanvas = function () {\n        return this._singleCanvas;\n    };\n    CanvasPainter.prototype.getViewportRoot = function () {\n        return this._domRoot;\n    };\n    CanvasPainter.prototype.getViewportRootOffset = function () {\n        var viewportRoot = this.getViewportRoot();\n        if (viewportRoot) {\n            return {\n                offsetLeft: viewportRoot.offsetLeft || 0,\n                offsetTop: viewportRoot.offsetTop || 0\n            };\n        }\n    };\n    CanvasPainter.prototype.refresh = function (paintAll) {\n        var list = this.storage.getDisplayList(true);\n        var prevList = this._prevDisplayList;\n        var zlevelList = this._zlevelList;\n        this._redrawId = Math.random();\n        this._paintList(list, prevList, paintAll, this._redrawId);\n        for (var i = 0; i < zlevelList.length; i++) {\n            var z = zlevelList[i];\n            var layer = this._layers[z];\n            if (!layer.__builtin__ && layer.refresh) {\n                var clearColor = i === 0 ? this._backgroundColor : null;\n                layer.refresh(clearColor);\n            }\n        }\n        if (this._opts.useDirtyRect) {\n            this._prevDisplayList = list.slice();\n        }\n        return this;\n    };\n    CanvasPainter.prototype.refreshHover = function () {\n        this._paintHoverList(this.storage.getDisplayList(false));\n    };\n    CanvasPainter.prototype._paintHoverList = function (list) {\n        var len = list.length;\n        var hoverLayer = this._hoverlayer;\n        hoverLayer && hoverLayer.clear();\n        if (!len) {\n            return;\n        }\n        var scope = {\n            inHover: true,\n            viewWidth: this._width,\n            viewHeight: this._height\n        };\n        var ctx;\n        for (var i = 0; i < len; i++) {\n            var el = list[i];\n            if (el.__inHover) {\n                if (!hoverLayer) {\n                    hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n                }\n                if (!ctx) {\n                    ctx = hoverLayer.ctx;\n                    ctx.save();\n                }\n                graphic_1.brush(ctx, el, scope, i === len - 1);\n            }\n        }\n        if (ctx) {\n            ctx.restore();\n        }\n    };\n    CanvasPainter.prototype.getHoverLayer = function () {\n        return this.getLayer(HOVER_LAYER_ZLEVEL);\n    };\n    CanvasPainter.prototype.paintOne = function (ctx, el) {\n        graphic_1.brushSingle(ctx, el);\n    };\n    CanvasPainter.prototype._paintList = function (list, prevList, paintAll, redrawId) {\n        if (this._redrawId !== redrawId) {\n            return;\n        }\n        paintAll = paintAll || false;\n        this._updateLayerStatus(list);\n        var _a = this._doPaintList(list, prevList, paintAll), finished = _a.finished, needsRefreshHover = _a.needsRefreshHover;\n        if (this._needsManuallyCompositing) {\n            this._compositeManually();\n        }\n        if (needsRefreshHover) {\n            this._paintHoverList(list);\n        }\n        if (!finished) {\n            var self_1 = this;\n            requestAnimationFrame_1[\"default\"](function () {\n                self_1._paintList(list, prevList, paintAll, redrawId);\n            });\n        }\n        else {\n            this.eachLayer(function (layer) {\n                layer.afterBrush && layer.afterBrush();\n            });\n        }\n    };\n    CanvasPainter.prototype._compositeManually = function () {\n        var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n        var width = this._domRoot.width;\n        var height = this._domRoot.height;\n        ctx.clearRect(0, 0, width, height);\n        this.eachBuiltinLayer(function (layer) {\n            if (layer.virtual) {\n                ctx.drawImage(layer.dom, 0, 0, width, height);\n            }\n        });\n    };\n    CanvasPainter.prototype._doPaintList = function (list, prevList, paintAll) {\n        var _this = this;\n        var layerList = [];\n        var useDirtyRect = this._opts.useDirtyRect;\n        for (var zi = 0; zi < this._zlevelList.length; zi++) {\n            var zlevel = this._zlevelList[zi];\n            var layer = this._layers[zlevel];\n            if (layer.__builtin__\n                && layer !== this._hoverlayer\n                && (layer.__dirty || paintAll)) {\n                layerList.push(layer);\n            }\n        }\n        var finished = true;\n        var needsRefreshHover = false;\n        var _loop_1 = function (k) {\n            var layer = layerList[k];\n            var ctx = layer.ctx;\n            var repaintRects = useDirtyRect\n                && layer.createRepaintRects(list, prevList, this_1._width, this_1._height);\n            ctx.save();\n            var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n            var useTimer = !paintAll && layer.incremental && Date.now;\n            var startTime = useTimer && Date.now();\n            var clearColor = layer.zlevel === this_1._zlevelList[0]\n                ? this_1._backgroundColor : null;\n            if (layer.__startIndex === layer.__endIndex) {\n                layer.clear(false, clearColor, repaintRects);\n            }\n            else if (start === layer.__startIndex) {\n                var firstEl = list[start];\n                if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n                    layer.clear(false, clearColor, repaintRects);\n                }\n            }\n            if (start === -1) {\n                console.error('For some unknown reason. drawIndex is -1');\n                start = layer.__startIndex;\n            }\n            var i;\n            var repaint = function (repaintRect) {\n                var scope = {\n                    inHover: false,\n                    allClipped: false,\n                    prevEl: null,\n                    viewWidth: _this._width,\n                    viewHeight: _this._height\n                };\n                for (i = start; i < layer.__endIndex; i++) {\n                    var el = list[i];\n                    if (el.__inHover) {\n                        needsRefreshHover = true;\n                    }\n                    _this._doPaintEl(el, layer, useDirtyRect, repaintRect, scope, i === layer.__endIndex - 1);\n                    if (useTimer) {\n                        var dTime = Date.now() - startTime;\n                        if (dTime > 15) {\n                            break;\n                        }\n                    }\n                }\n                if (scope.prevElClipPaths) {\n                    ctx.restore();\n                }\n            };\n            if (repaintRects) {\n                if (repaintRects.length === 0) {\n                    i = layer.__endIndex;\n                }\n                else {\n                    var dpr = this_1.dpr;\n                    for (var r = 0; r < repaintRects.length; ++r) {\n                        var rect = repaintRects[r];\n                        ctx.save();\n                        ctx.beginPath();\n                        ctx.rect(rect.x * dpr, rect.y * dpr, rect.width * dpr, rect.height * dpr);\n                        ctx.clip();\n                        repaint(rect);\n                        ctx.restore();\n                    }\n                }\n            }\n            else {\n                ctx.save();\n                repaint();\n                ctx.restore();\n            }\n            layer.__drawIndex = i;\n            if (layer.__drawIndex < layer.__endIndex) {\n                finished = false;\n            }\n        };\n        var this_1 = this;\n        for (var k = 0; k < layerList.length; k++) {\n            _loop_1(k);\n        }\n        if (env_1[\"default\"].wxa) {\n            util.each(this._layers, function (layer) {\n                if (layer && layer.ctx && layer.ctx.draw) {\n                    layer.ctx.draw();\n                }\n            });\n        }\n        return {\n            finished: finished,\n            needsRefreshHover: needsRefreshHover\n        };\n    };\n    CanvasPainter.prototype._doPaintEl = function (el, currentLayer, useDirtyRect, repaintRect, scope, isLast) {\n        var ctx = currentLayer.ctx;\n        if (useDirtyRect) {\n            var paintRect = el.getPaintRect();\n            if (!repaintRect || paintRect && paintRect.intersect(repaintRect)) {\n                graphic_1.brush(ctx, el, scope, isLast);\n                el.setPrevPaintRect(paintRect);\n            }\n        }\n        else {\n            graphic_1.brush(ctx, el, scope, isLast);\n        }\n    };\n    CanvasPainter.prototype.getLayer = function (zlevel, virtual) {\n        if (this._singleCanvas && !this._needsManuallyCompositing) {\n            zlevel = CANVAS_ZLEVEL;\n        }\n        var layer = this._layers[zlevel];\n        if (!layer) {\n            layer = new Layer_1[\"default\"]('zr_' + zlevel, this, this.dpr);\n            layer.zlevel = zlevel;\n            layer.__builtin__ = true;\n            if (this._layerConfig[zlevel]) {\n                util.merge(layer, this._layerConfig[zlevel], true);\n            }\n            else if (this._layerConfig[zlevel - EL_AFTER_INCREMENTAL_INC]) {\n                util.merge(layer, this._layerConfig[zlevel - EL_AFTER_INCREMENTAL_INC], true);\n            }\n            if (virtual) {\n                layer.virtual = virtual;\n            }\n            this.insertLayer(zlevel, layer);\n            layer.initContext();\n        }\n        return layer;\n    };\n    CanvasPainter.prototype.insertLayer = function (zlevel, layer) {\n        var layersMap = this._layers;\n        var zlevelList = this._zlevelList;\n        var len = zlevelList.length;\n        var domRoot = this._domRoot;\n        var prevLayer = null;\n        var i = -1;\n        if (layersMap[zlevel]) {\n            util.logError('ZLevel ' + zlevel + ' has been used already');\n            return;\n        }\n        if (!isLayerValid(layer)) {\n            util.logError('Layer of zlevel ' + zlevel + ' is not valid');\n            return;\n        }\n        if (len > 0 && zlevel > zlevelList[0]) {\n            for (i = 0; i < len - 1; i++) {\n                if (zlevelList[i] < zlevel\n                    && zlevelList[i + 1] > zlevel) {\n                    break;\n                }\n            }\n            prevLayer = layersMap[zlevelList[i]];\n        }\n        zlevelList.splice(i + 1, 0, zlevel);\n        layersMap[zlevel] = layer;\n        if (!layer.virtual) {\n            if (prevLayer) {\n                var prevDom = prevLayer.dom;\n                if (prevDom.nextSibling) {\n                    domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n                }\n                else {\n                    domRoot.appendChild(layer.dom);\n                }\n            }\n            else {\n                if (domRoot.firstChild) {\n                    domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                }\n                else {\n                    domRoot.appendChild(layer.dom);\n                }\n            }\n        }\n        layer.__painter = this;\n    };\n    CanvasPainter.prototype.eachLayer = function (cb, context) {\n        var zlevelList = this._zlevelList;\n        for (var i = 0; i < zlevelList.length; i++) {\n            var z = zlevelList[i];\n            cb.call(context, this._layers[z], z);\n        }\n    };\n    CanvasPainter.prototype.eachBuiltinLayer = function (cb, context) {\n        var zlevelList = this._zlevelList;\n        for (var i = 0; i < zlevelList.length; i++) {\n            var z = zlevelList[i];\n            var layer = this._layers[z];\n            if (layer.__builtin__) {\n                cb.call(context, layer, z);\n            }\n        }\n    };\n    CanvasPainter.prototype.eachOtherLayer = function (cb, context) {\n        var zlevelList = this._zlevelList;\n        for (var i = 0; i < zlevelList.length; i++) {\n            var z = zlevelList[i];\n            var layer = this._layers[z];\n            if (!layer.__builtin__) {\n                cb.call(context, layer, z);\n            }\n        }\n    };\n    CanvasPainter.prototype.getLayers = function () {\n        return this._layers;\n    };\n    CanvasPainter.prototype._updateLayerStatus = function (list) {\n        this.eachBuiltinLayer(function (layer, z) {\n            layer.__dirty = layer.__used = false;\n        });\n        function updatePrevLayer(idx) {\n            if (prevLayer) {\n                if (prevLayer.__endIndex !== idx) {\n                    prevLayer.__dirty = true;\n                }\n                prevLayer.__endIndex = idx;\n            }\n        }\n        if (this._singleCanvas) {\n            for (var i_1 = 1; i_1 < list.length; i_1++) {\n                var el = list[i_1];\n                if (el.zlevel !== list[i_1 - 1].zlevel || el.incremental) {\n                    this._needsManuallyCompositing = true;\n                    break;\n                }\n            }\n        }\n        var prevLayer = null;\n        var incrementalLayerCount = 0;\n        var prevZlevel;\n        var i;\n        for (i = 0; i < list.length; i++) {\n            var el = list[i];\n            var zlevel = el.zlevel;\n            var layer = void 0;\n            if (prevZlevel !== zlevel) {\n                prevZlevel = zlevel;\n                incrementalLayerCount = 0;\n            }\n            if (el.incremental) {\n                layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n                layer.incremental = true;\n                incrementalLayerCount = 1;\n            }\n            else {\n                layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n            }\n            if (!layer.__builtin__) {\n                util.logError('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n            }\n            if (layer !== prevLayer) {\n                layer.__used = true;\n                if (layer.__startIndex !== i) {\n                    layer.__dirty = true;\n                }\n                layer.__startIndex = i;\n                if (!layer.incremental) {\n                    layer.__drawIndex = i;\n                }\n                else {\n                    layer.__drawIndex = -1;\n                }\n                updatePrevLayer(i);\n                prevLayer = layer;\n            }\n            if ((el.__dirty & Element_1[\"default\"].REDARAW_BIT) && !el.__inHover) {\n                layer.__dirty = true;\n                if (layer.incremental && layer.__drawIndex < 0) {\n                    layer.__drawIndex = i;\n                }\n            }\n        }\n        updatePrevLayer(i);\n        this.eachBuiltinLayer(function (layer, z) {\n            if (!layer.__used && layer.getElementCount() > 0) {\n                layer.__dirty = true;\n                layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n            }\n            if (layer.__dirty && layer.__drawIndex < 0) {\n                layer.__drawIndex = layer.__startIndex;\n            }\n        });\n    };\n    CanvasPainter.prototype.clear = function () {\n        this.eachBuiltinLayer(this._clearLayer);\n        return this;\n    };\n    CanvasPainter.prototype._clearLayer = function (layer) {\n        layer.clear();\n    };\n    CanvasPainter.prototype.setBackgroundColor = function (backgroundColor) {\n        this._backgroundColor = backgroundColor;\n        util.each(this._layers, function (layer) {\n            layer.setUnpainted();\n        });\n    };\n    CanvasPainter.prototype.configLayer = function (zlevel, config) {\n        if (config) {\n            var layerConfig = this._layerConfig;\n            if (!layerConfig[zlevel]) {\n                layerConfig[zlevel] = config;\n            }\n            else {\n                util.merge(layerConfig[zlevel], config, true);\n            }\n            for (var i = 0; i < this._zlevelList.length; i++) {\n                var _zlevel = this._zlevelList[i];\n                if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n                    var layer = this._layers[_zlevel];\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        }\n    };\n    CanvasPainter.prototype.delLayer = function (zlevel) {\n        var layers = this._layers;\n        var zlevelList = this._zlevelList;\n        var layer = layers[zlevel];\n        if (!layer) {\n            return;\n        }\n        layer.dom.parentNode.removeChild(layer.dom);\n        delete layers[zlevel];\n        zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n    };\n    CanvasPainter.prototype.resize = function (width, height) {\n        if (!this._domRoot.style) {\n            if (width == null || height == null) {\n                return;\n            }\n            this._width = width;\n            this._height = height;\n            this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n        }\n        else {\n            var domRoot = this._domRoot;\n            domRoot.style.display = 'none';\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n            width = this._getSize(0);\n            height = this._getSize(1);\n            domRoot.style.display = '';\n            if (this._width !== width || height !== this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                this.refresh(true);\n            }\n            this._width = width;\n            this._height = height;\n        }\n        return this;\n    };\n    CanvasPainter.prototype.clearLayer = function (zlevel) {\n        var layer = this._layers[zlevel];\n        if (layer) {\n            layer.clear();\n        }\n    };\n    CanvasPainter.prototype.dispose = function () {\n        this.root.innerHTML = '';\n        this.root =\n            this.storage =\n                this._domRoot =\n                    this._layers = null;\n    };\n    CanvasPainter.prototype.getRenderedCanvas = function (opts) {\n        opts = opts || {};\n        if (this._singleCanvas && !this._compositeManually) {\n            return this._layers[CANVAS_ZLEVEL].dom;\n        }\n        var imageLayer = new Layer_1[\"default\"]('image', this, opts.pixelRatio || this.dpr);\n        var ctx = imageLayer.ctx;\n        imageLayer.initContext();\n        imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\n        if (opts.pixelRatio <= this.dpr) {\n            this.refresh();\n            var width_1 = imageLayer.dom.width;\n            var height_1 = imageLayer.dom.height;\n            var ctx_1 = imageLayer.ctx;\n            this.eachLayer(function (layer) {\n                if (layer.__builtin__) {\n                    ctx_1.drawImage(layer.dom, 0, 0, width_1, height_1);\n                }\n                else if (layer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    layer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            });\n        }\n        else {\n            var scope = {\n                inHover: false,\n                viewWidth: this._width,\n                viewHeight: this._height\n            };\n            var displayList = this.storage.getDisplayList(true);\n            for (var i = 0, len = displayList.length; i < len; i++) {\n                var el = displayList[i];\n                graphic_1.brush(ctx, el, scope, i === len - 1);\n            }\n        }\n        return imageLayer.dom;\n    };\n    CanvasPainter.prototype.getWidth = function () {\n        return this._width;\n    };\n    CanvasPainter.prototype.getHeight = function () {\n        return this._height;\n    };\n    CanvasPainter.prototype._getSize = function (whIdx) {\n        var opts = this._opts;\n        var wh = ['width', 'height'][whIdx];\n        var cwh = ['clientWidth', 'clientHeight'][whIdx];\n        var plt = ['paddingLeft', 'paddingTop'][whIdx];\n        var prb = ['paddingRight', 'paddingBottom'][whIdx];\n        if (opts[wh] != null && opts[wh] !== 'auto') {\n            return parseFloat(opts[wh]);\n        }\n        var root = this.root;\n        var stl = document.defaultView.getComputedStyle(root);\n        return ((root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n            - (parseInt10(stl[plt]) || 0)\n            - (parseInt10(stl[prb]) || 0)) | 0;\n    };\n    CanvasPainter.prototype.pathToImage = function (path, dpr) {\n        dpr = dpr || this.dpr;\n        var canvas = document.createElement('canvas');\n        var ctx = canvas.getContext('2d');\n        var rect = path.getBoundingRect();\n        var style = path.style;\n        var shadowBlurSize = style.shadowBlur * dpr;\n        var shadowOffsetX = style.shadowOffsetX * dpr;\n        var shadowOffsetY = style.shadowOffsetY * dpr;\n        var lineWidth = path.hasStroke() ? style.lineWidth : 0;\n        var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n        var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n        var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n        var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n        var width = rect.width + leftMargin + rightMargin;\n        var height = rect.height + topMargin + bottomMargin;\n        canvas.width = width * dpr;\n        canvas.height = height * dpr;\n        ctx.scale(dpr, dpr);\n        ctx.clearRect(0, 0, width, height);\n        ctx.dpr = dpr;\n        var pathTransform = {\n            x: path.x,\n            y: path.y,\n            scaleX: path.scaleX,\n            scaleY: path.scaleY,\n            rotation: path.rotation,\n            originX: path.originX,\n            originY: path.originY\n        };\n        path.x = leftMargin - rect.x;\n        path.y = topMargin - rect.y;\n        path.rotation = 0;\n        path.scaleX = 1;\n        path.scaleY = 1;\n        path.updateTransform();\n        if (path) {\n            graphic_1.brush(ctx, path, {\n                inHover: false,\n                viewWidth: this._width,\n                viewHeight: this._height\n            }, true);\n        }\n        var imgShape = new Image_1[\"default\"]({\n            style: {\n                x: 0,\n                y: 0,\n                image: canvas\n            }\n        });\n        util.extend(path, pathTransform);\n        return imgShape;\n    };\n    return CanvasPainter;\n}());\nexports[\"default\"] = CanvasPainter;\n;\n"]},"metadata":{},"sourceType":"script"}