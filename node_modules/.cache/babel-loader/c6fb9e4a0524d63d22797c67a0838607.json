{"ast":null,"code":"var _jsxFileName = \"/Users/wanglijie/wanglijie/clover-defi-wallet/src/components/Header/index.tsx\";\nimport React, { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Moon, Sun } from 'react-feather';\nimport styled, { ThemeContext } from 'styled-components';\nimport { useDarkMode, useSetDarkMode } from '../../state/settings/hooks';\nimport { TYPE } from '../../theme';\nimport { RowCenter, RowBetween, RowFit } from '../Row';\nimport ImgLogo from \"../../assets/images/logo.svg\";\nimport ImgPolkadot from \"../../assets/images/polkadot.svg\";\nconst ContentWrapper = styled(RowBetween)`\n  height: 120px;\n  padding-left: 40px;\n  padding-right: 40px;\n\n  background: ${({\n  theme\n}) => theme.bg1};\n`;\nconst MenuItemWrapper = styled(RowCenter)`\n  margin-right: 20px;\n  padding: 10px 20px;\n\n  border: ${({\n  theme\n}) => `2px solid ${theme.border1}`};\n  border-radius: 32px;\n  box-sizing: border-box;\n`;\nconst ChainLogo = styled.img`\n  margin-right: 10px;\n\n  width: 43px;\n  height: 43px;\n`;\nexport default function Header() {\n  const {\n    t\n  } = useTranslation();\n  const theme = useContext(ThemeContext);\n  const darkMode = useDarkMode();\n  const setDarkMode = useSetDarkMode();\n  return /*#__PURE__*/React.createElement(ContentWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(RowFit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: ImgLogo,\n    style: {\n      width: '60px',\n      height: '60px'\n    },\n    alt: t('logoImageDescription'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TYPE.logo, {\n    marginLeft: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, t('logoText'))), /*#__PURE__*/React.createElement(RowFit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItemWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.menuItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, t('transactionHistory'))), /*#__PURE__*/React.createElement(MenuItemWrapper, {\n    style: {\n      padding: '1px 20px 1px 1px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChainLogo, {\n    src: ImgPolkadot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TYPE.menuItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, t('polkadotChain'))), darkMode ? /*#__PURE__*/React.createElement(Sun, {\n    color: theme.white,\n    size: 24,\n    style: {\n      cursor: 'hand'\n    },\n    onClick: () => setDarkMode(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(Moon, {\n    color: theme.black,\n    size: 24,\n    style: {\n      cursor: 'hand'\n    },\n    onClick: () => setDarkMode(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/src/components/Header/index.tsx"],"names":["React","useContext","useTranslation","Moon","Sun","styled","ThemeContext","useDarkMode","useSetDarkMode","TYPE","RowCenter","RowBetween","RowFit","ContentWrapper","theme","bg1","MenuItemWrapper","border1","ChainLogo","img","Header","t","darkMode","setDarkMode","ImgLogo","width","height","padding","ImgPolkadot","white","cursor","black"],"mappings":";AAAA,OAAOA,KAAP,IAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,eAA1B;AACA,OAAOC,MAAP,IAAiBC,YAAjB,QAAqC,mBAArC;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,4BAA5C;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,MAAhC,QAA8C,QAA9C;;;AAIA,MAAMC,cAAc,GAAGR,MAAM,CAACM,UAAD,CAAa;AAC1C;AACA;AACA;AACA;AACA,gBAAgB,CAAC;AAAEG,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,GAAI;AACzC,CANA;AAQA,MAAMC,eAAe,GAAGX,MAAM,CAACK,SAAD,CAAY;AAC1C;AACA;AACA;AACA,YAAY,CAAC;AAAEI,EAAAA;AAAF,CAAD,KAAgB,aAAYA,KAAK,CAACG,OAAQ,EAAG;AACzD;AACA;AACA,CAPA;AASA,MAAMC,SAAS,GAAGb,MAAM,CAACc,GAAI;AAC7B;AACA;AACA;AACA;AACA,CALA;AAOA,eAAe,SAASC,MAAT,GAAgC;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAAQnB,cAAc,EAA5B;AAEA,QAAMY,KAAK,GAAGb,UAAU,CAACK,YAAD,CAAxB;AAEA,QAAMgB,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,WAAW,GAAGf,cAAc,EAAlC;AAEA,sBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEgB,OADP;AAEE,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE,MAAR;AAAgBC,MAAAA,MAAM,EAAE;AAAxB,KAFT;AAGE,IAAA,GAAG,EAAEL,CAAC,CAAC,sBAAD,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,UAAU,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,CAAC,CAAC,UAAD,CAA/B,CANF,CADF,eAUE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBA,CAAC,CAAC,oBAAD,CAAjB,CADF,CADF,eAIE,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAE;AAACM,MAAAA,OAAO,EAAE;AAAV,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBP,CAAC,CAAC,eAAD,CAAjB,CAFF,CAJF,EASGC,QAAQ,gBAAG,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAER,KAAK,CAACe,KAAlB;AAAyB,IAAA,IAAI,EAAE,EAA/B;AAAmC,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE;AAAT,KAA1C;AAA4D,IAAA,OAAO,EAAE,MAAMP,WAAW,CAAC,KAAD,CAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBACL,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,KAAK,CAACiB,KAAnB;AAA0B,IAAA,IAAI,EAAE,EAAhC;AAAoC,IAAA,KAAK,EAAE;AAACD,MAAAA,MAAM,EAAE;AAAT,KAA3C;AAA6D,IAAA,OAAO,EAAE,MAAMP,WAAW,CAAC,IAAD,CAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVN,CAVF,CADF;AA0BD","sourcesContent":["import React, { ReactElement, useContext } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { Moon, Sun } from 'react-feather'\nimport styled, { ThemeContext } from 'styled-components'\nimport { useDarkMode, useSetDarkMode } from '../../state/settings/hooks'\nimport { TYPE } from '../../theme'\nimport { RowCenter, RowBetween, RowFit } from '../Row'\nimport ImgLogo from '../../assets/images/logo.svg'\nimport ImgPolkadot from '../../assets/images/polkadot.svg'\n\nconst ContentWrapper = styled(RowBetween)`\n  height: 120px;\n  padding-left: 40px;\n  padding-right: 40px;\n\n  background: ${({ theme }) => theme.bg1};\n`\n\nconst MenuItemWrapper = styled(RowCenter)`\n  margin-right: 20px;\n  padding: 10px 20px;\n\n  border: ${({ theme }) => `2px solid ${theme.border1}` };\n  border-radius: 32px;\n  box-sizing: border-box;\n`\n\nconst ChainLogo = styled.img`\n  margin-right: 10px;\n\n  width: 43px;\n  height: 43px;\n`\n\nexport default function Header(): ReactElement {\n  const { t } = useTranslation()\n\n  const theme = useContext(ThemeContext)\n\n  const darkMode = useDarkMode()\n  const setDarkMode = useSetDarkMode()\n\n  return (\n    <ContentWrapper>\n      <RowFit>\n        <img\n          src={ImgLogo}\n          style={{width: '60px', height: '60px'}}\n          alt={t('logoImageDescription')}\n        />\n        <TYPE.logo marginLeft='10px'>{t('logoText')}</TYPE.logo>\n      </RowFit>\n\n      <RowFit>\n        <MenuItemWrapper>\n          <TYPE.menuItem>{t('transactionHistory')}</TYPE.menuItem>\n        </MenuItemWrapper>\n        <MenuItemWrapper style={{padding: '1px 20px 1px 1px'}}>\n          <ChainLogo src={ImgPolkadot} />\n          <TYPE.menuItem>{t('polkadotChain')}</TYPE.menuItem>\n        </MenuItemWrapper>\n\n        {darkMode ? <Sun color={theme.white} size={24} style={{cursor: 'hand'}} onClick={() => setDarkMode(false)} />\n          : <Moon color={theme.black} size={24} style={{cursor: 'hand'}} onClick={() => setDarkMode(true)} />\n        }\n      </RowFit>\n    </ContentWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}