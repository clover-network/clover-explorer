{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar line_1 = require(\"@antv/g-math/lib/line\");\n\nvar polyline_1 = require(\"@antv/g-math/lib/polyline\");\n\nvar util_1 = require(\"@antv/util\");\n\nvar constant_1 = require(\"../constant\");\n\nvar base_1 = require(\"./base\");\n\nvar Polyline =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Polyline, _super);\n\n  function Polyline() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'polyline';\n    _this.canFill = true;\n    _this.canStroke = true;\n    return _this;\n  }\n\n  Polyline.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n\n    return tslib_1.__assign(tslib_1.__assign({}, attrs), {\n      startArrow: false,\n      endArrow: false\n    });\n  }; // 更新属性时，检测是否更改了 points\n\n\n  Polyline.prototype.onAttrChange = function (name, value, originValue) {\n    _super.prototype.onAttrChange.call(this, name, value, originValue);\n\n    if (['points'].indexOf(name) !== -1) {\n      this._resetCache();\n    }\n  };\n\n  Polyline.prototype._resetCache = function () {\n    this.set('totalLength', null);\n    this.set('tCache', null);\n  };\n\n  Polyline.prototype.createPath = function (context, targetAttrs) {\n    var attrs = this.attr();\n    var el = this.get('el');\n    util_1.each(targetAttrs || attrs, function (value, attr) {\n      if (attr === 'points' && util_1.isArray(value) && value.length >= 2) {\n        el.setAttribute('points', value.map(function (point) {\n          return point[0] + \",\" + point[1];\n        }).join(' '));\n      } else if (constant_1.SVG_ATTR_MAP[attr]) {\n        el.setAttribute(constant_1.SVG_ATTR_MAP[attr], value);\n      }\n    });\n  };\n  /**\n   * Get length of polyline\n   * @return {number} length\n   */\n\n\n  Polyline.prototype.getTotalLength = function () {\n    var points = this.attr().points; // get totalLength from cache\n\n    var totalLength = this.get('totalLength');\n\n    if (!util_1.isNil(totalLength)) {\n      return totalLength;\n    }\n\n    this.set('totalLength', polyline_1.default.length(points));\n    return this.get('totalLength');\n  };\n  /**\n   * Get point according to ratio\n   * @param {number} ratio\n   * @return {Point} point\n   */\n\n\n  Polyline.prototype.getPoint = function (ratio) {\n    var points = this.attr().points; // get tCache from cache\n\n    var tCache = this.get('tCache');\n\n    if (!tCache) {\n      this._setTcache();\n\n      tCache = this.get('tCache');\n    }\n\n    var subt;\n    var index;\n    util_1.each(tCache, function (v, i) {\n      if (ratio >= v[0] && ratio <= v[1]) {\n        subt = (ratio - v[0]) / (v[1] - v[0]);\n        index = i;\n      }\n    });\n    return line_1.default.pointAt(points[index][0], points[index][1], points[index + 1][0], points[index + 1][1], subt);\n  };\n\n  Polyline.prototype._setTcache = function () {\n    var points = this.attr().points;\n\n    if (!points || points.length === 0) {\n      return;\n    }\n\n    var totalLength = this.getTotalLength();\n\n    if (totalLength <= 0) {\n      return;\n    }\n\n    var tempLength = 0;\n    var tCache = [];\n    var segmentT;\n    var segmentL;\n    util_1.each(points, function (p, i) {\n      if (points[i + 1]) {\n        segmentT = [];\n        segmentT[0] = tempLength / totalLength;\n        segmentL = line_1.default.length(p[0], p[1], points[i + 1][0], points[i + 1][1]);\n        tempLength += segmentL;\n        segmentT[1] = tempLength / totalLength;\n        tCache.push(segmentT);\n      }\n    });\n    this.set('tCache', tCache);\n  };\n  /**\n   * Get start tangent vector\n   * @return {Array}\n   */\n\n\n  Polyline.prototype.getStartTangent = function () {\n    var points = this.attr().points;\n    var result = [];\n    result.push([points[1][0], points[1][1]]);\n    result.push([points[0][0], points[0][1]]);\n    return result;\n  };\n  /**\n   * Get end tangent vector\n   * @return {Array}\n   */\n\n\n  Polyline.prototype.getEndTangent = function () {\n    var points = this.attr().points;\n    var l = points.length - 1;\n    var result = [];\n    result.push([points[l - 1][0], points[l - 1][1]]);\n    result.push([points[l][0], points[l][1]]);\n    return result;\n  };\n\n  return Polyline;\n}(base_1.default);\n\nexports.default = Polyline;","map":{"version":3,"sources":["../../src/shape/polyline.ts"],"names":[],"mappings":";;;;;;;;AAKA,IAAA,MAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAEA,IAAA,QAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuB,EAAA,OAAA,CAAA,SAAA,CAAA,QAAA,EAAA,MAAA;;AAAvB,WAAA,QAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AACE,IAAA,KAAA,CAAA,IAAA,GAAe,UAAf;AACA,IAAA,KAAA,CAAA,OAAA,GAAmB,IAAnB;AACA,IAAA,KAAA,CAAA,SAAA,GAAqB,IAArB;;AAiID;;AA/HC,EAAA,QAAA,CAAA,SAAA,CAAA,eAAA,GAAA,YAAA;AACE,QAAM,KAAK,GAAG,MAAA,CAAA,SAAA,CAAM,eAAN,CAAqB,IAArB,CAAqB,IAArB,CAAd;;AACA,WAAA,OAAA,CAAA,QAAA,CAAA,OAAA,CAAA,QAAA,CAAA,EAAA,EACK,KADL,CAAA,EACU;AACR,MAAA,UAAU,EAAE,KADJ;AAER,MAAA,QAAQ,EAAE;AAFF,KADV,CAAA;AAKD,GAPD,CALF,CAcE;;;AACA,EAAA,QAAA,CAAA,SAAA,CAAA,YAAA,GAAA,UAAa,IAAb,EAA2B,KAA3B,EAAuC,WAAvC,EAAuD;AACrD,IAAA,MAAA,CAAA,SAAA,CAAM,YAAN,CAAkB,IAAlB,CAAkB,IAAlB,EAAmB,IAAnB,EAAyB,KAAzB,EAAgC,WAAhC;;AACA,QAAI,CAAC,QAAD,EAAW,OAAX,CAAmB,IAAnB,MAA6B,CAAC,CAAlC,EAAqC;AACnC,WAAK,WAAL;AACD;AACF,GALD;;AAOA,EAAA,QAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;AACE,SAAK,GAAL,CAAS,aAAT,EAAwB,IAAxB;AACA,SAAK,GAAL,CAAS,QAAT,EAAmB,IAAnB;AACD,GAHD;;AAKA,EAAA,QAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,OAAX,EAAoB,WAApB,EAA+B;AAC7B,QAAM,KAAK,GAAG,KAAK,IAAL,EAAd;AACA,QAAM,EAAE,GAAG,KAAK,GAAL,CAAS,IAAT,CAAX;AACA,IAAA,MAAA,CAAA,IAAA,CAAK,WAAW,IAAI,KAApB,EAA2B,UAAC,KAAD,EAAQ,IAAR,EAAY;AACrC,UAAI,IAAI,KAAK,QAAT,IAAqB,MAAA,CAAA,OAAA,CAAQ,KAAR,CAArB,IAAuC,KAAK,CAAC,MAAN,IAAgB,CAA3D,EAA8D;AAC5D,QAAA,EAAE,CAAC,YAAH,CAAgB,QAAhB,EAA0B,KAAK,CAAC,GAAN,CAAU,UAAC,KAAD,EAAM;AAAK,iBAAG,KAAK,CAAC,CAAD,CAAL,GAAQ,GAAR,GAAY,KAAK,CAApB,CAAoB,CAApB;AAAyB,SAA9C,EAAgD,IAAhD,CAAqD,GAArD,CAA1B;AACD,OAFD,MAEO,IAAI,UAAA,CAAA,YAAA,CAAa,IAAb,CAAJ,EAAwB;AAC7B,QAAA,EAAE,CAAC,YAAH,CAAgB,UAAA,CAAA,YAAA,CAAa,IAAb,CAAhB,EAAoC,KAApC;AACD;AACF,KAND;AAOD,GAVD;AAYA;;;AAGG;;;AACH,EAAA,QAAA,CAAA,SAAA,CAAA,cAAA,GAAA,YAAA;AACU,QAAA,MAAM,GAAK,KAAK,IAAL,GAAL,MAAN,CADV,CAEE;;AACA,QAAM,WAAW,GAAG,KAAK,GAAL,CAAS,aAAT,CAApB;;AACA,QAAI,CAAC,MAAA,CAAA,KAAA,CAAM,WAAN,CAAL,EAAyB;AACvB,aAAO,WAAP;AACD;;AACD,SAAK,GAAL,CAAS,aAAT,EAAwB,UAAA,CAAA,OAAA,CAAa,MAAb,CAAoB,MAApB,CAAxB;AACA,WAAO,KAAK,GAAL,CAAS,aAAT,CAAP;AACD,GATD;AAWA;;;;AAIG;;;AACH,EAAA,QAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,KAAT,EAAsB;AACZ,QAAA,MAAM,GAAK,KAAK,IAAL,GAAL,MAAN,CADY,CAEpB;;AACA,QAAI,MAAM,GAAG,KAAK,GAAL,CAAS,QAAT,CAAb;;AACA,QAAI,CAAC,MAAL,EAAa;AACX,WAAK,UAAL;;AACA,MAAA,MAAM,GAAG,KAAK,GAAL,CAAS,QAAT,CAAT;AACD;;AAED,QAAI,IAAJ;AACA,QAAI,KAAJ;AACA,IAAA,MAAA,CAAA,IAAA,CAAK,MAAL,EAAa,UAAC,CAAD,EAAI,CAAJ,EAAK;AAChB,UAAI,KAAK,IAAI,CAAC,CAAC,CAAD,CAAV,IAAiB,KAAK,IAAI,CAAC,CAAC,CAAD,CAA/B,EAAoC;AAClC,QAAA,IAAI,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAD,CAAV,KAAkB,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC,CAAD,CAA1B,CAAP;AACA,QAAA,KAAK,GAAG,CAAR;AACD;AACF,KALD;AAMA,WAAO,MAAA,CAAA,OAAA,CAAS,OAAT,CAAiB,MAAM,CAAC,KAAD,CAAN,CAAc,CAAd,CAAjB,EAAmC,MAAM,CAAC,KAAD,CAAN,CAAc,CAAd,CAAnC,EAAqD,MAAM,CAAC,KAAK,GAAG,CAAT,CAAN,CAAkB,CAAlB,CAArD,EAA2E,MAAM,CAAC,KAAK,GAAG,CAAT,CAAN,CAAkB,CAAlB,CAA3E,EAAiG,IAAjG,CAAP;AACD,GAlBD;;AAoBA,EAAA,QAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACU,QAAA,MAAM,GAAK,KAAK,IAAL,GAAL,MAAN;;AACR,QAAI,CAAC,MAAD,IAAW,MAAM,CAAC,MAAP,KAAkB,CAAjC,EAAoC;AAClC;AACD;;AAED,QAAM,WAAW,GAAG,KAAK,cAAL,EAApB;;AACA,QAAI,WAAW,IAAI,CAAnB,EAAsB;AACpB;AACD;;AAED,QAAI,UAAU,GAAG,CAAjB;AACA,QAAM,MAAM,GAAG,EAAf;AACA,QAAI,QAAJ;AACA,QAAI,QAAJ;AAEA,IAAA,MAAA,CAAA,IAAA,CAAK,MAAL,EAAa,UAAC,CAAD,EAAI,CAAJ,EAAK;AAChB,UAAI,MAAM,CAAC,CAAC,GAAG,CAAL,CAAV,EAAmB;AACjB,QAAA,QAAQ,GAAG,EAAX;AACA,QAAA,QAAQ,CAAC,CAAD,CAAR,GAAc,UAAU,GAAG,WAA3B;AACA,QAAA,QAAQ,GAAG,MAAA,CAAA,OAAA,CAAS,MAAT,CAAgB,CAAC,CAAC,CAAD,CAAjB,EAAsB,CAAC,CAAC,CAAD,CAAvB,EAA4B,MAAM,CAAC,CAAC,GAAG,CAAL,CAAN,CAAc,CAAd,CAA5B,EAA8C,MAAM,CAAC,CAAC,GAAG,CAAL,CAAN,CAAc,CAAd,CAA9C,CAAX;AACA,QAAA,UAAU,IAAI,QAAd;AACA,QAAA,QAAQ,CAAC,CAAD,CAAR,GAAc,UAAU,GAAG,WAA3B;AACA,QAAA,MAAM,CAAC,IAAP,CAAY,QAAZ;AACD;AACF,KATD;AAUA,SAAK,GAAL,CAAS,QAAT,EAAmB,MAAnB;AACD,GA3BD;AA6BA;;;AAGG;;;AACH,EAAA,QAAA,CAAA,SAAA,CAAA,eAAA,GAAA,YAAA;AACU,QAAA,MAAM,GAAK,KAAK,IAAL,GAAL,MAAN;AACR,QAAM,MAAM,GAAG,EAAf;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,CAAC,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAD,EAAe,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAf,CAAZ;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,CAAC,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAD,EAAe,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAf,CAAZ;AACA,WAAO,MAAP;AACD,GAND;AAQA;;;AAGG;;;AACH,EAAA,QAAA,CAAA,SAAA,CAAA,aAAA,GAAA,YAAA;AACU,QAAA,MAAM,GAAK,KAAK,IAAL,GAAL,MAAN;AACR,QAAM,CAAC,GAAG,MAAM,CAAC,MAAP,GAAgB,CAA1B;AACA,QAAM,MAAM,GAAG,EAAf;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,CAAC,MAAM,CAAC,CAAC,GAAG,CAAL,CAAN,CAAc,CAAd,CAAD,EAAmB,MAAM,CAAC,CAAC,GAAG,CAAL,CAAN,CAAc,CAAd,CAAnB,CAAZ;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,CAAC,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAD,EAAe,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAf,CAAZ;AACA,WAAO,MAAP;AACD,GAPD;;AAQF,SAAA,QAAA;AAAC,CApID,CAAuB,MAAA,CAAA,OAAvB,CAAA;;AAsIA,OAAA,CAAA,OAAA,GAAe,QAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar line_1 = require(\"@antv/g-math/lib/line\");\nvar polyline_1 = require(\"@antv/g-math/lib/polyline\");\nvar util_1 = require(\"@antv/util\");\nvar constant_1 = require(\"../constant\");\nvar base_1 = require(\"./base\");\nvar Polyline = /** @class */ (function (_super) {\n    tslib_1.__extends(Polyline, _super);\n    function Polyline() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'polyline';\n        _this.canFill = true;\n        _this.canStroke = true;\n        return _this;\n    }\n    Polyline.prototype.getDefaultAttrs = function () {\n        var attrs = _super.prototype.getDefaultAttrs.call(this);\n        return tslib_1.__assign(tslib_1.__assign({}, attrs), { startArrow: false, endArrow: false });\n    };\n    // 更新属性时，检测是否更改了 points\n    Polyline.prototype.onAttrChange = function (name, value, originValue) {\n        _super.prototype.onAttrChange.call(this, name, value, originValue);\n        if (['points'].indexOf(name) !== -1) {\n            this._resetCache();\n        }\n    };\n    Polyline.prototype._resetCache = function () {\n        this.set('totalLength', null);\n        this.set('tCache', null);\n    };\n    Polyline.prototype.createPath = function (context, targetAttrs) {\n        var attrs = this.attr();\n        var el = this.get('el');\n        util_1.each(targetAttrs || attrs, function (value, attr) {\n            if (attr === 'points' && util_1.isArray(value) && value.length >= 2) {\n                el.setAttribute('points', value.map(function (point) { return point[0] + \",\" + point[1]; }).join(' '));\n            }\n            else if (constant_1.SVG_ATTR_MAP[attr]) {\n                el.setAttribute(constant_1.SVG_ATTR_MAP[attr], value);\n            }\n        });\n    };\n    /**\n     * Get length of polyline\n     * @return {number} length\n     */\n    Polyline.prototype.getTotalLength = function () {\n        var points = this.attr().points;\n        // get totalLength from cache\n        var totalLength = this.get('totalLength');\n        if (!util_1.isNil(totalLength)) {\n            return totalLength;\n        }\n        this.set('totalLength', polyline_1.default.length(points));\n        return this.get('totalLength');\n    };\n    /**\n     * Get point according to ratio\n     * @param {number} ratio\n     * @return {Point} point\n     */\n    Polyline.prototype.getPoint = function (ratio) {\n        var points = this.attr().points;\n        // get tCache from cache\n        var tCache = this.get('tCache');\n        if (!tCache) {\n            this._setTcache();\n            tCache = this.get('tCache');\n        }\n        var subt;\n        var index;\n        util_1.each(tCache, function (v, i) {\n            if (ratio >= v[0] && ratio <= v[1]) {\n                subt = (ratio - v[0]) / (v[1] - v[0]);\n                index = i;\n            }\n        });\n        return line_1.default.pointAt(points[index][0], points[index][1], points[index + 1][0], points[index + 1][1], subt);\n    };\n    Polyline.prototype._setTcache = function () {\n        var points = this.attr().points;\n        if (!points || points.length === 0) {\n            return;\n        }\n        var totalLength = this.getTotalLength();\n        if (totalLength <= 0) {\n            return;\n        }\n        var tempLength = 0;\n        var tCache = [];\n        var segmentT;\n        var segmentL;\n        util_1.each(points, function (p, i) {\n            if (points[i + 1]) {\n                segmentT = [];\n                segmentT[0] = tempLength / totalLength;\n                segmentL = line_1.default.length(p[0], p[1], points[i + 1][0], points[i + 1][1]);\n                tempLength += segmentL;\n                segmentT[1] = tempLength / totalLength;\n                tCache.push(segmentT);\n            }\n        });\n        this.set('tCache', tCache);\n    };\n    /**\n     * Get start tangent vector\n     * @return {Array}\n     */\n    Polyline.prototype.getStartTangent = function () {\n        var points = this.attr().points;\n        var result = [];\n        result.push([points[1][0], points[1][1]]);\n        result.push([points[0][0], points[0][1]]);\n        return result;\n    };\n    /**\n     * Get end tangent vector\n     * @return {Array}\n     */\n    Polyline.prototype.getEndTangent = function () {\n        var points = this.attr().points;\n        var l = points.length - 1;\n        var result = [];\n        result.push([points[l - 1][0], points[l - 1][1]]);\n        result.push([points[l][0], points[l][1]]);\n        return result;\n    };\n    return Polyline;\n}(base_1.default));\nexports.default = Polyline;\n//# sourceMappingURL=polyline.js.map"]},"metadata":{},"sourceType":"script"}