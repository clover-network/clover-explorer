{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nimport { __extends } from \"tslib\";\nimport BaseBarSeriesModel from './BaseBarSeries';\nimport SeriesModel from '../../model/Series';\nimport { inheritDefaultOption } from '../../util/component';\n\nvar BarSeriesModel = function (_super) {\n  __extends(BarSeriesModel, _super);\n\n  function BarSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = BarSeriesModel.type;\n    return _this;\n  }\n\n  BarSeriesModel.prototype.getProgressive = function () {\n    return this.get('large') ? this.get('progressive') : false;\n  };\n\n  BarSeriesModel.prototype.getProgressiveThreshold = function () {\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  };\n\n  BarSeriesModel.prototype.brushSelector = function (dataIndex, data, selectors) {\n    return selectors.rect(data.getItemLayout(dataIndex));\n  };\n\n  BarSeriesModel.type = 'series.bar';\n  BarSeriesModel.dependencies = ['grid', 'polar'];\n  BarSeriesModel.defaultOption = inheritDefaultOption(BaseBarSeriesModel.defaultOption, {\n    clip: true,\n    roundCap: false,\n    showBackground: false,\n    backgroundStyle: {\n      color: 'rgba(180, 180, 180, 0.2)',\n      borderColor: null,\n      borderWidth: 0,\n      borderType: 'solid',\n      borderRadius: 0,\n      shadowBlur: 0,\n      shadowColor: null,\n      shadowOffsetX: 0,\n      shadowOffsetY: 0,\n      opacity: 1\n    },\n    select: {\n      itemStyle: {\n        borderColor: '#212121'\n      }\n    },\n    realtimeSort: false\n  });\n  return BarSeriesModel;\n}(BaseBarSeriesModel);\n\nSeriesModel.registerClass(BarSeriesModel);\nexport default BarSeriesModel;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/esm/chart/bar/BarSeries.js"],"names":["__extends","BaseBarSeriesModel","SeriesModel","inheritDefaultOption","BarSeriesModel","_super","_this","apply","arguments","type","prototype","getProgressive","get","getProgressiveThreshold","progressiveThreshold","largeThreshold","brushSelector","dataIndex","data","selectors","rect","getItemLayout","dependencies","defaultOption","clip","roundCap","showBackground","backgroundStyle","color","borderColor","borderWidth","borderType","borderRadius","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","opacity","select","itemStyle","realtimeSort","registerClass"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AAEA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,kBAAP,MAA+B,iBAA/B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,oBAAT,QAAqC,sBAArC;;AAEA,IAAIC,cAAc,GAAG,UAAUC,MAAV,EAAkB;AACrCL,EAAAA,SAAS,CAACI,cAAD,EAAiBC,MAAjB,CAAT;;AAEA,WAASD,cAAT,GAA0B;AACxB,QAAIE,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;;AAEAF,IAAAA,KAAK,CAACG,IAAN,GAAaL,cAAc,CAACK,IAA5B;AACA,WAAOH,KAAP;AACD;;AAEDF,EAAAA,cAAc,CAACM,SAAf,CAAyBC,cAAzB,GAA0C,YAAY;AACpD,WAAO,KAAKC,GAAL,CAAS,OAAT,IAAoB,KAAKA,GAAL,CAAS,aAAT,CAApB,GAA8C,KAArD;AACD,GAFD;;AAIAR,EAAAA,cAAc,CAACM,SAAf,CAAyBG,uBAAzB,GAAmD,YAAY;AAC7D,QAAIC,oBAAoB,GAAG,KAAKF,GAAL,CAAS,sBAAT,CAA3B;AACA,QAAIG,cAAc,GAAG,KAAKH,GAAL,CAAS,gBAAT,CAArB;;AAEA,QAAIG,cAAc,GAAGD,oBAArB,EAA2C;AACzCA,MAAAA,oBAAoB,GAAGC,cAAvB;AACD;;AAED,WAAOD,oBAAP;AACD,GATD;;AAWAV,EAAAA,cAAc,CAACM,SAAf,CAAyBM,aAAzB,GAAyC,UAAUC,SAAV,EAAqBC,IAArB,EAA2BC,SAA3B,EAAsC;AAC7E,WAAOA,SAAS,CAACC,IAAV,CAAeF,IAAI,CAACG,aAAL,CAAmBJ,SAAnB,CAAf,CAAP;AACD,GAFD;;AAIAb,EAAAA,cAAc,CAACK,IAAf,GAAsB,YAAtB;AACAL,EAAAA,cAAc,CAACkB,YAAf,GAA8B,CAAC,MAAD,EAAS,OAAT,CAA9B;AACAlB,EAAAA,cAAc,CAACmB,aAAf,GAA+BpB,oBAAoB,CAACF,kBAAkB,CAACsB,aAApB,EAAmC;AACpFC,IAAAA,IAAI,EAAE,IAD8E;AAEpFC,IAAAA,QAAQ,EAAE,KAF0E;AAGpFC,IAAAA,cAAc,EAAE,KAHoE;AAIpFC,IAAAA,eAAe,EAAE;AACfC,MAAAA,KAAK,EAAE,0BADQ;AAEfC,MAAAA,WAAW,EAAE,IAFE;AAGfC,MAAAA,WAAW,EAAE,CAHE;AAIfC,MAAAA,UAAU,EAAE,OAJG;AAKfC,MAAAA,YAAY,EAAE,CALC;AAMfC,MAAAA,UAAU,EAAE,CANG;AAOfC,MAAAA,WAAW,EAAE,IAPE;AAQfC,MAAAA,aAAa,EAAE,CARA;AASfC,MAAAA,aAAa,EAAE,CATA;AAUfC,MAAAA,OAAO,EAAE;AAVM,KAJmE;AAgBpFC,IAAAA,MAAM,EAAE;AACNC,MAAAA,SAAS,EAAE;AACTV,QAAAA,WAAW,EAAE;AADJ;AADL,KAhB4E;AAqBpFW,IAAAA,YAAY,EAAE;AArBsE,GAAnC,CAAnD;AAuBA,SAAOpC,cAAP;AACD,CAvDoB,CAuDnBH,kBAvDmB,CAArB;;AAyDAC,WAAW,CAACuC,aAAZ,CAA0BrC,cAA1B;AACA,eAAeA,cAAf","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\nimport BaseBarSeriesModel from './BaseBarSeries';\nimport SeriesModel from '../../model/Series';\nimport { inheritDefaultOption } from '../../util/component';\n\nvar BarSeriesModel = function (_super) {\n  __extends(BarSeriesModel, _super);\n\n  function BarSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = BarSeriesModel.type;\n    return _this;\n  }\n\n  BarSeriesModel.prototype.getProgressive = function () {\n    return this.get('large') ? this.get('progressive') : false;\n  };\n\n  BarSeriesModel.prototype.getProgressiveThreshold = function () {\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  };\n\n  BarSeriesModel.prototype.brushSelector = function (dataIndex, data, selectors) {\n    return selectors.rect(data.getItemLayout(dataIndex));\n  };\n\n  BarSeriesModel.type = 'series.bar';\n  BarSeriesModel.dependencies = ['grid', 'polar'];\n  BarSeriesModel.defaultOption = inheritDefaultOption(BaseBarSeriesModel.defaultOption, {\n    clip: true,\n    roundCap: false,\n    showBackground: false,\n    backgroundStyle: {\n      color: 'rgba(180, 180, 180, 0.2)',\n      borderColor: null,\n      borderWidth: 0,\n      borderType: 'solid',\n      borderRadius: 0,\n      shadowBlur: 0,\n      shadowColor: null,\n      shadowOffsetX: 0,\n      shadowOffsetY: 0,\n      opacity: 1\n    },\n    select: {\n      itemStyle: {\n        borderColor: '#212121'\n      }\n    },\n    realtimeSort: false\n  });\n  return BarSeriesModel;\n}(BaseBarSeriesModel);\n\nSeriesModel.registerClass(BarSeriesModel);\nexport default BarSeriesModel;"]},"metadata":{},"sourceType":"module"}