{"ast":null,"code":"var _jsxFileName = \"/Users/wanglijie/wanglijie/clover-defi-wallet/src/pages/AssetsMDetails/index.tsx\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Text } from 'rebass';\nimport AppBody from '../AppBody';\nimport { AutoColumn } from '../../components/Column';\nimport { RowBetween } from '../../components/Row';\nimport CloseBtn from \"../../assets/images/closeBtn.svg\";\nimport { ResponsivePie } from '@nivo/pie';\nimport { ResponsiveLine } from '@nivo/line';\nimport { ResponsiveBar } from \"@nivo/bar\";\nconst BodyWrapper = styled(AutoColumn)`\n`;\nconst HeadContainer = styled(RowBetween)`\n  margin-top: 50px;\n  padding: 0 20px;\n  height: 44px;\n`;\nconst LineChartWrapper = styled.div`\n  margin: 0 30px;\n  height: 300px;\n  background: linear-gradient(180deg,#FFFFFF 0%, #FFF6FA 50%, #FFFFFF 100%);\n  border-radius: 15px;\n`;\nconst BarChartWrapper = styled.div`\n  margin: 0 30px;\n  height: 300px;\n  background: linear-gradient(180deg, #FFFFFF 0%, #EFFBFF 50%, #FFFFFF 100%);\n  border-radius: 15px;\n`;\nexport default class AssetsMDetail extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.goBack = () => {\n      this.props.history.goBack();\n    };\n  }\n\n  render() {\n    const pieData = [{\n      \"id\": \"Total assets\",\n      \"label\": \"Total assets\",\n      \"value\": 75,\n      \"color\": \"#FF7D30\"\n    }, {\n      \"id\": \"Total liabilities\",\n      \"label\": \"Total liabilities\",\n      \"value\": 25,\n      \"color\": \"#FF589D\"\n    }];\n    const pieInnerStyles = {\n      root: {\n        fontFamily: \"consolas, sans-serif\",\n        textAlign: \"center\",\n        position: \"relative\",\n        width: 600,\n        height: 600\n      },\n      overlay: {\n        height: 110,\n        width: 110,\n        borderRadius: '50%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        backgroundColor: '#ffffff',\n        boxShadow: '0px 5px 10px 2px rgba(255, 125, 48, 0.15)',\n        position: \"absolute\",\n        top: 200,\n        right: 133,\n        bottom: 0,\n        alignItems: \"center\"\n      },\n      number: {\n        color: \"#333333\",\n        fontSize: \"15px\",\n        fontWeight: 'bold'\n      },\n      text: {\n        color: \"#999999\",\n        fontSize: \"12px\",\n        fontWeight: \"normal\"\n      }\n    };\n    const lineData = [{\n      \"id\": \"Total liabilities\",\n      \"color\": \"#406AFE\",\n      \"data\": [{\n        \"x\": \"2020.07.20\",\n        \"y\": 50.00\n      }, {\n        \"x\": \"2020.08\",\n        \"y\": 100.00\n      }, {\n        \"x\": \"2020.08.10\",\n        \"y\": 400.00\n      }, {\n        \"x\": \"2020.08.20\",\n        \"y\": 150.00\n      }, {\n        \"x\": \"2020.09\",\n        \"y\": 490.00\n      }, {\n        \"x\": \"2020.09.10\",\n        \"y\": 300.00\n      }, {\n        \"x\": \"2020.09.20\",\n        \"y\": 200.00\n      }, {\n        \"x\": \"2020.10\",\n        \"y\": 300.00\n      }, {\n        \"x\": \"2020.10.10\",\n        \"y\": 500.00\n      }, {\n        \"x\": \"2020.10.20\",\n        \"y\": 690.00\n      }, {\n        \"x\": \"2020.11\",\n        \"y\": 450.00\n      }, {\n        \"x\": \"2020.11.10\",\n        \"y\": 500.00\n      }]\n    }, {\n      \"id\": \"NetAssets\",\n      \"color\": \"#FF71C5\",\n      \"data\": [{\n        \"x\": \"2020.07.20\",\n        \"y\": 100.00\n      }, {\n        \"x\": \"2020.08\",\n        \"y\": 200.00\n      }, {\n        \"x\": \"2020.08.10\",\n        \"y\": 500.00\n      }, {\n        \"x\": \"2020.08.20\",\n        \"y\": 350.00\n      }, {\n        \"x\": \"2020.09\",\n        \"y\": 590.00\n      }, {\n        \"x\": \"2020.09.10\",\n        \"y\": 400.00\n      }, {\n        \"x\": \"2020.09.20\",\n        \"y\": 300.00\n      }, {\n        \"x\": \"2020.10\",\n        \"y\": 400.00\n      }, {\n        \"x\": \"2020.10.10\",\n        \"y\": 600.00\n      }, {\n        \"x\": \"2020.10.20\",\n        \"y\": 790.00\n      }, {\n        \"x\": \"2020.11\",\n        \"y\": 550.00\n      }, {\n        \"x\": \"2020.11.10\",\n        \"y\": 600.00\n      }]\n    }, {\n      \"id\": \"TotalAssets\",\n      \"color\": \"#F6883B\",\n      \"data\": [{\n        \"x\": \"2020.07.20\",\n        \"y\": 300.00\n      }, {\n        \"x\": \"2020.08\",\n        \"y\": 400.00\n      }, {\n        \"x\": \"2020.08.10\",\n        \"y\": 700.00\n      }, {\n        \"x\": \"2020.08.20\",\n        \"y\": 450.00\n      }, {\n        \"x\": \"2020.09\",\n        \"y\": 790.00\n      }, {\n        \"x\": \"2020.09.10\",\n        \"y\": 600.00\n      }, {\n        \"x\": \"2020.09.20\",\n        \"y\": 500.00\n      }, {\n        \"x\": \"2020.10\",\n        \"y\": 600.00\n      }, {\n        \"x\": \"2020.10.10\",\n        \"y\": 800.00\n      }, {\n        \"x\": \"2020.10.20\",\n        \"y\": 990.00\n      }, {\n        \"x\": \"2020.11\",\n        \"y\": 750.00\n      }, {\n        \"x\": \"2020.11.10\",\n        \"y\": 800.00\n      }]\n    }];\n    const barData = [{\n      currency: 'CLV',\n      earnings: 25.03,\n      color: '#FF7D30'\n    }, {\n      currency: 'cETH',\n      earnings: 20.00,\n      color: '#FF71C5'\n    }, {\n      currency: 'ACA',\n      earnings: 15.00,\n      color: '#406AFE'\n    }, {\n      currency: 'aUSD1',\n      earnings: 10.00,\n      color: '#F6883B'\n    }, {\n      currency: 'aUSD2',\n      earnings: -10.00,\n      color: '#FF71C5'\n    }, {\n      currency: 'aUSD3',\n      earnings: -15.00,\n      color: '#FF7D30'\n    }];\n\n    const BarComponent = props => {\n      return /*#__PURE__*/React.createElement(\"g\", {\n        transform: `translate(${props.x},${props.y})`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          display: 'inline-block',\n          borderTopLeftRadius: 10,\n          borderTopRightRadius: 10,\n          height: '10px',\n          width: '10px',\n          backgroundColor: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"text\", {\n        x: props.width,\n        y: props.data.value > 0 ? -10 : props.height + 10,\n        textAnchor: \"end\",\n        dominantBaseline: \"central\",\n        fill: \"#666666\",\n        style: {\n          fontWeight: 400,\n          fontSize: 13,\n          borderTopLeftRadius: 10,\n          borderTopRightRadius: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }\n      }, props.data.value > 0 ? `+$${props.data.value}` : `-$${props.data.value * -1}`));\n    };\n\n    return /*#__PURE__*/React.createElement(AppBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BodyWrapper, {\n      gap: 'md',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(HeadContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"23px\",\n      fontWeight: \"bold\",\n      color: \"#333333\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 25\n      }\n    }, \"Assets\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: CloseBtn,\n      alt: \"\",\n      width: \"15px\",\n      height: \"15px\",\n      onClick: this.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"18px\",\n      fontWeight: \"bold\",\n      color: \"#333333\",\n      marginLeft: \"25px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }\n    }, \"Assets distribution\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 250\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ResponsivePie, {\n      data: pieData,\n      margin: {\n        top: 20,\n        right: 0,\n        bottom: 50,\n        left: 0\n      },\n      startAngle: 1,\n      innerRadius: 0.88,\n      padAngle: 3,\n      cornerRadius: 5,\n      colors: ['#FF7D30', '#FF589D'],\n      borderWidth: 1,\n      borderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.2]]\n      },\n      radialLabelsSkipAngle: 10,\n      radialLabelsTextColor: \"#333333\",\n      radialLabelsLinkColor: {\n        from: 'color'\n      },\n      sliceLabelsSkipAngle: 10,\n      sliceLabelsTextColor: \"#333333\",\n      enableRadialLabels: false,\n      enableSliceLabels: false,\n      legends: [{\n        anchor: 'bottom',\n        direction: 'row',\n        justify: false,\n        translateX: 0,\n        translateY: 40,\n        itemsSpacing: 20,\n        itemWidth: 100,\n        itemHeight: 18,\n        itemTextColor: '#999',\n        itemDirection: 'left-to-right',\n        itemOpacity: 1,\n        symbolSize: 8,\n        symbolShape: 'circle',\n        effects: [{\n          on: 'hover',\n          style: {\n            itemTextColor: '#000'\n          }\n        }]\n      }],\n      theme: {\n        legends: {\n          text: {\n            color: '#666666'\n          }\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: pieInnerStyles.overlay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: pieInnerStyles.number,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 29\n      }\n    }, \"$234995.300\"), /*#__PURE__*/React.createElement(\"span\", {\n      style: pieInnerStyles.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 29\n      }\n    }, \"Net assets\"))), /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"18px\",\n      fontWeight: \"bold\",\n      color: \"#333333\",\n      marginLeft: \"25px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 21\n      }\n    }, \"Assets trend\"), /*#__PURE__*/React.createElement(LineChartWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ResponsiveLine, {\n      data: lineData,\n      margin: {\n        top: 50,\n        right: 0,\n        bottom: 50,\n        left: 0\n      },\n      xScale: {\n        type: 'point'\n      },\n      yScale: {\n        type: 'linear',\n        min: 'auto',\n        max: 'auto',\n        stacked: true,\n        reverse: false\n      },\n      yFormat: \" >-.2f\",\n      axisTop: null,\n      axisRight: null,\n      axisLeft: null,\n      axisBottom: {\n        orient: 'bottom',\n        tickSize: 0,\n        tickPadding: 15,\n        tickRotation: 0,\n        tickValues: [\"2020.08\", \"2020.09\", \"2020.10\", \"2020.11\"]\n      },\n      enableArea: true,\n      enableGridX: false,\n      enableGridY: false,\n      curve: \"monotoneX\",\n      colors: ['#406AFE', '#FF71C5', '#F6883B'],\n      pointSize: 5,\n      pointColor: \"#ffffff\",\n      pointBorderWidth: 2,\n      pointBorderColor: {\n        from: 'serieColor'\n      },\n      pointLabelYOffset: -12,\n      enablePoints: false,\n      useMesh: true,\n      enableSlices: \"x\",\n      animate: true,\n      defs: [{\n        id: 'gradientA',\n        type: 'linearGradient',\n        colors: [{\n          offset: 0,\n          color: '#F6883B'\n        }, {\n          offset: 60,\n          color: '#ffffff'\n        }]\n      }, {\n        id: 'gradientB',\n        type: 'linearGradient',\n        colors: [{\n          offset: 0,\n          color: '#FF71C5'\n        }, {\n          offset: 60,\n          color: '#ffffff'\n        }]\n      }, {\n        id: 'gradientC',\n        type: 'linearGradient',\n        colors: [{\n          offset: 0,\n          color: '#406AFE'\n        }, {\n          offset: 100,\n          color: '#ffffff'\n        }]\n      }],\n      fill: [{\n        match: d => d.id === 'TotalAssets',\n        id: 'gradientA'\n      }, {\n        match: d => d.id === 'NetAssets',\n        id: 'gradientB'\n      }, {\n        match: d => d.id === 'Total liabilities',\n        id: 'gradientC'\n      }],\n      legends: [{\n        anchor: 'top',\n        direction: 'row',\n        justify: false,\n        translateX: 10,\n        translateY: -40,\n        itemsSpacing: 0,\n        itemDirection: 'left-to-right',\n        itemWidth: 100,\n        itemHeight: 20,\n        symbolSize: 8,\n        symbolShape: 'circle'\n      }],\n      theme: {\n        axis: {\n          ticks: {\n            text: {\n              fill: \"#666666\"\n            }\n          }\n        },\n        legends: {\n          text: {\n            fill: \"#999999\"\n          }\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"18px\",\n      fontWeight: \"bold\",\n      color: \"#333333\",\n      marginLeft: \"25px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 21\n      }\n    }, \"Profit and loss of assets\"), /*#__PURE__*/React.createElement(BarChartWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ResponsiveBar, {\n      enableGridY: false,\n      margin: {\n        top: 20,\n        right: 0,\n        bottom: 50,\n        left: 0\n      },\n      padding: 0.6,\n      colors: barData.map(c => c.color),\n      colorBy: \"index\",\n      borderRadius: 5,\n      labelTextColor: \"#666666\",\n      barComponent: BarComponent // labelFormat = { (d: any) => d > 0 ? <tspan y={ -10 }>+${ d }</tspan> :  <tspan y={ 100 }>-${ d * -1 }</tspan>}\n      ,\n      data: barData,\n      keys: [\"earnings\"],\n      indexBy: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/src/pages/AssetsMDetails/index.tsx"],"names":["React","Component","styled","Text","AppBody","AutoColumn","RowBetween","ResponsivePie","ResponsiveLine","ResponsiveBar","BodyWrapper","HeadContainer","LineChartWrapper","div","BarChartWrapper","AssetsMDetail","goBack","props","history","render","pieData","pieInnerStyles","root","fontFamily","textAlign","position","width","height","overlay","borderRadius","display","flexDirection","justifyContent","backgroundColor","boxShadow","top","right","bottom","alignItems","number","color","fontSize","fontWeight","text","lineData","barData","currency","earnings","BarComponent","x","y","borderTopLeftRadius","borderTopRightRadius","data","value","CloseBtn","left","from","modifiers","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemTextColor","itemDirection","itemOpacity","symbolSize","symbolShape","effects","on","style","legends","type","min","max","stacked","reverse","orient","tickSize","tickPadding","tickRotation","tickValues","id","colors","offset","match","d","axis","ticks","fill","map","c"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport styled from 'styled-components'\nimport { Text } from 'rebass'\nimport AppBody from '../AppBody'\nimport Column, { AutoColumn, ColumnCenter } from '../../components/Column'\nimport Row, {RowBetween, RowEnd} from '../../components/Row'\nimport CloseBtn from '../../assets/images/closeBtn.svg'\nimport { ResponsivePie } from '@nivo/pie';\nimport { ResponsiveLine } from '@nivo/line';\nimport { ResponsiveBar } from \"@nivo/bar\";\n\nconst BodyWrapper = styled(AutoColumn)`\n`;\n\nconst HeadContainer = styled(RowBetween)`\n  margin-top: 50px;\n  padding: 0 20px;\n  height: 44px;\n`;\n\nconst LineChartWrapper = styled.div`\n  margin: 0 30px;\n  height: 300px;\n  background: linear-gradient(180deg,#FFFFFF 0%, #FFF6FA 50%, #FFFFFF 100%);\n  border-radius: 15px;\n`;\n\nconst BarChartWrapper = styled.div`\n  margin: 0 30px;\n  height: 300px;\n  background: linear-gradient(180deg, #FFFFFF 0%, #EFFBFF 50%, #FFFFFF 100%);\n  border-radius: 15px;\n`;\n\nexport default class AssetsMDetail extends Component<any, any> {\n\n    goBack = () => {\n        this.props.history.goBack();\n    }\n    render() {\n        const pieData = [\n            {\n                \"id\": \"Total assets\",\n                \"label\": \"Total assets\",\n                \"value\": 75,\n                \"color\": \"#FF7D30\"\n            },\n            {\n                \"id\": \"Total liabilities\",\n                \"label\": \"Total liabilities\",\n                \"value\": 25,\n                \"color\": \"#FF589D\"\n            },\n        ];\n\n        const pieInnerStyles = {\n            root: {\n                fontFamily: \"consolas, sans-serif\",\n                textAlign: \"center\",\n                position: \"relative\",\n                width: 600,\n                height: 600,\n            },\n            overlay: {\n                height: 110,\n                width: 110,\n                borderRadius: '50%',\n                display: 'flex',\n                flexDirection: 'column' as 'column',\n                justifyContent: 'center' as 'center',\n                backgroundColor: '#ffffff',\n                boxShadow: '0px 5px 10px 2px rgba(255, 125, 48, 0.15)',\n                position: \"absolute\" as \"absolute\",\n                top: 200,\n                right: 133,\n                bottom: 0,\n                alignItems: \"center\" as \"center\",\n            },\n            number: {\n                color: \"#333333\",\n                fontSize: \"15px\",\n                fontWeight: 'bold' as 'bold'\n            },\n            text: {\n                color: \"#999999\",\n                fontSize: \"12px\",\n                fontWeight: \"normal\" as \"normal\"\n            }\n        };\n\n        const lineData = [\n            {\n                \"id\": \"Total liabilities\",\n                \"color\": \"#406AFE\",\n                \"data\": [\n                    {\n                        \"x\": \"2020.07.20\",\n                        \"y\": 50.00\n                    },\n                    {\n                        \"x\": \"2020.08\",\n                        \"y\": 100.00\n                    },\n                    {\n                        \"x\": \"2020.08.10\",\n                        \"y\": 400.00\n                    },\n                    {\n                        \"x\": \"2020.08.20\",\n                        \"y\": 150.00\n                    },\n                    {\n                        \"x\": \"2020.09\",\n                        \"y\": 490.00\n                    },\n                    {\n                        \"x\": \"2020.09.10\",\n                        \"y\": 300.00\n                    },\n                    {\n                        \"x\": \"2020.09.20\",\n                        \"y\": 200.00\n                    },\n                    {\n                        \"x\": \"2020.10\",\n                        \"y\": 300.00\n                    },\n                    {\n                        \"x\": \"2020.10.10\",\n                        \"y\": 500.00\n                    },\n                    {\n                        \"x\": \"2020.10.20\",\n                        \"y\": 690.00\n                    },\n                    {\n                        \"x\": \"2020.11\",\n                        \"y\": 450.00\n                    },\n                    {\n                        \"x\": \"2020.11.10\",\n                        \"y\": 500.00\n                    },\n                ]\n            },\n            {\n                \"id\": \"NetAssets\",\n                \"color\": \"#FF71C5\",\n                \"data\": [\n                    {\n                        \"x\": \"2020.07.20\",\n                        \"y\": 100.00\n                    },\n                    {\n                        \"x\": \"2020.08\",\n                        \"y\": 200.00\n                    },\n                    {\n                        \"x\": \"2020.08.10\",\n                        \"y\": 500.00\n                    },\n                    {\n                        \"x\": \"2020.08.20\",\n                        \"y\": 350.00\n                    },\n                    {\n                        \"x\": \"2020.09\",\n                        \"y\": 590.00\n                    },\n                    {\n                        \"x\": \"2020.09.10\",\n                        \"y\": 400.00\n                    },\n                    {\n                        \"x\": \"2020.09.20\",\n                        \"y\": 300.00\n                    },\n                    {\n                        \"x\": \"2020.10\",\n                        \"y\": 400.00\n                    },\n                    {\n                        \"x\": \"2020.10.10\",\n                        \"y\": 600.00\n                    },\n                    {\n                        \"x\": \"2020.10.20\",\n                        \"y\": 790.00\n                    },\n                    {\n                        \"x\": \"2020.11\",\n                        \"y\": 550.00\n                    },\n                    {\n                        \"x\": \"2020.11.10\",\n                        \"y\": 600.00\n                    },\n                ]\n            },\n            {\n                \"id\": \"TotalAssets\",\n                \"color\": \"#F6883B\",\n                \"data\": [\n                    {\n                        \"x\": \"2020.07.20\",\n                        \"y\": 300.00\n                    },\n                    {\n                        \"x\": \"2020.08\",\n                        \"y\": 400.00\n                    },\n                    {\n                        \"x\": \"2020.08.10\",\n                        \"y\": 700.00\n                    },\n                    {\n                        \"x\": \"2020.08.20\",\n                        \"y\": 450.00\n                    },\n                    {\n                        \"x\": \"2020.09\",\n                        \"y\": 790.00\n                    },\n                    {\n                        \"x\": \"2020.09.10\",\n                        \"y\": 600.00\n                    },\n                    {\n                        \"x\": \"2020.09.20\",\n                        \"y\": 500.00\n                    },\n                    {\n                        \"x\": \"2020.10\",\n                        \"y\": 600.00\n                    },\n                    {\n                        \"x\": \"2020.10.10\",\n                        \"y\": 800.00\n                    },\n                    {\n                        \"x\": \"2020.10.20\",\n                        \"y\": 990.00\n                    },\n                    {\n                        \"x\": \"2020.11\",\n                        \"y\": 750.00\n                    },\n                    {\n                        \"x\": \"2020.11.10\",\n                        \"y\": 800.00\n                    },\n                ]\n            },\n        ];\n\n        const barData = [\n            { currency: 'CLV', earnings: 25.03, color: '#FF7D30' },\n            { currency: 'cETH', earnings: 20.00, color: '#FF71C5' },\n            { currency: 'ACA', earnings: 15.00, color: '#406AFE' },\n            { currency: 'aUSD1', earnings: 10.00, color: '#F6883B' },\n            { currency: 'aUSD2', earnings: -10.00, color: '#FF71C5' },\n            { currency: 'aUSD3', earnings: -15.00, color: '#FF7D30' }\n        ];\n\n        const BarComponent = (props: any) => {\n            return (\n                <g transform={`translate(${props.x},${props.y})`}>\n                    <span style={{\n                        display: 'inline-block',\n                        borderTopLeftRadius: 10,\n                        borderTopRightRadius: 10,\n                        height: '10px',\n                        width: '10px',\n                        backgroundColor:'red'\n                    }}>\n\n                    </span>\n                    {/*<rect*/}\n                    {/*    width={props.width}*/}\n                    {/*    height={props.height}*/}\n                    {/*    fill={props.color}*/}\n                    {/*    style={{*/}\n                    {/*        backgroundColor: 'red',*/}\n                    {/*        borderTopLeftRadius: 10,*/}\n                    {/*        borderTopRightRadius: 10*/}\n                    {/*    }}*/}\n                    {/*/>*/}\n                    <text\n                        x={props.width}\n                        y={props.data.value > 0 ? -10 : props.height + 10}\n                        textAnchor=\"end\"\n                        dominantBaseline=\"central\"\n                        fill='#666666'\n                        style={{\n                            fontWeight: 400,\n                            fontSize: 13,\n                            borderTopLeftRadius: 10,\n                            borderTopRightRadius: 10\n                        }}\n                    >\n                        {props.data.value > 0 ? `+$${props.data.value}` : `-$${props.data.value * -1}`}\n                    </text>\n                </g>\n            )\n        }\n\n        return (\n            <AppBody>\n                <BodyWrapper gap={'md'}>\n                    <HeadContainer>\n                        <Text fontSize='23px' fontWeight='bold' color='#333333'>Assets</Text>\n                        <img src={CloseBtn} alt=\"\" width='15px' height='15px' onClick={this.goBack} />\n                    </HeadContainer>\n                    <Text fontSize='18px' fontWeight='bold' color='#333333' marginLeft='25px'>Assets distribution</Text>\n                    <div style={{height: 250}}>\n                        <ResponsivePie\n                            data={pieData}\n                            margin={{ top: 20, right: 0, bottom: 50, left: 0 }}\n                            startAngle={1}\n                            innerRadius={0.88}\n                            padAngle={3}\n                            cornerRadius={5}\n                            colors={['#FF7D30', '#FF589D']}\n                            borderWidth={1}\n                            borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\n                            radialLabelsSkipAngle={10}\n                            radialLabelsTextColor=\"#333333\"\n                            radialLabelsLinkColor={{ from: 'color' }}\n                            sliceLabelsSkipAngle={10}\n                            sliceLabelsTextColor=\"#333333\"\n                            enableRadialLabels={false}\n                            enableSliceLabels={false}\n                            legends={[\n                                {\n                                    anchor: 'bottom',\n                                    direction: 'row',\n                                    justify: false,\n                                    translateX: 0,\n                                    translateY: 40,\n                                    itemsSpacing: 20,\n                                    itemWidth: 100,\n                                    itemHeight: 18,\n                                    itemTextColor: '#999',\n                                    itemDirection: 'left-to-right',\n                                    itemOpacity: 1,\n                                    symbolSize: 8,\n                                    symbolShape: 'circle',\n                                    effects: [\n                                        {\n                                            on: 'hover',\n                                            style: {\n                                                itemTextColor: '#000',\n                                            }\n                                        }\n                                    ]\n                                }\n                            ]}\n                            theme={{\n                                legends: {\n                                    text: {\n                                        color: '#666666'\n                                    }\n                                }\n                            }}\n                        />\n                        <div style={pieInnerStyles.overlay}>\n                            <span style={pieInnerStyles.number}>$234995.300</span>\n                            <span style={pieInnerStyles.text}>Net assets</span>\n                        </div>\n                    </div>\n\n                    <Text fontSize='18px' fontWeight='bold' color='#333333' marginLeft='25px'>Assets trend</Text>\n                    <LineChartWrapper>\n                        <ResponsiveLine\n                            data={lineData}\n                            margin={{ top: 50, right: 0, bottom: 50, left: 0 }}\n                            xScale={{ type: 'point' }}\n                            yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\n                            yFormat=\" >-.2f\"\n                            axisTop={null}\n                            axisRight={null}\n                            axisLeft={null}\n                            axisBottom={{\n                                orient: 'bottom',\n                                tickSize: 0,\n                                tickPadding: 15,\n                                tickRotation: 0,\n                                tickValues: [\"2020.08\", \"2020.09\", \"2020.10\", \"2020.11\"],\n                            }}\n                            enableArea={true}\n                            enableGridX={false}\n                            enableGridY={false}\n                            curve='monotoneX'\n                            colors={['#406AFE', '#FF71C5', '#F6883B']}\n                            pointSize={5}\n                            pointColor=\"#ffffff\"\n                            pointBorderWidth={2}\n                            pointBorderColor={{ from: 'serieColor' }}\n                            pointLabelYOffset={-12}\n                            enablePoints={false}\n                            useMesh={true}\n                            enableSlices='x'\n                            animate={true}\n                            defs={[\n                                {\n                                    id: 'gradientA',\n                                    type: 'linearGradient',\n                                    colors: [\n                                        { offset: 0, color: '#F6883B' },\n                                        { offset: 60, color: '#ffffff' },\n                                    ],\n                                },\n                                {\n                                    id: 'gradientB',\n                                    type: 'linearGradient',\n                                    colors: [\n                                        { offset: 0, color: '#FF71C5' },\n                                        { offset: 60, color: '#ffffff' },\n                                    ],\n                                },\n                                {\n                                    id: 'gradientC',\n                                    type: 'linearGradient',\n                                    colors: [\n                                        { offset: 0, color: '#406AFE' },\n                                        { offset: 100, color: '#ffffff' },\n                                    ],\n                                },\n                            ]}\n                            fill={[\n                                { match: d => d.id === 'TotalAssets', id: 'gradientA' },\n                                { match: d => d.id === 'NetAssets', id: 'gradientB' },\n                                { match: d => d.id === 'Total liabilities', id: 'gradientC' },\n                            ]}\n                            legends={[\n                                {\n                                    anchor: 'top',\n                                    direction: 'row',\n                                    justify: false,\n                                    translateX: 10,\n                                    translateY: -40,\n                                    itemsSpacing: 0,\n                                    itemDirection: 'left-to-right',\n                                    itemWidth: 100,\n                                    itemHeight: 20,\n                                    symbolSize: 8,\n                                    symbolShape: 'circle',\n                                }\n                            ]}\n                            theme={{\n                                axis: {\n                                    ticks: {\n                                        text: {\n                                            fill: \"#666666\",\n                                        },\n                                    },\n                                },\n                                legends: {\n                                    text: {\n                                        fill: \"#999999\",\n                                    }\n                                }\n                            }}\n                        />\n                    </LineChartWrapper>\n\n                    <Text fontSize='18px' fontWeight='bold' color='#333333' marginLeft='25px'>Profit and loss of assets</Text>\n                    <BarChartWrapper>\n                        <ResponsiveBar\n                            enableGridY={false}\n                            margin={{ top: 20, right: 0, bottom: 50, left: 0 }}\n                            padding={0.6}\n                            colors = {barData.map(c => c.color)}\n                            colorBy = \"index\"\n                            borderRadius={5}\n                            labelTextColor='#666666'\n                            barComponent={BarComponent}\n                            // labelFormat = { (d: any) => d > 0 ? <tspan y={ -10 }>+${ d }</tspan> :  <tspan y={ 100 }>-${ d * -1 }</tspan>}\n                            data={barData}\n                            keys={[\"earnings\"]}\n                            indexBy=\"currency\"\n                        />\n                    </BarChartWrapper>\n                </BodyWrapper>\n            </AppBody>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}