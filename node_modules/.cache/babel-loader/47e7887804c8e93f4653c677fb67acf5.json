{"ast":null,"code":"import isArray from './is-array';\nimport isFunction from './is-function';\nimport groupBy from './group-by';\n\nvar groupToMap = function (data, condition) {\n  if (!condition) {\n    return {\n      0: data\n    };\n  }\n\n  if (!isFunction(condition)) {\n    var paramsCondition_1 = isArray(condition) ? condition : condition.replace(/\\s+/g, '').split('*');\n\n    condition = function (row) {\n      var unique = '_'; // 避免出现数字作为Key的情况，会进行按照数字的排序\n\n      for (var i = 0, l = paramsCondition_1.length; i < l; i++) {\n        unique += row[paramsCondition_1[i]] && row[paramsCondition_1[i]].toString();\n      }\n\n      return unique;\n    };\n  }\n\n  var groups = groupBy(data, condition);\n  return groups;\n};\n\nexport default groupToMap;","map":{"version":3,"sources":["../src/group-to-map.ts"],"names":[],"mappings":"AAAA,OAAO,OAAP,MAAoB,YAApB;AACA,OAAO,UAAP,MAAuB,eAAvB;AACA,OAAO,OAAP,MAAoB,YAApB;;AAEA,IAAM,UAAU,GAAG,UAAU,IAAV,EAAgB,SAAhB,EAAyB;AAC1C,MAAI,CAAC,SAAL,EAAgB;AACd,WAAO;AACL,SAAG;AADE,KAAP;AAGD;;AACD,MAAI,CAAC,UAAU,CAAC,SAAD,CAAf,EAA4B;AAC1B,QAAM,iBAAe,GAAG,OAAO,CAAC,SAAD,CAAP,GAAqB,SAArB,GAAiC,SAAS,CAAC,OAAV,CAAkB,MAAlB,EAA0B,EAA1B,EAA8B,KAA9B,CAAoC,GAApC,CAAzD;;AACA,IAAA,SAAS,GAAG,UAAU,GAAV,EAAa;AACvB,UAAI,MAAM,GAAG,GAAb,CADuB,CACL;;AAClB,WAAK,IAAI,CAAC,GAAG,CAAR,EAAW,CAAC,GAAG,iBAAe,CAAC,MAApC,EAA4C,CAAC,GAAG,CAAhD,EAAmD,CAAC,EAApD,EAAwD;AACtD,QAAA,MAAM,IAAI,GAAG,CAAC,iBAAe,CAAC,CAAD,CAAhB,CAAH,IAA2B,GAAG,CAAC,iBAAe,CAAC,CAAD,CAAhB,CAAH,CAAwB,QAAxB,EAArC;AACD;;AACD,aAAO,MAAP;AACD,KAND;AAOD;;AACD,MAAM,MAAM,GAAG,OAAO,CAAC,IAAD,EAAO,SAAP,CAAtB;AACA,SAAO,MAAP;AACD,CAlBD;;AAoBA,eAAe,UAAf","sourceRoot":"","sourcesContent":["import isArray from './is-array';\nimport isFunction from './is-function';\nimport groupBy from './group-by';\nvar groupToMap = function (data, condition) {\n    if (!condition) {\n        return {\n            0: data,\n        };\n    }\n    if (!isFunction(condition)) {\n        var paramsCondition_1 = isArray(condition) ? condition : condition.replace(/\\s+/g, '').split('*');\n        condition = function (row) {\n            var unique = '_'; // 避免出现数字作为Key的情况，会进行按照数字的排序\n            for (var i = 0, l = paramsCondition_1.length; i < l; i++) {\n                unique += row[paramsCondition_1[i]] && row[paramsCondition_1[i]].toString();\n            }\n            return unique;\n        };\n    }\n    var groups = groupBy(data, condition);\n    return groups;\n};\nexport default groupToMap;\n//# sourceMappingURL=group-to-map.js.map"]},"metadata":{},"sourceType":"module"}