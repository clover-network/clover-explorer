{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar vec2 = require(\"./vector\");\n\nvar BoundingRect_1 = require(\"./BoundingRect\");\n\nvar config_1 = require(\"../config\");\n\nvar bbox_1 = require(\"./bbox\");\n\nvar curve_1 = require(\"./curve\");\n\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  R: 7\n};\nvar tmpOutX = [];\nvar tmpOutY = [];\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar PI = Math.PI;\nvar PI2 = PI * 2;\nvar hasTypedArray = typeof Float32Array !== 'undefined';\nvar tmpAngles = [];\n\nfunction modPI2(radian) {\n  var n = Math.round(radian / PI * 1e8) / 1e8;\n  return n % 2 * PI;\n}\n\nfunction normalizeArcAngles(angles, anticlockwise) {\n  var newStartAngle = modPI2(angles[0]);\n\n  if (newStartAngle < 0) {\n    newStartAngle += PI2;\n  }\n\n  var delta = newStartAngle - angles[0];\n  var newEndAngle = angles[1];\n  newEndAngle += delta;\n\n  if (!anticlockwise && newEndAngle - newStartAngle >= PI2) {\n    newEndAngle = newStartAngle + PI2;\n  } else if (anticlockwise && newStartAngle - newEndAngle >= PI2) {\n    newEndAngle = newStartAngle - PI2;\n  } else if (!anticlockwise && newStartAngle > newEndAngle) {\n    newEndAngle = newStartAngle + (PI2 - modPI2(newStartAngle - newEndAngle));\n  } else if (anticlockwise && newStartAngle < newEndAngle) {\n    newEndAngle = newStartAngle - (PI2 - modPI2(newEndAngle - newStartAngle));\n  }\n\n  angles[0] = newStartAngle;\n  angles[1] = newEndAngle;\n}\n\nexports.normalizeArcAngles = normalizeArcAngles;\n\nvar PathProxy = function () {\n  function PathProxy(notSaveData) {\n    this.dpr = 1;\n    this._version = 0;\n    this._xi = 0;\n    this._yi = 0;\n    this._x0 = 0;\n    this._y0 = 0;\n    this._len = 0;\n\n    if (notSaveData) {\n      this._saveData = false;\n    }\n\n    if (this._saveData) {\n      this.data = [];\n    }\n  }\n\n  PathProxy.prototype.increaseVersion = function () {\n    this._version++;\n  };\n\n  PathProxy.prototype.getVersion = function () {\n    return this._version;\n  };\n\n  PathProxy.prototype.setScale = function (sx, sy, segmentIgnoreThreshold) {\n    segmentIgnoreThreshold = segmentIgnoreThreshold || 0;\n\n    if (segmentIgnoreThreshold > 0) {\n      this._ux = mathAbs(segmentIgnoreThreshold / config_1.devicePixelRatio / sx) || 0;\n      this._uy = mathAbs(segmentIgnoreThreshold / config_1.devicePixelRatio / sy) || 0;\n    }\n  };\n\n  PathProxy.prototype.setDPR = function (dpr) {\n    this.dpr = dpr;\n  };\n\n  PathProxy.prototype.setContext = function (ctx) {\n    this._ctx = ctx;\n  };\n\n  PathProxy.prototype.getContext = function () {\n    return this._ctx;\n  };\n\n  PathProxy.prototype.beginPath = function () {\n    this._ctx && this._ctx.beginPath();\n    this.reset();\n    return this;\n  };\n\n  PathProxy.prototype.reset = function () {\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    if (this._pathSegLen) {\n      this._pathSegLen = null;\n      this._pathLen = 0;\n    }\n\n    this._version++;\n  };\n\n  PathProxy.prototype.moveTo = function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y);\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  };\n\n  PathProxy.prototype.lineTo = function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  };\n\n  PathProxy.prototype.bezierCurveTo = function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  };\n\n  PathProxy.prototype.quadraticCurveTo = function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  };\n\n  PathProxy.prototype.arc = function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    tmpAngles[0] = startAngle;\n    tmpAngles[1] = endAngle;\n    normalizeArcAngles(tmpAngles, anticlockwise);\n    startAngle = tmpAngles[0];\n    endAngle = tmpAngles[1];\n    var delta = endAngle - startAngle;\n    this.addData(CMD.A, cx, cy, r, r, startAngle, delta, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cy;\n    return this;\n  };\n\n  PathProxy.prototype.arcTo = function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  };\n\n  PathProxy.prototype.rect = function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  };\n\n  PathProxy.prototype.closePath = function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  };\n\n  PathProxy.prototype.fill = function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  };\n\n  PathProxy.prototype.stroke = function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  };\n\n  PathProxy.prototype.setLineDash = function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n      this._needsDash = true;\n    } else {\n      this._lineDash = null;\n      this._needsDash = false;\n    }\n\n    return this;\n  };\n\n  PathProxy.prototype.setLineDashOffset = function (offset) {\n    this._dashOffset = offset;\n    return this;\n  };\n\n  PathProxy.prototype.len = function () {\n    return this._len;\n  };\n\n  PathProxy.prototype.setData = function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length === len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  };\n\n  PathProxy.prototype.appendPath = function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  };\n\n  PathProxy.prototype.addData = function (cmd, a, b, c, d, e, f, g, h) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n  };\n\n  PathProxy.prototype._expandData = function () {\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  };\n\n  PathProxy.prototype._dashedLineTo = function (x1, y1) {\n    var dashSum = this._dashSum;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var offset = this._dashOffset;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var nDash = lineDash.length;\n    var dash;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx === 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash;\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    }\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  };\n\n  PathProxy.prototype._dashedBezierTo = function (x1, y1, x2, y2, x3, y3) {\n    var ctx = this._ctx;\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var t;\n    var dx;\n    var dy;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = curve_1.cubicAt(x0, x1, x2, x3, t + 0.1) - curve_1.cubicAt(x0, x1, x2, x3, t);\n      dy = curve_1.cubicAt(y0, y1, y2, y3, t + 0.1) - curve_1.cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    }\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = curve_1.cubicAt(x0, x1, x2, x3, t);\n      y = curve_1.cubicAt(y0, y1, y2, y3, t);\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    }\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  };\n\n  PathProxy.prototype._dashedQuadraticTo = function (x1, y1, x2, y2) {\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  };\n\n  PathProxy.prototype.toStatic = function () {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray && this._len > 11) {\n        this.data = new Float32Array(data);\n      }\n    }\n  };\n\n  PathProxy.prototype.getBoundingRect = function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n    var i;\n\n    for (i = 0; i < this._len;) {\n      var cmd = data[i++];\n      var isFirst = i === 1;\n\n      if (isFirst) {\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          xi = x0 = data[i++];\n          yi = y0 = data[i++];\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox_1.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox_1.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox_1.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle;\n          i += 1;\n          var anticlockwise = !data[i++];\n\n          if (isFirst) {\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox_1.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++];\n          bbox_1.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      }\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    }\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect_1[\"default\"](min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  };\n\n  PathProxy.prototype._calculateLength = function () {\n    var data = this.data;\n    var len = this._len;\n    var ux = this._ux;\n    var uy = this._uy;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    if (!this._pathSegLen) {\n      this._pathSegLen = [];\n    }\n\n    var pathSegLen = this._pathSegLen;\n    var pathTotalLen = 0;\n    var segCount = 0;\n\n    for (var i = 0; i < len;) {\n      var cmd = data[i++];\n      var isFirst = i === 1;\n\n      if (isFirst) {\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      var l = -1;\n\n      switch (cmd) {\n        case CMD.M:\n          xi = x0 = data[i++];\n          yi = y0 = data[i++];\n          break;\n\n        case CMD.L:\n          {\n            var x2 = data[i++];\n            var y2 = data[i++];\n            var dx = x2 - xi;\n            var dy = y2 - yi;\n\n            if (mathAbs(dx) > ux || mathAbs(dy) > uy || i === len - 1) {\n              l = Math.sqrt(dx * dx + dy * dy);\n              xi = x2;\n              yi = y2;\n            }\n\n            break;\n          }\n\n        case CMD.C:\n          {\n            var x1 = data[i++];\n            var y1 = data[i++];\n            var x2 = data[i++];\n            var y2 = data[i++];\n            var x3 = data[i++];\n            var y3 = data[i++];\n            l = curve_1.cubicLength(xi, yi, x1, y1, x2, y2, x3, y3, 10);\n            xi = x3;\n            yi = y3;\n            break;\n          }\n\n        case CMD.Q:\n          {\n            var x1 = data[i++];\n            var y1 = data[i++];\n            var x2 = data[i++];\n            var y2 = data[i++];\n            l = curve_1.quadraticLength(xi, yi, x1, y1, x2, y2, 10);\n            xi = x2;\n            yi = y2;\n            break;\n          }\n\n        case CMD.A:\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var delta = data[i++];\n          var endAngle = delta + startAngle;\n          i += 1;\n          var anticlockwise = !data[i++];\n\n          if (isFirst) {\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          l = mathMax(rx, ry) * mathMin(PI2, Math.abs(delta));\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          {\n            x0 = xi = data[i++];\n            y0 = yi = data[i++];\n            var width = data[i++];\n            var height = data[i++];\n            l = width * 2 + height * 2;\n            break;\n          }\n\n        case CMD.Z:\n          {\n            var dx = x0 - xi;\n            var dy = y0 - yi;\n            l = Math.sqrt(dx * dx + dy * dy);\n            xi = x0;\n            yi = y0;\n            break;\n          }\n      }\n\n      if (l >= 0) {\n        pathSegLen[segCount++] = l;\n        pathTotalLen += l;\n      }\n    }\n\n    this._pathLen = pathTotalLen;\n    return pathTotalLen;\n  };\n\n  PathProxy.prototype.rebuildPath = function (ctx, percent) {\n    var d = this.data;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n    var x0;\n    var y0;\n    var xi;\n    var yi;\n    var x;\n    var y;\n    var drawPart = percent < 1;\n    var pathSegLen;\n    var pathTotalLen;\n    var accumLength = 0;\n    var segCount = 0;\n    var displayedLength;\n\n    if (drawPart) {\n      if (!this._pathSegLen) {\n        this._calculateLength();\n      }\n\n      pathSegLen = this._pathSegLen;\n      pathTotalLen = this._pathLen;\n      displayedLength = percent * pathTotalLen;\n\n      if (!displayedLength) {\n        return;\n      }\n    }\n\n    lo: for (var i = 0; i < len;) {\n      var cmd = d[i++];\n      var isFirst = i === 1;\n\n      if (isFirst) {\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          {\n            x = d[i++];\n            y = d[i++];\n\n            if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n              if (drawPart) {\n                var l = pathSegLen[segCount++];\n\n                if (accumLength + l > displayedLength) {\n                  var t = (displayedLength - accumLength) / l;\n                  ctx.lineTo(xi * (1 - t) + x * t, yi * (1 - t) + y * t);\n                  break lo;\n                }\n\n                accumLength += l;\n              }\n\n              ctx.lineTo(x, y);\n              xi = x;\n              yi = y;\n            }\n\n            break;\n          }\n\n        case CMD.C:\n          {\n            var x1 = d[i++];\n            var y1 = d[i++];\n            var x2 = d[i++];\n            var y2 = d[i++];\n            var x3 = d[i++];\n            var y3 = d[i++];\n\n            if (drawPart) {\n              var l = pathSegLen[segCount++];\n\n              if (accumLength + l > displayedLength) {\n                var t = (displayedLength - accumLength) / l;\n                curve_1.cubicSubdivide(xi, x1, x2, x3, t, tmpOutX);\n                curve_1.cubicSubdivide(yi, y1, y2, y3, t, tmpOutY);\n                ctx.bezierCurveTo(tmpOutX[1], tmpOutY[1], tmpOutX[2], tmpOutY[2], tmpOutX[3], tmpOutY[3]);\n                break lo;\n              }\n\n              accumLength += l;\n            }\n\n            ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            xi = x3;\n            yi = y3;\n            break;\n          }\n\n        case CMD.Q:\n          {\n            var x1 = d[i++];\n            var y1 = d[i++];\n            var x2 = d[i++];\n            var y2 = d[i++];\n\n            if (drawPart) {\n              var l = pathSegLen[segCount++];\n\n              if (accumLength + l > displayedLength) {\n                var t = (displayedLength - accumLength) / l;\n                curve_1.quadraticSubdivide(xi, x1, x2, t, tmpOutX);\n                curve_1.quadraticSubdivide(yi, y1, y2, t, tmpOutY);\n                ctx.quadraticCurveTo(tmpOutX[1], tmpOutY[1], tmpOutX[2], tmpOutY[2]);\n                break lo;\n              }\n\n              accumLength += l;\n            }\n\n            ctx.quadraticCurveTo(x1, y1, x2, y2);\n            xi = x2;\n            yi = y2;\n            break;\n          }\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var startAngle = d[i++];\n          var delta = d[i++];\n          var psi = d[i++];\n          var anticlockwise = !d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = mathAbs(rx - ry) > 1e-3;\n          var endAngle = startAngle + delta;\n          var breakBuild = false;\n\n          if (drawPart) {\n            var l = pathSegLen[segCount++];\n\n            if (accumLength + l > displayedLength) {\n              endAngle = startAngle + delta * (displayedLength - accumLength) / l;\n              breakBuild = true;\n            }\n\n            accumLength += l;\n          }\n\n          if (isEllipse && ctx.ellipse) {\n            ctx.ellipse(cx, cy, rx, ry, psi, startAngle, endAngle, anticlockwise);\n          } else {\n            ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n          }\n\n          if (breakBuild) {\n            break lo;\n          }\n\n          if (isFirst) {\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          x = d[i++];\n          y = d[i++];\n          var width = d[i++];\n          var height = d[i++];\n\n          if (drawPart) {\n            var l = pathSegLen[segCount++];\n\n            if (accumLength + l > displayedLength) {\n              var d_1 = displayedLength - accumLength;\n              ctx.moveTo(x, y);\n              ctx.lineTo(x + mathMin(d_1, width), y);\n              d_1 -= width;\n\n              if (d_1 > 0) {\n                ctx.lineTo(x + width, y + mathMin(d_1, height));\n              }\n\n              d_1 -= height;\n\n              if (d_1 > 0) {\n                ctx.lineTo(x + mathMax(width - d_1, 0), y + height);\n              }\n\n              d_1 -= width;\n\n              if (d_1 > 0) {\n                ctx.lineTo(x, y + mathMax(height - d_1, 0));\n              }\n\n              break lo;\n            }\n\n            accumLength += l;\n          }\n\n          ctx.rect(x, y, width, height);\n          break;\n\n        case CMD.Z:\n          if (drawPart) {\n            var l = pathSegLen[segCount++];\n\n            if (accumLength + l > displayedLength) {\n              var t = (displayedLength - accumLength) / l;\n              ctx.lineTo(xi * (1 - t) + x0 * t, yi * (1 - t) + y0 * t);\n              break lo;\n            }\n\n            accumLength += l;\n          }\n\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  };\n\n  PathProxy.CMD = CMD;\n\n  PathProxy.initDefaultProps = function () {\n    var proto = PathProxy.prototype;\n    proto._saveData = true;\n    proto._needsDash = false;\n    proto._dashOffset = 0;\n    proto._dashIdx = 0;\n    proto._dashSum = 0;\n    proto._ux = 0;\n    proto._uy = 0;\n  }();\n\n  return PathProxy;\n}();\n\nexports[\"default\"] = PathProxy;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/zrender/lib/core/PathProxy.js"],"names":["exports","__esModule","vec2","require","BoundingRect_1","config_1","bbox_1","curve_1","CMD","M","L","C","Q","A","Z","R","tmpOutX","tmpOutY","min","max","min2","max2","mathMin","Math","mathMax","mathCos","cos","mathSin","sin","mathSqrt","sqrt","mathAbs","abs","PI","PI2","hasTypedArray","Float32Array","tmpAngles","modPI2","radian","n","round","normalizeArcAngles","angles","anticlockwise","newStartAngle","delta","newEndAngle","PathProxy","notSaveData","dpr","_version","_xi","_yi","_x0","_y0","_len","_saveData","data","prototype","increaseVersion","getVersion","setScale","sx","sy","segmentIgnoreThreshold","_ux","devicePixelRatio","_uy","setDPR","setContext","ctx","_ctx","getContext","beginPath","reset","_lineDash","_dashOffset","_pathSegLen","_pathLen","moveTo","x","y","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","x1","y1","x2","y2","x3","y3","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","cx","cy","r","startAngle","endAngle","arcTo","radius","rect","w","h","closePath","x0","y0","fill","toStatic","stroke","setLineDash","lineDash","Array","_dashIdx","lineDashSum","i","length","_dashSum","setLineDashOffset","offset","len","setData","appendPath","path","appendSize","appendPathData","k","cmd","a","b","c","d","e","f","g","arguments","_expandData","newData","dashSum","dx","dy","dist","nDash","dash","idx","bezierLen","t","tmpLen","cubicAt","getBoundingRect","Number","MAX_VALUE","xi","yi","isFirst","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","width","height","_calculateLength","ux","uy","pathSegLen","pathTotalLen","segCount","l","cubicLength","quadraticLength","rebuildPath","percent","drawPart","accumLength","displayedLength","lo","cubicSubdivide","quadraticSubdivide","psi","scaleX","scaleY","isEllipse","breakBuild","ellipse","d_1","initDefaultProps","proto"],"mappings":"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","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar vec2 = require(\"./vector\");\nvar BoundingRect_1 = require(\"./BoundingRect\");\nvar config_1 = require(\"../config\");\nvar bbox_1 = require(\"./bbox\");\nvar curve_1 = require(\"./curve\");\nvar CMD = {\n    M: 1,\n    L: 2,\n    C: 3,\n    Q: 4,\n    A: 5,\n    Z: 6,\n    R: 7\n};\nvar tmpOutX = [];\nvar tmpOutY = [];\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar PI = Math.PI;\nvar PI2 = PI * 2;\nvar hasTypedArray = typeof Float32Array !== 'undefined';\nvar tmpAngles = [];\nfunction modPI2(radian) {\n    var n = Math.round(radian / PI * 1e8) / 1e8;\n    return (n % 2) * PI;\n}\nfunction normalizeArcAngles(angles, anticlockwise) {\n    var newStartAngle = modPI2(angles[0]);\n    if (newStartAngle < 0) {\n        newStartAngle += PI2;\n    }\n    var delta = newStartAngle - angles[0];\n    var newEndAngle = angles[1];\n    newEndAngle += delta;\n    if (!anticlockwise && newEndAngle - newStartAngle >= PI2) {\n        newEndAngle = newStartAngle + PI2;\n    }\n    else if (anticlockwise && newStartAngle - newEndAngle >= PI2) {\n        newEndAngle = newStartAngle - PI2;\n    }\n    else if (!anticlockwise && newStartAngle > newEndAngle) {\n        newEndAngle = newStartAngle +\n            (PI2 - modPI2(newStartAngle - newEndAngle));\n    }\n    else if (anticlockwise && newStartAngle < newEndAngle) {\n        newEndAngle = newStartAngle -\n            (PI2 - modPI2(newEndAngle - newStartAngle));\n    }\n    angles[0] = newStartAngle;\n    angles[1] = newEndAngle;\n}\nexports.normalizeArcAngles = normalizeArcAngles;\nvar PathProxy = (function () {\n    function PathProxy(notSaveData) {\n        this.dpr = 1;\n        this._version = 0;\n        this._xi = 0;\n        this._yi = 0;\n        this._x0 = 0;\n        this._y0 = 0;\n        this._len = 0;\n        if (notSaveData) {\n            this._saveData = false;\n        }\n        if (this._saveData) {\n            this.data = [];\n        }\n    }\n    PathProxy.prototype.increaseVersion = function () {\n        this._version++;\n    };\n    PathProxy.prototype.getVersion = function () {\n        return this._version;\n    };\n    PathProxy.prototype.setScale = function (sx, sy, segmentIgnoreThreshold) {\n        segmentIgnoreThreshold = segmentIgnoreThreshold || 0;\n        if (segmentIgnoreThreshold > 0) {\n            this._ux = mathAbs(segmentIgnoreThreshold / config_1.devicePixelRatio / sx) || 0;\n            this._uy = mathAbs(segmentIgnoreThreshold / config_1.devicePixelRatio / sy) || 0;\n        }\n    };\n    PathProxy.prototype.setDPR = function (dpr) {\n        this.dpr = dpr;\n    };\n    PathProxy.prototype.setContext = function (ctx) {\n        this._ctx = ctx;\n    };\n    PathProxy.prototype.getContext = function () {\n        return this._ctx;\n    };\n    PathProxy.prototype.beginPath = function () {\n        this._ctx && this._ctx.beginPath();\n        this.reset();\n        return this;\n    };\n    PathProxy.prototype.reset = function () {\n        if (this._saveData) {\n            this._len = 0;\n        }\n        if (this._lineDash) {\n            this._lineDash = null;\n            this._dashOffset = 0;\n        }\n        if (this._pathSegLen) {\n            this._pathSegLen = null;\n            this._pathLen = 0;\n        }\n        this._version++;\n    };\n    PathProxy.prototype.moveTo = function (x, y) {\n        this.addData(CMD.M, x, y);\n        this._ctx && this._ctx.moveTo(x, y);\n        this._x0 = x;\n        this._y0 = y;\n        this._xi = x;\n        this._yi = y;\n        return this;\n    };\n    PathProxy.prototype.lineTo = function (x, y) {\n        var exceedUnit = mathAbs(x - this._xi) > this._ux\n            || mathAbs(y - this._yi) > this._uy\n            || this._len < 5;\n        this.addData(CMD.L, x, y);\n        if (this._ctx && exceedUnit) {\n            this._needsDash ? this._dashedLineTo(x, y)\n                : this._ctx.lineTo(x, y);\n        }\n        if (exceedUnit) {\n            this._xi = x;\n            this._yi = y;\n        }\n        return this;\n    };\n    PathProxy.prototype.bezierCurveTo = function (x1, y1, x2, y2, x3, y3) {\n        this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n        if (this._ctx) {\n            this._needsDash ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n        }\n        this._xi = x3;\n        this._yi = y3;\n        return this;\n    };\n    PathProxy.prototype.quadraticCurveTo = function (x1, y1, x2, y2) {\n        this.addData(CMD.Q, x1, y1, x2, y2);\n        if (this._ctx) {\n            this._needsDash ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n        }\n        this._xi = x2;\n        this._yi = y2;\n        return this;\n    };\n    PathProxy.prototype.arc = function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n        tmpAngles[0] = startAngle;\n        tmpAngles[1] = endAngle;\n        normalizeArcAngles(tmpAngles, anticlockwise);\n        startAngle = tmpAngles[0];\n        endAngle = tmpAngles[1];\n        var delta = endAngle - startAngle;\n        this.addData(CMD.A, cx, cy, r, r, startAngle, delta, 0, anticlockwise ? 0 : 1);\n        this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n        this._xi = mathCos(endAngle) * r + cx;\n        this._yi = mathSin(endAngle) * r + cy;\n        return this;\n    };\n    PathProxy.prototype.arcTo = function (x1, y1, x2, y2, radius) {\n        if (this._ctx) {\n            this._ctx.arcTo(x1, y1, x2, y2, radius);\n        }\n        return this;\n    };\n    PathProxy.prototype.rect = function (x, y, w, h) {\n        this._ctx && this._ctx.rect(x, y, w, h);\n        this.addData(CMD.R, x, y, w, h);\n        return this;\n    };\n    PathProxy.prototype.closePath = function () {\n        this.addData(CMD.Z);\n        var ctx = this._ctx;\n        var x0 = this._x0;\n        var y0 = this._y0;\n        if (ctx) {\n            this._needsDash && this._dashedLineTo(x0, y0);\n            ctx.closePath();\n        }\n        this._xi = x0;\n        this._yi = y0;\n        return this;\n    };\n    PathProxy.prototype.fill = function (ctx) {\n        ctx && ctx.fill();\n        this.toStatic();\n    };\n    PathProxy.prototype.stroke = function (ctx) {\n        ctx && ctx.stroke();\n        this.toStatic();\n    };\n    PathProxy.prototype.setLineDash = function (lineDash) {\n        if (lineDash instanceof Array) {\n            this._lineDash = lineDash;\n            this._dashIdx = 0;\n            var lineDashSum = 0;\n            for (var i = 0; i < lineDash.length; i++) {\n                lineDashSum += lineDash[i];\n            }\n            this._dashSum = lineDashSum;\n            this._needsDash = true;\n        }\n        else {\n            this._lineDash = null;\n            this._needsDash = false;\n        }\n        return this;\n    };\n    PathProxy.prototype.setLineDashOffset = function (offset) {\n        this._dashOffset = offset;\n        return this;\n    };\n    PathProxy.prototype.len = function () {\n        return this._len;\n    };\n    PathProxy.prototype.setData = function (data) {\n        var len = data.length;\n        if (!(this.data && this.data.length === len) && hasTypedArray) {\n            this.data = new Float32Array(len);\n        }\n        for (var i = 0; i < len; i++) {\n            this.data[i] = data[i];\n        }\n        this._len = len;\n    };\n    PathProxy.prototype.appendPath = function (path) {\n        if (!(path instanceof Array)) {\n            path = [path];\n        }\n        var len = path.length;\n        var appendSize = 0;\n        var offset = this._len;\n        for (var i = 0; i < len; i++) {\n            appendSize += path[i].len();\n        }\n        if (hasTypedArray && (this.data instanceof Float32Array)) {\n            this.data = new Float32Array(offset + appendSize);\n        }\n        for (var i = 0; i < len; i++) {\n            var appendPathData = path[i].data;\n            for (var k = 0; k < appendPathData.length; k++) {\n                this.data[offset++] = appendPathData[k];\n            }\n        }\n        this._len = offset;\n    };\n    PathProxy.prototype.addData = function (cmd, a, b, c, d, e, f, g, h) {\n        if (!this._saveData) {\n            return;\n        }\n        var data = this.data;\n        if (this._len + arguments.length > data.length) {\n            this._expandData();\n            data = this.data;\n        }\n        for (var i = 0; i < arguments.length; i++) {\n            data[this._len++] = arguments[i];\n        }\n    };\n    PathProxy.prototype._expandData = function () {\n        if (!(this.data instanceof Array)) {\n            var newData = [];\n            for (var i = 0; i < this._len; i++) {\n                newData[i] = this.data[i];\n            }\n            this.data = newData;\n        }\n    };\n    PathProxy.prototype._dashedLineTo = function (x1, y1) {\n        var dashSum = this._dashSum;\n        var lineDash = this._lineDash;\n        var ctx = this._ctx;\n        var offset = this._dashOffset;\n        var x0 = this._xi;\n        var y0 = this._yi;\n        var dx = x1 - x0;\n        var dy = y1 - y0;\n        var dist = mathSqrt(dx * dx + dy * dy);\n        var x = x0;\n        var y = y0;\n        var nDash = lineDash.length;\n        var dash;\n        var idx;\n        dx /= dist;\n        dy /= dist;\n        if (offset < 0) {\n            offset = dashSum + offset;\n        }\n        offset %= dashSum;\n        x -= offset * dx;\n        y -= offset * dy;\n        while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx === 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n            idx = this._dashIdx;\n            dash = lineDash[idx];\n            x += dx * dash;\n            y += dy * dash;\n            this._dashIdx = (idx + 1) % nDash;\n            if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                continue;\n            }\n            ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n        }\n        dx = x - x1;\n        dy = y - y1;\n        this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n    };\n    PathProxy.prototype._dashedBezierTo = function (x1, y1, x2, y2, x3, y3) {\n        var ctx = this._ctx;\n        var dashSum = this._dashSum;\n        var offset = this._dashOffset;\n        var lineDash = this._lineDash;\n        var x0 = this._xi;\n        var y0 = this._yi;\n        var bezierLen = 0;\n        var idx = this._dashIdx;\n        var nDash = lineDash.length;\n        var t;\n        var dx;\n        var dy;\n        var x;\n        var y;\n        var tmpLen = 0;\n        if (offset < 0) {\n            offset = dashSum + offset;\n        }\n        offset %= dashSum;\n        for (t = 0; t < 1; t += 0.1) {\n            dx = curve_1.cubicAt(x0, x1, x2, x3, t + 0.1)\n                - curve_1.cubicAt(x0, x1, x2, x3, t);\n            dy = curve_1.cubicAt(y0, y1, y2, y3, t + 0.1)\n                - curve_1.cubicAt(y0, y1, y2, y3, t);\n            bezierLen += mathSqrt(dx * dx + dy * dy);\n        }\n        for (; idx < nDash; idx++) {\n            tmpLen += lineDash[idx];\n            if (tmpLen > offset) {\n                break;\n            }\n        }\n        t = (tmpLen - offset) / bezierLen;\n        while (t <= 1) {\n            x = curve_1.cubicAt(x0, x1, x2, x3, t);\n            y = curve_1.cubicAt(y0, y1, y2, y3, t);\n            idx % 2 ? ctx.moveTo(x, y)\n                : ctx.lineTo(x, y);\n            t += lineDash[idx] / bezierLen;\n            idx = (idx + 1) % nDash;\n        }\n        (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n        dx = x3 - x;\n        dy = y3 - y;\n        this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n    };\n    PathProxy.prototype._dashedQuadraticTo = function (x1, y1, x2, y2) {\n        var x3 = x2;\n        var y3 = y2;\n        x2 = (x2 + 2 * x1) / 3;\n        y2 = (y2 + 2 * y1) / 3;\n        x1 = (this._xi + 2 * x1) / 3;\n        y1 = (this._yi + 2 * y1) / 3;\n        this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n    };\n    PathProxy.prototype.toStatic = function () {\n        if (!this._saveData) {\n            return;\n        }\n        var data = this.data;\n        if (data instanceof Array) {\n            data.length = this._len;\n            if (hasTypedArray && this._len > 11) {\n                this.data = new Float32Array(data);\n            }\n        }\n    };\n    PathProxy.prototype.getBoundingRect = function () {\n        min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n        max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n        var data = this.data;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n        var i;\n        for (i = 0; i < this._len;) {\n            var cmd = data[i++];\n            var isFirst = i === 1;\n            if (isFirst) {\n                xi = data[i];\n                yi = data[i + 1];\n                x0 = xi;\n                y0 = yi;\n            }\n            switch (cmd) {\n                case CMD.M:\n                    xi = x0 = data[i++];\n                    yi = y0 = data[i++];\n                    min2[0] = x0;\n                    min2[1] = y0;\n                    max2[0] = x0;\n                    max2[1] = y0;\n                    break;\n                case CMD.L:\n                    bbox_1.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    bbox_1.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    bbox_1.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var startAngle = data[i++];\n                    var endAngle = data[i++] + startAngle;\n                    i += 1;\n                    var anticlockwise = !data[i++];\n                    if (isFirst) {\n                        x0 = mathCos(startAngle) * rx + cx;\n                        y0 = mathSin(startAngle) * ry + cy;\n                    }\n                    bbox_1.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n                    xi = mathCos(endAngle) * rx + cx;\n                    yi = mathSin(endAngle) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    bbox_1.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                    break;\n                case CMD.Z:\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n            vec2.min(min, min, min2);\n            vec2.max(max, max, max2);\n        }\n        if (i === 0) {\n            min[0] = min[1] = max[0] = max[1] = 0;\n        }\n        return new BoundingRect_1[\"default\"](min[0], min[1], max[0] - min[0], max[1] - min[1]);\n    };\n    PathProxy.prototype._calculateLength = function () {\n        var data = this.data;\n        var len = this._len;\n        var ux = this._ux;\n        var uy = this._uy;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n        if (!this._pathSegLen) {\n            this._pathSegLen = [];\n        }\n        var pathSegLen = this._pathSegLen;\n        var pathTotalLen = 0;\n        var segCount = 0;\n        for (var i = 0; i < len;) {\n            var cmd = data[i++];\n            var isFirst = i === 1;\n            if (isFirst) {\n                xi = data[i];\n                yi = data[i + 1];\n                x0 = xi;\n                y0 = yi;\n            }\n            var l = -1;\n            switch (cmd) {\n                case CMD.M:\n                    xi = x0 = data[i++];\n                    yi = y0 = data[i++];\n                    break;\n                case CMD.L: {\n                    var x2 = data[i++];\n                    var y2 = data[i++];\n                    var dx = x2 - xi;\n                    var dy = y2 - yi;\n                    if (mathAbs(dx) > ux || mathAbs(dy) > uy || i === len - 1) {\n                        l = Math.sqrt(dx * dx + dy * dy);\n                        xi = x2;\n                        yi = y2;\n                    }\n                    break;\n                }\n                case CMD.C: {\n                    var x1 = data[i++];\n                    var y1 = data[i++];\n                    var x2 = data[i++];\n                    var y2 = data[i++];\n                    var x3 = data[i++];\n                    var y3 = data[i++];\n                    l = curve_1.cubicLength(xi, yi, x1, y1, x2, y2, x3, y3, 10);\n                    xi = x3;\n                    yi = y3;\n                    break;\n                }\n                case CMD.Q: {\n                    var x1 = data[i++];\n                    var y1 = data[i++];\n                    var x2 = data[i++];\n                    var y2 = data[i++];\n                    l = curve_1.quadraticLength(xi, yi, x1, y1, x2, y2, 10);\n                    xi = x2;\n                    yi = y2;\n                    break;\n                }\n                case CMD.A:\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var startAngle = data[i++];\n                    var delta = data[i++];\n                    var endAngle = delta + startAngle;\n                    i += 1;\n                    var anticlockwise = !data[i++];\n                    if (isFirst) {\n                        x0 = mathCos(startAngle) * rx + cx;\n                        y0 = mathSin(startAngle) * ry + cy;\n                    }\n                    l = mathMax(rx, ry) * mathMin(PI2, Math.abs(delta));\n                    xi = mathCos(endAngle) * rx + cx;\n                    yi = mathSin(endAngle) * ry + cy;\n                    break;\n                case CMD.R: {\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    l = width * 2 + height * 2;\n                    break;\n                }\n                case CMD.Z: {\n                    var dx = x0 - xi;\n                    var dy = y0 - yi;\n                    l = Math.sqrt(dx * dx + dy * dy);\n                    xi = x0;\n                    yi = y0;\n                    break;\n                }\n            }\n            if (l >= 0) {\n                pathSegLen[segCount++] = l;\n                pathTotalLen += l;\n            }\n        }\n        this._pathLen = pathTotalLen;\n        return pathTotalLen;\n    };\n    PathProxy.prototype.rebuildPath = function (ctx, percent) {\n        var d = this.data;\n        var ux = this._ux;\n        var uy = this._uy;\n        var len = this._len;\n        var x0;\n        var y0;\n        var xi;\n        var yi;\n        var x;\n        var y;\n        var drawPart = percent < 1;\n        var pathSegLen;\n        var pathTotalLen;\n        var accumLength = 0;\n        var segCount = 0;\n        var displayedLength;\n        if (drawPart) {\n            if (!this._pathSegLen) {\n                this._calculateLength();\n            }\n            pathSegLen = this._pathSegLen;\n            pathTotalLen = this._pathLen;\n            displayedLength = percent * pathTotalLen;\n            if (!displayedLength) {\n                return;\n            }\n        }\n        lo: for (var i = 0; i < len;) {\n            var cmd = d[i++];\n            var isFirst = i === 1;\n            if (isFirst) {\n                xi = d[i];\n                yi = d[i + 1];\n                x0 = xi;\n                y0 = yi;\n            }\n            switch (cmd) {\n                case CMD.M:\n                    x0 = xi = d[i++];\n                    y0 = yi = d[i++];\n                    ctx.moveTo(xi, yi);\n                    break;\n                case CMD.L: {\n                    x = d[i++];\n                    y = d[i++];\n                    if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                        if (drawPart) {\n                            var l = pathSegLen[segCount++];\n                            if (accumLength + l > displayedLength) {\n                                var t = (displayedLength - accumLength) / l;\n                                ctx.lineTo(xi * (1 - t) + x * t, yi * (1 - t) + y * t);\n                                break lo;\n                            }\n                            accumLength += l;\n                        }\n                        ctx.lineTo(x, y);\n                        xi = x;\n                        yi = y;\n                    }\n                    break;\n                }\n                case CMD.C: {\n                    var x1 = d[i++];\n                    var y1 = d[i++];\n                    var x2 = d[i++];\n                    var y2 = d[i++];\n                    var x3 = d[i++];\n                    var y3 = d[i++];\n                    if (drawPart) {\n                        var l = pathSegLen[segCount++];\n                        if (accumLength + l > displayedLength) {\n                            var t = (displayedLength - accumLength) / l;\n                            curve_1.cubicSubdivide(xi, x1, x2, x3, t, tmpOutX);\n                            curve_1.cubicSubdivide(yi, y1, y2, y3, t, tmpOutY);\n                            ctx.bezierCurveTo(tmpOutX[1], tmpOutY[1], tmpOutX[2], tmpOutY[2], tmpOutX[3], tmpOutY[3]);\n                            break lo;\n                        }\n                        accumLength += l;\n                    }\n                    ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n                    xi = x3;\n                    yi = y3;\n                    break;\n                }\n                case CMD.Q: {\n                    var x1 = d[i++];\n                    var y1 = d[i++];\n                    var x2 = d[i++];\n                    var y2 = d[i++];\n                    if (drawPart) {\n                        var l = pathSegLen[segCount++];\n                        if (accumLength + l > displayedLength) {\n                            var t = (displayedLength - accumLength) / l;\n                            curve_1.quadraticSubdivide(xi, x1, x2, t, tmpOutX);\n                            curve_1.quadraticSubdivide(yi, y1, y2, t, tmpOutY);\n                            ctx.quadraticCurveTo(tmpOutX[1], tmpOutY[1], tmpOutX[2], tmpOutY[2]);\n                            break lo;\n                        }\n                        accumLength += l;\n                    }\n                    ctx.quadraticCurveTo(x1, y1, x2, y2);\n                    xi = x2;\n                    yi = y2;\n                    break;\n                }\n                case CMD.A:\n                    var cx = d[i++];\n                    var cy = d[i++];\n                    var rx = d[i++];\n                    var ry = d[i++];\n                    var startAngle = d[i++];\n                    var delta = d[i++];\n                    var psi = d[i++];\n                    var anticlockwise = !d[i++];\n                    var r = (rx > ry) ? rx : ry;\n                    var scaleX = (rx > ry) ? 1 : rx / ry;\n                    var scaleY = (rx > ry) ? ry / rx : 1;\n                    var isEllipse = mathAbs(rx - ry) > 1e-3;\n                    var endAngle = startAngle + delta;\n                    var breakBuild = false;\n                    if (drawPart) {\n                        var l = pathSegLen[segCount++];\n                        if (accumLength + l > displayedLength) {\n                            endAngle = startAngle + delta * (displayedLength - accumLength) / l;\n                            breakBuild = true;\n                        }\n                        accumLength += l;\n                    }\n                    if (isEllipse && ctx.ellipse) {\n                        ctx.ellipse(cx, cy, rx, ry, psi, startAngle, endAngle, anticlockwise);\n                    }\n                    else {\n                        ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n                    }\n                    if (breakBuild) {\n                        break lo;\n                    }\n                    if (isFirst) {\n                        x0 = mathCos(startAngle) * rx + cx;\n                        y0 = mathSin(startAngle) * ry + cy;\n                    }\n                    xi = mathCos(endAngle) * rx + cx;\n                    yi = mathSin(endAngle) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = d[i];\n                    y0 = yi = d[i + 1];\n                    x = d[i++];\n                    y = d[i++];\n                    var width = d[i++];\n                    var height = d[i++];\n                    if (drawPart) {\n                        var l = pathSegLen[segCount++];\n                        if (accumLength + l > displayedLength) {\n                            var d_1 = displayedLength - accumLength;\n                            ctx.moveTo(x, y);\n                            ctx.lineTo(x + mathMin(d_1, width), y);\n                            d_1 -= width;\n                            if (d_1 > 0) {\n                                ctx.lineTo(x + width, y + mathMin(d_1, height));\n                            }\n                            d_1 -= height;\n                            if (d_1 > 0) {\n                                ctx.lineTo(x + mathMax(width - d_1, 0), y + height);\n                            }\n                            d_1 -= width;\n                            if (d_1 > 0) {\n                                ctx.lineTo(x, y + mathMax(height - d_1, 0));\n                            }\n                            break lo;\n                        }\n                        accumLength += l;\n                    }\n                    ctx.rect(x, y, width, height);\n                    break;\n                case CMD.Z:\n                    if (drawPart) {\n                        var l = pathSegLen[segCount++];\n                        if (accumLength + l > displayedLength) {\n                            var t = (displayedLength - accumLength) / l;\n                            ctx.lineTo(xi * (1 - t) + x0 * t, yi * (1 - t) + y0 * t);\n                            break lo;\n                        }\n                        accumLength += l;\n                    }\n                    ctx.closePath();\n                    xi = x0;\n                    yi = y0;\n            }\n        }\n    };\n    PathProxy.CMD = CMD;\n    PathProxy.initDefaultProps = (function () {\n        var proto = PathProxy.prototype;\n        proto._saveData = true;\n        proto._needsDash = false;\n        proto._dashOffset = 0;\n        proto._dashIdx = 0;\n        proto._dashSum = 0;\n        proto._ux = 0;\n        proto._uy = 0;\n    })();\n    return PathProxy;\n}());\nexports[\"default\"] = PathProxy;\n"]},"metadata":{},"sourceType":"script"}