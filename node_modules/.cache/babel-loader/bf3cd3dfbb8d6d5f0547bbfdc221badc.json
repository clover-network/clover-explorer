{"ast":null,"code":"import { clone, each, wrapBehavior } from '@antv/util/lib';\nimport behaviorOption from './behaviorOption';\n\nvar Behavior =\n/** @class */\nfunction () {\n  function Behavior() {}\n  /**\n   * 自定义 Behavior\n   * @param type Behavior 名称\n   * @param behavior Behavior 定义的方法集合\n   */\n\n\n  Behavior.registerBehavior = function (type, behavior) {\n    if (!behavior) {\n      throw new Error(\"please specify handler for this behavior: \" + type);\n    }\n\n    var prototype = clone(behaviorOption);\n    Object.assign(prototype, behavior); // eslint-disable-next-line func-names\n\n    var base = function base(cfg) {\n      var _this = this;\n\n      Object.assign(this, this.getDefaultCfg(), cfg);\n      var events = this.getEvents();\n      this.events = null;\n      var eventsToBind = {};\n\n      if (events) {\n        each(events, function (handle, event) {\n          eventsToBind[event] = wrapBehavior(_this, handle);\n        });\n        this.events = eventsToBind;\n      }\n    };\n\n    base.prototype = prototype;\n    Behavior.types[type] = base;\n  };\n\n  Behavior.hasBehavior = function (type) {\n    return !!Behavior.types[type];\n  };\n\n  Behavior.getBehavior = function (type) {\n    return Behavior.types[type];\n  }; // 所有自定义的 Behavior 的实例\n\n\n  Behavior.types = {};\n  return Behavior;\n}();\n\nexport default Behavior;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@antv/g6/es/behavior/behavior.js"],"names":["clone","each","wrapBehavior","behaviorOption","Behavior","registerBehavior","type","behavior","Error","prototype","Object","assign","base","cfg","_this","getDefaultCfg","events","getEvents","eventsToBind","handle","event","types","hasBehavior","getBehavior"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,IAAhB,EAAsBC,YAAtB,QAA0C,gBAA1C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,IAAIC,QAAQ;AACZ;AACA,YAAY;AACV,WAASA,QAAT,GAAoB,CAAE;AACtB;AACF;AACA;AACA;AACA;;;AAGEA,EAAAA,QAAQ,CAACC,gBAAT,GAA4B,UAAUC,IAAV,EAAgBC,QAAhB,EAA0B;AACpD,QAAI,CAACA,QAAL,EAAe;AACb,YAAM,IAAIC,KAAJ,CAAU,+CAA+CF,IAAzD,CAAN;AACD;;AAED,QAAIG,SAAS,GAAGT,KAAK,CAACG,cAAD,CAArB;AACAO,IAAAA,MAAM,CAACC,MAAP,CAAcF,SAAd,EAAyBF,QAAzB,EANoD,CAMhB;;AAEpC,QAAIK,IAAI,GAAG,SAASA,IAAT,CAAcC,GAAd,EAAmB;AAC5B,UAAIC,KAAK,GAAG,IAAZ;;AAEAJ,MAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoB,KAAKI,aAAL,EAApB,EAA0CF,GAA1C;AACA,UAAIG,MAAM,GAAG,KAAKC,SAAL,EAAb;AACA,WAAKD,MAAL,GAAc,IAAd;AACA,UAAIE,YAAY,GAAG,EAAnB;;AAEA,UAAIF,MAAJ,EAAY;AACVf,QAAAA,IAAI,CAACe,MAAD,EAAS,UAAUG,MAAV,EAAkBC,KAAlB,EAAyB;AACpCF,UAAAA,YAAY,CAACE,KAAD,CAAZ,GAAsBlB,YAAY,CAACY,KAAD,EAAQK,MAAR,CAAlC;AACD,SAFG,CAAJ;AAGA,aAAKH,MAAL,GAAcE,YAAd;AACD;AACF,KAdD;;AAgBAN,IAAAA,IAAI,CAACH,SAAL,GAAiBA,SAAjB;AACAL,IAAAA,QAAQ,CAACiB,KAAT,CAAef,IAAf,IAAuBM,IAAvB;AACD,GA1BD;;AA4BAR,EAAAA,QAAQ,CAACkB,WAAT,GAAuB,UAAUhB,IAAV,EAAgB;AACrC,WAAO,CAAC,CAACF,QAAQ,CAACiB,KAAT,CAAef,IAAf,CAAT;AACD,GAFD;;AAIAF,EAAAA,QAAQ,CAACmB,WAAT,GAAuB,UAAUjB,IAAV,EAAgB;AACrC,WAAOF,QAAQ,CAACiB,KAAT,CAAef,IAAf,CAAP;AACD,GAFD,CAzCU,CA2CP;;;AAGHF,EAAAA,QAAQ,CAACiB,KAAT,GAAiB,EAAjB;AACA,SAAOjB,QAAP;AACD,CAhDD,EAFA;;AAoDA,eAAeA,QAAf","sourcesContent":["import { clone, each, wrapBehavior } from '@antv/util/lib';\nimport behaviorOption from './behaviorOption';\n\nvar Behavior =\n/** @class */\nfunction () {\n  function Behavior() {}\n  /**\n   * 自定义 Behavior\n   * @param type Behavior 名称\n   * @param behavior Behavior 定义的方法集合\n   */\n\n\n  Behavior.registerBehavior = function (type, behavior) {\n    if (!behavior) {\n      throw new Error(\"please specify handler for this behavior: \" + type);\n    }\n\n    var prototype = clone(behaviorOption);\n    Object.assign(prototype, behavior); // eslint-disable-next-line func-names\n\n    var base = function base(cfg) {\n      var _this = this;\n\n      Object.assign(this, this.getDefaultCfg(), cfg);\n      var events = this.getEvents();\n      this.events = null;\n      var eventsToBind = {};\n\n      if (events) {\n        each(events, function (handle, event) {\n          eventsToBind[event] = wrapBehavior(_this, handle);\n        });\n        this.events = eventsToBind;\n      }\n    };\n\n    base.prototype = prototype;\n    Behavior.types[type] = base;\n  };\n\n  Behavior.hasBehavior = function (type) {\n    return !!Behavior.types[type];\n  };\n\n  Behavior.getBehavior = function (type) {\n    return Behavior.types[type];\n  }; // 所有自定义的 Behavior 的实例\n\n\n  Behavior.types = {};\n  return Behavior;\n}();\n\nexport default Behavior;"]},"metadata":{},"sourceType":"module"}