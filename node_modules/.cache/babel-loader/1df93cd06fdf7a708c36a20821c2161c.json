{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { each } from '@antv/util';\nimport { tooltip, slider, interaction, animation, theme, scale, annotation, limitInPlot } from '../../adaptor/common';\nimport { findGeometry, transformLabel, deepAssign } from '../../utils';\nimport { point, line } from '../../adaptor/geometries';\nimport { flow } from '../../utils';\nimport { adjustYMetaByZero } from '../../utils/data';\n/**\n * geometry 配置处理\n * @param params\n */\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var data = options.data,\n      color = options.color,\n      lineStyle = options.lineStyle,\n      lineShape = options.lineShape,\n      pointMapping = options.point,\n      seriesField = options.seriesField;\n  chart.data(data); // line geometry 处理\n\n  var p = deepAssign({}, params, {\n    options: {\n      shapeField: seriesField,\n      line: {\n        color: color,\n        style: lineStyle,\n        shape: lineShape\n      },\n      // 颜色保持一致，因为如果颜色不一致，会导致 tooltip 中元素重复。\n      // 如果存在，才设置，否则为空\n      point: pointMapping && __assign({\n        color: color,\n        shape: 'circle'\n      }, pointMapping)\n    }\n  });\n  line(p);\n  point(p);\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\n\n\nexport function meta(params) {\n  var _a, _b;\n\n  var options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField,\n      data = options.data;\n  return flow(scale((_a = {}, _a[xField] = xAxis, _a[yField] = yAxis, _a), (_b = {}, _b[xField] = {\n    type: 'cat'\n  }, _b[yField] = adjustYMetaByZero(data, yField), _b)))(params);\n}\n/**\n * axis 配置\n * @param params\n */\n\nexport function axis(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField; // 为 false 则是不显示轴\n\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(yField, false);\n  } else {\n    chart.axis(yField, yAxis);\n  }\n\n  return params;\n}\n/**\n * legend 配置\n * @param params\n */\n\nexport function legend(params) {\n  var chart = params.chart,\n      options = params.options;\n  var legend = options.legend,\n      seriesField = options.seriesField;\n\n  if (legend && seriesField) {\n    chart.legend(seriesField, legend);\n  } else if (legend === false) {\n    chart.legend(false);\n  }\n\n  return params;\n}\n/**\n * 数据标签\n * @param params\n */\n\nfunction label(params) {\n  var chart = params.chart,\n      options = params.options;\n  var label = options.label,\n      yField = options.yField;\n  var lineGeometry = findGeometry(chart, 'line'); // label 为 false, 空 则不显示 label\n\n  if (!label) {\n    lineGeometry.label(false);\n  } else {\n    var callback = label.callback,\n        cfg = __rest(label, [\"callback\"]);\n\n    lineGeometry.label({\n      fields: [yField],\n      callback: callback,\n      cfg: __assign({\n        layout: [{\n          type: 'limit-in-plot'\n        }, {\n          type: 'path-adjust-position'\n        }, {\n          type: 'point-adjust-position'\n        }, {\n          type: 'limit-in-plot',\n          cfg: {\n            action: 'hide'\n          }\n        }]\n      }, transformLabel(cfg))\n    });\n  }\n\n  return params;\n}\n/**\n * 统一处理 adjust\n * @param params\n */\n\n\nexport function adjust(params) {\n  var chart = params.chart,\n      options = params.options;\n  var isStack = options.isStack;\n\n  if (isStack) {\n    each(chart.geometries, function (g) {\n      g.adjust('stack');\n    });\n  }\n\n  return params;\n}\n/**\n * 折线图适配器\n * @param chart\n * @param options\n */\n\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(geometry, meta, adjust, theme, axis, legend, tooltip, label, slider, interaction, animation, annotation(), limitInPlot)(params);\n}","map":{"version":3,"sources":["../../../src/plots/line/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { Geometry } from '@antv/g2';\nimport { each } from '@antv/util';\nimport { Params } from '../../core/adaptor';\nimport { tooltip, slider, interaction, animation, theme, scale, annotation, limitInPlot } from '../../adaptor/common';\nimport { findGeometry, transformLabel, deepAssign } from '../../utils';\nimport { point, line } from '../../adaptor/geometries';\nimport { flow } from '../../utils';\nimport { adjustYMetaByZero } from '../../utils/data';\nimport { LineOptions } from './types';\n\n/**\n * geometry 配置处理\n * @param params\n */\nfunction geometry(params: Params<LineOptions>): Params<LineOptions> {\n  const { chart, options } = params;\n  const { data, color, lineStyle, lineShape, point: pointMapping, seriesField } = options;\n\n  chart.data(data);\n\n  // line geometry 处理\n  const p = deepAssign({}, params, {\n    options: {\n      shapeField: seriesField,\n      line: {\n        color,\n        style: lineStyle,\n        shape: lineShape,\n      },\n      // 颜色保持一致，因为如果颜色不一致，会导致 tooltip 中元素重复。\n      // 如果存在，才设置，否则为空\n      point: pointMapping && {\n        color,\n        shape: 'circle',\n        ...pointMapping,\n      },\n    },\n  });\n\n  line(p);\n  point(p);\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params: Params<LineOptions>): Params<LineOptions> {\n  const { options } = params;\n  const { xAxis, yAxis, xField, yField, data } = options;\n\n  return flow(\n    scale(\n      {\n        [xField]: xAxis,\n        [yField]: yAxis,\n      },\n      {\n        [xField]: {\n          type: 'cat',\n        },\n        [yField]: adjustYMetaByZero(data, yField),\n      }\n    )\n  )(params);\n}\n\n/**\n * axis 配置\n * @param params\n */\nexport function axis(params: Params<LineOptions>): Params<LineOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  // 为 false 则是不显示轴\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(yField, false);\n  } else {\n    chart.axis(yField, yAxis);\n  }\n\n  return params;\n}\n\n/**\n * legend 配置\n * @param params\n */\nexport function legend(params: Params<LineOptions>): Params<LineOptions> {\n  const { chart, options } = params;\n  const { legend, seriesField } = options;\n\n  if (legend && seriesField) {\n    chart.legend(seriesField, legend);\n  } else if (legend === false) {\n    chart.legend(false);\n  }\n\n  return params;\n}\n\n/**\n * 数据标签\n * @param params\n */\nfunction label(params: Params<LineOptions>): Params<LineOptions> {\n  const { chart, options } = params;\n  const { label, yField } = options;\n\n  const lineGeometry = findGeometry(chart, 'line');\n\n  // label 为 false, 空 则不显示 label\n  if (!label) {\n    lineGeometry.label(false);\n  } else {\n    const { callback, ...cfg } = label;\n    lineGeometry.label({\n      fields: [yField],\n      callback,\n      cfg: {\n        layout: [\n          { type: 'limit-in-plot' },\n          { type: 'path-adjust-position' },\n          { type: 'point-adjust-position' },\n          { type: 'limit-in-plot', cfg: { action: 'hide' } },\n        ],\n        ...transformLabel(cfg),\n      },\n    });\n  }\n\n  return params;\n}\n\n/**\n * 统一处理 adjust\n * @param params\n */\nexport function adjust(params: Params<Pick<LineOptions, 'isStack'>>): Params<any> {\n  const { chart, options } = params;\n  const { isStack } = options;\n\n  if (isStack) {\n    each(chart.geometries, (g: Geometry) => {\n      g.adjust('stack');\n    });\n  }\n\n  return params;\n}\n\n/**\n * 折线图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<LineOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(\n    geometry,\n    meta,\n    adjust,\n    theme,\n    axis,\n    legend,\n    tooltip,\n    label,\n    slider,\n    interaction,\n    animation,\n    annotation(),\n    limitInPlot\n  )(params);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}