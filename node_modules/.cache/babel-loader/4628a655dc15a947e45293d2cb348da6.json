{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { map, find, each, isObject } from '@antv/util';\nimport { getTheme } from '@antv/g2';\nimport { deepAssign } from '../utils';\nimport { conversionTagformatter } from '../utils/conversion';\n\nfunction getConversionTagOptionsWithDefaults(options, horizontal) {\n  return deepAssign({\n    size: horizontal ? 32 : 80,\n    spacing: horizontal ? 8 : 12,\n    offset: horizontal ? 32 : 0,\n    arrow: options.arrow !== false && {\n      headSize: 12,\n      style: {\n        fill: 'rgba(0, 0, 0, 0.05)'\n      }\n    },\n    text: options.text !== false && {\n      style: {\n        fontSize: 12,\n        fill: 'rgba(0, 0, 0, 0.85)',\n        textAlign: 'center',\n        textBaseline: 'middle'\n      },\n      formatter: conversionTagformatter\n    }\n  }, options);\n}\n\nfunction parsePoints(coordinate, element) {\n  // @ts-ignore\n  return map(element.getModel().points, function (point) {\n    return coordinate.convertPoint(point);\n  });\n}\n\nfunction renderArrowTag(config, elemPrev, elemNext) {\n  var view = config.view,\n      geometry = config.geometry,\n      group = config.group,\n      options = config.options,\n      horizontal = config.horizontal;\n  var offset = options.offset,\n      size = options.size,\n      arrow = options.arrow;\n  var coordinate = view.getCoordinate();\n  var pointPrev = parsePoints(coordinate, elemPrev)[horizontal ? 3 : 0];\n  var pointNext = parsePoints(coordinate, elemNext)[horizontal ? 0 : 3];\n  var totalHeight = pointNext.y - pointPrev.y;\n  var totalWidth = pointNext.x - pointPrev.x;\n\n  if (typeof arrow === 'boolean') {\n    return;\n  }\n\n  var headSize = arrow.headSize;\n  var spacing = options.spacing;\n  var points;\n\n  if (horizontal) {\n    if ((totalWidth - headSize) / 2 < spacing) {\n      // 当柱间距不足容纳箭头尖与间隔时，画三角并挤占间隔\n      spacing = Math.max(1, (totalWidth - headSize) / 2);\n      points = [[pointPrev.x + spacing, pointPrev.y - offset], [pointPrev.x + spacing, pointPrev.y - offset - size], [pointNext.x - spacing, pointNext.y - offset - size / 2]];\n    } else {\n      // 当柱间距足够时，画完整图形并留出间隔。\n      points = [[pointPrev.x + spacing, pointPrev.y - offset], [pointPrev.x + spacing, pointPrev.y - offset - size], [pointNext.x - spacing - headSize, pointNext.y - offset - size], [pointNext.x - spacing, pointNext.y - offset - size / 2], [pointNext.x - spacing - headSize, pointNext.y - offset]];\n    }\n  } else {\n    if ((totalHeight - headSize) / 2 < spacing) {\n      // 当柱间距不足容纳箭头尖与间隔时，画三角并挤占间隔\n      spacing = Math.max(1, (totalHeight - headSize) / 2);\n      points = [[pointPrev.x + offset, pointPrev.y + spacing], [pointPrev.x + offset + size, pointPrev.y + spacing], [pointNext.x + offset + size / 2, pointNext.y - spacing]];\n    } else {\n      // 当柱间距足够时，画完整图形并留出间隔。\n      points = [[pointPrev.x + offset, pointPrev.y + spacing], [pointPrev.x + offset + size, pointPrev.y + spacing], [pointNext.x + offset + size, pointNext.y - spacing - headSize], [pointNext.x + offset + size / 2, pointNext.y - spacing], [pointNext.x + offset, pointNext.y - spacing - headSize]];\n    }\n  }\n\n  group.addShape('polygon', {\n    id: view.id + \"-conversion-tag-arrow-\" + geometry.getElementId(elemPrev.getModel().mappingData),\n    name: 'conversion-tag-arrow',\n    attrs: __assign(__assign({}, arrow.style || {}), {\n      points: points\n    })\n  });\n}\n\nfunction renderTextTag(config, elemPrev, elemNext) {\n  var _a, _b, _c;\n\n  var view = config.view,\n      geometry = config.geometry,\n      group = config.group,\n      options = config.options,\n      field = config.field,\n      horizontal = config.horizontal;\n  var offset = options.offset,\n      size = options.size;\n\n  if (typeof options.text === 'boolean') {\n    return;\n  }\n\n  var coordinate = view.getCoordinate();\n  var text = ((_a = options.text) === null || _a === void 0 ? void 0 : _a.formatter) && ((_b = options.text) === null || _b === void 0 ? void 0 : _b.formatter(elemPrev.getData()[field], elemNext.getData()[field]));\n  var pointPrev = parsePoints(coordinate, elemPrev)[horizontal ? 3 : 0];\n  var pointNext = parsePoints(coordinate, elemNext)[horizontal ? 0 : 3];\n  var textShape = group.addShape('text', {\n    id: view.id + \"-conversion-tag-text-\" + geometry.getElementId(elemPrev.getModel().mappingData),\n    name: 'conversion-tag-text',\n    attrs: __assign(__assign({}, ((_c = options.text) === null || _c === void 0 ? void 0 : _c.style) || {}), {\n      text: text,\n      x: horizontal ? (pointPrev.x + pointNext.x) / 2 : pointPrev.x + offset + size / 2,\n      y: horizontal ? pointPrev.y - offset - size / 2 : (pointPrev.y + pointNext.y) / 2\n    })\n  });\n\n  if (horizontal) {\n    var totalWidth = pointNext.x - pointPrev.x;\n    var textWidth = textShape.getBBox().width;\n\n    if (textWidth > totalWidth) {\n      var cWidth = textWidth / text.length;\n      var cEnd = Math.max(1, Math.ceil(totalWidth / cWidth) - 1);\n      var textAdjusted = text.slice(0, cEnd) + \"...\";\n      textShape.attr('text', textAdjusted);\n    }\n  }\n}\n\nfunction renderTag(options, elemPrev, elemNext) {\n  renderArrowTag(options, elemPrev, elemNext);\n  renderTextTag(options, elemPrev, elemNext);\n}\n/**\n * 返回支持转化率组件的 adaptor，适用于柱形图/条形图\n * @param field 用户转化率计算的字段\n * @param horizontal 是否水平方向的转化率\n * @param disabled 是否禁用\n */\n\n\nexport function conversionTag(field, horizontal, disabled) {\n  if (horizontal === void 0) {\n    horizontal = true;\n  }\n\n  if (disabled === void 0) {\n    disabled = false;\n  }\n\n  return function (params) {\n    var options = params.options,\n        chart = params.chart;\n    var conversionTag = options.conversionTag,\n        theme = options.theme;\n\n    if (conversionTag && !disabled) {\n      // 有转化率组件时，柱子宽度占比自动为 1/3\n      chart.theme(deepAssign({}, isObject(theme) ? theme : getTheme(theme), {\n        columnWidthRatio: 1 / 3\n      })); // 使用  shape annotation 绘制转化率组件\n\n      chart.annotation().shape({\n        render: function (container, view) {\n          var group = container.addGroup({\n            id: chart.id + \"-conversion-tag-group\",\n            name: 'conversion-tag-group'\n          });\n          var interval = find(chart.geometries, function (geom) {\n            return geom.type === 'interval';\n          });\n          var config = {\n            view: view,\n            geometry: interval,\n            group: group,\n            field: field,\n            horizontal: horizontal,\n            options: getConversionTagOptionsWithDefaults(conversionTag, horizontal)\n          };\n          var elements = horizontal ? interval.elements : interval.elements.slice().reverse();\n          each(elements, function (elem, idx) {\n            if (idx > 0) {\n              renderTag(config, elements[idx - 1], elem);\n            }\n          });\n        }\n      });\n    }\n\n    return params;\n  };\n}","map":{"version":3,"sources":["../../src/adaptor/conversion-tag.ts"],"names":[],"mappings":";AAAA,SAAS,GAAT,EAAc,IAAd,EAAoB,IAApB,EAA0B,QAA1B,QAA0C,YAA1C;AAEA,SAAyB,QAAzB,QAAyC,UAAzC;AAGA,SAAS,UAAT,QAA2B,UAA3B;AACA,SAAS,sBAAT,QAAuC,qBAAvC;;AAqDA,SAAS,mCAAT,CAA6C,OAA7C,EAA4E,UAA5E,EAA+F;AAC7F,SAAO,UAAU,CACf;AACE,IAAA,IAAI,EAAE,UAAU,GAAG,EAAH,GAAQ,EAD1B;AAEE,IAAA,OAAO,EAAE,UAAU,GAAG,CAAH,GAAO,EAF5B;AAGE,IAAA,MAAM,EAAE,UAAU,GAAG,EAAH,GAAQ,CAH5B;AAIE,IAAA,KAAK,EAAE,OAAO,CAAC,KAAR,KAAkB,KAAlB,IAA2B;AAChC,MAAA,QAAQ,EAAE,EADsB;AAEhC,MAAA,KAAK,EAAE;AACL,QAAA,IAAI,EAAE;AADD;AAFyB,KAJpC;AAUE,IAAA,IAAI,EAAE,OAAO,CAAC,IAAR,KAAiB,KAAjB,IAA0B;AAC9B,MAAA,KAAK,EAAE;AACL,QAAA,QAAQ,EAAE,EADL;AAEL,QAAA,IAAI,EAAE,qBAFD;AAGL,QAAA,SAAS,EAAE,QAHN;AAIL,QAAA,YAAY,EAAE;AAJT,OADuB;AAO9B,MAAA,SAAS,EAAE;AAPmB;AAVlC,GADe,EAqBf,OArBe,CAAjB;AAuBD;;AAED,SAAS,WAAT,CAAqB,UAArB,EAA6C,OAA7C,EAA6D;AAC3D;AACA,SAAO,GAAG,CAAC,OAAO,CAAC,QAAR,GAAmB,MAApB,EAA4B,UAAC,KAAD,EAAM;AAAK,WAAA,UAAU,CAAC,YAAX,CAAA,KAAA,CAAA;AAA8B,GAArE,CAAV;AACD;;AAED,SAAS,cAAT,CAAwB,MAAxB,EAAiD,QAAjD,EAAoE,QAApE,EAAqF;AAC3E,MAAA,IAAI,GAA2C,MAAM,CAAjD,IAAJ;AAAA,MAAM,QAAQ,GAAiC,MAAM,CAAvC,QAAd;AAAA,MAAgB,KAAK,GAA0B,MAAM,CAAhC,KAArB;AAAA,MAAuB,OAAO,GAAiB,MAAM,CAAvB,OAA9B;AAAA,MAAgC,UAAU,GAAK,MAAM,CAAX,UAA1C;AACA,MAAA,MAAM,GAAkB,OAAO,CAAzB,MAAN;AAAA,MAAQ,IAAI,GAAY,OAAO,CAAnB,IAAZ;AAAA,MAAc,KAAK,GAAK,OAAO,CAAZ,KAAnB;AACR,MAAM,UAAU,GAAG,IAAI,CAAC,aAAL,EAAnB;AACA,MAAM,SAAS,GAAG,WAAW,CAAC,UAAD,EAAa,QAAb,CAAX,CAAkC,UAAU,GAAG,CAAH,GAAO,CAAnD,CAAlB;AACA,MAAM,SAAS,GAAG,WAAW,CAAC,UAAD,EAAa,QAAb,CAAX,CAAkC,UAAU,GAAG,CAAH,GAAO,CAAnD,CAAlB;AACA,MAAM,WAAW,GAAG,SAAS,CAAC,CAAV,GAAc,SAAS,CAAC,CAA5C;AACA,MAAM,UAAU,GAAG,SAAS,CAAC,CAAV,GAAc,SAAS,CAAC,CAA3C;;AAEA,MAAI,OAAO,KAAP,KAAiB,SAArB,EAAgC;AAC9B;AACD;;AACO,MAAA,QAAQ,GAAK,KAAK,CAAV,QAAR;AACR,MAAI,OAAO,GAAG,OAAO,CAAC,OAAtB;AACA,MAAI,MAAJ;;AAEA,MAAI,UAAJ,EAAgB;AACd,QAAI,CAAC,UAAU,GAAG,QAAd,IAA0B,CAA1B,GAA8B,OAAlC,EAA2C;AACzC;AACA,MAAA,OAAO,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAC,UAAU,GAAG,QAAd,IAA0B,CAAtC,CAAV;AACA,MAAA,MAAM,GAAG,CACP,CAAC,SAAS,CAAC,CAAV,GAAc,OAAf,EAAwB,SAAS,CAAC,CAAV,GAAc,MAAtC,CADO,EAEP,CAAC,SAAS,CAAC,CAAV,GAAc,OAAf,EAAwB,SAAS,CAAC,CAAV,GAAc,MAAd,GAAuB,IAA/C,CAFO,EAGP,CAAC,SAAS,CAAC,CAAV,GAAc,OAAf,EAAwB,SAAS,CAAC,CAAV,GAAc,MAAd,GAAuB,IAAI,GAAG,CAAtD,CAHO,CAAT;AAKD,KARD,MAQO;AACL;AACA,MAAA,MAAM,GAAG,CACP,CAAC,SAAS,CAAC,CAAV,GAAc,OAAf,EAAwB,SAAS,CAAC,CAAV,GAAc,MAAtC,CADO,EAEP,CAAC,SAAS,CAAC,CAAV,GAAc,OAAf,EAAwB,SAAS,CAAC,CAAV,GAAc,MAAd,GAAuB,IAA/C,CAFO,EAGP,CAAC,SAAS,CAAC,CAAV,GAAc,OAAd,GAAwB,QAAzB,EAAmC,SAAS,CAAC,CAAV,GAAc,MAAd,GAAuB,IAA1D,CAHO,EAIP,CAAC,SAAS,CAAC,CAAV,GAAc,OAAf,EAAwB,SAAS,CAAC,CAAV,GAAc,MAAd,GAAuB,IAAI,GAAG,CAAtD,CAJO,EAKP,CAAC,SAAS,CAAC,CAAV,GAAc,OAAd,GAAwB,QAAzB,EAAmC,SAAS,CAAC,CAAV,GAAc,MAAjD,CALO,CAAT;AAOD;AACF,GAnBD,MAmBO;AACL,QAAI,CAAC,WAAW,GAAG,QAAf,IAA2B,CAA3B,GAA+B,OAAnC,EAA4C;AAC1C;AACA,MAAA,OAAO,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAC,WAAW,GAAG,QAAf,IAA2B,CAAvC,CAAV;AACA,MAAA,MAAM,GAAG,CACP,CAAC,SAAS,CAAC,CAAV,GAAc,MAAf,EAAuB,SAAS,CAAC,CAAV,GAAc,OAArC,CADO,EAEP,CAAC,SAAS,CAAC,CAAV,GAAc,MAAd,GAAuB,IAAxB,EAA8B,SAAS,CAAC,CAAV,GAAc,OAA5C,CAFO,EAGP,CAAC,SAAS,CAAC,CAAV,GAAc,MAAd,GAAuB,IAAI,GAAG,CAA/B,EAAkC,SAAS,CAAC,CAAV,GAAc,OAAhD,CAHO,CAAT;AAKD,KARD,MAQO;AACL;AACA,MAAA,MAAM,GAAG,CACP,CAAC,SAAS,CAAC,CAAV,GAAc,MAAf,EAAuB,SAAS,CAAC,CAAV,GAAc,OAArC,CADO,EAEP,CAAC,SAAS,CAAC,CAAV,GAAc,MAAd,GAAuB,IAAxB,EAA8B,SAAS,CAAC,CAAV,GAAc,OAA5C,CAFO,EAGP,CAAC,SAAS,CAAC,CAAV,GAAc,MAAd,GAAuB,IAAxB,EAA8B,SAAS,CAAC,CAAV,GAAc,OAAd,GAAwB,QAAtD,CAHO,EAIP,CAAC,SAAS,CAAC,CAAV,GAAc,MAAd,GAAuB,IAAI,GAAG,CAA/B,EAAkC,SAAS,CAAC,CAAV,GAAc,OAAhD,CAJO,EAKP,CAAC,SAAS,CAAC,CAAV,GAAc,MAAf,EAAuB,SAAS,CAAC,CAAV,GAAc,OAAd,GAAwB,QAA/C,CALO,CAAT;AAOD;AACF;;AAED,EAAA,KAAK,CAAC,QAAN,CAAe,SAAf,EAA0B;AACxB,IAAA,EAAE,EAAK,IAAI,CAAC,EAAL,GAAO,wBAAP,GAAgC,QAAQ,CAAC,YAAT,CAAsB,QAAQ,CAAC,QAAT,GAAoB,WAA1C,CADf;AAExB,IAAA,IAAI,EAAE,sBAFkB;AAGxB,IAAA,KAAK,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACC,KAAK,CAAC,KAAN,IAAe,EADhB,CAAA,EACmB;AACtB,MAAA,MAAM,EAAA;AADgB,KADnB;AAHmB,GAA1B;AAQD;;AAED,SAAS,aAAT,CAAuB,MAAvB,EAAgD,QAAhD,EAAmE,QAAnE,EAAoF;;;AAC1E,MAAA,IAAI,GAAkD,MAAM,CAAxD,IAAJ;AAAA,MAAM,QAAQ,GAAwC,MAAM,CAA9C,QAAd;AAAA,MAAgB,KAAK,GAAiC,MAAM,CAAvC,KAArB;AAAA,MAAuB,OAAO,GAAwB,MAAM,CAA9B,OAA9B;AAAA,MAAgC,KAAK,GAAiB,MAAM,CAAvB,KAArC;AAAA,MAAuC,UAAU,GAAK,MAAM,CAAX,UAAjD;AACA,MAAA,MAAM,GAAW,OAAO,CAAlB,MAAN;AAAA,MAAQ,IAAI,GAAK,OAAO,CAAZ,IAAZ;;AACR,MAAI,OAAO,OAAO,CAAC,IAAf,KAAwB,SAA5B,EAAuC;AACrC;AACD;;AACD,MAAM,UAAU,GAAG,IAAI,CAAC,aAAL,EAAnB;AACA,MAAM,IAAI,GAAG,CAAA,CAAA,EAAA,GAAA,OAAO,CAAC,IAAR,MAAY,IAAZ,IAAY,EAAA,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAY,EAAA,CAAE,SAAd,MAAuB,CAAA,EAAA,GAAI,OAAO,CAAC,IAAZ,MAAgB,IAAhB,IAAgB,EAAA,KAAA,KAAA,CAAhB,GAAgB,KAAA,CAAhB,GAAgB,EAAA,CAAE,SAAF,CAAY,QAAQ,CAAC,OAAT,GAAmB,KAAnB,CAAZ,EAAuC,QAAQ,CAAC,OAAT,GAAmB,KAAnB,CAAvC,CAAvC,CAAb;AAEA,MAAM,SAAS,GAAG,WAAW,CAAC,UAAD,EAAa,QAAb,CAAX,CAAkC,UAAU,GAAG,CAAH,GAAO,CAAnD,CAAlB;AACA,MAAM,SAAS,GAAG,WAAW,CAAC,UAAD,EAAa,QAAb,CAAX,CAAkC,UAAU,GAAG,CAAH,GAAO,CAAnD,CAAlB;AAEA,MAAM,SAAS,GAAG,KAAK,CAAC,QAAN,CAAe,MAAf,EAAuB;AACvC,IAAA,EAAE,EAAK,IAAI,CAAC,EAAL,GAAO,uBAAP,GAA+B,QAAQ,CAAC,YAAT,CAAsB,QAAQ,CAAC,QAAT,GAAoB,WAA1C,CADC;AAEvC,IAAA,IAAI,EAAE,qBAFiC;AAGvC,IAAA,KAAK,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACC,CAAA,CAAA,EAAA,GAAA,OAAO,CAAC,IAAR,MAAY,IAAZ,IAAY,EAAA,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAY,EAAA,CAAE,KAAd,KAAuB,EADxB,CAAA,EAC2B;AAC9B,MAAA,IAAI,EAAA,IAD0B;AAE9B,MAAA,CAAC,EAAE,UAAU,GAAG,CAAC,SAAS,CAAC,CAAV,GAAc,SAAS,CAAC,CAAzB,IAA8B,CAAjC,GAAqC,SAAS,CAAC,CAAV,GAAc,MAAd,GAAuB,IAAI,GAAG,CAFlD;AAG9B,MAAA,CAAC,EAAE,UAAU,GAAG,SAAS,CAAC,CAAV,GAAc,MAAd,GAAuB,IAAI,GAAG,CAAjC,GAAqC,CAAC,SAAS,CAAC,CAAV,GAAc,SAAS,CAAC,CAAzB,IAA8B;AAHlD,KAD3B;AAHkC,GAAvB,CAAlB;;AAWA,MAAI,UAAJ,EAAgB;AACd,QAAM,UAAU,GAAG,SAAS,CAAC,CAAV,GAAc,SAAS,CAAC,CAA3C;AACQ,QAAO,SAAS,GAAK,SAAS,CAAC,OAAV,GAAL,KAAhB;;AACR,QAAI,SAAS,GAAG,UAAhB,EAA4B;AAC1B,UAAM,MAAM,GAAG,SAAS,GAAG,IAAI,CAAC,MAAhC;AACA,UAAM,IAAI,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,IAAI,CAAC,IAAL,CAAU,UAAU,GAAG,MAAvB,IAAiC,CAA7C,CAAb;AACA,UAAM,YAAY,GAAM,IAAI,CAAC,KAAL,CAAW,CAAX,EAAc,IAAd,IAAmB,KAA3C;AACA,MAAA,SAAS,CAAC,IAAV,CAAe,MAAf,EAAuB,YAAvB;AACD;AACF;AACF;;AAED,SAAS,SAAT,CAAmB,OAAnB,EAA6C,QAA7C,EAAgE,QAAhE,EAAiF;AAC/E,EAAA,cAAc,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,CAAd;AACA,EAAA,aAAa,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,CAAb;AACD;AAED;;;;;AAKG;;;AACH,OAAM,SAAU,aAAV,CACJ,KADI,EAEJ,UAFI,EAGJ,QAHI,EAGY;AADhB,MAAA,UAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,IAAA;AAAiB;;AACjB,MAAA,QAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,KAAA;AAAgB;;AAEhB,SAAO,UAAU,MAAV,EAA2B;AACxB,QAAA,OAAO,GAAY,MAAM,CAAlB,OAAP;AAAA,QAAS,KAAK,GAAK,MAAM,CAAX,KAAd;AACA,QAAA,aAAa,GAAY,OAAO,CAAnB,aAAb;AAAA,QAAe,KAAK,GAAK,OAAO,CAAZ,KAApB;;AAER,QAAI,aAAa,IAAI,CAAC,QAAtB,EAAgC;AAC9B;AACA,MAAA,KAAK,CAAC,KAAN,CACE,UAAU,CAAC,EAAD,EAAK,QAAQ,CAAC,KAAD,CAAR,GAAkB,KAAlB,GAA0B,QAAQ,CAAC,KAAD,CAAvC,EAAgD;AACxD,QAAA,gBAAgB,EAAE,IAAI;AADkC,OAAhD,CADZ,EAF8B,CAO9B;;AACA,MAAA,KAAK,CAAC,UAAN,GAAmB,KAAnB,CAAyB;AACvB,QAAA,MAAM,EAAE,UAAC,SAAD,EAAY,IAAZ,EAAgB;AACtB,cAAM,KAAK,GAAG,SAAS,CAAC,QAAV,CAAmB;AAC/B,YAAA,EAAE,EAAK,KAAK,CAAC,EAAN,GAAQ,uBADgB;AAE/B,YAAA,IAAI,EAAE;AAFyB,WAAnB,CAAd;AAIA,cAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,UAAP,EAAmB,UAAC,IAAD,EAAe;AAAK,mBAAA,IAAI,CAAC,IAAL,KAAA,UAAA;AAAwB,WAA/D,CAArB;AACA,cAAM,MAAM,GAAoB;AAC9B,YAAA,IAAI,EAAA,IAD0B;AAE9B,YAAA,QAAQ,EAAE,QAFoB;AAG9B,YAAA,KAAK,EAAA,KAHyB;AAI9B,YAAA,KAAK,EAAA,KAJyB;AAK9B,YAAA,UAAU,EAAA,UALoB;AAM9B,YAAA,OAAO,EAAE,mCAAmC,CAAC,aAAD,EAAgB,UAAhB;AANd,WAAhC;AAQA,cAAM,QAAQ,GAAG,UAAU,GAAG,QAAQ,CAAC,QAAZ,GAAuB,QAAQ,CAAC,QAAT,CAAkB,KAAlB,GAA0B,OAA1B,EAAlD;AACA,UAAA,IAAI,CAAC,QAAD,EAAW,UAAC,IAAD,EAAgB,GAAhB,EAA2B;AACxC,gBAAI,GAAG,GAAG,CAAV,EAAa;AACX,cAAA,SAAS,CAAC,MAAD,EAAS,QAAQ,CAAC,GAAG,GAAG,CAAP,CAAjB,EAA4B,IAA5B,CAAT;AACD;AACF,WAJG,CAAJ;AAKD;AArBsB,OAAzB;AAuBD;;AAED,WAAO,MAAP;AACD,GAtCD;AAuCD","sourcesContent":["import { map, find, each, isObject } from '@antv/util';\nimport { Coordinate, IGroup, ShapeAttrs } from '@antv/g2/lib/dependents';\nimport { Geometry, View, getTheme } from '@antv/g2';\nimport Element from '@antv/g2/lib/geometry/element';\nimport { Params } from '../core/adaptor';\nimport { deepAssign } from '../utils';\nimport { conversionTagformatter } from '../utils/conversion';\nimport { Options } from '../types';\n\n/** 转化率组件配置选项 */\nexport interface ConversionTagOptions {\n  /** tag 高度 */\n  size?: number;\n  /** tag 对柱子间距 */\n  spacing?: number;\n  /** tag 距离轴线距离 */\n  offset?: number;\n  /** 箭头形状配置 */\n  arrow?:\n    | {\n        /** 箭头宽度 */\n        headSize?: number;\n        /** 箭头样式 */\n        style?: ShapeAttrs;\n      }\n    | false;\n  /** 文本配置 */\n  text?:\n    | {\n        /** 文字大小 */\n        size?: number;\n        /** 文字样式 */\n        style?: ShapeAttrs;\n        /** 文本格式化 */\n        formatter?: (prev: number, next: number) => string;\n      }\n    | false;\n}\n\nexport interface OptionWithConversionTag {\n  conversionTag?: ConversionTagOptions | false;\n}\n\n/** 控制转化率组件绘制的选项 */\ntype TagRenderConfig = {\n  /** 所在的 View */\n  view: View;\n  /** 所属的 geometry */\n  geometry: Geometry;\n  /** 转化率组件的 group */\n  group: IGroup;\n  /** 转化率配置 */\n  options: ConversionTagOptions;\n  /** 用于转化率计算的字段 */\n  field: string;\n  /** 水平/垂直 */\n  horizontal: boolean;\n};\n\nfunction getConversionTagOptionsWithDefaults(options: ConversionTagOptions, horizontal: boolean): ConversionTagOptions {\n  return deepAssign(\n    {\n      size: horizontal ? 32 : 80,\n      spacing: horizontal ? 8 : 12,\n      offset: horizontal ? 32 : 0,\n      arrow: options.arrow !== false && {\n        headSize: 12,\n        style: {\n          fill: 'rgba(0, 0, 0, 0.05)',\n        },\n      },\n      text: options.text !== false && {\n        style: {\n          fontSize: 12,\n          fill: 'rgba(0, 0, 0, 0.85)',\n          textAlign: 'center',\n          textBaseline: 'middle',\n        },\n        formatter: conversionTagformatter,\n      },\n    },\n    options\n  );\n}\n\nfunction parsePoints(coordinate: Coordinate, element: Element): { x: number; y: number }[] {\n  // @ts-ignore\n  return map(element.getModel().points, (point) => coordinate.convertPoint(point));\n}\n\nfunction renderArrowTag(config: TagRenderConfig, elemPrev: Element, elemNext: Element): void {\n  const { view, geometry, group, options, horizontal } = config;\n  const { offset, size, arrow } = options;\n  const coordinate = view.getCoordinate();\n  const pointPrev = parsePoints(coordinate, elemPrev)[horizontal ? 3 : 0];\n  const pointNext = parsePoints(coordinate, elemNext)[horizontal ? 0 : 3];\n  const totalHeight = pointNext.y - pointPrev.y;\n  const totalWidth = pointNext.x - pointPrev.x;\n\n  if (typeof arrow === 'boolean') {\n    return;\n  }\n  const { headSize } = arrow;\n  let spacing = options.spacing;\n  let points;\n\n  if (horizontal) {\n    if ((totalWidth - headSize) / 2 < spacing) {\n      // 当柱间距不足容纳箭头尖与间隔时，画三角并挤占间隔\n      spacing = Math.max(1, (totalWidth - headSize) / 2);\n      points = [\n        [pointPrev.x + spacing, pointPrev.y - offset],\n        [pointPrev.x + spacing, pointPrev.y - offset - size],\n        [pointNext.x - spacing, pointNext.y - offset - size / 2],\n      ];\n    } else {\n      // 当柱间距足够时，画完整图形并留出间隔。\n      points = [\n        [pointPrev.x + spacing, pointPrev.y - offset],\n        [pointPrev.x + spacing, pointPrev.y - offset - size],\n        [pointNext.x - spacing - headSize, pointNext.y - offset - size],\n        [pointNext.x - spacing, pointNext.y - offset - size / 2],\n        [pointNext.x - spacing - headSize, pointNext.y - offset],\n      ];\n    }\n  } else {\n    if ((totalHeight - headSize) / 2 < spacing) {\n      // 当柱间距不足容纳箭头尖与间隔时，画三角并挤占间隔\n      spacing = Math.max(1, (totalHeight - headSize) / 2);\n      points = [\n        [pointPrev.x + offset, pointPrev.y + spacing],\n        [pointPrev.x + offset + size, pointPrev.y + spacing],\n        [pointNext.x + offset + size / 2, pointNext.y - spacing],\n      ];\n    } else {\n      // 当柱间距足够时，画完整图形并留出间隔。\n      points = [\n        [pointPrev.x + offset, pointPrev.y + spacing],\n        [pointPrev.x + offset + size, pointPrev.y + spacing],\n        [pointNext.x + offset + size, pointNext.y - spacing - headSize],\n        [pointNext.x + offset + size / 2, pointNext.y - spacing],\n        [pointNext.x + offset, pointNext.y - spacing - headSize],\n      ];\n    }\n  }\n\n  group.addShape('polygon', {\n    id: `${view.id}-conversion-tag-arrow-${geometry.getElementId(elemPrev.getModel().mappingData)}`,\n    name: 'conversion-tag-arrow',\n    attrs: {\n      ...(arrow.style || {}),\n      points,\n    },\n  });\n}\n\nfunction renderTextTag(config: TagRenderConfig, elemPrev: Element, elemNext: Element): void {\n  const { view, geometry, group, options, field, horizontal } = config;\n  const { offset, size } = options;\n  if (typeof options.text === 'boolean') {\n    return;\n  }\n  const coordinate = view.getCoordinate();\n  const text = options.text?.formatter && options.text?.formatter(elemPrev.getData()[field], elemNext.getData()[field]);\n\n  const pointPrev = parsePoints(coordinate, elemPrev)[horizontal ? 3 : 0];\n  const pointNext = parsePoints(coordinate, elemNext)[horizontal ? 0 : 3];\n\n  const textShape = group.addShape('text', {\n    id: `${view.id}-conversion-tag-text-${geometry.getElementId(elemPrev.getModel().mappingData)}`,\n    name: 'conversion-tag-text',\n    attrs: {\n      ...(options.text?.style || {}),\n      text,\n      x: horizontal ? (pointPrev.x + pointNext.x) / 2 : pointPrev.x + offset + size / 2,\n      y: horizontal ? pointPrev.y - offset - size / 2 : (pointPrev.y + pointNext.y) / 2,\n    },\n  });\n\n  if (horizontal) {\n    const totalWidth = pointNext.x - pointPrev.x;\n    const { width: textWidth } = textShape.getBBox();\n    if (textWidth > totalWidth) {\n      const cWidth = textWidth / text.length;\n      const cEnd = Math.max(1, Math.ceil(totalWidth / cWidth) - 1);\n      const textAdjusted = `${text.slice(0, cEnd)}...`;\n      textShape.attr('text', textAdjusted);\n    }\n  }\n}\n\nfunction renderTag(options: TagRenderConfig, elemPrev: Element, elemNext: Element): void {\n  renderArrowTag(options, elemPrev, elemNext);\n  renderTextTag(options, elemPrev, elemNext);\n}\n\n/**\n * 返回支持转化率组件的 adaptor，适用于柱形图/条形图\n * @param field 用户转化率计算的字段\n * @param horizontal 是否水平方向的转化率\n * @param disabled 是否禁用\n */\nexport function conversionTag<O extends OptionWithConversionTag & Options>(\n  field: string,\n  horizontal = true,\n  disabled = false\n) {\n  return function (params: Params<O>): Params<O> {\n    const { options, chart } = params;\n    const { conversionTag, theme } = options;\n\n    if (conversionTag && !disabled) {\n      // 有转化率组件时，柱子宽度占比自动为 1/3\n      chart.theme(\n        deepAssign({}, isObject(theme) ? theme : getTheme(theme), {\n          columnWidthRatio: 1 / 3,\n        })\n      );\n      // 使用  shape annotation 绘制转化率组件\n      chart.annotation().shape({\n        render: (container, view) => {\n          const group = container.addGroup({\n            id: `${chart.id}-conversion-tag-group`,\n            name: 'conversion-tag-group',\n          });\n          const interval = find(chart.geometries, (geom: Geometry) => geom.type === 'interval');\n          const config: TagRenderConfig = {\n            view,\n            geometry: interval,\n            group,\n            field,\n            horizontal,\n            options: getConversionTagOptionsWithDefaults(conversionTag, horizontal),\n          };\n          const elements = horizontal ? interval.elements : interval.elements.slice().reverse();\n          each(elements, (elem: Element, idx: number) => {\n            if (idx > 0) {\n              renderTag(config, elements[idx - 1], elem);\n            }\n          });\n        },\n      });\n    }\n\n    return params;\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}