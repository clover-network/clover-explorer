{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { registerShape } from '@antv/g2';\nimport { reduce, isNumber, mix } from '@antv/util';\nimport { transform } from '../../../utils/matrix';\n\nfunction lerp(a, b, factor) {\n  return (1 - factor) * a + factor * b;\n}\n/**\n * 波浪的 attrs\n * @param cfg\n */\n\n\nfunction getFillAttrs(cfg) {\n  var attrs = __assign({\n    opacity: 1\n  }, cfg.style);\n\n  if (cfg.color && !attrs.fill) {\n    attrs.fill = cfg.color;\n  }\n\n  return attrs;\n}\n/**\n * 圆圈的 attrs\n * @param cfg\n */\n\n\nfunction getLineAttrs(cfg) {\n  var defaultAttrs = {\n    fill: '#fff',\n    fillOpacity: 0,\n    lineWidth: 2\n  };\n  var attrs = mix({}, defaultAttrs, cfg.style);\n\n  if (cfg.color && !attrs.stroke) {\n    attrs.stroke = cfg.color;\n  }\n\n  if (isNumber(cfg.opacity)) {\n    attrs.opacity = attrs.strokeOpacity = cfg.opacity;\n  }\n\n  return attrs;\n}\n/**\n * 用贝塞尔曲线模拟正弦波\n * Using Bezier curves to fit sine wave.\n * There is 4 control points for each curve of wave,\n * which is at 1/4 wave length of the sine wave.\n *\n * The control points for a wave from (a) to (d) are a-b-c-d:\n *          c *----* d\n *     b *\n *       |\n * ... a * ..................\n *\n * whose positions are a: (0, 0), b: (0.5, 0.5), c: (1, 1), d: (PI / 2, 1)\n *\n * @param x          x position of the left-most point (a)\n * @param stage      0-3, stating which part of the wave it is\n * @param waveLength wave length of the sine wave\n * @param amplitude  wave amplitude\n * @return 正弦片段曲线\n */\n\n\nfunction getWaterWavePositions(x, stage, waveLength, amplitude) {\n  if (stage === 0) {\n    return [[x + 1 / 2 * waveLength / Math.PI / 2, amplitude / 2], [x + 1 / 2 * waveLength / Math.PI, amplitude], [x + waveLength / 4, amplitude]];\n  }\n\n  if (stage === 1) {\n    return [[x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2), amplitude], [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1), amplitude / 2], [x + waveLength / 4, 0]];\n  }\n\n  if (stage === 2) {\n    return [[x + 1 / 2 * waveLength / Math.PI / 2, -amplitude / 2], [x + 1 / 2 * waveLength / Math.PI, -amplitude], [x + waveLength / 4, -amplitude]];\n  }\n\n  return [[x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2), -amplitude], [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1), -amplitude / 2], [x + waveLength / 4, 0]];\n}\n/**\n * 获取水波路径\n * @param radius          半径\n * @param waterLevel      水位\n * @param waveLength      波长\n * @param phase           相位\n * @param amplitude       震幅\n * @param cx              圆心x\n * @param cy              圆心y\n * @return path            路径\n * @reference http://gitlab.alipay-inc.com/datavis/g6/blob/1.2.0/src/graph/utils/path.js#L135\n */\n\n\nfunction getWaterWavePath(radius, waterLevel, waveLength, phase, amplitude, cx, cy) {\n  var curves = Math.ceil(2 * radius / waveLength * 4) * 2;\n  var path = [];\n  var _phase = phase; // map phase to [-Math.PI * 2, 0]\n\n  while (_phase < -Math.PI * 2) {\n    _phase += Math.PI * 2;\n  }\n\n  while (_phase > 0) {\n    _phase -= Math.PI * 2;\n  }\n\n  _phase = _phase / Math.PI / 2 * waveLength;\n  var left = cx - radius + _phase - radius * 2;\n  /**\n   * top-left corner as start point\n   *\n   * draws this point\n   *  |\n   * \\|/\n   *  ~~~~~~~~\n   *  |      |\n   *  +------+\n   */\n\n  path.push(['M', left, waterLevel]);\n  /**\n   * top wave\n   *\n   * ~~~~~~~~ <- draws this sine wave\n   * |      |\n   * +------+\n   */\n\n  var waveRight = 0;\n\n  for (var c = 0; c < curves; ++c) {\n    var stage = c % 4;\n    var pos = getWaterWavePositions(c * waveLength / 4, stage, waveLength, amplitude);\n    path.push(['C', pos[0][0] + left, -pos[0][1] + waterLevel, pos[1][0] + left, -pos[1][1] + waterLevel, pos[2][0] + left, -pos[2][1] + waterLevel]);\n\n    if (c === curves - 1) {\n      waveRight = pos[2][0];\n    }\n  }\n  /**\n   * top-right corner\n   *\n   *                       ~~~~~~~~\n   * 3. draws this line -> |      | <- 1. draws this line\n   *                       +------+\n   *                          ^\n   *                          |\n   *                  2. draws this line\n   */\n\n\n  path.push(['L', waveRight + left, cy + radius]);\n  path.push(['L', left, cy + radius]);\n  path.push(['Z']); // path.push(['L', left, waterLevel]);\n\n  return path;\n}\n/**\n * 添加水波\n * @param x           中心x\n * @param y           中心y\n * @param level       水位等级 0～1\n * @param waveCount   水波数\n * @param waveAttrs      色值\n * @param group       图组\n * @param clip        用于剪切的图形\n * @param radius      绘制图形的高度\n */\n\n\nfunction addWaterWave(x, y, level, waveCount, waveAttrs, group, clip, radius) {\n  var fill = waveAttrs.fill,\n      opacity = waveAttrs.opacity;\n  var bbox = clip.getBBox();\n  var width = bbox.maxX - bbox.minX;\n  var height = bbox.maxY - bbox.minY;\n  var duration = 5000;\n\n  for (var i = 0; i < waveCount; i++) {\n    var factor = waveCount <= 1 ? 0 : i / (waveCount - 1);\n    var wave = group.addShape('path', {\n      name: \"wave-path-\" + i,\n      attrs: {\n        path: getWaterWavePath(radius, bbox.minY + height * level, width / 4, 0, width / lerp(56, 64, factor), x, y),\n        fill: fill,\n        opacity: lerp(0.6, 0.3, factor) * opacity\n      }\n    });\n\n    try {\n      var matrix = transform([['t', width / 2, 0]]);\n      wave.animate({\n        matrix: matrix\n      }, {\n        duration: lerp(duration, 0.7 * duration, factor),\n        repeat: true\n      });\n    } catch (e) {\n      // TODO off-screen canvas 中动画会找不到 canvas\n      console.error('off-screen group animate error!');\n    }\n  }\n}\n\nregisterShape('interval', 'liquid-fill-gauge', {\n  draw: function (cfg, container) {\n    var cx = 0.5;\n    var cy = 0.5; // 需要更好的传参方式\n\n    var radio = isNumber(cfg.customInfo.radius) ? cfg.customInfo.radius : 0.9; // 获取最小 minX\n\n    var minX = reduce(cfg.points, function (r, p) {\n      return Math.min(r, p.x);\n    }, Infinity);\n    var center = this.parsePoint({\n      x: cx,\n      y: cy\n    });\n    var minXPoint = this.parsePoint({\n      x: minX,\n      y: cy\n    });\n    var halfWidth = center.x - minXPoint.x; // 保证半径是 画布宽高最小值的 radius 值\n\n    var radius = Math.min(halfWidth, minXPoint.y * radio);\n    var waveAttrs = getFillAttrs(cfg);\n    var waves = container.addGroup({\n      name: 'waves'\n    });\n    waves.setClip({\n      type: 'circle',\n      attrs: {\n        x: center.x,\n        y: center.y,\n        r: radius\n      }\n    });\n    var clipCircle = waves.get('clipShape');\n    addWaterWave(center.x, center.y, 1 - cfg.points[1].y, // cfg.y / (2 * cp.y),\n    3, waveAttrs, waves, clipCircle, radius * 4);\n    container.addShape('circle', {\n      name: 'wrap',\n      attrs: mix(getLineAttrs(cfg), {\n        x: center.x,\n        y: center.y,\n        r: radius,\n        fill: 'transparent'\n      })\n    });\n    return container;\n  }\n});","map":{"version":3,"sources":["../../../../src/plots/liquid/shapes/liquid.ts"],"names":[],"mappings":"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","sourcesContent":["import { registerShape } from '@antv/g2';\nimport { IGroup } from '@antv/g-base';\nimport { reduce, isNumber, mix } from '@antv/util';\nimport { transform } from '../../../utils/matrix';\nimport { Point } from '../../../types';\n\nfunction lerp(a: number, b: number, factor: number) {\n  return (1 - factor) * a + factor * b;\n}\n\n/**\n * 波浪的 attrs\n * @param cfg\n */\nfunction getFillAttrs(cfg) {\n  const attrs = { opacity: 1, ...cfg.style };\n\n  if (cfg.color && !attrs.fill) {\n    attrs.fill = cfg.color;\n  }\n\n  return attrs;\n}\n\n/**\n * 圆圈的 attrs\n * @param cfg\n */\nfunction getLineAttrs(cfg) {\n  const defaultAttrs = {\n    fill: '#fff',\n    fillOpacity: 0,\n    lineWidth: 2,\n  };\n  const attrs = mix({}, defaultAttrs, cfg.style);\n\n  if (cfg.color && !attrs.stroke) {\n    attrs.stroke = cfg.color;\n  }\n  if (isNumber(cfg.opacity)) {\n    attrs.opacity = attrs.strokeOpacity = cfg.opacity;\n  }\n\n  return attrs;\n}\n\n/**\n * 用贝塞尔曲线模拟正弦波\n * Using Bezier curves to fit sine wave.\n * There is 4 control points for each curve of wave,\n * which is at 1/4 wave length of the sine wave.\n *\n * The control points for a wave from (a) to (d) are a-b-c-d:\n *          c *----* d\n *     b *\n *       |\n * ... a * ..................\n *\n * whose positions are a: (0, 0), b: (0.5, 0.5), c: (1, 1), d: (PI / 2, 1)\n *\n * @param x          x position of the left-most point (a)\n * @param stage      0-3, stating which part of the wave it is\n * @param waveLength wave length of the sine wave\n * @param amplitude  wave amplitude\n * @return 正弦片段曲线\n */\nfunction getWaterWavePositions(x: number, stage: number, waveLength: number, amplitude: number) {\n  if (stage === 0) {\n    return [\n      [x + ((1 / 2) * waveLength) / Math.PI / 2, amplitude / 2],\n      [x + ((1 / 2) * waveLength) / Math.PI, amplitude],\n      [x + waveLength / 4, amplitude],\n    ];\n  }\n  if (stage === 1) {\n    return [\n      [x + (((1 / 2) * waveLength) / Math.PI / 2) * (Math.PI - 2), amplitude],\n      [x + (((1 / 2) * waveLength) / Math.PI / 2) * (Math.PI - 1), amplitude / 2],\n      [x + waveLength / 4, 0],\n    ];\n  }\n  if (stage === 2) {\n    return [\n      [x + ((1 / 2) * waveLength) / Math.PI / 2, -amplitude / 2],\n      [x + ((1 / 2) * waveLength) / Math.PI, -amplitude],\n      [x + waveLength / 4, -amplitude],\n    ];\n  }\n  return [\n    [x + (((1 / 2) * waveLength) / Math.PI / 2) * (Math.PI - 2), -amplitude],\n    [x + (((1 / 2) * waveLength) / Math.PI / 2) * (Math.PI - 1), -amplitude / 2],\n    [x + waveLength / 4, 0],\n  ];\n}\n/**\n * 获取水波路径\n * @param radius          半径\n * @param waterLevel      水位\n * @param waveLength      波长\n * @param phase           相位\n * @param amplitude       震幅\n * @param cx              圆心x\n * @param cy              圆心y\n * @return path            路径\n * @reference http://gitlab.alipay-inc.com/datavis/g6/blob/1.2.0/src/graph/utils/path.js#L135\n */\nfunction getWaterWavePath(\n  radius: number,\n  waterLevel: number,\n  waveLength: number,\n  phase: number,\n  amplitude: number,\n  cx: number,\n  cy: number\n) {\n  const curves = Math.ceil(((2 * radius) / waveLength) * 4) * 2;\n  const path = [];\n  let _phase = phase;\n\n  // map phase to [-Math.PI * 2, 0]\n  while (_phase < -Math.PI * 2) {\n    _phase += Math.PI * 2;\n  }\n  while (_phase > 0) {\n    _phase -= Math.PI * 2;\n  }\n  _phase = (_phase / Math.PI / 2) * waveLength;\n\n  const left = cx - radius + _phase - radius * 2;\n  /**\n   * top-left corner as start point\n   *\n   * draws this point\n   *  |\n   * \\|/\n   *  ~~~~~~~~\n   *  |      |\n   *  +------+\n   */\n  path.push(['M', left, waterLevel]);\n\n  /**\n   * top wave\n   *\n   * ~~~~~~~~ <- draws this sine wave\n   * |      |\n   * +------+\n   */\n  let waveRight = 0;\n  for (let c = 0; c < curves; ++c) {\n    const stage = c % 4;\n    const pos = getWaterWavePositions((c * waveLength) / 4, stage, waveLength, amplitude);\n    path.push([\n      'C',\n      pos[0][0] + left,\n      -pos[0][1] + waterLevel,\n      pos[1][0] + left,\n      -pos[1][1] + waterLevel,\n      pos[2][0] + left,\n      -pos[2][1] + waterLevel,\n    ]);\n\n    if (c === curves - 1) {\n      waveRight = pos[2][0];\n    }\n  }\n\n  /**\n   * top-right corner\n   *\n   *                       ~~~~~~~~\n   * 3. draws this line -> |      | <- 1. draws this line\n   *                       +------+\n   *                          ^\n   *                          |\n   *                  2. draws this line\n   */\n  path.push(['L', waveRight + left, cy + radius]);\n  path.push(['L', left, cy + radius]);\n  path.push(['Z']);\n  // path.push(['L', left, waterLevel]);\n  return path;\n}\n\n/**\n * 添加水波\n * @param x           中心x\n * @param y           中心y\n * @param level       水位等级 0～1\n * @param waveCount   水波数\n * @param waveAttrs      色值\n * @param group       图组\n * @param clip        用于剪切的图形\n * @param radius      绘制图形的高度\n */\nfunction addWaterWave(x, y, level, waveCount, waveAttrs, group, clip, radius) {\n  const { fill, opacity } = waveAttrs;\n  const bbox = clip.getBBox();\n  const width = bbox.maxX - bbox.minX;\n  const height = bbox.maxY - bbox.minY;\n  const duration = 5000;\n  for (let i = 0; i < waveCount; i++) {\n    const factor = waveCount <= 1 ? 0 : i / (waveCount - 1);\n    const wave = group.addShape('path', {\n      name: `wave-path-${i}`,\n      attrs: {\n        path: getWaterWavePath(radius, bbox.minY + height * level, width / 4, 0, width / lerp(56, 64, factor), x, y),\n        fill,\n        opacity: lerp(0.6, 0.3, factor) * opacity,\n      },\n    });\n\n    try {\n      const matrix = transform([['t', width / 2, 0]]);\n      wave.animate(\n        { matrix },\n        {\n          duration: lerp(duration, 0.7 * duration, factor),\n          repeat: true,\n        }\n      );\n    } catch (e) {\n      // TODO off-screen canvas 中动画会找不到 canvas\n      console.error('off-screen group animate error!');\n    }\n  }\n}\n\nregisterShape('interval', 'liquid-fill-gauge', {\n  draw(cfg: any, container: IGroup) {\n    const cx = 0.5;\n    const cy = 0.5;\n\n    // 需要更好的传参方式\n    const radio = isNumber(cfg.customInfo.radius) ? cfg.customInfo.radius : 0.9;\n\n    // 获取最小 minX\n    const minX = reduce(\n      cfg.points as Point[],\n      (r: number, p: Point) => {\n        return Math.min(r, p.x);\n      },\n      Infinity\n    );\n\n    const center = this.parsePoint({ x: cx, y: cy });\n    const minXPoint = this.parsePoint({ x: minX, y: cy });\n    const halfWidth = center.x - minXPoint.x;\n\n    // 保证半径是 画布宽高最小值的 radius 值\n    const radius = Math.min(halfWidth, minXPoint.y * radio);\n    const waveAttrs = getFillAttrs(cfg);\n\n    const waves = container.addGroup({\n      name: 'waves',\n    });\n\n    waves.setClip({\n      type: 'circle',\n      attrs: {\n        x: center.x,\n        y: center.y,\n        r: radius,\n      },\n    });\n    const clipCircle = waves.get('clipShape');\n    addWaterWave(\n      center.x,\n      center.y,\n      1 - (cfg.points[1] as Point).y, // cfg.y / (2 * cp.y),\n      3,\n      waveAttrs,\n      waves,\n      clipCircle,\n      radius * 4\n    );\n\n    container.addShape('circle', {\n      name: 'wrap',\n      attrs: mix(getLineAttrs(cfg), {\n        x: center.x,\n        y: center.y,\n        r: radius,\n        fill: 'transparent',\n      }),\n    });\n\n    return container;\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}