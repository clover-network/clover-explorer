{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isSamePoint = exports.mergeRegion = exports.intersectRect = exports.inBox = exports.distance = exports.getPixelRatio = void 0;\n\nfunction getPixelRatio() {\n  return window ? window.devicePixelRatio : 1;\n}\n\nexports.getPixelRatio = getPixelRatio;\n/**\n * 两点之间的距离\n * @param {number} x1 起始点 x\n * @param {number} y1 起始点 y\n * @param {number} x2 结束点 x\n * @param {number} y2 结束点 y\n */\n\nfunction distance(x1, y1, x2, y2) {\n  var dx = x1 - x2;\n  var dy = y1 - y2;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nexports.distance = distance;\n/**\n * 是否在包围盒内\n * @param {number} minX   包围盒开始的点 x\n * @param {number} minY   包围盒开始的点 y\n * @param {number} width  宽度\n * @param {number} height 高度\n * @param {[type]} x      检测点的 x\n * @param {[type]} y      监测点的 y\n */\n\nfunction inBox(minX, minY, width, height, x, y) {\n  return x >= minX && x <= minX + width && y >= minY && y <= minY + height;\n}\n\nexports.inBox = inBox;\n\nfunction intersectRect(box1, box2) {\n  return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);\n}\n\nexports.intersectRect = intersectRect; // 合并两个区域\n\nfunction mergeRegion(region1, region2) {\n  if (!region1 || !region2) {\n    return region1 || region2;\n  }\n\n  return {\n    minX: Math.min(region1.minX, region2.minX),\n    minY: Math.min(region1.minY, region2.minY),\n    maxX: Math.max(region1.maxX, region2.maxX),\n    maxY: Math.max(region1.maxY, region2.maxY)\n  };\n}\n\nexports.mergeRegion = mergeRegion;\n/**\n * 判断两个点是否重合，点坐标的格式为 [x, y]\n * @param {Array} point1 第一个点\n * @param {Array} point2 第二个点\n */\n\nfunction isSamePoint(point1, point2) {\n  return point1[0] === point2[0] && point1[1] === point2[1];\n}\n\nexports.isSamePoint = isSamePoint;\n\nvar is_nil_1 = require(\"@antv/util/lib/is-nil\");\n\nObject.defineProperty(exports, \"isNil\", {\n  enumerable: true,\n  get: function () {\n    return is_nil_1.default;\n  }\n});\n\nvar is_string_1 = require(\"@antv/util/lib/is-string\");\n\nObject.defineProperty(exports, \"isString\", {\n  enumerable: true,\n  get: function () {\n    return is_string_1.default;\n  }\n});\n\nvar is_function_1 = require(\"@antv/util/lib/is-function\");\n\nObject.defineProperty(exports, \"isFunction\", {\n  enumerable: true,\n  get: function () {\n    return is_function_1.default;\n  }\n});\n\nvar is_array_1 = require(\"@antv/util/lib/is-array\");\n\nObject.defineProperty(exports, \"isArray\", {\n  enumerable: true,\n  get: function () {\n    return is_array_1.default;\n  }\n});\n\nvar each_1 = require(\"@antv/util/lib/each\");\n\nObject.defineProperty(exports, \"each\", {\n  enumerable: true,\n  get: function () {\n    return each_1.default;\n  }\n});\n\nvar to_radian_1 = require(\"@antv/util/lib/to-radian\");\n\nObject.defineProperty(exports, \"toRadian\", {\n  enumerable: true,\n  get: function () {\n    return to_radian_1.default;\n  }\n});\n\nvar mod_1 = require(\"@antv/util/lib/mod\");\n\nObject.defineProperty(exports, \"mod\", {\n  enumerable: true,\n  get: function () {\n    return mod_1.default;\n  }\n});\n\nvar is_number_equal_1 = require(\"@antv/util/lib/is-number-equal\");\n\nObject.defineProperty(exports, \"isNumberEqual\", {\n  enumerable: true,\n  get: function () {\n    return is_number_equal_1.default;\n  }\n});\n\nvar request_animation_frame_1 = require(\"@antv/util/lib/request-animation-frame\");\n\nObject.defineProperty(exports, \"requestAnimationFrame\", {\n  enumerable: true,\n  get: function () {\n    return request_animation_frame_1.default;\n  }\n});\n\nvar clear_animation_frame_1 = require(\"@antv/util/lib/clear-animation-frame\");\n\nObject.defineProperty(exports, \"clearAnimationFrame\", {\n  enumerable: true,\n  get: function () {\n    return clear_animation_frame_1.default;\n  }\n});","map":{"version":3,"sources":["../../src/util/util.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isSamePoint = exports.mergeRegion = exports.intersectRect = exports.inBox = exports.distance = exports.getPixelRatio = void 0;\nfunction getPixelRatio() {\n    return window ? window.devicePixelRatio : 1;\n}\nexports.getPixelRatio = getPixelRatio;\n/**\n * 两点之间的距离\n * @param {number} x1 起始点 x\n * @param {number} y1 起始点 y\n * @param {number} x2 结束点 x\n * @param {number} y2 结束点 y\n */\nfunction distance(x1, y1, x2, y2) {\n    var dx = x1 - x2;\n    var dy = y1 - y2;\n    return Math.sqrt(dx * dx + dy * dy);\n}\nexports.distance = distance;\n/**\n * 是否在包围盒内\n * @param {number} minX   包围盒开始的点 x\n * @param {number} minY   包围盒开始的点 y\n * @param {number} width  宽度\n * @param {number} height 高度\n * @param {[type]} x      检测点的 x\n * @param {[type]} y      监测点的 y\n */\nfunction inBox(minX, minY, width, height, x, y) {\n    return x >= minX && x <= minX + width && y >= minY && y <= minY + height;\n}\nexports.inBox = inBox;\nfunction intersectRect(box1, box2) {\n    return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);\n}\nexports.intersectRect = intersectRect;\n// 合并两个区域\nfunction mergeRegion(region1, region2) {\n    if (!region1 || !region2) {\n        return region1 || region2;\n    }\n    return {\n        minX: Math.min(region1.minX, region2.minX),\n        minY: Math.min(region1.minY, region2.minY),\n        maxX: Math.max(region1.maxX, region2.maxX),\n        maxY: Math.max(region1.maxY, region2.maxY),\n    };\n}\nexports.mergeRegion = mergeRegion;\n/**\n * 判断两个点是否重合，点坐标的格式为 [x, y]\n * @param {Array} point1 第一个点\n * @param {Array} point2 第二个点\n */\nfunction isSamePoint(point1, point2) {\n    return point1[0] === point2[0] && point1[1] === point2[1];\n}\nexports.isSamePoint = isSamePoint;\nvar is_nil_1 = require(\"@antv/util/lib/is-nil\");\nObject.defineProperty(exports, \"isNil\", { enumerable: true, get: function () { return is_nil_1.default; } });\nvar is_string_1 = require(\"@antv/util/lib/is-string\");\nObject.defineProperty(exports, \"isString\", { enumerable: true, get: function () { return is_string_1.default; } });\nvar is_function_1 = require(\"@antv/util/lib/is-function\");\nObject.defineProperty(exports, \"isFunction\", { enumerable: true, get: function () { return is_function_1.default; } });\nvar is_array_1 = require(\"@antv/util/lib/is-array\");\nObject.defineProperty(exports, \"isArray\", { enumerable: true, get: function () { return is_array_1.default; } });\nvar each_1 = require(\"@antv/util/lib/each\");\nObject.defineProperty(exports, \"each\", { enumerable: true, get: function () { return each_1.default; } });\nvar to_radian_1 = require(\"@antv/util/lib/to-radian\");\nObject.defineProperty(exports, \"toRadian\", { enumerable: true, get: function () { return to_radian_1.default; } });\nvar mod_1 = require(\"@antv/util/lib/mod\");\nObject.defineProperty(exports, \"mod\", { enumerable: true, get: function () { return mod_1.default; } });\nvar is_number_equal_1 = require(\"@antv/util/lib/is-number-equal\");\nObject.defineProperty(exports, \"isNumberEqual\", { enumerable: true, get: function () { return is_number_equal_1.default; } });\nvar request_animation_frame_1 = require(\"@antv/util/lib/request-animation-frame\");\nObject.defineProperty(exports, \"requestAnimationFrame\", { enumerable: true, get: function () { return request_animation_frame_1.default; } });\nvar clear_animation_frame_1 = require(\"@antv/util/lib/clear-animation-frame\");\nObject.defineProperty(exports, \"clearAnimationFrame\", { enumerable: true, get: function () { return clear_animation_frame_1.default; } });\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"script"}