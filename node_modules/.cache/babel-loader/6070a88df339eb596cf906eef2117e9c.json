{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport { Animated, Dimensions, View } from 'react-native';\nimport { WithTheme } from '../style';\nimport ProgressStyles from './style/index';\n\nvar Progress = function (_React$Component) {\n  _inherits(Progress, _React$Component);\n\n  function Progress(props) {\n    _classCallCheck(this, Progress);\n\n    var _this = _possibleConstructorReturn(this, (Progress.__proto__ || Object.getPrototypeOf(Progress)).call(this, props));\n\n    _this.onLayout = function (e) {\n      _this.setState({\n        wrapWidth: e.nativeEvent.layout.width\n      });\n    };\n\n    _this.normalPercent = function (percent) {\n      var widthPercent = 0;\n\n      if (percent !== undefined && percent > 0) {\n        widthPercent = percent > 100 ? 100 : percent;\n      }\n\n      return widthPercent;\n    };\n\n    _this.getWidth = function () {\n      var percent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props.percent;\n      return _this.state.wrapWidth * (_this.normalPercent(percent) / 100);\n    };\n\n    _this.state = {\n      wrapWidth: props.wrapWidth || Dimensions.get('window').width,\n      percentage: new Animated.Value(0)\n    };\n    return _this;\n  }\n\n  _createClass(Progress, [{\n    key: 'UNSAFE_componentWillReceiveProps',\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (nextProps.wrapWidth !== this.props.wrapWidth) {\n        this.setState({\n          wrapWidth: nextProps.wrapWidth\n        });\n      }\n\n      if (this.props.appearTransition && nextProps.percent !== this.props.percent) {\n        this.setState({\n          percentage: new Animated.Value(this.getWidth(nextProps.percent))\n        });\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (this.props.appearTransition) {\n        this.state.percentage.setValue(0);\n        Animated.timing(this.state.percentage, {\n          toValue: this.getWidth(),\n          duration: 1000,\n          useNativeDriver: true\n        }).start();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          position = _props.position,\n          unfilled = _props.unfilled,\n          style = _props.style,\n          barStyle = _props.barStyle;\n      var percentStyle = {\n        width: this.getWidth(),\n        height: 0\n      };\n      return React.createElement(WithTheme, {\n        styles: this.props.styles,\n        themeStyles: ProgressStyles\n      }, function (styles) {\n        var child = React.createElement(View, {\n          style: [styles.progressBar, percentStyle, barStyle]\n        });\n\n        if (_this2.props.appearTransition) {\n          percentStyle.width = _this2.state.percentage;\n          child = React.createElement(Animated.View, {\n            style: [styles.progressBar, percentStyle, barStyle]\n          });\n        }\n\n        var outerStyle = [styles.progressOuter, position === 'fixed' ? {\n          position: 'absolute',\n          top: 0\n        } : {}, !unfilled ? {\n          backgroundColor: 'transparent'\n        } : {}, style];\n        return React.createElement(View, {\n          onLayout: _this2.onLayout,\n          style: outerStyle\n        }, child);\n      });\n    }\n  }]);\n\n  return Progress;\n}(React.Component);\n\nexport default Progress;\nProgress.defaultProps = {\n  percent: 0,\n  position: 'normal',\n  unfilled: true,\n  appearTransition: false\n};","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@ant-design/react-native/es/progress/index.js"],"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","Animated","Dimensions","View","WithTheme","ProgressStyles","Progress","_React$Component","props","_this","__proto__","Object","getPrototypeOf","call","onLayout","e","setState","wrapWidth","nativeEvent","layout","width","normalPercent","percent","widthPercent","undefined","getWidth","arguments","length","state","get","percentage","Value","key","value","UNSAFE_componentWillReceiveProps","nextProps","appearTransition","componentDidMount","setValue","timing","toValue","duration","useNativeDriver","start","render","_this2","_props","position","unfilled","style","barStyle","percentStyle","height","createElement","styles","themeStyles","child","progressBar","outerStyle","progressOuter","top","backgroundColor","Component","defaultProps"],"mappings":"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","sourcesContent":["import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport { Animated, Dimensions, View } from 'react-native';\nimport { WithTheme } from '../style';\nimport ProgressStyles from './style/index';\n\nvar Progress = function (_React$Component) {\n    _inherits(Progress, _React$Component);\n\n    function Progress(props) {\n        _classCallCheck(this, Progress);\n\n        var _this = _possibleConstructorReturn(this, (Progress.__proto__ || Object.getPrototypeOf(Progress)).call(this, props));\n\n        _this.onLayout = function (e) {\n            _this.setState({\n                wrapWidth: e.nativeEvent.layout.width\n            });\n        };\n        _this.normalPercent = function (percent) {\n            var widthPercent = 0;\n            if (percent !== undefined && percent > 0) {\n                widthPercent = percent > 100 ? 100 : percent;\n            }\n            return widthPercent;\n        };\n        _this.getWidth = function () {\n            var percent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props.percent;\n\n            return _this.state.wrapWidth * (_this.normalPercent(percent) / 100);\n        };\n        _this.state = {\n            wrapWidth: props.wrapWidth || Dimensions.get('window').width,\n            percentage: new Animated.Value(0)\n        };\n        return _this;\n    }\n\n    _createClass(Progress, [{\n        key: 'UNSAFE_componentWillReceiveProps',\n        value: function UNSAFE_componentWillReceiveProps(nextProps) {\n            if (nextProps.wrapWidth !== this.props.wrapWidth) {\n                this.setState({ wrapWidth: nextProps.wrapWidth });\n            }\n            if (this.props.appearTransition && nextProps.percent !== this.props.percent) {\n                this.setState({\n                    percentage: new Animated.Value(this.getWidth(nextProps.percent))\n                });\n            }\n        }\n    }, {\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            if (this.props.appearTransition) {\n                this.state.percentage.setValue(0);\n                Animated.timing(this.state.percentage, {\n                    toValue: this.getWidth(),\n                    duration: 1000,\n                    useNativeDriver: true\n                }).start();\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var _props = this.props,\n                position = _props.position,\n                unfilled = _props.unfilled,\n                style = _props.style,\n                barStyle = _props.barStyle;\n\n            var percentStyle = {\n                width: this.getWidth(),\n                height: 0\n            };\n            return React.createElement(\n                WithTheme,\n                { styles: this.props.styles, themeStyles: ProgressStyles },\n                function (styles) {\n                    var child = React.createElement(View, { style: [styles.progressBar, percentStyle, barStyle] });\n                    if (_this2.props.appearTransition) {\n                        percentStyle.width = _this2.state.percentage;\n                        child = React.createElement(Animated.View, { style: [styles.progressBar, percentStyle, barStyle] });\n                    }\n                    var outerStyle = [styles.progressOuter, position === 'fixed' ? { position: 'absolute', top: 0 } : {}, !unfilled ? { backgroundColor: 'transparent' } : {}, style];\n                    return React.createElement(\n                        View,\n                        { onLayout: _this2.onLayout, style: outerStyle },\n                        child\n                    );\n                }\n            );\n        }\n    }]);\n\n    return Progress;\n}(React.Component);\n\nexport default Progress;\n\nProgress.defaultProps = {\n    percent: 0,\n    position: 'normal',\n    unfilled: true,\n    appearTransition: false\n};"]},"metadata":{},"sourceType":"module"}