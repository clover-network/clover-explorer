{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar Path_1 = require(\"./Path\");\n\nvar CompoundPath = function (_super) {\n  tslib_1.__extends(CompoundPath, _super);\n\n  function CompoundPath() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'compound';\n    return _this;\n  }\n\n  CompoundPath.prototype._updatePathDirty = function () {\n    var paths = this.shape.paths;\n    var dirtyPath = this.shapeChanged();\n\n    for (var i = 0; i < paths.length; i++) {\n      dirtyPath = dirtyPath || paths[i].shapeChanged();\n    }\n\n    if (dirtyPath) {\n      this.dirtyShape();\n    }\n  };\n\n  CompoundPath.prototype.beforeBrush = function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale();\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1], paths[i].segmentIgnoreThreshold);\n    }\n  };\n\n  CompoundPath.prototype.buildPath = function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  };\n\n  CompoundPath.prototype.afterBrush = function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].pathUpdated();\n    }\n  };\n\n  CompoundPath.prototype.getBoundingRect = function () {\n    this._updatePathDirty.call(this);\n\n    return Path_1[\"default\"].prototype.getBoundingRect.call(this);\n  };\n\n  return CompoundPath;\n}(Path_1[\"default\"]);\n\nexports[\"default\"] = CompoundPath;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/zrender/lib/graphic/CompoundPath.js"],"names":["exports","__esModule","tslib_1","require","Path_1","CompoundPath","_super","__extends","_this","apply","arguments","type","prototype","_updatePathDirty","paths","shape","dirtyPath","shapeChanged","i","length","dirtyShape","beforeBrush","scale","getGlobalScale","path","createPathProxy","setScale","segmentIgnoreThreshold","buildPath","ctx","afterBrush","pathUpdated","getBoundingRect","call"],"mappings":"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","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar tslib_1 = require(\"tslib\");\nvar Path_1 = require(\"./Path\");\nvar CompoundPath = (function (_super) {\n    tslib_1.__extends(CompoundPath, _super);\n    function CompoundPath() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'compound';\n        return _this;\n    }\n    CompoundPath.prototype._updatePathDirty = function () {\n        var paths = this.shape.paths;\n        var dirtyPath = this.shapeChanged();\n        for (var i = 0; i < paths.length; i++) {\n            dirtyPath = dirtyPath || paths[i].shapeChanged();\n        }\n        if (dirtyPath) {\n            this.dirtyShape();\n        }\n    };\n    CompoundPath.prototype.beforeBrush = function () {\n        this._updatePathDirty();\n        var paths = this.shape.paths || [];\n        var scale = this.getGlobalScale();\n        for (var i = 0; i < paths.length; i++) {\n            if (!paths[i].path) {\n                paths[i].createPathProxy();\n            }\n            paths[i].path.setScale(scale[0], scale[1], paths[i].segmentIgnoreThreshold);\n        }\n    };\n    CompoundPath.prototype.buildPath = function (ctx, shape) {\n        var paths = shape.paths || [];\n        for (var i = 0; i < paths.length; i++) {\n            paths[i].buildPath(ctx, paths[i].shape, true);\n        }\n    };\n    CompoundPath.prototype.afterBrush = function () {\n        var paths = this.shape.paths || [];\n        for (var i = 0; i < paths.length; i++) {\n            paths[i].pathUpdated();\n        }\n    };\n    CompoundPath.prototype.getBoundingRect = function () {\n        this._updatePathDirty.call(this);\n        return Path_1[\"default\"].prototype.getBoundingRect.call(this);\n    };\n    return CompoundPath;\n}(Path_1[\"default\"]));\nexports[\"default\"] = CompoundPath;\n"]},"metadata":{},"sourceType":"script"}