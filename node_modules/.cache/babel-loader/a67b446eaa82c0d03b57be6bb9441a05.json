{"ast":null,"code":"import { isArray, isObject, map } from '@antv/util';\nimport { interaction, animation, theme } from '../../adaptor/common';\nimport { findGeometry, flow, pick, deepAssign } from '../../utils';\nimport { AXIS_META_CONFIG_KEYS } from '../../constant';\nimport { Y_FIELD, TREND_FIELD, TREND_UP, TREND_DOWN, TREND_COLOR } from './constant';\n/**\n * 图表配置处理\n * @param params\n */\n\nfunction field(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xField = options.xField,\n      yField = options.yField;\n  var data = options.data; // 加工处理源数据\n\n  data = map(data, function (obj) {\n    if (isArray(yField)) {\n      var open_1 = yField[0],\n          close_1 = yField[1],\n          high = yField[2],\n          low = yField[3];\n      obj[TREND_FIELD] = obj[open_1] <= obj[close_1] ? TREND_UP : TREND_DOWN;\n      obj[Y_FIELD] = [obj[open_1], obj[close_1], obj[high], obj[low]];\n    }\n\n    return obj;\n  });\n  chart.data(data);\n  var geometry = chart.schema().position(xField + \"*\" + Y_FIELD).shape('candle');\n  geometry.color(TREND_FIELD, TREND_COLOR);\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\n\n\nexport function meta(params) {\n  var _a, _b;\n\n  var chart = params.chart,\n      options = params.options;\n  var meta = options.meta,\n      xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField;\n  var baseMeta = (_a = {}, _a[xField] = {\n    type: 'timeCat',\n    tickCount: 6\n  }, _a[TREND_FIELD] = {\n    values: [TREND_UP, TREND_DOWN]\n  }, _a);\n  var scales = deepAssign(baseMeta, meta, (_b = {}, _b[xField] = pick(xAxis, AXIS_META_CONFIG_KEYS), _b[Y_FIELD] = pick(yAxis, AXIS_META_CONFIG_KEYS), _b));\n  chart.scale(scales);\n  return params;\n}\n/**\n * axis 配置\n * @param params\n */\n\nexport function axis(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField; // 为 false 则是不显示轴\n\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(Y_FIELD, false);\n  } else {\n    chart.axis(Y_FIELD, yAxis);\n  }\n\n  return params;\n}\n/**\n * tooltip 配置\n * @param params\n */\n\nexport function tooltip(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xField = options.xField,\n      yField = options.yField,\n      _a = options.meta,\n      meta = _a === void 0 ? {} : _a,\n      _b = options.tooltip,\n      tooltip = _b === void 0 ? {} : _b;\n  var geometry = findGeometry(chart, 'schema');\n  var open = yField[0],\n      close = yField[1],\n      high = yField[2],\n      low = yField[3];\n  var openAlias = meta[open] ? meta[open].alias || open : open;\n  var closeAlias = meta[close] ? meta[close].alias || open : close;\n  var highAlias = meta[high] ? meta[high].alias || high : high;\n  var lowAlias = meta[low] ? meta[low].alias || low : low; // geom级别tooltip\n\n  var baseGeomTooltipOptions = {\n    fields: [xField, open, close, high, low],\n    callback: function (xFieldVal, openVal, closeVal, highVal, lowVal) {\n      var tpl = {\n        name: xFieldVal,\n        value: \"\\n          <br><span data-label=\\\"\" + openAlias + \"\\\" style=\\\"padding-left: 16px\\\">\" + openAlias + \"\\uFF1A\" + openVal + \"</span>\\n          <br><span data-label=\\\"\" + closeAlias + \"\\\" style=\\\"padding-left: 16px\\\">\" + closeAlias + \"\\uFF1A\" + closeVal + \"</span>\\n          <br><span data-label=\\\"\" + highAlias + \"\\\" style=\\\"padding-left: 16px\\\">\" + highAlias + \"\\uFF1A\" + highVal + \"</span>\\n          <br><span data-label=\\\"\" + lowAlias + \"\\\" style=\\\"padding-left: 16px\\\">\" + lowAlias + \"\\uFF1A\" + lowVal + \"</span>\\n        \"\n      };\n      return tpl;\n    }\n  }; // chart级别tooltip， text格式化显示内容\n\n  var baseTooltipOptions = {\n    crosshairs: {\n      text: function (type, defaultContent, items) {\n        var tooltipCrosshairsText = {\n          position: 'end'\n        };\n\n        if (type === 'x') {\n          var item = items[0];\n          tooltipCrosshairsText['content'] = item ? item.data[xField] : defaultContent;\n        } else {\n          tooltipCrosshairsText['content'] = defaultContent;\n        }\n\n        return tooltipCrosshairsText;\n      }\n    }\n  };\n\n  if (tooltip) {\n    if (isObject(tooltip)) {\n      var chartTooltip = deepAssign({}, baseTooltipOptions, tooltip);\n      chart.tooltip(chartTooltip);\n      geometry.tooltip(baseGeomTooltipOptions);\n    }\n  } else {\n    chart.tooltip(false);\n  }\n\n  return params;\n}\n/**\n * legend 配置\n * @param params\n */\n\nexport function legend(params) {\n  var chart = params.chart,\n      options = params.options;\n  var legend = options.legend;\n\n  if (legend) {\n    chart.legend(TREND_FIELD, legend);\n  } else if (legend === false) {\n    chart.legend(false);\n  }\n\n  return params;\n}\n/**\n * K线图适配器\n * @param chart\n * @param options\n */\n\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  flow(field, meta, theme, axis, tooltip, legend, interaction, animation)(params);\n}","map":{"version":3,"sources":["../../../src/plots/stock/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { isArray, isObject, map } from '@antv/util';\nimport { Params } from '../../core/adaptor';\nimport { interaction, animation, theme } from '../../adaptor/common';\nimport { findGeometry, flow, pick, deepAssign } from '../../utils';\nimport { AXIS_META_CONFIG_KEYS } from '../../constant';\n\nimport { StockOptions } from './types';\nimport { Y_FIELD, TREND_FIELD, TREND_UP, TREND_DOWN, TREND_COLOR } from './constant';\n\n/**\n * 图表配置处理\n * @param params\n */\nfunction field(params: Params<StockOptions>): Params<StockOptions> {\n  const { chart, options } = params;\n  const { xField, yField } = options;\n\n  let data = options.data;\n\n  // 加工处理源数据\n  data = map(data, (obj) => {\n    if (isArray(yField)) {\n      const [open, close, high, low] = yField;\n      obj[TREND_FIELD] = obj[open] <= obj[close] ? TREND_UP : TREND_DOWN;\n      obj[Y_FIELD] = [obj[open], obj[close], obj[high], obj[low]];\n    }\n    return obj;\n  });\n\n  chart.data(data);\n\n  const geometry = chart.schema().position(`${xField}*${Y_FIELD}`).shape('candle');\n\n  geometry.color(TREND_FIELD, TREND_COLOR);\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params: Params<StockOptions>): Params<StockOptions> {\n  const { chart, options } = params;\n  const { meta, xAxis, yAxis, xField } = options;\n\n  const baseMeta = {\n    [xField]: {\n      type: 'timeCat',\n      tickCount: 6,\n    },\n    [TREND_FIELD]: {\n      values: [TREND_UP, TREND_DOWN],\n    },\n  };\n\n  const scales = deepAssign(baseMeta, meta, {\n    [xField]: pick(xAxis, AXIS_META_CONFIG_KEYS),\n    [Y_FIELD]: pick(yAxis, AXIS_META_CONFIG_KEYS),\n  });\n\n  chart.scale(scales);\n\n  return params;\n}\n\n/**\n * axis 配置\n * @param params\n */\nexport function axis(params: Params<StockOptions>): Params<StockOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField } = options;\n\n  // 为 false 则是不显示轴\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(Y_FIELD, false);\n  } else {\n    chart.axis(Y_FIELD, yAxis);\n  }\n\n  return params;\n}\n\n/**\n * tooltip 配置\n * @param params\n */\nexport function tooltip(params: Params<StockOptions>): Params<StockOptions> {\n  const { chart, options } = params;\n  const { xField, yField, meta = {}, tooltip = {} } = options;\n  const geometry = findGeometry(chart, 'schema');\n\n  const [open, close, high, low] = yField;\n\n  const openAlias = meta[open] ? meta[open].alias || open : open;\n  const closeAlias = meta[close] ? meta[close].alias || open : close;\n  const highAlias = meta[high] ? meta[high].alias || high : high;\n  const lowAlias = meta[low] ? meta[low].alias || low : low;\n\n  // geom级别tooltip\n  const baseGeomTooltipOptions = {\n    fields: [xField, open, close, high, low],\n    callback: (xFieldVal, openVal, closeVal, highVal, lowVal) => {\n      const tpl = {\n        name: xFieldVal,\n        value: `\n          <br><span data-label=\"${openAlias}\" style=\"padding-left: 16px\">${openAlias}：${openVal}</span>\n          <br><span data-label=\"${closeAlias}\" style=\"padding-left: 16px\">${closeAlias}：${closeVal}</span>\n          <br><span data-label=\"${highAlias}\" style=\"padding-left: 16px\">${highAlias}：${highVal}</span>\n          <br><span data-label=\"${lowAlias}\" style=\"padding-left: 16px\">${lowAlias}：${lowVal}</span>\n        `,\n      };\n      return tpl;\n    },\n  };\n\n  // chart级别tooltip， text格式化显示内容\n  const baseTooltipOptions = {\n    crosshairs: {\n      text: (type, defaultContent, items) => {\n        const tooltipCrosshairsText = { position: 'end' };\n        if (type === 'x') {\n          const item = items[0];\n          tooltipCrosshairsText['content'] = item ? item.data[xField] : defaultContent;\n        } else {\n          tooltipCrosshairsText['content'] = defaultContent;\n        }\n        return tooltipCrosshairsText;\n      },\n    },\n  };\n\n  if (tooltip) {\n    if (isObject(tooltip)) {\n      const chartTooltip = deepAssign({}, baseTooltipOptions, tooltip);\n      chart.tooltip(chartTooltip);\n      geometry.tooltip(baseGeomTooltipOptions);\n    }\n  } else {\n    chart.tooltip(false);\n  }\n\n  return params;\n}\n\n/**\n * legend 配置\n * @param params\n */\nexport function legend(params: Params<StockOptions>): Params<StockOptions> {\n  const { chart, options } = params;\n  const { legend } = options;\n\n  if (legend) {\n    chart.legend(TREND_FIELD, legend);\n  } else if (legend === false) {\n    chart.legend(false);\n  }\n\n  return params;\n}\n\n/**\n * K线图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<StockOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  flow(field, meta, theme, axis, tooltip, legend, interaction, animation)(params);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}