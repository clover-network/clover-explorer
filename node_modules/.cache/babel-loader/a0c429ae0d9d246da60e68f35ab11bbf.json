{"ast":null,"code":"import { deepMix } from '@antv/util';\nimport { getTooltipMapping } from '../../utils/tooltip';\nimport { deepAssign } from '../../utils';\nimport { geometry } from './base';\n/**\n * line 辅助点的配置处理\n * @param params\n */\n\nexport function line(params) {\n  var options = params.options;\n  var line = options.line,\n      stepType = options.stepType,\n      xField = options.xField,\n      yField = options.yField,\n      seriesField = options.seriesField,\n      smooth = options.smooth,\n      connectNulls = options.connectNulls,\n      tooltip = options.tooltip;\n\n  var _a = getTooltipMapping(tooltip, [xField, yField, seriesField]),\n      fields = _a.fields,\n      formatter = _a.formatter; // 如果存在才处理\n\n\n  return line ? geometry(deepAssign({}, params, {\n    options: {\n      type: 'line',\n      colorField: seriesField,\n      tooltipFields: fields,\n      mapping: deepMix({\n        shape: stepType || (smooth ? 'smooth' : 'line'),\n        tooltip: formatter\n      }, line),\n      args: {\n        connectNulls: connectNulls\n      }\n    }\n  })) : params;\n}","map":{"version":3,"sources":["../../../src/adaptor/geometries/line.ts"],"names":[],"mappings":"AAAA,SAAS,OAAT,QAAwB,YAAxB;AAGA,SAAS,iBAAT,QAAkC,qBAAlC;AACA,SAAS,UAAT,QAA2B,aAA3B;AACA,SAA0B,QAA1B,QAA0D,QAA1D;AAmBA;;;AAGG;;AACH,OAAM,SAAU,IAAV,CAA8C,MAA9C,EAA+D;AAC3D,MAAA,OAAO,GAAK,MAAM,CAAX,OAAP;AACA,MAAA,IAAI,GAA2E,OAAO,CAAlF,IAAJ;AAAA,MAAM,QAAQ,GAAiE,OAAO,CAAxE,QAAd;AAAA,MAAgB,MAAM,GAAyD,OAAO,CAAhE,MAAtB;AAAA,MAAwB,MAAM,GAAiD,OAAO,CAAxD,MAA9B;AAAA,MAAgC,WAAW,GAAoC,OAAO,CAA3C,WAA3C;AAAA,MAA6C,MAAM,GAA4B,OAAO,CAAnC,MAAnD;AAAA,MAAqD,YAAY,GAAc,OAAO,CAArB,YAAjE;AAAA,MAAmE,OAAO,GAAK,OAAO,CAAZ,OAA1E;;AAEF,MAAA,EAAA,GAAwB,iBAAiB,CAAC,OAAD,EAAU,CAAC,MAAD,EAAS,MAAT,EAAiB,WAAjB,CAAV,CAAzC;AAAA,MAAE,MAAM,GAAA,EAAA,CAAA,MAAR;AAAA,MAAU,SAAS,GAAA,EAAA,CAAA,SAAnB,CAJ6D,CAMnE;;;AACA,SAAO,IAAI,GACP,QAAQ,CACN,UAAU,CAAC,EAAD,EAAK,MAAL,EAAa;AACrB,IAAA,OAAO,EAAE;AACP,MAAA,IAAI,EAAE,MADC;AAEP,MAAA,UAAU,EAAE,WAFL;AAGP,MAAA,aAAa,EAAE,MAHR;AAIP,MAAA,OAAO,EAAE,OAAO,CACd;AACE,QAAA,KAAK,EAAE,QAAQ,KAAK,MAAM,GAAG,QAAH,GAAc,MAAzB,CADjB;AAEE,QAAA,OAAO,EAAE;AAFX,OADc,EAKd,IALc,CAJT;AAWP,MAAA,IAAI,EAAE;AAAE,QAAA,YAAY,EAAA;AAAd;AAXC;AADY,GAAb,CADJ,CADD,GAkBP,MAlBJ;AAmBD","sourcesContent":["import { deepMix } from '@antv/util';\nimport { Params } from '../../core/adaptor';\nimport { ColorAttr, StyleAttr, SizeAttr, ShapeAttr } from '../../types';\nimport { getTooltipMapping } from '../../utils/tooltip';\nimport { deepAssign } from '../../utils';\nimport { GeometryOptions, geometry, MappingOptions } from './base';\n\nexport interface LineGeometryOptions extends GeometryOptions {\n  /** x 轴字段 */\n  readonly xField?: string;\n  /** y 轴字段 */\n  readonly yField?: string;\n  /** 分组字段 */\n  readonly seriesField?: string;\n  /** 是否平滑 */\n  readonly smooth?: boolean;\n  /** 是否连接空数据 */\n  readonly connectNulls?: boolean;\n  /** line 映射配置 */\n  readonly line?: MappingOptions;\n  /** 阶梯折线图类型 */\n  readonly stepType?: string;\n}\n\n/**\n * line 辅助点的配置处理\n * @param params\n */\nexport function line<O extends LineGeometryOptions>(params: Params<O>): Params<O> {\n  const { options } = params;\n  const { line, stepType, xField, yField, seriesField, smooth, connectNulls, tooltip } = options;\n\n  const { fields, formatter } = getTooltipMapping(tooltip, [xField, yField, seriesField]);\n\n  // 如果存在才处理\n  return line\n    ? geometry(\n        deepAssign({}, params, {\n          options: {\n            type: 'line',\n            colorField: seriesField,\n            tooltipFields: fields,\n            mapping: deepMix(\n              {\n                shape: stepType || (smooth ? 'smooth' : 'line'),\n                tooltip: formatter,\n              },\n              line\n            ),\n            args: { connectNulls },\n          },\n        })\n      )\n    : params;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}