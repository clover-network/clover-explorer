{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nimport { normalizeToArray } from '../util/model';\nimport { each, clone, map, isTypedArray, setAsPrimitive, isArray, isObject } from 'zrender/esm/core/util';\nimport { error } from '../util/log';\nvar QUERY_REG = /^(min|max)?(.+)$/;\n\nvar OptionManager = function () {\n  function OptionManager(api) {\n    this._timelineOptions = [];\n    this._mediaList = [];\n    this._currentMediaIndices = [];\n    this._api = api;\n  }\n\n  OptionManager.prototype.setOption = function (rawOption, optionPreprocessorFuncs, opt) {\n    if (rawOption) {\n      each(normalizeToArray(rawOption.series), function (series) {\n        series && series.data && isTypedArray(series.data) && setAsPrimitive(series.data);\n      });\n      each(normalizeToArray(rawOption.dataset), function (dataset) {\n        dataset && dataset.source && isTypedArray(dataset.source) && setAsPrimitive(dataset.source);\n      });\n    }\n\n    rawOption = clone(rawOption);\n    var optionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption(rawOption, optionPreprocessorFuncs, !optionBackup);\n    this._newBaseOption = newParsedOption.baseOption;\n\n    if (optionBackup) {\n      if (newParsedOption.timelineOptions.length) {\n        optionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        optionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        optionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  };\n\n  OptionManager.prototype.mountOption = function (isRecreate) {\n    var optionBackup = this._optionBackup;\n    this._timelineOptions = optionBackup.timelineOptions;\n    this._mediaList = optionBackup.mediaList;\n    this._mediaDefault = optionBackup.mediaDefault;\n    this._currentMediaIndices = [];\n    return clone(isRecreate ? optionBackup.baseOption : this._newBaseOption);\n  };\n\n  OptionManager.prototype.getTimelineOption = function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()]);\n      }\n    }\n\n    return option;\n  };\n\n  OptionManager.prototype.getMediaOption = function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = [];\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    }\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    }\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    }\n\n    this._currentMediaIndices = indices;\n    return result;\n  };\n\n  return OptionManager;\n}();\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption;\n  var declaredBaseOption = rawOption.baseOption;\n  var timelineOnRoot = rawOption.timeline;\n  var timelineOptionsOnRoot = rawOption.options;\n  var mediaOnRoot = rawOption.media;\n  var hasMedia = !!rawOption.media;\n  var hasTimeline = !!(timelineOptionsOnRoot || timelineOnRoot || declaredBaseOption && declaredBaseOption.timeline);\n\n  if (declaredBaseOption) {\n    baseOption = declaredBaseOption;\n\n    if (!baseOption.timeline) {\n      baseOption.timeline = timelineOnRoot;\n    }\n  } else {\n    if (hasTimeline || hasMedia) {\n      rawOption.options = rawOption.media = null;\n    }\n\n    baseOption = rawOption;\n  }\n\n  if (hasMedia) {\n    if (isArray(mediaOnRoot)) {\n      each(mediaOnRoot, function (singleMedia) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (singleMedia && !singleMedia.option && isObject(singleMedia.query) && isObject(singleMedia.query.option)) {\n            error('Illegal media option. Must be like { media: [ { query: {}, option: {} } ] }');\n          }\n        }\n\n        if (singleMedia && singleMedia.option) {\n          if (singleMedia.query) {\n            mediaList.push(singleMedia);\n          } else if (!mediaDefault) {\n            mediaDefault = singleMedia;\n          }\n        }\n      });\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        error('Illegal media option. Must be an array. Like { media: [ {...}, {...} ] }');\n      }\n    }\n  }\n\n  doPreprocess(baseOption);\n  each(timelineOptionsOnRoot, function (option) {\n    return doPreprocess(option);\n  });\n  each(mediaList, function (media) {\n    return doPreprocess(media.option);\n  });\n\n  function doPreprocess(option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  }\n\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptionsOnRoot || [],\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight\n  };\n  var applicatable = true;\n  each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  return indices1.join(',') === indices2.join(',');\n}\n\nexport default OptionManager;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/esm/model/OptionManager.js"],"names":["normalizeToArray","each","clone","map","isTypedArray","setAsPrimitive","isArray","isObject","error","QUERY_REG","OptionManager","api","_timelineOptions","_mediaList","_currentMediaIndices","_api","prototype","setOption","rawOption","optionPreprocessorFuncs","opt","series","data","dataset","source","optionBackup","_optionBackup","newParsedOption","parseRawOption","_newBaseOption","baseOption","timelineOptions","length","mediaList","mediaDefault","mountOption","isRecreate","_mediaDefault","getTimelineOption","ecModel","option","timelineModel","getComponent","getCurrentIndex","getMediaOption","ecWidth","getWidth","ecHeight","getHeight","indices","result","i","len","applyMediaQuery","query","push","indicesEquals","index","isNew","declaredBaseOption","timelineOnRoot","timeline","timelineOptionsOnRoot","options","mediaOnRoot","media","hasMedia","hasTimeline","singleMedia","process","env","NODE_ENV","doPreprocess","preProcess","realMap","width","height","aspectratio","applicatable","value","attr","matched","match","operator","realAttr","toLowerCase","compare","real","expect","indices1","indices2","join"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { normalizeToArray } from '../util/model';\nimport { each, clone, map, isTypedArray, setAsPrimitive, isArray, isObject } from 'zrender/esm/core/util';\nimport { error } from '../util/log';\nvar QUERY_REG = /^(min|max)?(.+)$/;\n\nvar OptionManager = function () {\n  function OptionManager(api) {\n    this._timelineOptions = [];\n    this._mediaList = [];\n    this._currentMediaIndices = [];\n    this._api = api;\n  }\n\n  OptionManager.prototype.setOption = function (rawOption, optionPreprocessorFuncs, opt) {\n    if (rawOption) {\n      each(normalizeToArray(rawOption.series), function (series) {\n        series && series.data && isTypedArray(series.data) && setAsPrimitive(series.data);\n      });\n      each(normalizeToArray(rawOption.dataset), function (dataset) {\n        dataset && dataset.source && isTypedArray(dataset.source) && setAsPrimitive(dataset.source);\n      });\n    }\n\n    rawOption = clone(rawOption);\n    var optionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption(rawOption, optionPreprocessorFuncs, !optionBackup);\n    this._newBaseOption = newParsedOption.baseOption;\n\n    if (optionBackup) {\n      if (newParsedOption.timelineOptions.length) {\n        optionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        optionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        optionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  };\n\n  OptionManager.prototype.mountOption = function (isRecreate) {\n    var optionBackup = this._optionBackup;\n    this._timelineOptions = optionBackup.timelineOptions;\n    this._mediaList = optionBackup.mediaList;\n    this._mediaDefault = optionBackup.mediaDefault;\n    this._currentMediaIndices = [];\n    return clone(isRecreate ? optionBackup.baseOption : this._newBaseOption);\n  };\n\n  OptionManager.prototype.getTimelineOption = function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()]);\n      }\n    }\n\n    return option;\n  };\n\n  OptionManager.prototype.getMediaOption = function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = [];\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    }\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    }\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    }\n\n    this._currentMediaIndices = indices;\n    return result;\n  };\n\n  return OptionManager;\n}();\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption;\n  var declaredBaseOption = rawOption.baseOption;\n  var timelineOnRoot = rawOption.timeline;\n  var timelineOptionsOnRoot = rawOption.options;\n  var mediaOnRoot = rawOption.media;\n  var hasMedia = !!rawOption.media;\n  var hasTimeline = !!(timelineOptionsOnRoot || timelineOnRoot || declaredBaseOption && declaredBaseOption.timeline);\n\n  if (declaredBaseOption) {\n    baseOption = declaredBaseOption;\n\n    if (!baseOption.timeline) {\n      baseOption.timeline = timelineOnRoot;\n    }\n  } else {\n    if (hasTimeline || hasMedia) {\n      rawOption.options = rawOption.media = null;\n    }\n\n    baseOption = rawOption;\n  }\n\n  if (hasMedia) {\n    if (isArray(mediaOnRoot)) {\n      each(mediaOnRoot, function (singleMedia) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (singleMedia && !singleMedia.option && isObject(singleMedia.query) && isObject(singleMedia.query.option)) {\n            error('Illegal media option. Must be like { media: [ { query: {}, option: {} } ] }');\n          }\n        }\n\n        if (singleMedia && singleMedia.option) {\n          if (singleMedia.query) {\n            mediaList.push(singleMedia);\n          } else if (!mediaDefault) {\n            mediaDefault = singleMedia;\n          }\n        }\n      });\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        error('Illegal media option. Must be an array. Like { media: [ {...}, {...} ] }');\n      }\n    }\n  }\n\n  doPreprocess(baseOption);\n  each(timelineOptionsOnRoot, function (option) {\n    return doPreprocess(option);\n  });\n  each(mediaList, function (media) {\n    return doPreprocess(media.option);\n  });\n\n  function doPreprocess(option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  }\n\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptionsOnRoot || [],\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight\n  };\n  var applicatable = true;\n  each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  return indices1.join(',') === indices2.join(',');\n}\n\nexport default OptionManager;"]},"metadata":{},"sourceType":"module"}