{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar react_native_1 = require(\"react-native\");\n\nvar react_swipeable_views_core_1 = require(\"react-swipeable-views-core\");\n\nvar styles = react_native_1.StyleSheet.create({\n  root: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  container: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  slide: {\n    flex: 1\n  }\n});\n\nfunction getAnimatedValue(animated) {\n  return animated._value;\n}\n\n;\n\nvar SwipeableViews = function (_super) {\n  __extends(SwipeableViews, _super);\n\n  function SwipeableViews() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.panResponder = undefined;\n    _this.startX = 0;\n    _this.startIndex = 0;\n\n    _this.handleAnimationFinished = function (params) {\n      if (_this.props.onTransitionEnd && params.finished) {\n        _this.props.onTransitionEnd();\n      }\n    };\n\n    _this.handleTouchStart = function (event, gestureState) {\n      if (_this.props.onTouchStart) {\n        _this.props.onTouchStart(event, gestureState);\n      }\n\n      _this.startX = gestureState.x0;\n      _this.startIndex = getAnimatedValue(_this.state.indexCurrent);\n    };\n\n    _this.handleTouchMove = function (event, gestureState) {\n      var _a = _this.props,\n          children = _a.children,\n          onSwitching = _a.onSwitching,\n          resistance = _a.resistance;\n\n      var _b = react_swipeable_views_core_1.computeIndex({\n        children: children,\n        resistance: resistance,\n        pageX: gestureState.moveX,\n        startIndex: _this.startIndex,\n        startX: _this.startX,\n        viewLength: _this.state.viewLength\n      }),\n          index = _b.index,\n          startX = _b.startX;\n\n      if (startX) {\n        _this.startX = startX;\n      }\n\n      _this.state.indexCurrent.setValue(index);\n\n      if (onSwitching) {\n        onSwitching(index, 'move');\n      }\n    };\n\n    _this.handleTouchEnd = function (event, gestureState) {\n      var _a = _this.props,\n          _b = _a.threshold,\n          threshold = _b === void 0 ? 0 : _b,\n          _c = _a.hysteresis,\n          hysteresis = _c === void 0 ? 0 : _c,\n          onChangeIndex = _a.onChangeIndex,\n          onTouchEnd = _a.onTouchEnd,\n          onSwitching = _a.onSwitching,\n          children = _a.children;\n\n      if (onTouchEnd) {\n        onTouchEnd(event, gestureState);\n      }\n\n      var vx = gestureState.vx,\n          moveX = gestureState.moveX;\n      var indexLatest = _this.state.indexLatest;\n      var indexCurrent = indexLatest + (_this.startX - moveX) / _this.state.viewLength;\n      var delta = indexLatest - indexCurrent;\n      var indexNew;\n\n      if (Math.abs(vx) * 10 > threshold) {\n        if (vx > 0) {\n          indexNew = Math.floor(indexCurrent);\n        } else {\n          indexNew = Math.ceil(indexCurrent);\n        }\n      } else if (Math.abs(delta) > hysteresis) {\n        indexNew = delta > 0 ? Math.floor(indexCurrent) : Math.ceil(indexCurrent);\n      } else {\n        indexNew = indexLatest;\n      }\n\n      var indexMax = React.Children.count(children) - 1;\n\n      if (indexNew < 0) {\n        indexNew = 0;\n      } else if (indexNew > indexMax) {\n        indexNew = indexMax;\n      }\n\n      _this.setState({\n        indexLatest: indexNew\n      }, function () {\n        _this.animateIndexCurrent(indexNew);\n\n        if (onSwitching) {\n          onSwitching(indexNew, 'end');\n        }\n\n        if (onChangeIndex && indexNew !== indexLatest) {\n          onChangeIndex(indexNew, indexLatest);\n        }\n      });\n    };\n\n    _this.handleLayout = function (event) {\n      var width = event.nativeEvent.layout.width;\n\n      if (width) {\n        _this.setState({\n          viewLength: width\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  SwipeableViews.prototype.componentWillMount = function () {\n    if (process.env.NODE_ENV !== 'production') {\n      react_swipeable_views_core_1.checkIndexBounds(this.props);\n    }\n\n    var _a = this.props.index,\n        index = _a === void 0 ? 0 : _a;\n    this.setState({\n      indexLatest: index,\n      indexCurrent: new react_native_1.Animated.Value(index),\n      viewLength: react_native_1.Dimensions.get('window').width\n    });\n    this.panResponder = react_native_1.PanResponder.create({\n      onStartShouldSetPanResponder: function () {\n        return true;\n      },\n      onMoveShouldSetPanResponder: function (event, gestureState) {\n        var dx = Math.abs(gestureState.dx);\n        var dy = Math.abs(gestureState.dy);\n        return dx > dy && dx > react_swipeable_views_core_1.constant.UNCERTAINTY_THRESHOLD;\n      },\n      onPanResponderRelease: this.handleTouchEnd,\n      onPanResponderTerminate: this.handleTouchEnd,\n      onPanResponderMove: this.handleTouchMove,\n      onPanResponderGrant: this.handleTouchStart\n    });\n\n    if (this.props.animateHeight !== undefined) {\n      console.warn('react-swipeable-view-native: The animateHeight property is not implement yet.');\n    }\n\n    if (this.props.axis !== undefined) {\n      console.warn('react-swipeable-view-native: The axis property is not implement yet.');\n    }\n  };\n\n  SwipeableViews.prototype.componentWillReceiveProps = function (nextProps) {\n    var _this = this;\n\n    var index = nextProps.index,\n        animateTransitions = nextProps.animateTransitions;\n\n    if (typeof index === 'number' && index !== this.props.index) {\n      if (process.env.NODE_ENV !== 'production') {\n        react_swipeable_views_core_1.checkIndexBounds(nextProps);\n      }\n\n      var displaySameSlide = react_swipeable_views_core_1.getDisplaySameSlide(this.props, nextProps);\n\n      if (animateTransitions && !displaySameSlide) {\n        this.setState({\n          indexLatest: index\n        }, function () {\n          _this.animateIndexCurrent(index);\n        });\n      } else {\n        this.setState({\n          indexLatest: index,\n          indexCurrent: new react_native_1.Animated.Value(index)\n        });\n      }\n    }\n  };\n\n  SwipeableViews.prototype.animateIndexCurrent = function (index) {\n    if (getAnimatedValue(this.state.indexCurrent) !== index) {\n      react_native_1.Animated.spring(this.state.indexCurrent, __assign({\n        toValue: index\n      }, this.props.springConfig)).start(this.handleAnimationFinished);\n    } else {\n      this.handleAnimationFinished({\n        finished: true\n      });\n    }\n  };\n\n  SwipeableViews.prototype.render = function () {\n    var _a = this.props,\n        children = _a.children,\n        style = _a.style,\n        slideStyle = _a.slideStyle,\n        containerStyle = _a.containerStyle,\n        disabled = _a.disabled,\n        hysteresis = _a.hysteresis,\n        index = _a.index,\n        onTransitionEnd = _a.onTransitionEnd,\n        onTouchEnd = _a.onTouchEnd,\n        onTouchStart = _a.onTouchStart,\n        other = __rest(_a, [\"children\", \"style\", \"slideStyle\", \"containerStyle\", \"disabled\", \"hysteresis\", \"index\", \"onTransitionEnd\", \"onTouchEnd\", \"onTouchStart\"]);\n\n    var _b = this.state,\n        indexCurrent = _b.indexCurrent,\n        viewLength = _b.viewLength;\n    var slideStyleObj = [styles.slide, slideStyle];\n    var childrenToRender = React.Children.map(children, function (child) {\n      if (!React.isValidElement(child)) {\n        console.warn(\"react-swipeable-view-native: one of the children provided is invalid: \" + child + \". We are expecting a valid React Element.\");\n      }\n\n      return React.createElement(react_native_1.View, {\n        style: slideStyleObj\n      }, child);\n    });\n    var sceneContainerStyle = [styles.container, {\n      width: viewLength * React.Children.count(children),\n      transform: [{\n        translateX: indexCurrent.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, -viewLength]\n        })\n      }]\n    }, containerStyle];\n    var panHandlers = disabled ? {} : this.panResponder.panHandlers;\n    return React.createElement(react_native_1.View, __assign({\n      style: [styles.root, style],\n      onLayout: this.handleLayout\n    }, other), React.createElement(react_native_1.Animated.View, __assign({}, panHandlers, {\n      style: sceneContainerStyle\n    }), childrenToRender));\n  };\n\n  SwipeableViews.defaultProps = {\n    animateTransitions: true,\n    disabled: false,\n    hysteresis: 0.6,\n    index: 0,\n    resistance: false,\n    springConfig: {\n      tension: 300,\n      friction: 30\n    },\n    threshold: 5\n  };\n  return SwipeableViews;\n}(React.Component);\n\nexports.default = SwipeableViews;","map":{"version":3,"sources":["../src/SwipeableViews.animated.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAQA,IAAA,4BAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;;AAOA,IAAM,MAAM,GAAG,cAAA,CAAA,UAAA,CAAW,MAAX,CAAkB;AAC/B,EAAA,IAAI,EAAE;AACJ,IAAA,IAAI,EAAE,CADF;AAEJ,IAAA,QAAQ,EAAE;AAFN,GADyB;AAK/B,EAAA,SAAS,EAAE;AACT,IAAA,IAAI,EAAE,CADG;AAET,IAAA,aAAa,EAAE;AAFN,GALoB;AAS/B,EAAA,KAAK,EAAE;AACL,IAAA,IAAI,EAAE;AADD;AATwB,CAAlB,CAAf;;AAeA,SAAS,gBAAT,CAA0B,QAA1B,EAAkC;AAChC,SAAO,QAAQ,CAAC,MAAhB;AACD;;AA2FA;;AAQD,IAAA,cAAA,GAAA,UAAA,MAAA,EAAA;AAA6B,EAAA,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;;AAA7B,WAAA,cAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAeE,IAAA,KAAA,CAAA,YAAA,GAAoB,SAApB;AAEA,IAAA,KAAA,CAAA,MAAA,GAAS,CAAT;AAEA,IAAA,KAAA,CAAA,UAAA,GAAa,CAAb;;AAoEA,IAAA,KAAA,CAAA,uBAAA,GAA0B,UAAA,MAAA,EAAM;AAG9B,UAAI,KAAI,CAAC,KAAL,CAAW,eAAX,IAA8B,MAAM,CAAC,QAAzC,EAAmD;AACjD,QAAA,KAAI,CAAC,KAAL,CAAW,eAAX;AACD;AACF,KAND;;AAQA,IAAA,KAAA,CAAA,gBAAA,GAAmB,UAAC,KAAD,EAAQ,YAAR,EAAoB;AACrC,UAAI,KAAI,CAAC,KAAL,CAAW,YAAf,EAA6B;AAC3B,QAAA,KAAI,CAAC,KAAL,CAAW,YAAX,CAAwB,KAAxB,EAA+B,YAA/B;AACD;;AAED,MAAA,KAAI,CAAC,MAAL,GAAc,YAAY,CAAC,EAA3B;AACA,MAAA,KAAI,CAAC,UAAL,GAAkB,gBAAgB,CAAC,KAAI,CAAC,KAAL,CAAW,YAAZ,CAAlC;AACD,KAPD;;AASA,IAAA,KAAA,CAAA,eAAA,GAAkB,UAAC,KAAD,EAAQ,YAAR,EAAoB;AAC9B,UAAA,EAAA,GAAA,KAAA,CAAA,KAAA;AAAA,UAAE,QAAA,GAAA,EAAA,CAAA,QAAF;AAAA,UAAY,WAAA,GAAA,EAAA,CAAA,WAAZ;AAAA,UAAyB,UAAA,GAAA,EAAA,CAAA,UAAzB;;AAEA,UAAA,EAAA,GAAA,4BAAA,CAAA,YAAA,CAAA;0BAAA;8BAAA;iCAAA;oCAAA;4BAAA;;AAAA,OAAA,CAAA;AAAA,UAAE,KAAA,GAAA,EAAA,CAAA,KAAF;AAAA,UAAS,MAAA,GAAA,EAAA,CAAA,MAAT;;AASN,UAAI,MAAJ,EAAY;AACV,QAAA,KAAI,CAAC,MAAL,GAAc,MAAd;AACD;;AAED,MAAA,KAAI,CAAC,KAAL,CAAW,YAAX,CAAwB,QAAxB,CAAiC,KAAjC;;AAEA,UAAI,WAAJ,EAAiB;AACf,QAAA,WAAW,CAAC,KAAD,EAAQ,MAAR,CAAX;AACD;AACF,KArBD;;AAuBA,IAAA,KAAA,CAAA,cAAA,GAAiB,UAAC,KAAD,EAAQ,YAAR,EAAoB;AAC7B,UAAA,EAAA,GAAA,KAAA,CAAA,KAAA;AAAA,UACJ,EAAA,GAAA,EAAA,CAAA,SADI;AAAA,UACJ,SAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EADI;AAAA,UAEJ,EAAA,GAAA,EAAA,CAAA,UAFI;AAAA,UAEJ,UAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAFI;AAAA,UAGJ,aAAA,GAAA,EAAA,CAAA,aAHI;AAAA,UAIJ,UAAA,GAAA,EAAA,CAAA,UAJI;AAAA,UAKJ,WAAA,GAAA,EAAA,CAAA,WALI;AAAA,UAMJ,QAAA,GAAA,EAAA,CAAA,QANI;;AASN,UAAI,UAAJ,EAAgB;AACd,QAAA,UAAU,CAAC,KAAD,EAAQ,YAAR,CAAV;AACD;;AAEO,UAAA,EAAA,GAAA,YAAA,CAAA,EAAA;AAAA,UAAI,KAAA,GAAA,YAAA,CAAA,KAAJ;AAER,UAAM,WAAW,GAAG,KAAI,CAAC,KAAL,CAAW,WAA/B;AACA,UAAM,YAAY,GAAG,WAAW,GAAG,CAAC,KAAI,CAAC,MAAL,GAAc,KAAf,IAAwB,KAAI,CAAC,KAAL,CAAW,UAAtE;AACA,UAAM,KAAK,GAAG,WAAW,GAAG,YAA5B;AAEA,UAAI,QAAJ;;AAGA,UAAI,IAAI,CAAC,GAAL,CAAS,EAAT,IAAe,EAAf,GAAoB,SAAxB,EAAmC;AACjC,YAAI,EAAE,GAAG,CAAT,EAAY;AACV,UAAA,QAAQ,GAAG,IAAI,CAAC,KAAL,CAAW,YAAX,CAAX;AACD,SAFD,MAEO;AACL,UAAA,QAAQ,GAAG,IAAI,CAAC,IAAL,CAAU,YAAV,CAAX;AACD;AACF,OAND,MAMO,IAAI,IAAI,CAAC,GAAL,CAAS,KAAT,IAAkB,UAAtB,EAAkC;AAEvC,QAAA,QAAQ,GAAG,KAAK,GAAG,CAAR,GAAY,IAAI,CAAC,KAAL,CAAW,YAAX,CAAZ,GAAuC,IAAI,CAAC,IAAL,CAAU,YAAV,CAAlD;AACD,OAHM,MAGA;AACL,QAAA,QAAQ,GAAG,WAAX;AACD;;AAED,UAAM,QAAQ,GAAG,KAAK,CAAC,QAAN,CAAe,KAAf,CAAqB,QAArB,IAAiC,CAAlD;;AAEA,UAAI,QAAQ,GAAG,CAAf,EAAkB;AAChB,QAAA,QAAQ,GAAG,CAAX;AACD,OAFD,MAEO,IAAI,QAAQ,GAAG,QAAf,EAAyB;AAC9B,QAAA,QAAQ,GAAG,QAAX;AACD;;AAED,MAAA,KAAI,CAAC,QAAL,CACE;AACE,QAAA,WAAW,EAAE;AADf,OADF,EAIE,YAAA;AACE,QAAA,KAAI,CAAC,mBAAL,CAAyB,QAAzB;;AAEA,YAAI,WAAJ,EAAiB;AACf,UAAA,WAAW,CAAC,QAAD,EAAW,KAAX,CAAX;AACD;;AAED,YAAI,aAAa,IAAI,QAAQ,KAAK,WAAlC,EAA+C;AAC7C,UAAA,aAAa,CAAC,QAAD,EAAW,WAAX,CAAb;AACD;AACF,OAdH;AAgBD,KA5DD;;AA8DA,IAAA,KAAA,CAAA,YAAA,GAAe,UAAA,KAAA,EAAK;AACV,UAAA,KAAA,GAAA,KAAA,CAAA,WAAA,CAAA,MAAA,CAAA,KAAA;;AAER,UAAI,KAAJ,EAAW;AACT,QAAA,KAAI,CAAC,QAAL,CAAc;AACZ,UAAA,UAAU,EAAE;AADA,SAAd;AAGD;AACF,KARD;;;AA6ED;;AArPC,EAAA,cAAA,CAAA,SAAA,CAAA,kBAAA,GAAA,YAAA;AACE,QAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,MAAA,4BAAA,CAAA,gBAAA,CAAiB,KAAK,KAAtB;AACD;;AAEO,QAAA,EAAA,GAAA,KAAA,KAAA,CAAA,KAAA;AAAA,QAAA,KAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA;AAER,SAAK,QAAL,CAAc;AACZ,MAAA,WAAW,EAAE,KADD;AAEZ,MAAA,YAAY,EAAE,IAAI,cAAA,CAAA,QAAA,CAAS,KAAb,CAAmB,KAAnB,CAFF;AAGZ,MAAA,UAAU,EAAE,cAAA,CAAA,UAAA,CAAW,GAAX,CAAe,QAAf,EAAyB;AAHzB,KAAd;AAMA,SAAK,YAAL,GAAoB,cAAA,CAAA,YAAA,CAAa,MAAb,CAAoB;AAEtC,MAAA,4BAA4B,EAAE,YAAA;AAAM,eAAA,IAAA;AAAI,OAFF;AAItC,MAAA,2BAA2B,EAAE,UAAC,KAAD,EAAQ,YAAR,EAAoB;AAC/C,YAAM,EAAE,GAAG,IAAI,CAAC,GAAL,CAAS,YAAY,CAAC,EAAtB,CAAX;AACA,YAAM,EAAE,GAAG,IAAI,CAAC,GAAL,CAAS,YAAY,CAAC,EAAtB,CAAX;AAEA,eAAO,EAAE,GAAG,EAAL,IAAW,EAAE,GAAG,4BAAA,CAAA,QAAA,CAAS,qBAAhC;AACD,OATqC;AAUtC,MAAA,qBAAqB,EAAE,KAAK,cAVU;AAWtC,MAAA,uBAAuB,EAAE,KAAK,cAXQ;AAYtC,MAAA,kBAAkB,EAAE,KAAK,eAZa;AAatC,MAAA,mBAAmB,EAAE,KAAK;AAbY,KAApB,CAApB;;AAgBA,QAAI,KAAK,KAAL,CAAW,aAAX,KAA6B,SAAjC,EAA2C;AACzC,MAAA,OAAO,CAAC,IAAR,CAAa,+EAAb;AACD;;AACD,QAAI,KAAK,KAAL,CAAW,IAAX,KAAoB,SAAxB,EAAmC;AACjC,MAAA,OAAO,CAAC,IAAR,CAAa,sEAAb;AACD;AACF,GAnCD;;AAqCA,EAAA,cAAA,CAAA,SAAA,CAAA,yBAAA,GAAA,UAA0B,SAA1B,EAAmC;AAAnC,QAAA,KAAA,GAAA,IAAA;;AACU,QAAA,KAAA,GAAA,SAAA,CAAA,KAAA;AAAA,QAAO,kBAAA,GAAA,SAAA,CAAA,kBAAP;;AAER,QAAI,OAAO,KAAP,KAAiB,QAAjB,IAA6B,KAAK,KAAK,KAAK,KAAL,CAAW,KAAtD,EAA6D;AAC3D,UAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAA,4BAAA,CAAA,gBAAA,CAAiB,SAAjB;AACD;;AAGD,UAAM,gBAAgB,GAAG,4BAAA,CAAA,mBAAA,CAAoB,KAAK,KAAzB,EAAgC,SAAhC,CAAzB;;AAEA,UAAI,kBAAkB,IAAI,CAAC,gBAA3B,EAA6C;AAC3C,aAAK,QAAL,CACE;AACE,UAAA,WAAW,EAAE;AADf,SADF,EAIE,YAAA;AACE,UAAA,KAAI,CAAC,mBAAL,CAAyB,KAAzB;AACD,SANH;AAQD,OATD,MASO;AACL,aAAK,QAAL,CAAc;AACZ,UAAA,WAAW,EAAE,KADD;AAEZ,UAAA,YAAY,EAAE,IAAI,cAAA,CAAA,QAAA,CAAS,KAAb,CAAmB,KAAnB;AAFF,SAAd;AAID;AACF;AACF,GA3BD;;AA6IA,EAAA,cAAA,CAAA,SAAA,CAAA,mBAAA,GAAA,UAAoB,KAApB,EAAyB;AAEvB,QAAI,gBAAgB,CAAC,KAAK,KAAL,CAAW,YAAZ,CAAhB,KAA8C,KAAlD,EAAyD;AACvD,MAAA,cAAA,CAAA,QAAA,CAAS,MAAT,CAAgB,KAAK,KAAL,CAAW,YAA3B,EAAuC,QAAA,CAAA;AACrC,QAAA,OAAO,EAAE;AAD4B,OAAA,EAElC,KAAK,KAAL,CAAW,YAFuB,CAAvC,EAGG,KAHH,CAGS,KAAK,uBAHd;AAID,KALD,MAKO;AACL,WAAK,uBAAL,CAA6B;AAC3B,QAAA,QAAQ,EAAE;AADiB,OAA7B;AAGD;AACF,GAZD;;AAcA,EAAA,cAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACE,QAAM,EAAA,GAAA,KAAA,KAAN;AAAA,QACE,QAAA,GAAA,EAAA,CAAA,QADF;AAAA,QAEE,KAAA,GAAA,EAAA,CAAA,KAFF;AAAA,QAGE,UAAA,GAAA,EAAA,CAAA,UAHF;AAAA,QAIE,cAAA,GAAA,EAAA,CAAA,cAJF;AAAA,QAKE,QAAA,GAAA,EAAA,CAAA,QALF;AAAA,QAME,UAAA,GAAA,EAAA,CAAA,UANF;AAAA,QAOE,KAAA,GAAA,EAAA,CAAA,KAPF;AAAA,QAQE,eAAA,GAAA,EAAA,CAAA,eARF;AAAA,QASE,UAAA,GAAA,EAAA,CAAA,UATF;AAAA,QAUE,YAAA,GAAA,EAAA,CAAA,YAVF;AAAA,QAWE,KAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,UAAA,EAAA,OAAA,EAAA,YAAA,EAAA,gBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,OAAA,EAAA,iBAAA,EAAA,YAAA,EAAA,cAAA,CAAA,CAXF;;AAcM,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QAAE,YAAA,GAAA,EAAA,CAAA,YAAF;AAAA,QAAgB,UAAA,GAAA,EAAA,CAAA,UAAhB;AAEN,QAAM,aAAa,GAAG,CAAC,MAAM,CAAC,KAAR,EAAe,UAAf,CAAtB;AAEA,QAAM,gBAAgB,GAAG,KAAK,CAAC,QAAN,CAAe,GAAf,CAAmB,QAAnB,EAA6B,UAAA,KAAA,EAAK;AACzD,UAAI,CAAC,KAAK,CAAC,cAAN,CAAqB,KAArB,CAAL,EAAkC;AAChC,QAAA,OAAO,CAAC,IAAR,CAAa,2EAAyE,KAAzE,GAA8E,2CAA3F;AACD;;AAED,aAAO,KAAA,CAAA,aAAA,CAAC,cAAA,CAAA,IAAD,EAAK;AAAC,QAAA,KAAK,EAAE;AAAR,OAAL,EAA6B,KAA7B,CAAP;AACD,KANwB,CAAzB;AAQA,QAAM,mBAAmB,GAAG,CAC1B,MAAM,CAAC,SADmB,EAE1B;AACE,MAAA,KAAK,EAAE,UAAU,GAAG,KAAK,CAAC,QAAN,CAAe,KAAf,CAAqB,QAArB,CADtB;AAEE,MAAA,SAAS,EAAE,CACT;AACE,QAAA,UAAU,EAAE,YAAY,CAAC,WAAb,CAAyB;AACnC,UAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADuB;AAEnC,UAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAC,UAAL;AAFsB,SAAzB;AADd,OADS;AAFb,KAF0B,EAa1B,cAb0B,CAA5B;AAgBA,QAAM,WAAW,GAAG,QAAQ,GAAG,EAAH,GAAQ,KAAK,YAAL,CAAkB,WAAtD;AAEA,WACE,KAAA,CAAA,aAAA,CAAC,cAAA,CAAA,IAAD,EAAK,QAAA,CAAA;AAAC,MAAA,KAAK,EAAE,CAAC,MAAM,CAAC,IAAR,EAAc,KAAd,CAAR;AAA8B,MAAA,QAAQ,EAAE,KAAK;AAA7C,KAAA,EAA+D,KAA/D,CAAL,EACE,KAAA,CAAA,aAAA,CAAC,cAAA,CAAA,QAAA,CAAS,IAAV,EAAc,QAAA,CAAA,EAAA,EAAK,WAAL,EAAgB;AAAE,MAAA,KAAK,EAAE;AAAT,KAAhB,CAAd,EACG,gBADH,CADF,CADF;AAOD,GApDD;;AAnNO,EAAA,cAAA,CAAA,YAAA,GAAe;AACpB,IAAA,kBAAkB,EAAE,IADA;AAEpB,IAAA,QAAQ,EAAE,KAFU;AAGpB,IAAA,UAAU,EAAE,GAHQ;AAIpB,IAAA,KAAK,EAAE,CAJa;AAKpB,IAAA,UAAU,EAAE,KALQ;AAMpB,IAAA,YAAY,EAAE;AACZ,MAAA,OAAO,EAAE,GADG;AAEZ,MAAA,QAAQ,EAAE;AAFE,KANM;AAUpB,IAAA,SAAS,EAAE;AAVS,GAAf;AAwQT,SAAA,cAAA;AAAC,CA1QD,CAA6B,KAAK,CAAC,SAAnC,CAAA;;AA4QA,OAAA,CAAA,OAAA,GAAe,cAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar react_native_1 = require(\"react-native\");\nvar react_swipeable_views_core_1 = require(\"react-swipeable-views-core\");\nvar styles = react_native_1.StyleSheet.create({\n    root: {\n        flex: 1,\n        overflow: 'hidden',\n    },\n    container: {\n        flex: 1,\n        flexDirection: 'row',\n    },\n    slide: {\n        flex: 1,\n    },\n});\nfunction getAnimatedValue(animated) {\n    return animated._value;\n}\n;\nvar SwipeableViews = (function (_super) {\n    __extends(SwipeableViews, _super);\n    function SwipeableViews() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.panResponder = undefined;\n        _this.startX = 0;\n        _this.startIndex = 0;\n        _this.handleAnimationFinished = function (params) {\n            if (_this.props.onTransitionEnd && params.finished) {\n                _this.props.onTransitionEnd();\n            }\n        };\n        _this.handleTouchStart = function (event, gestureState) {\n            if (_this.props.onTouchStart) {\n                _this.props.onTouchStart(event, gestureState);\n            }\n            _this.startX = gestureState.x0;\n            _this.startIndex = getAnimatedValue(_this.state.indexCurrent);\n        };\n        _this.handleTouchMove = function (event, gestureState) {\n            var _a = _this.props, children = _a.children, onSwitching = _a.onSwitching, resistance = _a.resistance;\n            var _b = react_swipeable_views_core_1.computeIndex({\n                children: children,\n                resistance: resistance,\n                pageX: gestureState.moveX,\n                startIndex: _this.startIndex,\n                startX: _this.startX,\n                viewLength: _this.state.viewLength,\n            }), index = _b.index, startX = _b.startX;\n            if (startX) {\n                _this.startX = startX;\n            }\n            _this.state.indexCurrent.setValue(index);\n            if (onSwitching) {\n                onSwitching(index, 'move');\n            }\n        };\n        _this.handleTouchEnd = function (event, gestureState) {\n            var _a = _this.props, _b = _a.threshold, threshold = _b === void 0 ? 0 : _b, _c = _a.hysteresis, hysteresis = _c === void 0 ? 0 : _c, onChangeIndex = _a.onChangeIndex, onTouchEnd = _a.onTouchEnd, onSwitching = _a.onSwitching, children = _a.children;\n            if (onTouchEnd) {\n                onTouchEnd(event, gestureState);\n            }\n            var vx = gestureState.vx, moveX = gestureState.moveX;\n            var indexLatest = _this.state.indexLatest;\n            var indexCurrent = indexLatest + (_this.startX - moveX) / _this.state.viewLength;\n            var delta = indexLatest - indexCurrent;\n            var indexNew;\n            if (Math.abs(vx) * 10 > threshold) {\n                if (vx > 0) {\n                    indexNew = Math.floor(indexCurrent);\n                }\n                else {\n                    indexNew = Math.ceil(indexCurrent);\n                }\n            }\n            else if (Math.abs(delta) > hysteresis) {\n                indexNew = delta > 0 ? Math.floor(indexCurrent) : Math.ceil(indexCurrent);\n            }\n            else {\n                indexNew = indexLatest;\n            }\n            var indexMax = React.Children.count(children) - 1;\n            if (indexNew < 0) {\n                indexNew = 0;\n            }\n            else if (indexNew > indexMax) {\n                indexNew = indexMax;\n            }\n            _this.setState({\n                indexLatest: indexNew,\n            }, function () {\n                _this.animateIndexCurrent(indexNew);\n                if (onSwitching) {\n                    onSwitching(indexNew, 'end');\n                }\n                if (onChangeIndex && indexNew !== indexLatest) {\n                    onChangeIndex(indexNew, indexLatest);\n                }\n            });\n        };\n        _this.handleLayout = function (event) {\n            var width = event.nativeEvent.layout.width;\n            if (width) {\n                _this.setState({\n                    viewLength: width,\n                });\n            }\n        };\n        return _this;\n    }\n    SwipeableViews.prototype.componentWillMount = function () {\n        if (process.env.NODE_ENV !== 'production') {\n            react_swipeable_views_core_1.checkIndexBounds(this.props);\n        }\n        var _a = this.props.index, index = _a === void 0 ? 0 : _a;\n        this.setState({\n            indexLatest: index,\n            indexCurrent: new react_native_1.Animated.Value(index),\n            viewLength: react_native_1.Dimensions.get('window').width,\n        });\n        this.panResponder = react_native_1.PanResponder.create({\n            onStartShouldSetPanResponder: function () { return true; },\n            onMoveShouldSetPanResponder: function (event, gestureState) {\n                var dx = Math.abs(gestureState.dx);\n                var dy = Math.abs(gestureState.dy);\n                return dx > dy && dx > react_swipeable_views_core_1.constant.UNCERTAINTY_THRESHOLD;\n            },\n            onPanResponderRelease: this.handleTouchEnd,\n            onPanResponderTerminate: this.handleTouchEnd,\n            onPanResponderMove: this.handleTouchMove,\n            onPanResponderGrant: this.handleTouchStart,\n        });\n        if (this.props.animateHeight !== undefined) {\n            console.warn('react-swipeable-view-native: The animateHeight property is not implement yet.');\n        }\n        if (this.props.axis !== undefined) {\n            console.warn('react-swipeable-view-native: The axis property is not implement yet.');\n        }\n    };\n    SwipeableViews.prototype.componentWillReceiveProps = function (nextProps) {\n        var _this = this;\n        var index = nextProps.index, animateTransitions = nextProps.animateTransitions;\n        if (typeof index === 'number' && index !== this.props.index) {\n            if (process.env.NODE_ENV !== 'production') {\n                react_swipeable_views_core_1.checkIndexBounds(nextProps);\n            }\n            var displaySameSlide = react_swipeable_views_core_1.getDisplaySameSlide(this.props, nextProps);\n            if (animateTransitions && !displaySameSlide) {\n                this.setState({\n                    indexLatest: index,\n                }, function () {\n                    _this.animateIndexCurrent(index);\n                });\n            }\n            else {\n                this.setState({\n                    indexLatest: index,\n                    indexCurrent: new react_native_1.Animated.Value(index),\n                });\n            }\n        }\n    };\n    SwipeableViews.prototype.animateIndexCurrent = function (index) {\n        if (getAnimatedValue(this.state.indexCurrent) !== index) {\n            react_native_1.Animated.spring(this.state.indexCurrent, __assign({ toValue: index }, this.props.springConfig)).start(this.handleAnimationFinished);\n        }\n        else {\n            this.handleAnimationFinished({\n                finished: true,\n            });\n        }\n    };\n    SwipeableViews.prototype.render = function () {\n        var _a = this.props, children = _a.children, style = _a.style, slideStyle = _a.slideStyle, containerStyle = _a.containerStyle, disabled = _a.disabled, hysteresis = _a.hysteresis, index = _a.index, onTransitionEnd = _a.onTransitionEnd, onTouchEnd = _a.onTouchEnd, onTouchStart = _a.onTouchStart, other = __rest(_a, [\"children\", \"style\", \"slideStyle\", \"containerStyle\", \"disabled\", \"hysteresis\", \"index\", \"onTransitionEnd\", \"onTouchEnd\", \"onTouchStart\"]);\n        var _b = this.state, indexCurrent = _b.indexCurrent, viewLength = _b.viewLength;\n        var slideStyleObj = [styles.slide, slideStyle];\n        var childrenToRender = React.Children.map(children, function (child) {\n            if (!React.isValidElement(child)) {\n                console.warn(\"react-swipeable-view-native: one of the children provided is invalid: \" + child + \". We are expecting a valid React Element.\");\n            }\n            return React.createElement(react_native_1.View, { style: slideStyleObj }, child);\n        });\n        var sceneContainerStyle = [\n            styles.container,\n            {\n                width: viewLength * React.Children.count(children),\n                transform: [\n                    {\n                        translateX: indexCurrent.interpolate({\n                            inputRange: [0, 1],\n                            outputRange: [0, -viewLength],\n                        }),\n                    },\n                ],\n            },\n            containerStyle,\n        ];\n        var panHandlers = disabled ? {} : this.panResponder.panHandlers;\n        return (React.createElement(react_native_1.View, __assign({ style: [styles.root, style], onLayout: this.handleLayout }, other),\n            React.createElement(react_native_1.Animated.View, __assign({}, panHandlers, { style: sceneContainerStyle }), childrenToRender)));\n    };\n    SwipeableViews.defaultProps = {\n        animateTransitions: true,\n        disabled: false,\n        hysteresis: 0.6,\n        index: 0,\n        resistance: false,\n        springConfig: {\n            tension: 300,\n            friction: 30,\n        },\n        threshold: 5,\n    };\n    return SwipeableViews;\n}(React.Component));\nexports.default = SwipeableViews;\n//# sourceMappingURL=SwipeableViews.animated.js.map"]},"metadata":{},"sourceType":"script"}