{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar labelStyle_1 = require(\"../../label/labelStyle\");\n\nvar Text_1 = require(\"zrender/lib/graphic/Text\");\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar tmpRichText = new Text_1[\"default\"]();\n\nvar TextStyleMixin = function () {\n  function TextStyleMixin() {}\n\n  TextStyleMixin.prototype.getTextColor = function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  };\n\n  TextStyleMixin.prototype.getFont = function () {\n    return labelStyle_1.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  };\n\n  TextStyleMixin.prototype.getTextRect = function (text) {\n    tmpRichText.useStyle({\n      text: text,\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily'),\n      verticalAlign: this.getShallow('verticalAlign') || this.getShallow('baseline'),\n      padding: this.getShallow('padding'),\n      lineHeight: this.getShallow('lineHeight'),\n      rich: this.getShallow('rich')\n    });\n    tmpRichText.update();\n    return tmpRichText.getBoundingRect();\n  };\n\n  return TextStyleMixin;\n}();\n\n;\nexports[\"default\"] = TextStyleMixin;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/model/mixin/textStyle.js"],"names":["exports","__esModule","labelStyle_1","require","Text_1","PATH_COLOR","tmpRichText","TextStyleMixin","prototype","getTextColor","isEmphasis","ecModel","getShallow","get","getFont","fontStyle","fontWeight","fontSize","fontFamily","getTextRect","text","useStyle","verticalAlign","padding","lineHeight","rich","update","getBoundingRect"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AAEA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;AAEA,IAAIC,YAAY,GAAGC,OAAO,CAAC,wBAAD,CAA1B;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,0BAAD,CAApB;;AAEA,IAAIE,UAAU,GAAG,CAAC,WAAD,EAAc,OAAd,CAAjB;AACA,IAAIC,WAAW,GAAG,IAAIF,MAAM,CAAC,SAAD,CAAV,EAAlB;;AAEA,IAAIG,cAAc,GAAG,YAAY;AAC/B,WAASA,cAAT,GAA0B,CAAE;;AAE5BA,EAAAA,cAAc,CAACC,SAAf,CAAyBC,YAAzB,GAAwC,UAAUC,UAAV,EAAsB;AAC5D,QAAIC,OAAO,GAAG,KAAKA,OAAnB;AACA,WAAO,KAAKC,UAAL,CAAgB,OAAhB,MAA6B,CAACF,UAAD,IAAeC,OAAf,GAAyBA,OAAO,CAACE,GAAR,CAAYR,UAAZ,CAAzB,GAAmD,IAAhF,CAAP;AACD,GAHD;;AAKAE,EAAAA,cAAc,CAACC,SAAf,CAAyBM,OAAzB,GAAmC,YAAY;AAC7C,WAAOZ,YAAY,CAACY,OAAb,CAAqB;AAC1BC,MAAAA,SAAS,EAAE,KAAKH,UAAL,CAAgB,WAAhB,CADe;AAE1BI,MAAAA,UAAU,EAAE,KAAKJ,UAAL,CAAgB,YAAhB,CAFc;AAG1BK,MAAAA,QAAQ,EAAE,KAAKL,UAAL,CAAgB,UAAhB,CAHgB;AAI1BM,MAAAA,UAAU,EAAE,KAAKN,UAAL,CAAgB,YAAhB;AAJc,KAArB,EAKJ,KAAKD,OALD,CAAP;AAMD,GAPD;;AASAJ,EAAAA,cAAc,CAACC,SAAf,CAAyBW,WAAzB,GAAuC,UAAUC,IAAV,EAAgB;AACrDd,IAAAA,WAAW,CAACe,QAAZ,CAAqB;AACnBD,MAAAA,IAAI,EAAEA,IADa;AAEnBL,MAAAA,SAAS,EAAE,KAAKH,UAAL,CAAgB,WAAhB,CAFQ;AAGnBI,MAAAA,UAAU,EAAE,KAAKJ,UAAL,CAAgB,YAAhB,CAHO;AAInBK,MAAAA,QAAQ,EAAE,KAAKL,UAAL,CAAgB,UAAhB,CAJS;AAKnBM,MAAAA,UAAU,EAAE,KAAKN,UAAL,CAAgB,YAAhB,CALO;AAMnBU,MAAAA,aAAa,EAAE,KAAKV,UAAL,CAAgB,eAAhB,KAAoC,KAAKA,UAAL,CAAgB,UAAhB,CANhC;AAOnBW,MAAAA,OAAO,EAAE,KAAKX,UAAL,CAAgB,SAAhB,CAPU;AAQnBY,MAAAA,UAAU,EAAE,KAAKZ,UAAL,CAAgB,YAAhB,CARO;AASnBa,MAAAA,IAAI,EAAE,KAAKb,UAAL,CAAgB,MAAhB;AATa,KAArB;AAWAN,IAAAA,WAAW,CAACoB,MAAZ;AACA,WAAOpB,WAAW,CAACqB,eAAZ,EAAP;AACD,GAdD;;AAgBA,SAAOpB,cAAP;AACD,CAlCoB,EAArB;;AAoCA;AACAP,OAAO,CAAC,SAAD,CAAP,GAAqBO,cAArB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar labelStyle_1 = require(\"../../label/labelStyle\");\n\nvar Text_1 = require(\"zrender/lib/graphic/Text\");\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar tmpRichText = new Text_1[\"default\"]();\n\nvar TextStyleMixin = function () {\n  function TextStyleMixin() {}\n\n  TextStyleMixin.prototype.getTextColor = function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  };\n\n  TextStyleMixin.prototype.getFont = function () {\n    return labelStyle_1.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  };\n\n  TextStyleMixin.prototype.getTextRect = function (text) {\n    tmpRichText.useStyle({\n      text: text,\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily'),\n      verticalAlign: this.getShallow('verticalAlign') || this.getShallow('baseline'),\n      padding: this.getShallow('padding'),\n      lineHeight: this.getShallow('lineHeight'),\n      rich: this.getShallow('rich')\n    });\n    tmpRichText.update();\n    return tmpRichText.getBoundingRect();\n  };\n\n  return TextStyleMixin;\n}();\n\n;\nexports[\"default\"] = TextStyleMixin;"]},"metadata":{},"sourceType":"script"}