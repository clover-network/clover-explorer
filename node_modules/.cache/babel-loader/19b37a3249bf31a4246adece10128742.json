{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { deepAssign } from '../../utils';\nimport { adaptor } from './adaptor';\nimport './interactions';\n\nvar Radar =\n/** @class */\nfunction (_super) {\n  __extends(Radar, _super);\n\n  function Radar() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n\n\n    _this.type = 'radar';\n    return _this;\n  }\n  /**\n   * 获取 雷达图 默认配置\n   */\n\n\n  Radar.prototype.getDefaultOptions = function () {\n    return deepAssign({}, _super.prototype.getDefaultOptions.call(this), {\n      xAxis: {\n        label: {\n          offset: 15\n        },\n        grid: {\n          line: {\n            type: 'line'\n          }\n        }\n      },\n      yAxis: {\n        grid: {\n          line: {\n            type: 'circle'\n          }\n        }\n      },\n      legend: {\n        position: 'top'\n      },\n      tooltip: {\n        shared: true,\n        showCrosshairs: true,\n        showMarkers: true,\n        crosshairs: {\n          type: 'xy',\n          line: {\n            style: {\n              stroke: '#565656',\n              lineDash: [4]\n            }\n          },\n          follow: true\n        }\n      }\n    });\n  };\n  /**\n   * 获取 雷达图 的适配器\n   */\n\n\n  Radar.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n\n  return Radar;\n}(Plot);\n\nexport { Radar };","map":{"version":3,"sources":["../../../src/plots/radar/index.ts"],"names":[],"mappings":";AAAA,SAAS,IAAT,QAAqB,iBAArB;AACA,SAAS,UAAT,QAA2B,aAA3B;AAGA,SAAS,OAAT,QAAwB,WAAxB;AACA,OAAO,gBAAP;;AAIA,IAAA,KAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA2B,EAAA,SAAA,CAAA,KAAA,EAAA,MAAA,CAAA;;AAA3B,WAAA,KAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AACE;;;AACO,IAAA,KAAA,CAAA,IAAA,GAAe,OAAf;;AAmDR;AAjDC;;AAEG;;;AACO,EAAA,KAAA,CAAA,SAAA,CAAA,iBAAA,GAAV,YAAA;AACE,WAAO,UAAU,CAAC,EAAD,EAAK,MAAA,CAAA,SAAA,CAAM,iBAAN,CAAuB,IAAvB,CAAuB,IAAvB,CAAL,EAAgC;AAC/C,MAAA,KAAK,EAAE;AACL,QAAA,KAAK,EAAE;AACL,UAAA,MAAM,EAAE;AADH,SADF;AAIL,QAAA,IAAI,EAAE;AACJ,UAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE;AADF;AADF;AAJD,OADwC;AAW/C,MAAA,KAAK,EAAE;AACL,QAAA,IAAI,EAAE;AACJ,UAAA,IAAI,EAAE;AACJ,YAAA,IAAI,EAAE;AADF;AADF;AADD,OAXwC;AAkB/C,MAAA,MAAM,EAAE;AACN,QAAA,QAAQ,EAAE;AADJ,OAlBuC;AAqB/C,MAAA,OAAO,EAAE;AACP,QAAA,MAAM,EAAE,IADD;AAEP,QAAA,cAAc,EAAE,IAFT;AAGP,QAAA,WAAW,EAAE,IAHN;AAIP,QAAA,UAAU,EAAE;AACV,UAAA,IAAI,EAAE,IADI;AAEV,UAAA,IAAI,EAAE;AACJ,YAAA,KAAK,EAAE;AACL,cAAA,MAAM,EAAE,SADH;AAEL,cAAA,QAAQ,EAAE,CAAC,CAAD;AAFL;AADH,WAFI;AAQV,UAAA,MAAM,EAAE;AARE;AAJL;AArBsC,KAAhC,CAAjB;AAqCD,GAtCS;AAwCV;;AAEG;;;AACO,EAAA,KAAA,CAAA,SAAA,CAAA,gBAAA,GAAV,YAAA;AACE,WAAO,OAAP;AACD,GAFS;;AAGZ,SAAA,KAAA;AAAC,CArDD,CAA2B,IAA3B,CAAA","sourcesContent":["import { Plot } from '../../core/plot';\nimport { deepAssign } from '../../utils';\nimport { Adaptor } from '../../core/adaptor';\nimport { RadarOptions } from './types';\nimport { adaptor } from './adaptor';\nimport './interactions';\n\nexport { RadarOptions };\n\nexport class Radar extends Plot<RadarOptions> {\n  /** 图表类型 */\n  public type: string = 'radar';\n\n  /**\n   * 获取 雷达图 默认配置\n   */\n  protected getDefaultOptions(): Partial<RadarOptions> {\n    return deepAssign({}, super.getDefaultOptions(), {\n      xAxis: {\n        label: {\n          offset: 15,\n        },\n        grid: {\n          line: {\n            type: 'line',\n          },\n        },\n      },\n      yAxis: {\n        grid: {\n          line: {\n            type: 'circle',\n          },\n        },\n      },\n      legend: {\n        position: 'top',\n      },\n      tooltip: {\n        shared: true,\n        showCrosshairs: true,\n        showMarkers: true,\n        crosshairs: {\n          type: 'xy',\n          line: {\n            style: {\n              stroke: '#565656',\n              lineDash: [4],\n            },\n          },\n          follow: true,\n        },\n      },\n    });\n  }\n\n  /**\n   * 获取 雷达图 的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<RadarOptions> {\n    return adaptor;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}