{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar dataProvider_1 = require(\"../../data/helper/dataProvider\");\n\nvar format_1 = require(\"../../util/format\");\n\nvar log_1 = require(\"../../util/log\");\n\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g;\n\nvar DataFormatMixin = function () {\n  function DataFormatMixin() {}\n\n  DataFormatMixin.prototype.getDataParams = function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var style = data.getItemVisual(dataIndex, 'style');\n    var color = style && style[data.getItemVisual(dataIndex, 'drawType') || 'fill'];\n    var borderColor = style && style.stroke;\n    var mainType = this.mainType;\n    var isSeries = mainType === 'series';\n    var userOutput = data.userOutput;\n    return {\n      componentType: mainType,\n      componentSubType: this.subType,\n      componentIndex: this.componentIndex,\n      seriesType: isSeries ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: isSeries ? this.id : null,\n      seriesName: isSeries ? this.name : null,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      borderColor: borderColor,\n      dimensionNames: userOutput ? userOutput.dimensionNames : null,\n      encode: userOutput ? userOutput.encode : null,\n      $vars: ['seriesName', 'name', 'value']\n    };\n  };\n\n  DataFormatMixin.prototype.getFormattedLabel = function (dataIndex, status, dataType, labelDimIndex, formatter, extendParams) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (extendParams) {\n      zrUtil.extend(params, extendParams);\n    }\n\n    if (labelDimIndex != null && params.value instanceof Array) {\n      params.value = params.value[labelDimIndex];\n    }\n\n    if (!formatter) {\n      var itemModel = data.getItemModel(dataIndex);\n      formatter = itemModel.get(status === 'normal' ? ['label', 'formatter'] : [status, 'label', 'formatter']);\n    }\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      params.dimensionIndex = labelDimIndex;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = format_1.formatTpl(formatter, params);\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1);\n        }\n\n        return dataProvider_1.retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  };\n\n  DataFormatMixin.prototype.getRawValue = function (idx, dataType) {\n    return dataProvider_1.retrieveRawValue(this.getData(dataType), idx);\n  };\n\n  DataFormatMixin.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\n    return;\n  };\n\n  return DataFormatMixin;\n}();\n\nexports.DataFormatMixin = DataFormatMixin;\n;\n\nfunction normalizeTooltipFormatResult(result) {\n  var markupText;\n  var markupFragment;\n\n  if (zrUtil.isObject(result)) {\n    if (result.type) {\n      markupFragment = result;\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('The return type of `formatTooltip` is not supported: ' + log_1.makePrintable(result));\n      }\n    }\n  } else {\n    markupText = result;\n  }\n\n  return {\n    markupText: markupText,\n    markupFragment: markupFragment\n  };\n}\n\nexports.normalizeTooltipFormatResult = normalizeTooltipFormatResult;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/model/mixin/dataFormat.js"],"names":["exports","__esModule","zrUtil","require","dataProvider_1","format_1","log_1","DIMENSION_LABEL_REG","DataFormatMixin","prototype","getDataParams","dataIndex","dataType","data","getData","rawValue","getRawValue","rawDataIndex","getRawIndex","name","getName","itemOpt","getRawDataItem","style","getItemVisual","color","borderColor","stroke","mainType","isSeries","userOutput","componentType","componentSubType","subType","componentIndex","seriesType","seriesIndex","seriesId","id","seriesName","value","dimensionNames","encode","$vars","getFormattedLabel","status","labelDimIndex","formatter","extendParams","params","extend","Array","itemModel","getItemModel","get","dimensionIndex","str","formatTpl","replace","origin","dim","len","length","charAt","slice","retrieveRawValue","idx","formatTooltip","multipleSeries","normalizeTooltipFormatResult","result","markupText","markupFragment","isObject","type","process","env","NODE_ENV","console","warn","makePrintable"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar dataProvider_1 = require(\"../../data/helper/dataProvider\");\n\nvar format_1 = require(\"../../util/format\");\n\nvar log_1 = require(\"../../util/log\");\n\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g;\n\nvar DataFormatMixin = function () {\n  function DataFormatMixin() {}\n\n  DataFormatMixin.prototype.getDataParams = function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var style = data.getItemVisual(dataIndex, 'style');\n    var color = style && style[data.getItemVisual(dataIndex, 'drawType') || 'fill'];\n    var borderColor = style && style.stroke;\n    var mainType = this.mainType;\n    var isSeries = mainType === 'series';\n    var userOutput = data.userOutput;\n    return {\n      componentType: mainType,\n      componentSubType: this.subType,\n      componentIndex: this.componentIndex,\n      seriesType: isSeries ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: isSeries ? this.id : null,\n      seriesName: isSeries ? this.name : null,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      borderColor: borderColor,\n      dimensionNames: userOutput ? userOutput.dimensionNames : null,\n      encode: userOutput ? userOutput.encode : null,\n      $vars: ['seriesName', 'name', 'value']\n    };\n  };\n\n  DataFormatMixin.prototype.getFormattedLabel = function (dataIndex, status, dataType, labelDimIndex, formatter, extendParams) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (extendParams) {\n      zrUtil.extend(params, extendParams);\n    }\n\n    if (labelDimIndex != null && params.value instanceof Array) {\n      params.value = params.value[labelDimIndex];\n    }\n\n    if (!formatter) {\n      var itemModel = data.getItemModel(dataIndex);\n      formatter = itemModel.get(status === 'normal' ? ['label', 'formatter'] : [status, 'label', 'formatter']);\n    }\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      params.dimensionIndex = labelDimIndex;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = format_1.formatTpl(formatter, params);\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1);\n        }\n\n        return dataProvider_1.retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  };\n\n  DataFormatMixin.prototype.getRawValue = function (idx, dataType) {\n    return dataProvider_1.retrieveRawValue(this.getData(dataType), idx);\n  };\n\n  DataFormatMixin.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\n    return;\n  };\n\n  return DataFormatMixin;\n}();\n\nexports.DataFormatMixin = DataFormatMixin;\n;\n\nfunction normalizeTooltipFormatResult(result) {\n  var markupText;\n  var markupFragment;\n\n  if (zrUtil.isObject(result)) {\n    if (result.type) {\n      markupFragment = result;\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('The return type of `formatTooltip` is not supported: ' + log_1.makePrintable(result));\n      }\n    }\n  } else {\n    markupText = result;\n  }\n\n  return {\n    markupText: markupText,\n    markupFragment: markupFragment\n  };\n}\n\nexports.normalizeTooltipFormatResult = normalizeTooltipFormatResult;"]},"metadata":{},"sourceType":"script"}