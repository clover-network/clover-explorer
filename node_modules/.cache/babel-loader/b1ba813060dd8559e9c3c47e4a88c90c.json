{"ast":null,"code":"/**\n * @fileOverview G6's force layout, supports clustering\n * @author shiwu.wyy@antfin.com\n */\nimport { __extends } from \"tslib\";\nimport { BaseLayout } from './layout';\nimport { isNumber, isArray, isFunction } from '@antv/util';\n/**\n * G6's force layout\n */\n\nvar G6Force =\n/** @class */\nfunction (_super) {\n  __extends(G6Force, _super);\n\n  function G6Force() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 布局中心 */\n\n\n    _this.center = [0, 0];\n    /** 停止迭代的最大迭代数 */\n\n    _this.maxIteration = 500;\n    /** 重力大小，影响图的紧凑程度 */\n\n    _this.gravity = 10;\n    /** 是否产生聚类力 */\n\n    _this.clustering = false;\n    /** 聚类力大小 */\n\n    _this.clusterGravity = 10;\n    /** 默认边长度 */\n\n    _this.linkDistance = 50;\n    /** 每次迭代位移的衰减相关参数 */\n\n    _this.alpha = 1;\n    _this.alphaMin = 0.001;\n    _this.alphaDecay = 1 - Math.pow(_this.alphaMin, 1 / 300);\n    _this.alphaTarget = 0;\n    /** 节点运动速度衰减参数 */\n\n    _this.velocityDecay = 0.6;\n    /** 边引力大小 */\n\n    _this.linkStrength = 1;\n    /** 节点引力大小 */\n\n    _this.nodeStrength = 30;\n    /** 是否开启防止重叠 */\n\n    _this.preventOverlap = false;\n    /** 防止重叠的碰撞力大小 */\n\n    _this.collideStrength = 1;\n    /** 优化计算斥力的速度，两节点间距超过 optimizeRangeFactor * width 则不再计算斥力和重叠斥力 */\n\n    _this.optimizeRangeFactor = 1;\n    /** 每次迭代的回调函数 */\n\n    _this.tick = function () {};\n    /** 内部计算参数 */\n\n\n    _this.nodes = [];\n    _this.edges = [];\n    _this.width = 300;\n    _this.height = 300;\n    _this.bias = [];\n    _this.nodeMap = {};\n    _this.nodeIdxMap = {};\n    return _this;\n  }\n\n  G6Force.prototype.getDefaultCfg = function () {\n    return {\n      maxIteration: 1000,\n      center: [0, 0],\n      gravity: 10,\n      clustering: false,\n      clusterGravity: 10,\n      preventOverlap: false,\n      nodeSpacing: undefined,\n      collideStrength: 10\n    };\n  };\n  /**\n   * 执行布局\n   */\n\n\n  G6Force.prototype.execute = function () {\n    var self = this;\n    var nodes = self.nodes;\n    var center = self.center;\n\n    if (!nodes || nodes.length === 0) {\n      return;\n    }\n\n    if (nodes.length === 1) {\n      nodes[0].x = center[0];\n      nodes[0].y = center[1];\n      return;\n    }\n\n    var nodeMap = {};\n    var nodeIdxMap = {};\n    nodes.forEach(function (node, i) {\n      nodeMap[node.id] = node;\n      nodeIdxMap[node.id] = i;\n    });\n    self.nodeMap = nodeMap;\n    self.nodeIdxMap = nodeIdxMap; // layout\n\n    self.run();\n  };\n\n  G6Force.prototype.run = function () {\n    var self = this;\n    var nodes = self.nodes;\n    var edges = self.edges;\n    var maxIteration = self.maxIteration;\n\n    if (!self.width && typeof window !== 'undefined') {\n      self.width = window.innerWidth;\n    }\n\n    if (!self.height && typeof window !== 'undefined') {\n      self.height = window.innerHeight;\n    }\n\n    var center = self.center;\n    var velocityDecay = self.velocityDecay;\n    var clustering = self.clustering;\n    var clusterMap;\n    self.initVals();\n\n    if (clustering) {\n      clusterMap = self.getClusterMap();\n    }\n\n    var _loop_1 = function _loop_1(i) {\n      var displacements = [];\n      nodes.forEach(function (_, j) {\n        displacements[j] = {\n          x: 0,\n          y: 0\n        };\n      });\n      self.applyCalculate(nodes, edges, displacements); // gravity for clusters\n\n      if (clustering) {\n        self.applyClusterForce(clusterMap, displacements);\n      } // move\n\n\n      nodes.forEach(function (n, j) {\n        if (!isNumber(n.x) || !isNumber(n.y)) return;\n        n.x += displacements[j].x * velocityDecay;\n        n.y += displacements[j].y * velocityDecay;\n      });\n      this_1.alpha += (this_1.alphaTarget - this_1.alpha) * this_1.alphaDecay;\n      self.tick();\n    };\n\n    var this_1 = this; // iterate\n\n    for (var i = 0; i < maxIteration; i++) {\n      _loop_1(i);\n    } // move to center\n\n\n    var meanCenter = [0, 0];\n    nodes.forEach(function (n) {\n      if (!isNumber(n.x) || !isNumber(n.y)) return;\n      meanCenter[0] += n.x;\n      meanCenter[1] += n.y;\n    });\n    meanCenter[0] /= nodes.length;\n    meanCenter[1] /= nodes.length;\n    var centerOffset = [center[0] - meanCenter[0], center[1] - meanCenter[1]];\n    nodes.forEach(function (n, j) {\n      if (!isNumber(n.x) || !isNumber(n.y)) return;\n      n.x += centerOffset[0];\n      n.y += centerOffset[1];\n    });\n  };\n\n  G6Force.prototype.initVals = function () {\n    var self = this;\n    var edges = self.edges;\n    var count = {}; // get edge bias\n\n    for (var i = 0; i < edges.length; ++i) {\n      if (count[edges[i].source]) count[edges[i].source]++;else count[edges[i].source] = 1;\n      if (count[edges[i].target]) count[edges[i].target]++;else count[edges[i].target] = 1;\n    }\n\n    var bias = [];\n\n    for (var i = 0; i < edges.length; ++i) {\n      bias[i] = count[edges[i].source] / (count[edges[i].source] + count[edges[i].target]);\n    }\n\n    this.bias = bias;\n    var nodeSize = self.nodeSize;\n    var nodeSpacing = self.nodeSpacing;\n    var nodeSizeFunc;\n    var nodeSpacingFunc; // nodeSpacing to function\n\n    if (isNumber(nodeSpacing)) {\n      nodeSpacingFunc = function nodeSpacingFunc() {\n        return nodeSpacing;\n      };\n    } else if (isFunction(nodeSpacing)) {\n      nodeSpacingFunc = nodeSpacing;\n    } else {\n      nodeSpacingFunc = function nodeSpacingFunc() {\n        return 0;\n      };\n    } // nodeSize to function\n\n\n    if (!nodeSize) {\n      nodeSizeFunc = function nodeSizeFunc(d) {\n        if (d.size) {\n          if (isArray(d.size)) {\n            var res = d.size[0] > d.size[1] ? d.size[0] : d.size[1];\n            return res / 2 + nodeSpacingFunc(d);\n          }\n\n          return d.size / 2 + nodeSpacingFunc(d);\n        }\n\n        return 10 + nodeSpacingFunc(d);\n      };\n    } else if (isFunction(nodeSize)) {\n      nodeSizeFunc = function nodeSizeFunc(d) {\n        var size = nodeSize(d);\n        return size + nodeSpacingFunc(d);\n      };\n    } else if (isArray(nodeSize)) {\n      var larger = nodeSize[0] > nodeSize[1] ? nodeSize[0] : nodeSize[1];\n      var radius_1 = larger / 2;\n\n      nodeSizeFunc = function nodeSizeFunc(d) {\n        return radius_1 + nodeSpacingFunc(d);\n      };\n    } else if (isNumber(nodeSize)) {\n      var radius_2 = nodeSize / 2;\n\n      nodeSizeFunc = function nodeSizeFunc(d) {\n        return radius_2 + nodeSpacingFunc(d);\n      };\n    } else {\n      nodeSizeFunc = function nodeSizeFunc() {\n        return 10;\n      };\n    }\n\n    this.nodeSize = nodeSizeFunc; // linkDistance to function\n\n    var linkDistance = this.linkDistance;\n    var linkDistanceFunc;\n\n    if (!linkDistance) {\n      linkDistance = 50;\n    }\n\n    if (isNumber(linkDistance)) {\n      linkDistanceFunc = function linkDistanceFunc(d) {\n        return linkDistance;\n      };\n    }\n\n    this.linkDistance = linkDistanceFunc; // linkStrength to function\n\n    var linkStrength = this.linkStrength;\n    var linkStrengthFunc;\n\n    if (!linkStrength) {\n      linkStrength = 1;\n    }\n\n    if (isNumber(linkStrength)) {\n      linkStrengthFunc = function linkStrengthFunc(d) {\n        return linkStrength;\n      };\n    }\n\n    this.linkStrength = linkStrengthFunc; // nodeStrength to function\n\n    var nodeStrength = this.nodeStrength;\n    var nodeStrengthFunc;\n\n    if (!nodeStrength) {\n      nodeStrength = 30;\n    }\n\n    if (isNumber(nodeStrength)) {\n      nodeStrengthFunc = function nodeStrengthFunc(d) {\n        return nodeStrength;\n      };\n    }\n\n    this.nodeStrength = nodeStrengthFunc;\n  };\n\n  G6Force.prototype.getClusterMap = function () {\n    var self = this;\n    var nodes = self.nodes;\n    var clusterMap = {};\n    nodes.forEach(function (n) {\n      if (clusterMap[n.cluster] === undefined) {\n        var cluster = {\n          name: n.cluster,\n          cx: 0,\n          cy: 0,\n          count: 0\n        };\n        clusterMap[n.cluster] = cluster;\n      }\n\n      var c = clusterMap[n.cluster];\n\n      if (isNumber(n.x)) {\n        c.cx += n.x;\n      }\n\n      if (isNumber(n.y)) {\n        c.cy += n.y;\n      }\n\n      c.count++;\n    });\n\n    for (var key in clusterMap) {\n      clusterMap[key].cx /= clusterMap[key].count;\n      clusterMap[key].cy /= clusterMap[key].count;\n    }\n\n    return clusterMap;\n  };\n\n  G6Force.prototype.applyClusterForce = function (clusterMap, displacements) {\n    var self = this;\n    var gravity = self.gravity;\n    var nodes = self.nodes;\n    var clusterGravity = self.clusterGravity || gravity;\n    var alpha = this.alpha;\n    nodes.forEach(function (n, j) {\n      if (!isNumber(n.x) || !isNumber(n.y)) return;\n      var c = clusterMap[n.cluster];\n      var vecX = n.x - c.cx;\n      var vecY = n.y - c.cy;\n      var l = Math.sqrt(vecX * vecX + vecY * vecY);\n      displacements[j].x -= vecX * clusterGravity * alpha / l;\n      displacements[j].y -= vecY * clusterGravity * alpha / l;\n    });\n\n    for (var key in clusterMap) {\n      clusterMap[key].cx = 0;\n      clusterMap[key].cy = 0;\n      clusterMap[key].count = 0;\n    }\n\n    nodes.forEach(function (n) {\n      var c = clusterMap[n.cluster];\n\n      if (isNumber(n.x)) {\n        c.cx += n.x;\n      }\n\n      if (isNumber(n.y)) {\n        c.cy += n.y;\n      }\n\n      c.count++;\n    });\n\n    for (var key in clusterMap) {\n      clusterMap[key].cx /= clusterMap[key].count;\n      clusterMap[key].cy /= clusterMap[key].count;\n    }\n  };\n\n  G6Force.prototype.applyCalculate = function (nodes, edges, displacements) {\n    var self = this; // store the vx, vy, and distance to reduce dulplicate calculation\n\n    var vecMap = {};\n    nodes.forEach(function (v, i) {\n      displacements[i] = {\n        x: 0,\n        y: 0\n      };\n      nodes.forEach(function (u, j) {\n        if (i < j) return;\n        var vx = v.x - u.x;\n        var vy = v.y - u.y;\n        var vl = vx * vx + vy * vy;\n        if (vl < 1) vl = Math.sqrt(vl);\n\n        if (vx === 0) {\n          vx = Math.random() * 0.01;\n          vl += vx * vx;\n        }\n\n        if (vy === 0) {\n          vy = Math.random() * 0.01;\n          vl += vy * vy;\n        }\n\n        var sqrtVl = Math.sqrt(vl);\n        vecMap[v.id + \"-\" + u.id] = {\n          vx: vx,\n          vy: vy,\n          vl: vl,\n          sqrtVl: sqrtVl\n        };\n        vecMap[u.id + \"-\" + v.id] = {\n          vx: -vx,\n          vy: -vy,\n          vl: vl,\n          sqrtVl: sqrtVl\n        };\n      });\n    });\n    self.calRepulsive(nodes, displacements, vecMap);\n    self.calAttractive(edges, displacements, vecMap);\n  };\n\n  G6Force.prototype.calRepulsive = function (nodes, displacements, vecMap) {\n    var max = this.width * this.optimizeRangeFactor * this.width * this.optimizeRangeFactor;\n    var nodeStrength = this.nodeStrength;\n    var alpha = this.alpha;\n    var collideStrength = this.collideStrength;\n    var preventOverlap = this.preventOverlap;\n    var nodeSizeFunc = this.nodeSize;\n    nodes.forEach(function (v, i) {\n      nodes.forEach(function (u, j) {\n        if (i === j) {\n          return;\n        }\n\n        if (!isNumber(v.x) || !isNumber(u.x) || !isNumber(v.y) || !isNumber(u.y)) return;\n        var _a = vecMap[v.id + \"-\" + u.id],\n            vl = _a.vl,\n            vx = _a.vx,\n            vy = _a.vy;\n        if (vl > max) return;\n        displacements[i].x += vx * nodeStrength(u) * alpha / vl;\n        displacements[i].y += vy * nodeStrength(u) * alpha / vl; // collide strength\n\n        if (preventOverlap && i < j) {\n          var ri = nodeSizeFunc(v);\n          var rj = nodeSizeFunc(u);\n          var r = ri + rj;\n\n          if (vl < r * r) {\n            var sqrtVl = vecMap[v.id + \"-\" + u.id].sqrtVl;\n            var ll = (r - sqrtVl) / sqrtVl * collideStrength;\n            var rratio = rj * rj / (ri * ri + rj * rj);\n            var xl = vx * ll;\n            var yl = vy * ll;\n            displacements[i].x += xl * rratio;\n            displacements[i].y += yl * rratio;\n            rratio = 1 - rratio;\n            displacements[j].x -= xl * rratio;\n            displacements[j].y -= yl * rratio;\n          }\n        }\n      });\n    });\n  };\n\n  G6Force.prototype.calAttractive = function (edges, displacements, vecMap) {\n    var _this = this;\n\n    var linkDistance = this.linkDistance;\n    var alpha = this.alpha;\n    var linkStrength = this.linkStrength;\n    var bias = this.bias;\n    edges.forEach(function (e, i) {\n      if (!e.source || !e.target) return;\n      var uIndex = _this.nodeIdxMap[e.source];\n      var vIndex = _this.nodeIdxMap[e.target];\n\n      if (uIndex === vIndex) {\n        return;\n      }\n\n      var u = _this.nodeMap[e.source];\n      var v = _this.nodeMap[e.target];\n      if (!isNumber(v.x) || !isNumber(u.x) || !isNumber(v.y) || !isNumber(u.y)) return;\n      var _a = vecMap[e.target + \"-\" + e.source],\n          vl = _a.vl,\n          sqrtVl = _a.sqrtVl,\n          vx = _a.vx,\n          vy = _a.vy;\n      var l = (sqrtVl - linkDistance(e)) / sqrtVl * alpha * linkStrength(e);\n      var vecX = vx * l;\n      var vecY = vy * l;\n      var b = bias[i];\n      displacements[vIndex].x -= vecX * b;\n      displacements[vIndex].y -= vecY * b;\n      displacements[uIndex].x += vecX * (1 - b);\n      displacements[uIndex].y += vecY * (1 - b);\n    });\n  };\n\n  return G6Force;\n}(BaseLayout);\n\nexport default G6Force;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@antv/g6/es/layout/g6force.js"],"names":["__extends","BaseLayout","isNumber","isArray","isFunction","G6Force","_super","_this","apply","arguments","center","maxIteration","gravity","clustering","clusterGravity","linkDistance","alpha","alphaMin","alphaDecay","Math","pow","alphaTarget","velocityDecay","linkStrength","nodeStrength","preventOverlap","collideStrength","optimizeRangeFactor","tick","nodes","edges","width","height","bias","nodeMap","nodeIdxMap","prototype","getDefaultCfg","nodeSpacing","undefined","execute","self","length","x","y","forEach","node","i","id","run","window","innerWidth","innerHeight","clusterMap","initVals","getClusterMap","_loop_1","displacements","_","j","applyCalculate","applyClusterForce","n","this_1","meanCenter","centerOffset","count","source","target","nodeSize","nodeSizeFunc","nodeSpacingFunc","d","size","res","larger","radius_1","radius_2","linkDistanceFunc","linkStrengthFunc","nodeStrengthFunc","cluster","name","cx","cy","c","key","vecX","vecY","l","sqrt","vecMap","v","u","vx","vy","vl","random","sqrtVl","calRepulsive","calAttractive","max","_a","ri","rj","r","ll","rratio","xl","yl","e","uIndex","vIndex","b"],"mappings":"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","sourcesContent":["/**\n * @fileOverview G6's force layout, supports clustering\n * @author shiwu.wyy@antfin.com\n */\nimport { __extends } from \"tslib\";\nimport { BaseLayout } from './layout';\nimport { isNumber, isArray, isFunction } from '@antv/util';\n/**\n * G6's force layout\n */\n\nvar G6Force =\n/** @class */\nfunction (_super) {\n  __extends(G6Force, _super);\n\n  function G6Force() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 布局中心 */\n\n\n    _this.center = [0, 0];\n    /** 停止迭代的最大迭代数 */\n\n    _this.maxIteration = 500;\n    /** 重力大小，影响图的紧凑程度 */\n\n    _this.gravity = 10;\n    /** 是否产生聚类力 */\n\n    _this.clustering = false;\n    /** 聚类力大小 */\n\n    _this.clusterGravity = 10;\n    /** 默认边长度 */\n\n    _this.linkDistance = 50;\n    /** 每次迭代位移的衰减相关参数 */\n\n    _this.alpha = 1;\n    _this.alphaMin = 0.001;\n    _this.alphaDecay = 1 - Math.pow(_this.alphaMin, 1 / 300);\n    _this.alphaTarget = 0;\n    /** 节点运动速度衰减参数 */\n\n    _this.velocityDecay = 0.6;\n    /** 边引力大小 */\n\n    _this.linkStrength = 1;\n    /** 节点引力大小 */\n\n    _this.nodeStrength = 30;\n    /** 是否开启防止重叠 */\n\n    _this.preventOverlap = false;\n    /** 防止重叠的碰撞力大小 */\n\n    _this.collideStrength = 1;\n    /** 优化计算斥力的速度，两节点间距超过 optimizeRangeFactor * width 则不再计算斥力和重叠斥力 */\n\n    _this.optimizeRangeFactor = 1;\n    /** 每次迭代的回调函数 */\n\n    _this.tick = function () {};\n    /** 内部计算参数 */\n\n\n    _this.nodes = [];\n    _this.edges = [];\n    _this.width = 300;\n    _this.height = 300;\n    _this.bias = [];\n    _this.nodeMap = {};\n    _this.nodeIdxMap = {};\n    return _this;\n  }\n\n  G6Force.prototype.getDefaultCfg = function () {\n    return {\n      maxIteration: 1000,\n      center: [0, 0],\n      gravity: 10,\n      clustering: false,\n      clusterGravity: 10,\n      preventOverlap: false,\n      nodeSpacing: undefined,\n      collideStrength: 10\n    };\n  };\n  /**\n   * 执行布局\n   */\n\n\n  G6Force.prototype.execute = function () {\n    var self = this;\n    var nodes = self.nodes;\n    var center = self.center;\n\n    if (!nodes || nodes.length === 0) {\n      return;\n    }\n\n    if (nodes.length === 1) {\n      nodes[0].x = center[0];\n      nodes[0].y = center[1];\n      return;\n    }\n\n    var nodeMap = {};\n    var nodeIdxMap = {};\n    nodes.forEach(function (node, i) {\n      nodeMap[node.id] = node;\n      nodeIdxMap[node.id] = i;\n    });\n    self.nodeMap = nodeMap;\n    self.nodeIdxMap = nodeIdxMap; // layout\n\n    self.run();\n  };\n\n  G6Force.prototype.run = function () {\n    var self = this;\n    var nodes = self.nodes;\n    var edges = self.edges;\n    var maxIteration = self.maxIteration;\n\n    if (!self.width && typeof window !== 'undefined') {\n      self.width = window.innerWidth;\n    }\n\n    if (!self.height && typeof window !== 'undefined') {\n      self.height = window.innerHeight;\n    }\n\n    var center = self.center;\n    var velocityDecay = self.velocityDecay;\n    var clustering = self.clustering;\n    var clusterMap;\n    self.initVals();\n\n    if (clustering) {\n      clusterMap = self.getClusterMap();\n    }\n\n    var _loop_1 = function _loop_1(i) {\n      var displacements = [];\n      nodes.forEach(function (_, j) {\n        displacements[j] = {\n          x: 0,\n          y: 0\n        };\n      });\n      self.applyCalculate(nodes, edges, displacements); // gravity for clusters\n\n      if (clustering) {\n        self.applyClusterForce(clusterMap, displacements);\n      } // move\n\n\n      nodes.forEach(function (n, j) {\n        if (!isNumber(n.x) || !isNumber(n.y)) return;\n        n.x += displacements[j].x * velocityDecay;\n        n.y += displacements[j].y * velocityDecay;\n      });\n      this_1.alpha += (this_1.alphaTarget - this_1.alpha) * this_1.alphaDecay;\n      self.tick();\n    };\n\n    var this_1 = this; // iterate\n\n    for (var i = 0; i < maxIteration; i++) {\n      _loop_1(i);\n    } // move to center\n\n\n    var meanCenter = [0, 0];\n    nodes.forEach(function (n) {\n      if (!isNumber(n.x) || !isNumber(n.y)) return;\n      meanCenter[0] += n.x;\n      meanCenter[1] += n.y;\n    });\n    meanCenter[0] /= nodes.length;\n    meanCenter[1] /= nodes.length;\n    var centerOffset = [center[0] - meanCenter[0], center[1] - meanCenter[1]];\n    nodes.forEach(function (n, j) {\n      if (!isNumber(n.x) || !isNumber(n.y)) return;\n      n.x += centerOffset[0];\n      n.y += centerOffset[1];\n    });\n  };\n\n  G6Force.prototype.initVals = function () {\n    var self = this;\n    var edges = self.edges;\n    var count = {}; // get edge bias\n\n    for (var i = 0; i < edges.length; ++i) {\n      if (count[edges[i].source]) count[edges[i].source]++;else count[edges[i].source] = 1;\n      if (count[edges[i].target]) count[edges[i].target]++;else count[edges[i].target] = 1;\n    }\n\n    var bias = [];\n\n    for (var i = 0; i < edges.length; ++i) {\n      bias[i] = count[edges[i].source] / (count[edges[i].source] + count[edges[i].target]);\n    }\n\n    this.bias = bias;\n    var nodeSize = self.nodeSize;\n    var nodeSpacing = self.nodeSpacing;\n    var nodeSizeFunc;\n    var nodeSpacingFunc; // nodeSpacing to function\n\n    if (isNumber(nodeSpacing)) {\n      nodeSpacingFunc = function nodeSpacingFunc() {\n        return nodeSpacing;\n      };\n    } else if (isFunction(nodeSpacing)) {\n      nodeSpacingFunc = nodeSpacing;\n    } else {\n      nodeSpacingFunc = function nodeSpacingFunc() {\n        return 0;\n      };\n    } // nodeSize to function\n\n\n    if (!nodeSize) {\n      nodeSizeFunc = function nodeSizeFunc(d) {\n        if (d.size) {\n          if (isArray(d.size)) {\n            var res = d.size[0] > d.size[1] ? d.size[0] : d.size[1];\n            return res / 2 + nodeSpacingFunc(d);\n          }\n\n          return d.size / 2 + nodeSpacingFunc(d);\n        }\n\n        return 10 + nodeSpacingFunc(d);\n      };\n    } else if (isFunction(nodeSize)) {\n      nodeSizeFunc = function nodeSizeFunc(d) {\n        var size = nodeSize(d);\n        return size + nodeSpacingFunc(d);\n      };\n    } else if (isArray(nodeSize)) {\n      var larger = nodeSize[0] > nodeSize[1] ? nodeSize[0] : nodeSize[1];\n      var radius_1 = larger / 2;\n\n      nodeSizeFunc = function nodeSizeFunc(d) {\n        return radius_1 + nodeSpacingFunc(d);\n      };\n    } else if (isNumber(nodeSize)) {\n      var radius_2 = nodeSize / 2;\n\n      nodeSizeFunc = function nodeSizeFunc(d) {\n        return radius_2 + nodeSpacingFunc(d);\n      };\n    } else {\n      nodeSizeFunc = function nodeSizeFunc() {\n        return 10;\n      };\n    }\n\n    this.nodeSize = nodeSizeFunc; // linkDistance to function\n\n    var linkDistance = this.linkDistance;\n    var linkDistanceFunc;\n\n    if (!linkDistance) {\n      linkDistance = 50;\n    }\n\n    if (isNumber(linkDistance)) {\n      linkDistanceFunc = function linkDistanceFunc(d) {\n        return linkDistance;\n      };\n    }\n\n    this.linkDistance = linkDistanceFunc; // linkStrength to function\n\n    var linkStrength = this.linkStrength;\n    var linkStrengthFunc;\n\n    if (!linkStrength) {\n      linkStrength = 1;\n    }\n\n    if (isNumber(linkStrength)) {\n      linkStrengthFunc = function linkStrengthFunc(d) {\n        return linkStrength;\n      };\n    }\n\n    this.linkStrength = linkStrengthFunc; // nodeStrength to function\n\n    var nodeStrength = this.nodeStrength;\n    var nodeStrengthFunc;\n\n    if (!nodeStrength) {\n      nodeStrength = 30;\n    }\n\n    if (isNumber(nodeStrength)) {\n      nodeStrengthFunc = function nodeStrengthFunc(d) {\n        return nodeStrength;\n      };\n    }\n\n    this.nodeStrength = nodeStrengthFunc;\n  };\n\n  G6Force.prototype.getClusterMap = function () {\n    var self = this;\n    var nodes = self.nodes;\n    var clusterMap = {};\n    nodes.forEach(function (n) {\n      if (clusterMap[n.cluster] === undefined) {\n        var cluster = {\n          name: n.cluster,\n          cx: 0,\n          cy: 0,\n          count: 0\n        };\n        clusterMap[n.cluster] = cluster;\n      }\n\n      var c = clusterMap[n.cluster];\n\n      if (isNumber(n.x)) {\n        c.cx += n.x;\n      }\n\n      if (isNumber(n.y)) {\n        c.cy += n.y;\n      }\n\n      c.count++;\n    });\n\n    for (var key in clusterMap) {\n      clusterMap[key].cx /= clusterMap[key].count;\n      clusterMap[key].cy /= clusterMap[key].count;\n    }\n\n    return clusterMap;\n  };\n\n  G6Force.prototype.applyClusterForce = function (clusterMap, displacements) {\n    var self = this;\n    var gravity = self.gravity;\n    var nodes = self.nodes;\n    var clusterGravity = self.clusterGravity || gravity;\n    var alpha = this.alpha;\n    nodes.forEach(function (n, j) {\n      if (!isNumber(n.x) || !isNumber(n.y)) return;\n      var c = clusterMap[n.cluster];\n      var vecX = n.x - c.cx;\n      var vecY = n.y - c.cy;\n      var l = Math.sqrt(vecX * vecX + vecY * vecY);\n      displacements[j].x -= vecX * clusterGravity * alpha / l;\n      displacements[j].y -= vecY * clusterGravity * alpha / l;\n    });\n\n    for (var key in clusterMap) {\n      clusterMap[key].cx = 0;\n      clusterMap[key].cy = 0;\n      clusterMap[key].count = 0;\n    }\n\n    nodes.forEach(function (n) {\n      var c = clusterMap[n.cluster];\n\n      if (isNumber(n.x)) {\n        c.cx += n.x;\n      }\n\n      if (isNumber(n.y)) {\n        c.cy += n.y;\n      }\n\n      c.count++;\n    });\n\n    for (var key in clusterMap) {\n      clusterMap[key].cx /= clusterMap[key].count;\n      clusterMap[key].cy /= clusterMap[key].count;\n    }\n  };\n\n  G6Force.prototype.applyCalculate = function (nodes, edges, displacements) {\n    var self = this; // store the vx, vy, and distance to reduce dulplicate calculation\n\n    var vecMap = {};\n    nodes.forEach(function (v, i) {\n      displacements[i] = {\n        x: 0,\n        y: 0\n      };\n      nodes.forEach(function (u, j) {\n        if (i < j) return;\n        var vx = v.x - u.x;\n        var vy = v.y - u.y;\n        var vl = vx * vx + vy * vy;\n        if (vl < 1) vl = Math.sqrt(vl);\n\n        if (vx === 0) {\n          vx = Math.random() * 0.01;\n          vl += vx * vx;\n        }\n\n        if (vy === 0) {\n          vy = Math.random() * 0.01;\n          vl += vy * vy;\n        }\n\n        var sqrtVl = Math.sqrt(vl);\n        vecMap[v.id + \"-\" + u.id] = {\n          vx: vx,\n          vy: vy,\n          vl: vl,\n          sqrtVl: sqrtVl\n        };\n        vecMap[u.id + \"-\" + v.id] = {\n          vx: -vx,\n          vy: -vy,\n          vl: vl,\n          sqrtVl: sqrtVl\n        };\n      });\n    });\n    self.calRepulsive(nodes, displacements, vecMap);\n    self.calAttractive(edges, displacements, vecMap);\n  };\n\n  G6Force.prototype.calRepulsive = function (nodes, displacements, vecMap) {\n    var max = this.width * this.optimizeRangeFactor * this.width * this.optimizeRangeFactor;\n    var nodeStrength = this.nodeStrength;\n    var alpha = this.alpha;\n    var collideStrength = this.collideStrength;\n    var preventOverlap = this.preventOverlap;\n    var nodeSizeFunc = this.nodeSize;\n    nodes.forEach(function (v, i) {\n      nodes.forEach(function (u, j) {\n        if (i === j) {\n          return;\n        }\n\n        if (!isNumber(v.x) || !isNumber(u.x) || !isNumber(v.y) || !isNumber(u.y)) return;\n        var _a = vecMap[v.id + \"-\" + u.id],\n            vl = _a.vl,\n            vx = _a.vx,\n            vy = _a.vy;\n        if (vl > max) return;\n        displacements[i].x += vx * nodeStrength(u) * alpha / vl;\n        displacements[i].y += vy * nodeStrength(u) * alpha / vl; // collide strength\n\n        if (preventOverlap && i < j) {\n          var ri = nodeSizeFunc(v);\n          var rj = nodeSizeFunc(u);\n          var r = ri + rj;\n\n          if (vl < r * r) {\n            var sqrtVl = vecMap[v.id + \"-\" + u.id].sqrtVl;\n            var ll = (r - sqrtVl) / sqrtVl * collideStrength;\n            var rratio = rj * rj / (ri * ri + rj * rj);\n            var xl = vx * ll;\n            var yl = vy * ll;\n            displacements[i].x += xl * rratio;\n            displacements[i].y += yl * rratio;\n            rratio = 1 - rratio;\n            displacements[j].x -= xl * rratio;\n            displacements[j].y -= yl * rratio;\n          }\n        }\n      });\n    });\n  };\n\n  G6Force.prototype.calAttractive = function (edges, displacements, vecMap) {\n    var _this = this;\n\n    var linkDistance = this.linkDistance;\n    var alpha = this.alpha;\n    var linkStrength = this.linkStrength;\n    var bias = this.bias;\n    edges.forEach(function (e, i) {\n      if (!e.source || !e.target) return;\n      var uIndex = _this.nodeIdxMap[e.source];\n      var vIndex = _this.nodeIdxMap[e.target];\n\n      if (uIndex === vIndex) {\n        return;\n      }\n\n      var u = _this.nodeMap[e.source];\n      var v = _this.nodeMap[e.target];\n      if (!isNumber(v.x) || !isNumber(u.x) || !isNumber(v.y) || !isNumber(u.y)) return;\n      var _a = vecMap[e.target + \"-\" + e.source],\n          vl = _a.vl,\n          sqrtVl = _a.sqrtVl,\n          vx = _a.vx,\n          vy = _a.vy;\n      var l = (sqrtVl - linkDistance(e)) / sqrtVl * alpha * linkStrength(e);\n      var vecX = vx * l;\n      var vecY = vy * l;\n      var b = bias[i];\n      displacements[vIndex].x -= vecX * b;\n      displacements[vIndex].y -= vecY * b;\n      displacements[uIndex].x += vecX * (1 - b);\n      displacements[uIndex].y += vecY * (1 - b);\n    });\n  };\n\n  return G6Force;\n}(BaseLayout);\n\nexport default G6Force;"]},"metadata":{},"sourceType":"module"}