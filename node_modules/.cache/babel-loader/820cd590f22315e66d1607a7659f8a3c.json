{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Component_1 = require(\"../../model/Component\");\n\nvar axisModelCreator_1 = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin_1 = require(\"../axisModelCommonMixin\");\n\nvar model_1 = require(\"../../util/model\");\n\nvar CartesianAxisModel = function (_super) {\n  tslib_1.__extends(CartesianAxisModel, _super);\n\n  function CartesianAxisModel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CartesianAxisModel.prototype.getCoordSysModel = function () {\n    return this.getReferringComponents('grid', model_1.SINGLE_REFERRING).models[0];\n  };\n\n  CartesianAxisModel.type = 'cartesian2dAxis';\n  return CartesianAxisModel;\n}(Component_1[\"default\"]);\n\nzrUtil.mixin(CartesianAxisModel, axisModelCommonMixin_1.AxisModelCommonMixin);\nvar extraOption = {\n  offset: 0,\n  categorySortInfo: []\n};\naxisModelCreator_1[\"default\"]('x', CartesianAxisModel, extraOption);\naxisModelCreator_1[\"default\"]('y', CartesianAxisModel, extraOption);\nexports[\"default\"] = CartesianAxisModel;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/coord/cartesian/AxisModel.js"],"names":["exports","__esModule","tslib_1","require","zrUtil","Component_1","axisModelCreator_1","axisModelCommonMixin_1","model_1","CartesianAxisModel","_super","__extends","apply","arguments","prototype","getCoordSysModel","getReferringComponents","SINGLE_REFERRING","models","type","mixin","AxisModelCommonMixin","extraOption","offset","categorySortInfo"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AAEA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIE,WAAW,GAAGF,OAAO,CAAC,uBAAD,CAAzB;;AAEA,IAAIG,kBAAkB,GAAGH,OAAO,CAAC,qBAAD,CAAhC;;AAEA,IAAII,sBAAsB,GAAGJ,OAAO,CAAC,yBAAD,CAApC;;AAEA,IAAIK,OAAO,GAAGL,OAAO,CAAC,kBAAD,CAArB;;AAEA,IAAIM,kBAAkB,GAAG,UAAUC,MAAV,EAAkB;AACzCR,EAAAA,OAAO,CAACS,SAAR,CAAkBF,kBAAlB,EAAsCC,MAAtC;;AAEA,WAASD,kBAAT,GAA8B;AAC5B,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACD;;AAEDJ,EAAAA,kBAAkB,CAACK,SAAnB,CAA6BC,gBAA7B,GAAgD,YAAY;AAC1D,WAAO,KAAKC,sBAAL,CAA4B,MAA5B,EAAoCR,OAAO,CAACS,gBAA5C,EAA8DC,MAA9D,CAAqE,CAArE,CAAP;AACD,GAFD;;AAIAT,EAAAA,kBAAkB,CAACU,IAAnB,GAA0B,iBAA1B;AACA,SAAOV,kBAAP;AACD,CAbwB,CAavBJ,WAAW,CAAC,SAAD,CAbY,CAAzB;;AAeAD,MAAM,CAACgB,KAAP,CAAaX,kBAAb,EAAiCF,sBAAsB,CAACc,oBAAxD;AACA,IAAIC,WAAW,GAAG;AAChBC,EAAAA,MAAM,EAAE,CADQ;AAEhBC,EAAAA,gBAAgB,EAAE;AAFF,CAAlB;AAIAlB,kBAAkB,CAAC,SAAD,CAAlB,CAA8B,GAA9B,EAAmCG,kBAAnC,EAAuDa,WAAvD;AACAhB,kBAAkB,CAAC,SAAD,CAAlB,CAA8B,GAA9B,EAAmCG,kBAAnC,EAAuDa,WAAvD;AACAtB,OAAO,CAAC,SAAD,CAAP,GAAqBS,kBAArB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Component_1 = require(\"../../model/Component\");\n\nvar axisModelCreator_1 = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin_1 = require(\"../axisModelCommonMixin\");\n\nvar model_1 = require(\"../../util/model\");\n\nvar CartesianAxisModel = function (_super) {\n  tslib_1.__extends(CartesianAxisModel, _super);\n\n  function CartesianAxisModel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CartesianAxisModel.prototype.getCoordSysModel = function () {\n    return this.getReferringComponents('grid', model_1.SINGLE_REFERRING).models[0];\n  };\n\n  CartesianAxisModel.type = 'cartesian2dAxis';\n  return CartesianAxisModel;\n}(Component_1[\"default\"]);\n\nzrUtil.mixin(CartesianAxisModel, axisModelCommonMixin_1.AxisModelCommonMixin);\nvar extraOption = {\n  offset: 0,\n  categorySortInfo: []\n};\naxisModelCreator_1[\"default\"]('x', CartesianAxisModel, extraOption);\naxisModelCreator_1[\"default\"]('y', CartesianAxisModel, extraOption);\nexports[\"default\"] = CartesianAxisModel;"]},"metadata":{},"sourceType":"script"}