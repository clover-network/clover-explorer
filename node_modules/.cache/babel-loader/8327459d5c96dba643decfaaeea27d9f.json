{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { groupBy } from '@antv/util';\nimport { tooltip, interaction as commonInteraction, animation as commonAnimation, theme as commonTheme, limitInPlot as commonLimitInPlot, scale } from '../../adaptor/common';\nimport { interval } from '../../adaptor/geometries';\nimport { flow, findViewById, findGeometry, transformLabel, deepAssign } from '../../utils';\nimport { FIRST_AXES_VIEW, SECOND_AXES_VIEW } from './constant';\nimport { isHorizontal, transformData } from './utils';\n/**\n * geometry 处理\n * @param params\n */\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var data = options.data,\n      xField = options.xField,\n      yField = options.yField,\n      color = options.color,\n      barStyle = options.barStyle,\n      widthRatio = options.widthRatio,\n      legend = options.legend,\n      layout = options.layout; // 处理数据\n\n  var ds = transformData(xField, yField, data); // 再次处理数据，通过 type 字段分成左右数据\n\n  var groupData = Object.values(groupBy(ds, 'type'));\n  chart.scale({\n    type: {\n      sync: true\n    }\n  }); // 在创建子 view 执行后不行，需要在前面处理 legend\n\n  if (legend) {\n    chart.legend('type', legend);\n  } else if (legend === false) {\n    chart.legend(false);\n  } // 创建 view\n\n\n  var firstView;\n  var secondView; // 横向\n\n  if (isHorizontal(layout)) {\n    firstView = chart.createView({\n      region: {\n        start: {\n          x: 0,\n          y: 0\n        },\n        end: {\n          x: 0.5,\n          y: 1\n        }\n      },\n      id: FIRST_AXES_VIEW\n    });\n    firstView.coordinate().transpose().reflect('x');\n    secondView = chart.createView({\n      region: {\n        start: {\n          x: 0.5,\n          y: 0\n        },\n        end: {\n          x: 1,\n          y: 1\n        }\n      },\n      id: SECOND_AXES_VIEW\n    });\n    secondView.coordinate().transpose();\n  } else {\n    // 纵向\n    firstView = chart.createView({\n      region: {\n        start: {\n          x: 0,\n          y: 0\n        },\n        end: {\n          x: 1,\n          y: 0.5\n        }\n      },\n      id: FIRST_AXES_VIEW\n    });\n    secondView = chart.createView({\n      region: {\n        start: {\n          x: 0,\n          y: 0.5\n        },\n        end: {\n          x: 1,\n          y: 1\n        }\n      },\n      id: SECOND_AXES_VIEW\n    });\n    secondView.coordinate().reflect('y').rotate(Math.PI * 0); // 旋转\n  }\n\n  firstView.data(groupData[0]);\n  var left = deepAssign({}, params, {\n    chart: firstView,\n    options: {\n      widthRatio: widthRatio,\n      xField: xField,\n      yField: yField[0],\n      seriesField: 'type',\n      interval: {\n        color: color,\n        style: barStyle\n      }\n    }\n  });\n  interval(left);\n  secondView.data(groupData[1]);\n  var right = deepAssign({}, params, {\n    chart: secondView,\n    options: {\n      xField: xField,\n      yField: yField[1],\n      seriesField: 'type',\n      widthRatio: widthRatio,\n      interval: {\n        color: color,\n        style: barStyle\n      }\n    }\n  });\n  interval(right);\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\n\n\nfunction meta(params) {\n  var _a, _b;\n\n  var options = params.options,\n      chart = params.chart;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField;\n  var firstView = findViewById(chart, FIRST_AXES_VIEW);\n  var secondView = findViewById(chart, SECOND_AXES_VIEW);\n  scale((_a = {}, _a[xField] = xAxis, _a[yField[0]] = yAxis[yField[0]], _a))(deepAssign({}, params, {\n    chart: firstView\n  }));\n  scale((_b = {}, _b[xField] = xAxis, _b[yField[1]] = yAxis[yField[1]], _b))(deepAssign({}, params, {\n    chart: secondView\n  }));\n  return params;\n}\n/**\n * axis 配置\n * @param params\n */\n\n\nfunction axis(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField,\n      layout = options.layout;\n  var firstView = findViewById(chart, FIRST_AXES_VIEW);\n  var secondView = findViewById(chart, SECOND_AXES_VIEW); // 第二个 view axis 始终隐藏\n\n  secondView.axis(xField, false); // 为 false 则是不显示 firstView 轴\n\n  if (xAxis === false) {\n    firstView.axis(xField, false);\n  } else {\n    firstView.axis(xField, __assign({\n      // 不同布局 firstView 的坐标轴显示位置\n      position: isHorizontal(layout) ? 'top' : 'bottom'\n    }, xAxis));\n  }\n\n  if (yAxis === false) {\n    firstView.axis(yField[0], false);\n    secondView.axis(yField[1], false);\n  } else {\n    firstView.axis(yField[0], yAxis[yField[0]]);\n    secondView.axis(yField[1], yAxis[yField[1]]);\n  }\n  /**\n   *  这个注入，主要是在syncViewPadding时候拿到相对应的配置：布局和轴的位置\n   *  TODO 之后希望 g2 View 对象可以开放 setter 可以设置一些需要的东西\n   */\n  //@ts-ignore\n\n\n  chart.__axisPosition = {\n    position: firstView.getOptions().axes[xField].position,\n    layout: layout\n  };\n  return params;\n}\n/**\n * interaction 配置\n * @param params\n */\n\n\nexport function interaction(params) {\n  var chart = params.chart;\n  commonInteraction(deepAssign({}, params, {\n    chart: findViewById(chart, FIRST_AXES_VIEW)\n  }));\n  commonInteraction(deepAssign({}, params, {\n    chart: findViewById(chart, SECOND_AXES_VIEW)\n  }));\n  return params;\n}\n/**\n * limitInPlot\n * @param params\n */\n\nexport function limitInPlot(params) {\n  var chart = params.chart,\n      options = params.options;\n  var yField = options.yField,\n      yAxis = options.yAxis;\n  commonLimitInPlot(deepAssign({}, params, {\n    chart: findViewById(chart, FIRST_AXES_VIEW),\n    options: {\n      yAxis: yAxis[yField[0]]\n    }\n  }));\n  commonLimitInPlot(deepAssign({}, params, {\n    chart: findViewById(chart, SECOND_AXES_VIEW),\n    options: {\n      yAxis: yAxis[yField[1]]\n    }\n  }));\n  return params;\n}\n/**\n * theme\n * @param params\n */\n\nexport function theme(params) {\n  var chart = params.chart;\n  commonTheme(deepAssign({}, params, {\n    chart: findViewById(chart, FIRST_AXES_VIEW)\n  }));\n  commonTheme(deepAssign({}, params, {\n    chart: findViewById(chart, SECOND_AXES_VIEW)\n  }));\n  return params;\n}\n/**\n * animation\n * @param params\n */\n\nexport function animation(params) {\n  var chart = params.chart;\n  commonAnimation(deepAssign({}, params, {\n    chart: findViewById(chart, FIRST_AXES_VIEW)\n  }));\n  commonAnimation(deepAssign({}, params, {\n    chart: findViewById(chart, SECOND_AXES_VIEW)\n  }));\n  return params;\n}\n/**\n * label 配置\n * @param params\n */\n\nfunction label(params) {\n  var chart = params.chart,\n      options = params.options;\n  var label = options.label,\n      yField = options.yField;\n  var firstView = findViewById(chart, FIRST_AXES_VIEW);\n  var secondView = findViewById(chart, SECOND_AXES_VIEW);\n  var leftGeometry = findGeometry(firstView, 'interval');\n  var rightGeometry = findGeometry(secondView, 'interval');\n\n  if (!label) {\n    leftGeometry.label(false);\n    rightGeometry.label(false);\n  } else {\n    var callback = label.callback,\n        cfg = __rest(label, [\"callback\"]);\n\n    leftGeometry.label({\n      fields: [yField[0]],\n      callback: callback,\n      cfg: transformLabel(cfg)\n    });\n    rightGeometry.label({\n      fields: [yField[1]],\n      callback: callback,\n      cfg: transformLabel(cfg)\n    });\n  }\n\n  return params;\n}\n/**\n * 对称条形图适配器\n * @param chart\n * @param options\n */\n\n\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(geometry, meta, axis, limitInPlot, theme, label, tooltip, interaction, animation)(params);\n}","map":{"version":3,"sources":["../../../src/plots/bidirectional-bar/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { View } from '@antv/g2';\nimport { groupBy } from '@antv/util';\nimport { Params } from '../../core/adaptor';\nimport {\n  tooltip,\n  interaction as commonInteraction,\n  animation as commonAnimation,\n  theme as commonTheme,\n  limitInPlot as commonLimitInPlot,\n  scale,\n} from '../../adaptor/common';\nimport { interval } from '../../adaptor/geometries';\nimport { flow, findViewById, findGeometry, transformLabel, deepAssign } from '../../utils';\nimport { BidirectionalBarOptions } from './types';\nimport { FIRST_AXES_VIEW, SECOND_AXES_VIEW } from './constant';\nimport { isHorizontal, transformData } from './utils';\n\n/**\n * geometry 处理\n * @param params\n */\nfunction geometry(params: Params<BidirectionalBarOptions>): Params<BidirectionalBarOptions> {\n  const { chart, options } = params;\n  const { data, xField, yField, color, barStyle, widthRatio, legend, layout } = options;\n\n  // 处理数据\n  const ds = transformData(xField, yField, data);\n  // 再次处理数据，通过 type 字段分成左右数据\n  const groupData: any[] = Object.values(groupBy(ds, 'type'));\n  chart.scale({\n    type: {\n      sync: true,\n    },\n  });\n  // 在创建子 view 执行后不行，需要在前面处理 legend\n  if (legend) {\n    chart.legend('type', legend);\n  } else if (legend === false) {\n    chart.legend(false);\n  }\n  // 创建 view\n  let firstView: View;\n  let secondView: View;\n\n  // 横向\n  if (isHorizontal(layout)) {\n    firstView = chart.createView({\n      region: {\n        start: { x: 0, y: 0 },\n        end: { x: 0.5, y: 1 },\n      },\n      id: FIRST_AXES_VIEW,\n    });\n\n    firstView.coordinate().transpose().reflect('x');\n\n    secondView = chart.createView({\n      region: {\n        start: { x: 0.5, y: 0 },\n        end: { x: 1, y: 1 },\n      },\n      id: SECOND_AXES_VIEW,\n    });\n    secondView.coordinate().transpose();\n  } else {\n    // 纵向\n    firstView = chart.createView({\n      region: {\n        start: { x: 0, y: 0 },\n        end: { x: 1, y: 0.5 },\n      },\n      id: FIRST_AXES_VIEW,\n    });\n    secondView = chart.createView({\n      region: {\n        start: { x: 0, y: 0.5 },\n        end: { x: 1, y: 1 },\n      },\n      id: SECOND_AXES_VIEW,\n    });\n    secondView\n      .coordinate()\n      .reflect('y')\n      .rotate(Math.PI * 0); // 旋转\n  }\n\n  firstView.data(groupData[0]);\n  const left = deepAssign({}, params, {\n    chart: firstView,\n    options: {\n      widthRatio,\n      xField,\n      yField: yField[0],\n      seriesField: 'type',\n      interval: {\n        color,\n        style: barStyle,\n      },\n    },\n  });\n  interval(left);\n\n  secondView.data(groupData[1]);\n  const right = deepAssign({}, params, {\n    chart: secondView,\n    options: {\n      xField,\n      yField: yField[1],\n      seriesField: 'type',\n      widthRatio,\n      interval: {\n        color,\n        style: barStyle,\n      },\n    },\n  });\n\n  interval(right);\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params: Params<BidirectionalBarOptions>): Params<BidirectionalBarOptions> {\n  const { options, chart } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n  const firstView = findViewById(chart, FIRST_AXES_VIEW);\n  const secondView = findViewById(chart, SECOND_AXES_VIEW);\n  scale({\n    [xField]: xAxis,\n    [yField[0]]: yAxis[yField[0]],\n  })(deepAssign({}, params, { chart: firstView }));\n\n  scale({\n    [xField]: xAxis,\n    [yField[1]]: yAxis[yField[1]],\n  })(deepAssign({}, params, { chart: secondView }));\n\n  return params;\n}\n\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params: Params<BidirectionalBarOptions>): Params<BidirectionalBarOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, yField, layout } = options;\n\n  const firstView = findViewById(chart, FIRST_AXES_VIEW);\n  const secondView = findViewById(chart, SECOND_AXES_VIEW);\n  // 第二个 view axis 始终隐藏\n  secondView.axis(xField, false);\n\n  // 为 false 则是不显示 firstView 轴\n  if (xAxis === false) {\n    firstView.axis(xField, false);\n  } else {\n    firstView.axis(xField, {\n      // 不同布局 firstView 的坐标轴显示位置\n      position: isHorizontal(layout) ? 'top' : 'bottom',\n      ...xAxis,\n    });\n  }\n\n  if (yAxis === false) {\n    firstView.axis(yField[0], false);\n    secondView.axis(yField[1], false);\n  } else {\n    firstView.axis(yField[0], yAxis[yField[0]]);\n    secondView.axis(yField[1], yAxis[yField[1]]);\n  }\n  /**\n   *  这个注入，主要是在syncViewPadding时候拿到相对应的配置：布局和轴的位置\n   *  TODO 之后希望 g2 View 对象可以开放 setter 可以设置一些需要的东西\n   */\n\n  //@ts-ignore\n  chart.__axisPosition = {\n    position: firstView.getOptions().axes[xField].position,\n    layout,\n  };\n  return params;\n}\n\n/**\n * interaction 配置\n * @param params\n */\nexport function interaction(params: Params<BidirectionalBarOptions>): Params<BidirectionalBarOptions> {\n  const { chart } = params;\n\n  commonInteraction(deepAssign({}, params, { chart: findViewById(chart, FIRST_AXES_VIEW) }));\n  commonInteraction(deepAssign({}, params, { chart: findViewById(chart, SECOND_AXES_VIEW) }));\n\n  return params;\n}\n\n/**\n * limitInPlot\n * @param params\n */\nexport function limitInPlot(params: Params<BidirectionalBarOptions>): Params<BidirectionalBarOptions> {\n  const { chart, options } = params;\n  const { yField, yAxis } = options;\n\n  commonLimitInPlot(\n    deepAssign({}, params, {\n      chart: findViewById(chart, FIRST_AXES_VIEW),\n      options: {\n        yAxis: yAxis[yField[0]],\n      },\n    })\n  );\n\n  commonLimitInPlot(\n    deepAssign({}, params, {\n      chart: findViewById(chart, SECOND_AXES_VIEW),\n      options: {\n        yAxis: yAxis[yField[1]],\n      },\n    })\n  );\n\n  return params;\n}\n\n/**\n * theme\n * @param params\n */\nexport function theme(params: Params<BidirectionalBarOptions>): Params<BidirectionalBarOptions> {\n  const { chart } = params;\n\n  commonTheme(deepAssign({}, params, { chart: findViewById(chart, FIRST_AXES_VIEW) }));\n  commonTheme(deepAssign({}, params, { chart: findViewById(chart, SECOND_AXES_VIEW) }));\n\n  return params;\n}\n\n/**\n * animation\n * @param params\n */\nexport function animation(params: Params<BidirectionalBarOptions>): Params<BidirectionalBarOptions> {\n  const { chart } = params;\n\n  commonAnimation(deepAssign({}, params, { chart: findViewById(chart, FIRST_AXES_VIEW) }));\n  commonAnimation(deepAssign({}, params, { chart: findViewById(chart, SECOND_AXES_VIEW) }));\n\n  return params;\n}\n\n/**\n * label 配置\n * @param params\n */\nfunction label(params: Params<BidirectionalBarOptions>): Params<BidirectionalBarOptions> {\n  const { chart, options } = params;\n  const { label, yField } = options;\n\n  const firstView = findViewById(chart, FIRST_AXES_VIEW);\n  const secondView = findViewById(chart, SECOND_AXES_VIEW);\n  const leftGeometry = findGeometry(firstView, 'interval');\n  const rightGeometry = findGeometry(secondView, 'interval');\n\n  if (!label) {\n    leftGeometry.label(false);\n    rightGeometry.label(false);\n  } else {\n    const { callback, ...cfg } = label;\n    leftGeometry.label({\n      fields: [yField[0]],\n      callback,\n      cfg: transformLabel(cfg),\n    });\n    rightGeometry.label({\n      fields: [yField[1]],\n      callback,\n      cfg: transformLabel(cfg),\n    });\n  }\n\n  return params;\n}\n\n/**\n * 对称条形图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<BidirectionalBarOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(geometry, meta, axis, limitInPlot, theme, label, tooltip, interaction, animation)(params);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}