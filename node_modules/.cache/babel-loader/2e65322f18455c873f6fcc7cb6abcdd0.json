{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { findGeometry } from '../../utils';\nimport { tooltip, slider, interaction, animation, theme, scale, annotation, scrollbar, limitInPlot } from '../../adaptor/common';\nimport { conversionTag } from '../../adaptor/conversion-tag';\nimport { connectedArea } from '../../adaptor/connected-area';\nimport { interval } from '../../adaptor/geometries';\nimport { flow, transformLabel, deepAssign } from '../../utils';\nimport { adjustYMetaByZero } from '../../utils/data';\nimport { percent } from '../../utils/transform/percent';\n/**\n * defaultOptions\n * @param params\n */\n\nfunction defaultOptions(params) {\n  var options = params.options; // 默认 legend 位置\n\n  var legend = options.legend;\n  var seriesField = options.seriesField,\n      isStack = options.isStack;\n\n  if (seriesField) {\n    if (legend !== false) {\n      legend = __assign({\n        position: isStack ? 'right-top' : 'top-left'\n      }, legend);\n    }\n  } else {\n    legend = false;\n  } // @ts-ignore 直接改值\n\n\n  params.options.legend = legend;\n  return params;\n}\n/**\n * 字段\n * @param params\n */\n\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var data = options.data,\n      columnStyle = options.columnStyle,\n      color = options.color,\n      columnWidthRatio = options.columnWidthRatio,\n      isPercent = options.isPercent,\n      xField = options.xField,\n      yField = options.yField,\n      seriesField = options.seriesField,\n      tooltip = options.tooltip;\n  var chartData = isPercent ? percent(data, yField, xField, yField) : data;\n  chart.data(chartData); // 百分比堆积图，默认会给一个 % 格式化逻辑, 用户可自定义\n\n  var tooltipOptions = isPercent ? __assign({\n    formatter: function (datum) {\n      return {\n        name: datum[seriesField] || datum[xField],\n        value: (Number(datum[yField]) * 100).toFixed(2) + '%'\n      };\n    }\n  }, tooltip) : tooltip;\n  var p = deepAssign({}, params, {\n    options: {\n      widthRatio: columnWidthRatio,\n      tooltip: tooltipOptions,\n      interval: {\n        style: columnStyle,\n        color: color\n      }\n    }\n  });\n  interval(p);\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\n\n\nfunction meta(params) {\n  var _a, _b;\n\n  var options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField,\n      data = options.data;\n  return flow(scale((_a = {}, _a[xField] = xAxis, _a[yField] = yAxis, _a), (_b = {}, _b[xField] = {\n    type: 'cat'\n  }, _b[yField] = adjustYMetaByZero(data, yField), _b)))(params);\n}\n/**\n * axis 配置\n * @param params\n */\n\n\nfunction axis(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField; // 为 false 则是不显示轴\n\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(yField, false);\n  } else {\n    chart.axis(yField, yAxis);\n  }\n\n  return params;\n}\n/**\n * legend 配置\n * @param params\n */\n\n\nexport function legend(params) {\n  var chart = params.chart,\n      options = params.options;\n  var legend = options.legend,\n      seriesField = options.seriesField;\n\n  if (legend && seriesField) {\n    chart.legend(seriesField, legend);\n  } else if (legend === false) {\n    chart.legend(false);\n  }\n\n  return params;\n}\n/**\n * 数据标签\n * @param params\n */\n\nfunction label(params) {\n  var chart = params.chart,\n      options = params.options;\n  var label = options.label,\n      yField = options.yField,\n      isRange = options.isRange;\n  var geometry = findGeometry(chart, 'interval');\n\n  if (!label) {\n    geometry.label(false);\n  } else {\n    var callback = label.callback,\n        cfg = __rest(label, [\"callback\"]);\n\n    geometry.label({\n      fields: [yField],\n      callback: callback,\n      cfg: __assign({\n        // 配置默认的 label layout： 如果用户没有指定 layout 和 position， 则自动配置 layout\n        layout: (cfg === null || cfg === void 0 ? void 0 : cfg.position) ? undefined : [{\n          type: 'interval-adjust-position'\n        }, {\n          type: 'interval-hide-overlap'\n        }, {\n          type: 'adjust-color'\n        }, {\n          type: 'limit-in-plot',\n          cfg: {\n            action: 'hide'\n          }\n        }]\n      }, transformLabel(isRange ? __assign({\n        content: function (item) {\n          var _a;\n\n          return (_a = item[yField]) === null || _a === void 0 ? void 0 : _a.join('-');\n        }\n      }, cfg) : cfg))\n    });\n  }\n\n  return params;\n}\n/**\n * 柱形图适配器\n * @param params\n */\n\n\nexport function adaptor(params, isBar) {\n  if (isBar === void 0) {\n    isBar = false;\n  }\n\n  var options = params.options;\n  var seriesField = options.seriesField;\n  return flow(defaultOptions, // 处理默认配置\n  theme, // theme 需要在 geometry 之前\n  geometry, meta, axis, legend, tooltip, slider, scrollbar, label, interaction, animation, annotation(), conversionTag(options.yField, !isBar, !!seriesField), // 有拆分的时候禁用转化率\n  connectedArea(!options.isStack), limitInPlot)(params);\n}","map":{"version":3,"sources":["../../../src/plots/column/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { Params } from '../../core/adaptor';\nimport { findGeometry } from '../../utils';\nimport {\n  tooltip,\n  slider,\n  interaction,\n  animation,\n  theme,\n  scale,\n  annotation,\n  scrollbar,\n  limitInPlot,\n} from '../../adaptor/common';\nimport { conversionTag } from '../../adaptor/conversion-tag';\nimport { connectedArea } from '../../adaptor/connected-area';\nimport { interval } from '../../adaptor/geometries';\nimport { flow, transformLabel, deepAssign } from '../../utils';\nimport { adjustYMetaByZero } from '../../utils/data';\nimport { percent } from '../../utils/transform/percent';\nimport { Datum } from '../../types';\nimport { ColumnOptions } from './types';\n\n/**\n * defaultOptions\n * @param params\n */\nfunction defaultOptions(params: Params<ColumnOptions>): Params<ColumnOptions> {\n  const { options } = params;\n  // 默认 legend 位置\n  let { legend } = options;\n  const { seriesField, isStack } = options;\n\n  if (seriesField) {\n    if (legend !== false) {\n      legend = {\n        position: isStack ? 'right-top' : 'top-left',\n        ...legend,\n      };\n    }\n  } else {\n    legend = false;\n  }\n\n  // @ts-ignore 直接改值\n  params.options.legend = legend;\n  return params;\n}\n\n/**\n * 字段\n * @param params\n */\nfunction geometry(params: Params<ColumnOptions>): Params<ColumnOptions> {\n  const { chart, options } = params;\n  const { data, columnStyle, color, columnWidthRatio, isPercent, xField, yField, seriesField, tooltip } = options;\n  const chartData = isPercent ? percent(data, yField, xField, yField) : data;\n\n  chart.data(chartData);\n\n  // 百分比堆积图，默认会给一个 % 格式化逻辑, 用户可自定义\n  const tooltipOptions = isPercent\n    ? {\n        formatter: (datum: Datum) => ({\n          name: datum[seriesField] || datum[xField],\n          value: (Number(datum[yField]) * 100).toFixed(2) + '%',\n        }),\n        ...tooltip,\n      }\n    : tooltip;\n\n  const p = deepAssign({}, params, {\n    options: {\n      widthRatio: columnWidthRatio,\n      tooltip: tooltipOptions,\n      interval: {\n        style: columnStyle,\n        color,\n      },\n    },\n  });\n  interval(p);\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params: Params<ColumnOptions>): Params<ColumnOptions> {\n  const { options } = params;\n  const { xAxis, yAxis, xField, yField, data } = options;\n\n  return flow(\n    scale(\n      {\n        [xField]: xAxis,\n        [yField]: yAxis,\n      },\n      {\n        [xField]: {\n          type: 'cat',\n        },\n        [yField]: adjustYMetaByZero(data, yField),\n      }\n    )\n  )(params);\n}\n\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params: Params<ColumnOptions>): Params<ColumnOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  // 为 false 则是不显示轴\n  if (xAxis === false) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (yAxis === false) {\n    chart.axis(yField, false);\n  } else {\n    chart.axis(yField, yAxis);\n  }\n\n  return params;\n}\n\n/**\n * legend 配置\n * @param params\n */\nexport function legend(params: Params<ColumnOptions>): Params<ColumnOptions> {\n  const { chart, options } = params;\n  const { legend, seriesField } = options;\n\n  if (legend && seriesField) {\n    chart.legend(seriesField, legend);\n  } else if (legend === false) {\n    chart.legend(false);\n  }\n\n  return params;\n}\n\n/**\n * 数据标签\n * @param params\n */\nfunction label(params: Params<ColumnOptions>): Params<ColumnOptions> {\n  const { chart, options } = params;\n  const { label, yField, isRange } = options;\n\n  const geometry = findGeometry(chart, 'interval');\n\n  if (!label) {\n    geometry.label(false);\n  } else {\n    const { callback, ...cfg } = label;\n    geometry.label({\n      fields: [yField],\n      callback,\n      cfg: {\n        // 配置默认的 label layout： 如果用户没有指定 layout 和 position， 则自动配置 layout\n        layout: cfg?.position\n          ? undefined\n          : [\n              { type: 'interval-adjust-position' },\n              { type: 'interval-hide-overlap' },\n              { type: 'adjust-color' },\n              { type: 'limit-in-plot', cfg: { action: 'hide' } },\n            ],\n        ...transformLabel(\n          isRange\n            ? {\n                content: (item: object) => {\n                  return item[yField]?.join('-');\n                },\n                ...cfg,\n              }\n            : cfg\n        ),\n      },\n    });\n  }\n\n  return params;\n}\n\n/**\n * 柱形图适配器\n * @param params\n */\nexport function adaptor(params: Params<ColumnOptions>, isBar = false) {\n  const { options } = params;\n  const { seriesField } = options;\n  return flow(\n    defaultOptions, // 处理默认配置\n    theme, // theme 需要在 geometry 之前\n    geometry,\n    meta,\n    axis,\n    legend,\n    tooltip,\n    slider,\n    scrollbar,\n    label,\n    interaction,\n    animation,\n    annotation(),\n    conversionTag<ColumnOptions>(options.yField, !isBar, !!seriesField), // 有拆分的时候禁用转化率\n    connectedArea<ColumnOptions>(!options.isStack),\n    limitInPlot\n  )(params);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}