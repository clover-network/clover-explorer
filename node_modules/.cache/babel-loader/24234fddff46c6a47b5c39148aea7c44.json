{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nimport { getTooltipMarker, encodeHTML, makeValueReadable, convertToColorString } from '../../util/format';\nimport { isString, each, hasOwn, isArray, map, assert, extend } from 'zrender/esm/core/util';\nimport { SortOrderComparator } from '../../data/helper/dataValueHelper';\nimport { getRandomIdBase } from '../../util/number';\nvar TOOLTIP_NAME_TEXT_STYLE_CSS = 'font-size:12px;color:#6e7079';\nvar TOOLTIP_TEXT_STYLE_RICH = {\n  fontSize: 12,\n  fill: '#6e7079'\n};\nvar TOOLTIP_VALUE_TEXT_STYLE_CSS = 'font-size:14px;color:#464646;font-weight:900';\nvar TOOLTIP_VALUE_TEXT_STYLE_RICH = {\n  fontSize: 14,\n  fill: '#464646',\n  fontWeight: 900\n};\nvar TOOLTIP_LINE_HEIGHT_CSS = 'line-height:1';\nvar HTML_GAPS = [0, 10, 20, 30];\nvar RICH_TEXT_GAPS = ['', '\\n', '\\n\\n', '\\n\\n\\n'];\nexport function createTooltipMarkup(type, option) {\n  option.type = type;\n  return option;\n}\n\nfunction getBuilder(fragment) {\n  return hasOwn(builderMap, fragment.type) && builderMap[fragment.type];\n}\n\nvar builderMap = {\n  section: {\n    planLayout: function (fragment) {\n      var subBlockLen = fragment.blocks.length;\n      var thisBlockHasInnerGap = subBlockLen > 1 || subBlockLen > 0 && !fragment.noHeader;\n      var thisGapLevelBetweenSubBlocks = 0;\n      each(fragment.blocks, function (subBlock) {\n        getBuilder(subBlock).planLayout(subBlock);\n        var subGapLevel = subBlock.__gapLevelBetweenSubBlocks;\n\n        if (subGapLevel >= thisGapLevelBetweenSubBlocks) {\n          thisGapLevelBetweenSubBlocks = subGapLevel + (thisBlockHasInnerGap && (!subGapLevel || subBlock.type === 'section' && !subBlock.noHeader) ? 1 : 0);\n        }\n      });\n      fragment.__gapLevelBetweenSubBlocks = thisGapLevelBetweenSubBlocks;\n    },\n    build: function (ctx, fragment, topMarginForOuterGap) {\n      var noHeader = fragment.noHeader;\n      var gaps = getGap(fragment);\n      var subMarkupText = buildSubBlocks(ctx, fragment, noHeader ? topMarginForOuterGap : gaps.html);\n\n      if (noHeader) {\n        return subMarkupText;\n      }\n\n      var displayableHeader = makeValueReadable(fragment.header, 'ordinal', ctx.useUTC);\n\n      if (ctx.renderMode === 'richText') {\n        return wrapInlineNameRichText(ctx, displayableHeader) + gaps.richText + subMarkupText;\n      } else {\n        return wrapBlockHTML(\"<div style=\\\"\" + TOOLTIP_NAME_TEXT_STYLE_CSS + \";\" + TOOLTIP_LINE_HEIGHT_CSS + \";\\\">\" + encodeHTML(displayableHeader) + '</div>' + subMarkupText, topMarginForOuterGap);\n      }\n    }\n  },\n  nameValue: {\n    planLayout: function (fragment) {\n      fragment.__gapLevelBetweenSubBlocks = 0;\n    },\n    build: function (ctx, fragment, topMarginForOuterGap) {\n      var renderMode = ctx.renderMode;\n      var noName = fragment.noName;\n      var noValue = fragment.noValue;\n      var noMarker = !fragment.markerType;\n      var name = fragment.name;\n      var value = fragment.value;\n      var useUTC = ctx.useUTC;\n\n      if (noName && noValue) {\n        return;\n      }\n\n      var markerStr = noMarker ? '' : ctx.markupStyleCreator.makeTooltipMarker(fragment.markerType, fragment.markerColor || '#333', renderMode);\n      var readableName = noName ? '' : makeValueReadable(name, 'ordinal', useUTC);\n      var valueTypeOption = fragment.valueType;\n      var readableValueList = noValue ? [] : isArray(value) ? map(value, function (val, idx) {\n        return makeValueReadable(val, isArray(valueTypeOption) ? valueTypeOption[idx] : valueTypeOption, useUTC);\n      }) : [makeValueReadable(value, isArray(valueTypeOption) ? valueTypeOption[0] : valueTypeOption, useUTC)];\n      var valueAlignRight = !noMarker || !noName;\n      var valueCloseToMarker = !noMarker && noName;\n      return renderMode === 'richText' ? (noMarker ? '' : markerStr) + (noName ? '' : wrapInlineNameRichText(ctx, readableName)) + (noValue ? '' : wrapInlineValueRichText(ctx, readableValueList, valueAlignRight, valueCloseToMarker)) : wrapBlockHTML((noMarker ? '' : markerStr) + (noName ? '' : wrapInlineNameHTML(readableName, !noMarker)) + (noValue ? '' : wrapInlineValueHTML(readableValueList, valueAlignRight, valueCloseToMarker)), topMarginForOuterGap);\n    }\n  }\n};\n\nfunction buildSubBlocks(ctx, fragment, topMarginForOuterGap) {\n  var subMarkupTextList = [];\n  var subBlocks = fragment.blocks || [];\n  assert(!subBlocks || isArray(subBlocks));\n  subBlocks = subBlocks || [];\n  var orderMode = ctx.orderMode;\n\n  if (fragment.sortBlocks && orderMode) {\n    subBlocks = subBlocks.slice();\n    var orderMap = {\n      valueAsc: 'asc',\n      valueDesc: 'desc'\n    };\n\n    if (hasOwn(orderMap, orderMode)) {\n      var comparator_1 = new SortOrderComparator(orderMap[orderMode], null);\n      subBlocks.sort(function (a, b) {\n        return comparator_1.evaluate(a.sortParam, b.sortParam);\n      });\n    } else if (orderMode === 'seriesDesc') {\n      subBlocks.reverse();\n    }\n  }\n\n  var gaps = getGap(fragment);\n  each(subBlocks, function (subBlock, idx) {\n    var subMarkupText = getBuilder(subBlock).build(ctx, subBlock, idx > 0 ? gaps.html : 0);\n    subMarkupText != null && subMarkupTextList.push(subMarkupText);\n  });\n\n  if (!subMarkupTextList.length) {\n    return;\n  }\n\n  return ctx.renderMode === 'richText' ? subMarkupTextList.join(gaps.richText) : wrapBlockHTML(subMarkupTextList.join(''), topMarginForOuterGap);\n}\n\nexport function buildTooltipMarkup(fragment, markupStyleCreator, renderMode, orderMode, useUTC) {\n  if (!fragment) {\n    return;\n  }\n\n  var builder = getBuilder(fragment);\n  builder.planLayout(fragment);\n  var ctx = {\n    useUTC: useUTC,\n    renderMode: renderMode,\n    orderMode: orderMode,\n    markupStyleCreator: markupStyleCreator\n  };\n  return builder.build(ctx, fragment, 0);\n}\n\nfunction getGap(fragment) {\n  var gapLevelBetweenSubBlocks = fragment.__gapLevelBetweenSubBlocks;\n  return {\n    html: HTML_GAPS[gapLevelBetweenSubBlocks],\n    richText: RICH_TEXT_GAPS[gapLevelBetweenSubBlocks]\n  };\n}\n\nfunction wrapBlockHTML(encodedContent, topGap) {\n  var clearfix = '<div style=\"clear:both\"></div>';\n  var marginCSS = \"margin: \" + topGap + \"px 0 0\";\n  return \"<div style=\\\"\" + marginCSS + \";\" + TOOLTIP_LINE_HEIGHT_CSS + \";\\\">\" + encodedContent + clearfix + '</div>';\n}\n\nfunction wrapInlineNameHTML(name, leftHasMarker) {\n  var marginCss = leftHasMarker ? 'margin-left:2px' : '';\n  return \"<span style=\\\"\" + TOOLTIP_NAME_TEXT_STYLE_CSS + \";\" + marginCss + \"\\\">\" + encodeHTML(name) + '</span>';\n}\n\nfunction wrapInlineValueHTML(valueList, alignRight, valueCloseToMarker) {\n  var paddingStr = valueCloseToMarker ? '10px' : '20px';\n  var alignCSS = alignRight ? \"float:right;margin-left:\" + paddingStr : '';\n  return \"<span style=\\\"\" + alignCSS + \";\" + TOOLTIP_VALUE_TEXT_STYLE_CSS + \"\\\">\" + map(valueList, function (value) {\n    return encodeHTML(value);\n  }).join('&nbsp;&nbsp;') + '</span>';\n}\n\nfunction wrapInlineNameRichText(ctx, name) {\n  return ctx.markupStyleCreator.wrapRichTextStyle(name, TOOLTIP_TEXT_STYLE_RICH);\n}\n\nfunction wrapInlineValueRichText(ctx, valueList, alignRight, valueCloseToMarker) {\n  var styles = [TOOLTIP_VALUE_TEXT_STYLE_RICH];\n  var paddingLeft = valueCloseToMarker ? 10 : 20;\n  alignRight && styles.push({\n    padding: [0, 0, 0, paddingLeft],\n    align: 'right'\n  });\n  return ctx.markupStyleCreator.wrapRichTextStyle(valueList.join('  '), styles);\n}\n\nexport function retrieveVisualColorForTooltipMarker(series, dataIndex) {\n  var style = series.getData().getItemVisual(dataIndex, 'style');\n  var color = style[series.visualDrawType];\n  return convertToColorString(color);\n}\nexport function getPaddingFromTooltipModel(model, renderMode) {\n  var padding = model.get('padding');\n  return padding != null ? padding : renderMode === 'richText' ? [8, 10] : 10;\n}\n\nvar TooltipMarkupStyleCreator = function () {\n  function TooltipMarkupStyleCreator() {\n    this.richTextStyles = {};\n    this._nextStyleNameId = getRandomIdBase();\n  }\n\n  TooltipMarkupStyleCreator.prototype._generateStyleName = function () {\n    return '__EC_aUTo_' + this._nextStyleNameId++;\n  };\n\n  TooltipMarkupStyleCreator.prototype.makeTooltipMarker = function (markerType, colorStr, renderMode) {\n    var markerId = renderMode === 'richText' ? this._generateStyleName() : null;\n    var marker = getTooltipMarker({\n      color: colorStr,\n      type: markerType,\n      renderMode: renderMode,\n      markerId: markerId\n    });\n\n    if (isString(marker)) {\n      return marker;\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        assert(markerId);\n      }\n\n      this.richTextStyles[markerId] = marker.style;\n      return marker.content;\n    }\n  };\n\n  TooltipMarkupStyleCreator.prototype.wrapRichTextStyle = function (text, styles) {\n    var finalStl = {};\n\n    if (isArray(styles)) {\n      each(styles, function (stl) {\n        return extend(finalStl, stl);\n      });\n    } else {\n      extend(finalStl, styles);\n    }\n\n    var styleName = this._generateStyleName();\n\n    this.richTextStyles[styleName] = finalStl;\n    return \"{\" + styleName + \"|\" + text + \"}\";\n  };\n\n  return TooltipMarkupStyleCreator;\n}();\n\nexport { TooltipMarkupStyleCreator };","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/esm/component/tooltip/tooltipMarkup.js"],"names":["getTooltipMarker","encodeHTML","makeValueReadable","convertToColorString","isString","each","hasOwn","isArray","map","assert","extend","SortOrderComparator","getRandomIdBase","TOOLTIP_NAME_TEXT_STYLE_CSS","TOOLTIP_TEXT_STYLE_RICH","fontSize","fill","TOOLTIP_VALUE_TEXT_STYLE_CSS","TOOLTIP_VALUE_TEXT_STYLE_RICH","fontWeight","TOOLTIP_LINE_HEIGHT_CSS","HTML_GAPS","RICH_TEXT_GAPS","createTooltipMarkup","type","option","getBuilder","fragment","builderMap","section","planLayout","subBlockLen","blocks","length","thisBlockHasInnerGap","noHeader","thisGapLevelBetweenSubBlocks","subBlock","subGapLevel","__gapLevelBetweenSubBlocks","build","ctx","topMarginForOuterGap","gaps","getGap","subMarkupText","buildSubBlocks","html","displayableHeader","header","useUTC","renderMode","wrapInlineNameRichText","richText","wrapBlockHTML","nameValue","noName","noValue","noMarker","markerType","name","value","markerStr","markupStyleCreator","makeTooltipMarker","markerColor","readableName","valueTypeOption","valueType","readableValueList","val","idx","valueAlignRight","valueCloseToMarker","wrapInlineValueRichText","wrapInlineNameHTML","wrapInlineValueHTML","subMarkupTextList","subBlocks","orderMode","sortBlocks","slice","orderMap","valueAsc","valueDesc","comparator_1","sort","a","b","evaluate","sortParam","reverse","push","join","buildTooltipMarkup","builder","gapLevelBetweenSubBlocks","encodedContent","topGap","clearfix","marginCSS","leftHasMarker","marginCss","valueList","alignRight","paddingStr","alignCSS","wrapRichTextStyle","styles","paddingLeft","padding","align","retrieveVisualColorForTooltipMarker","series","dataIndex","style","getData","getItemVisual","color","visualDrawType","getPaddingFromTooltipModel","model","get","TooltipMarkupStyleCreator","richTextStyles","_nextStyleNameId","prototype","_generateStyleName","colorStr","markerId","marker","process","env","NODE_ENV","content","text","finalStl","stl","styleName"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { getTooltipMarker, encodeHTML, makeValueReadable, convertToColorString } from '../../util/format';\nimport { isString, each, hasOwn, isArray, map, assert, extend } from 'zrender/esm/core/util';\nimport { SortOrderComparator } from '../../data/helper/dataValueHelper';\nimport { getRandomIdBase } from '../../util/number';\nvar TOOLTIP_NAME_TEXT_STYLE_CSS = 'font-size:12px;color:#6e7079';\nvar TOOLTIP_TEXT_STYLE_RICH = {\n  fontSize: 12,\n  fill: '#6e7079'\n};\nvar TOOLTIP_VALUE_TEXT_STYLE_CSS = 'font-size:14px;color:#464646;font-weight:900';\nvar TOOLTIP_VALUE_TEXT_STYLE_RICH = {\n  fontSize: 14,\n  fill: '#464646',\n  fontWeight: 900\n};\nvar TOOLTIP_LINE_HEIGHT_CSS = 'line-height:1';\nvar HTML_GAPS = [0, 10, 20, 30];\nvar RICH_TEXT_GAPS = ['', '\\n', '\\n\\n', '\\n\\n\\n'];\nexport function createTooltipMarkup(type, option) {\n  option.type = type;\n  return option;\n}\n\nfunction getBuilder(fragment) {\n  return hasOwn(builderMap, fragment.type) && builderMap[fragment.type];\n}\n\nvar builderMap = {\n  section: {\n    planLayout: function (fragment) {\n      var subBlockLen = fragment.blocks.length;\n      var thisBlockHasInnerGap = subBlockLen > 1 || subBlockLen > 0 && !fragment.noHeader;\n      var thisGapLevelBetweenSubBlocks = 0;\n      each(fragment.blocks, function (subBlock) {\n        getBuilder(subBlock).planLayout(subBlock);\n        var subGapLevel = subBlock.__gapLevelBetweenSubBlocks;\n\n        if (subGapLevel >= thisGapLevelBetweenSubBlocks) {\n          thisGapLevelBetweenSubBlocks = subGapLevel + (thisBlockHasInnerGap && (!subGapLevel || subBlock.type === 'section' && !subBlock.noHeader) ? 1 : 0);\n        }\n      });\n      fragment.__gapLevelBetweenSubBlocks = thisGapLevelBetweenSubBlocks;\n    },\n    build: function (ctx, fragment, topMarginForOuterGap) {\n      var noHeader = fragment.noHeader;\n      var gaps = getGap(fragment);\n      var subMarkupText = buildSubBlocks(ctx, fragment, noHeader ? topMarginForOuterGap : gaps.html);\n\n      if (noHeader) {\n        return subMarkupText;\n      }\n\n      var displayableHeader = makeValueReadable(fragment.header, 'ordinal', ctx.useUTC);\n\n      if (ctx.renderMode === 'richText') {\n        return wrapInlineNameRichText(ctx, displayableHeader) + gaps.richText + subMarkupText;\n      } else {\n        return wrapBlockHTML(\"<div style=\\\"\" + TOOLTIP_NAME_TEXT_STYLE_CSS + \";\" + TOOLTIP_LINE_HEIGHT_CSS + \";\\\">\" + encodeHTML(displayableHeader) + '</div>' + subMarkupText, topMarginForOuterGap);\n      }\n    }\n  },\n  nameValue: {\n    planLayout: function (fragment) {\n      fragment.__gapLevelBetweenSubBlocks = 0;\n    },\n    build: function (ctx, fragment, topMarginForOuterGap) {\n      var renderMode = ctx.renderMode;\n      var noName = fragment.noName;\n      var noValue = fragment.noValue;\n      var noMarker = !fragment.markerType;\n      var name = fragment.name;\n      var value = fragment.value;\n      var useUTC = ctx.useUTC;\n\n      if (noName && noValue) {\n        return;\n      }\n\n      var markerStr = noMarker ? '' : ctx.markupStyleCreator.makeTooltipMarker(fragment.markerType, fragment.markerColor || '#333', renderMode);\n      var readableName = noName ? '' : makeValueReadable(name, 'ordinal', useUTC);\n      var valueTypeOption = fragment.valueType;\n      var readableValueList = noValue ? [] : isArray(value) ? map(value, function (val, idx) {\n        return makeValueReadable(val, isArray(valueTypeOption) ? valueTypeOption[idx] : valueTypeOption, useUTC);\n      }) : [makeValueReadable(value, isArray(valueTypeOption) ? valueTypeOption[0] : valueTypeOption, useUTC)];\n      var valueAlignRight = !noMarker || !noName;\n      var valueCloseToMarker = !noMarker && noName;\n      return renderMode === 'richText' ? (noMarker ? '' : markerStr) + (noName ? '' : wrapInlineNameRichText(ctx, readableName)) + (noValue ? '' : wrapInlineValueRichText(ctx, readableValueList, valueAlignRight, valueCloseToMarker)) : wrapBlockHTML((noMarker ? '' : markerStr) + (noName ? '' : wrapInlineNameHTML(readableName, !noMarker)) + (noValue ? '' : wrapInlineValueHTML(readableValueList, valueAlignRight, valueCloseToMarker)), topMarginForOuterGap);\n    }\n  }\n};\n\nfunction buildSubBlocks(ctx, fragment, topMarginForOuterGap) {\n  var subMarkupTextList = [];\n  var subBlocks = fragment.blocks || [];\n  assert(!subBlocks || isArray(subBlocks));\n  subBlocks = subBlocks || [];\n  var orderMode = ctx.orderMode;\n\n  if (fragment.sortBlocks && orderMode) {\n    subBlocks = subBlocks.slice();\n    var orderMap = {\n      valueAsc: 'asc',\n      valueDesc: 'desc'\n    };\n\n    if (hasOwn(orderMap, orderMode)) {\n      var comparator_1 = new SortOrderComparator(orderMap[orderMode], null);\n      subBlocks.sort(function (a, b) {\n        return comparator_1.evaluate(a.sortParam, b.sortParam);\n      });\n    } else if (orderMode === 'seriesDesc') {\n      subBlocks.reverse();\n    }\n  }\n\n  var gaps = getGap(fragment);\n  each(subBlocks, function (subBlock, idx) {\n    var subMarkupText = getBuilder(subBlock).build(ctx, subBlock, idx > 0 ? gaps.html : 0);\n    subMarkupText != null && subMarkupTextList.push(subMarkupText);\n  });\n\n  if (!subMarkupTextList.length) {\n    return;\n  }\n\n  return ctx.renderMode === 'richText' ? subMarkupTextList.join(gaps.richText) : wrapBlockHTML(subMarkupTextList.join(''), topMarginForOuterGap);\n}\n\nexport function buildTooltipMarkup(fragment, markupStyleCreator, renderMode, orderMode, useUTC) {\n  if (!fragment) {\n    return;\n  }\n\n  var builder = getBuilder(fragment);\n  builder.planLayout(fragment);\n  var ctx = {\n    useUTC: useUTC,\n    renderMode: renderMode,\n    orderMode: orderMode,\n    markupStyleCreator: markupStyleCreator\n  };\n  return builder.build(ctx, fragment, 0);\n}\n\nfunction getGap(fragment) {\n  var gapLevelBetweenSubBlocks = fragment.__gapLevelBetweenSubBlocks;\n  return {\n    html: HTML_GAPS[gapLevelBetweenSubBlocks],\n    richText: RICH_TEXT_GAPS[gapLevelBetweenSubBlocks]\n  };\n}\n\nfunction wrapBlockHTML(encodedContent, topGap) {\n  var clearfix = '<div style=\"clear:both\"></div>';\n  var marginCSS = \"margin: \" + topGap + \"px 0 0\";\n  return \"<div style=\\\"\" + marginCSS + \";\" + TOOLTIP_LINE_HEIGHT_CSS + \";\\\">\" + encodedContent + clearfix + '</div>';\n}\n\nfunction wrapInlineNameHTML(name, leftHasMarker) {\n  var marginCss = leftHasMarker ? 'margin-left:2px' : '';\n  return \"<span style=\\\"\" + TOOLTIP_NAME_TEXT_STYLE_CSS + \";\" + marginCss + \"\\\">\" + encodeHTML(name) + '</span>';\n}\n\nfunction wrapInlineValueHTML(valueList, alignRight, valueCloseToMarker) {\n  var paddingStr = valueCloseToMarker ? '10px' : '20px';\n  var alignCSS = alignRight ? \"float:right;margin-left:\" + paddingStr : '';\n  return \"<span style=\\\"\" + alignCSS + \";\" + TOOLTIP_VALUE_TEXT_STYLE_CSS + \"\\\">\" + map(valueList, function (value) {\n    return encodeHTML(value);\n  }).join('&nbsp;&nbsp;') + '</span>';\n}\n\nfunction wrapInlineNameRichText(ctx, name) {\n  return ctx.markupStyleCreator.wrapRichTextStyle(name, TOOLTIP_TEXT_STYLE_RICH);\n}\n\nfunction wrapInlineValueRichText(ctx, valueList, alignRight, valueCloseToMarker) {\n  var styles = [TOOLTIP_VALUE_TEXT_STYLE_RICH];\n  var paddingLeft = valueCloseToMarker ? 10 : 20;\n  alignRight && styles.push({\n    padding: [0, 0, 0, paddingLeft],\n    align: 'right'\n  });\n  return ctx.markupStyleCreator.wrapRichTextStyle(valueList.join('  '), styles);\n}\n\nexport function retrieveVisualColorForTooltipMarker(series, dataIndex) {\n  var style = series.getData().getItemVisual(dataIndex, 'style');\n  var color = style[series.visualDrawType];\n  return convertToColorString(color);\n}\nexport function getPaddingFromTooltipModel(model, renderMode) {\n  var padding = model.get('padding');\n  return padding != null ? padding : renderMode === 'richText' ? [8, 10] : 10;\n}\n\nvar TooltipMarkupStyleCreator = function () {\n  function TooltipMarkupStyleCreator() {\n    this.richTextStyles = {};\n    this._nextStyleNameId = getRandomIdBase();\n  }\n\n  TooltipMarkupStyleCreator.prototype._generateStyleName = function () {\n    return '__EC_aUTo_' + this._nextStyleNameId++;\n  };\n\n  TooltipMarkupStyleCreator.prototype.makeTooltipMarker = function (markerType, colorStr, renderMode) {\n    var markerId = renderMode === 'richText' ? this._generateStyleName() : null;\n    var marker = getTooltipMarker({\n      color: colorStr,\n      type: markerType,\n      renderMode: renderMode,\n      markerId: markerId\n    });\n\n    if (isString(marker)) {\n      return marker;\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        assert(markerId);\n      }\n\n      this.richTextStyles[markerId] = marker.style;\n      return marker.content;\n    }\n  };\n\n  TooltipMarkupStyleCreator.prototype.wrapRichTextStyle = function (text, styles) {\n    var finalStl = {};\n\n    if (isArray(styles)) {\n      each(styles, function (stl) {\n        return extend(finalStl, stl);\n      });\n    } else {\n      extend(finalStl, styles);\n    }\n\n    var styleName = this._generateStyleName();\n\n    this.richTextStyles[styleName] = finalStl;\n    return \"{\" + styleName + \"|\" + text + \"}\";\n  };\n\n  return TooltipMarkupStyleCreator;\n}();\n\nexport { TooltipMarkupStyleCreator };"]},"metadata":{},"sourceType":"module"}