{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar Displayable_1 = require(\"./Displayable\");\n\nvar text_1 = require(\"../contain/text\");\n\nvar Path_1 = require(\"./Path\");\n\nvar util_1 = require(\"../core/util\");\n\nexports.DEFAULT_TSPAN_STYLE = util_1.defaults({\n  strokeFirst: true,\n  font: text_1.DEFAULT_FONT,\n  x: 0,\n  y: 0,\n  textAlign: 'left',\n  textBaseline: 'top',\n  miterLimit: 2\n}, Path_1.DEFAULT_PATH_STYLE);\n\nvar TSpan = function (_super) {\n  tslib_1.__extends(TSpan, _super);\n\n  function TSpan() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TSpan.prototype.hasStroke = function () {\n    var style = this.style;\n    var stroke = style.stroke;\n    return stroke != null && stroke !== 'none' && style.lineWidth > 0;\n  };\n\n  TSpan.prototype.hasFill = function () {\n    var style = this.style;\n    var fill = style.fill;\n    return fill != null && fill !== 'none';\n  };\n\n  TSpan.prototype.createStyle = function (obj) {\n    return util_1.createObject(exports.DEFAULT_TSPAN_STYLE, obj);\n  };\n\n  TSpan.prototype.setBoundingRect = function (rect) {\n    this._rect = rect;\n  };\n\n  TSpan.prototype.getBoundingRect = function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = text_1.getBoundingRect(text, style.font, style.textAlign, style.textBaseline);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (this.hasStroke()) {\n        var w = style.lineWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  };\n\n  TSpan.initDefaultProps = function () {\n    var tspanProto = TSpan.prototype;\n    tspanProto.dirtyRectTolerance = 10;\n  }();\n\n  return TSpan;\n}(Displayable_1[\"default\"]);\n\nTSpan.prototype.type = 'tspan';\nexports[\"default\"] = TSpan;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/zrender/lib/graphic/TSpan.js"],"names":["exports","__esModule","tslib_1","require","Displayable_1","text_1","Path_1","util_1","DEFAULT_TSPAN_STYLE","defaults","strokeFirst","font","DEFAULT_FONT","x","y","textAlign","textBaseline","miterLimit","DEFAULT_PATH_STYLE","TSpan","_super","__extends","apply","arguments","prototype","hasStroke","style","stroke","lineWidth","hasFill","fill","createStyle","obj","createObject","setBoundingRect","rect","_rect","getBoundingRect","text","w","width","height","initDefaultProps","tspanProto","dirtyRectTolerance","type"],"mappings":"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","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar tslib_1 = require(\"tslib\");\nvar Displayable_1 = require(\"./Displayable\");\nvar text_1 = require(\"../contain/text\");\nvar Path_1 = require(\"./Path\");\nvar util_1 = require(\"../core/util\");\nexports.DEFAULT_TSPAN_STYLE = util_1.defaults({\n    strokeFirst: true,\n    font: text_1.DEFAULT_FONT,\n    x: 0,\n    y: 0,\n    textAlign: 'left',\n    textBaseline: 'top',\n    miterLimit: 2\n}, Path_1.DEFAULT_PATH_STYLE);\nvar TSpan = (function (_super) {\n    tslib_1.__extends(TSpan, _super);\n    function TSpan() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TSpan.prototype.hasStroke = function () {\n        var style = this.style;\n        var stroke = style.stroke;\n        return stroke != null && stroke !== 'none' && style.lineWidth > 0;\n    };\n    TSpan.prototype.hasFill = function () {\n        var style = this.style;\n        var fill = style.fill;\n        return fill != null && fill !== 'none';\n    };\n    TSpan.prototype.createStyle = function (obj) {\n        return util_1.createObject(exports.DEFAULT_TSPAN_STYLE, obj);\n    };\n    TSpan.prototype.setBoundingRect = function (rect) {\n        this._rect = rect;\n    };\n    TSpan.prototype.getBoundingRect = function () {\n        var style = this.style;\n        if (!this._rect) {\n            var text = style.text;\n            text != null ? (text += '') : (text = '');\n            var rect = text_1.getBoundingRect(text, style.font, style.textAlign, style.textBaseline);\n            rect.x += style.x || 0;\n            rect.y += style.y || 0;\n            if (this.hasStroke()) {\n                var w = style.lineWidth;\n                rect.x -= w / 2;\n                rect.y -= w / 2;\n                rect.width += w;\n                rect.height += w;\n            }\n            this._rect = rect;\n        }\n        return this._rect;\n    };\n    TSpan.initDefaultProps = (function () {\n        var tspanProto = TSpan.prototype;\n        tspanProto.dirtyRectTolerance = 10;\n    })();\n    return TSpan;\n}(Displayable_1[\"default\"]));\nTSpan.prototype.type = 'tspan';\nexports[\"default\"] = TSpan;\n"]},"metadata":{},"sourceType":"script"}