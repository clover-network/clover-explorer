{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar ECHARTS_PREFIX = '[ECharts] ';\nvar storedLogs = {};\nvar hasConsole = typeof console !== 'undefined' && console.warn && console.log;\n\nfunction log(str) {\n  if (hasConsole) {\n    console.log(ECHARTS_PREFIX + str);\n  }\n}\n\nexports.log = log;\n\nfunction warn(str) {\n  if (hasConsole) {\n    console.warn(ECHARTS_PREFIX + str);\n  }\n}\n\nexports.warn = warn;\n\nfunction error(str) {\n  if (hasConsole) {\n    console.error(ECHARTS_PREFIX + str);\n  }\n}\n\nexports.error = error;\n\nfunction deprecateLog(str) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (storedLogs[str]) {\n      return;\n    }\n\n    if (hasConsole) {\n      storedLogs[str] = true;\n      console.warn(ECHARTS_PREFIX + 'DEPRECATED: ' + str);\n    }\n  }\n}\n\nexports.deprecateLog = deprecateLog;\n\nfunction deprecateReplaceLog(oldOpt, newOpt, scope) {\n  if (process.env.NODE_ENV !== 'production') {\n    deprecateLog((scope ? \"[\" + scope + \"]\" : '') + (oldOpt + \" is deprecated, use \" + newOpt + \" instead.\"));\n  }\n}\n\nexports.deprecateReplaceLog = deprecateReplaceLog;\n\nfunction consoleLog() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof console !== 'undefined' && console.log) {\n      console.log.apply(console, args);\n    }\n  }\n}\n\nexports.consoleLog = consoleLog;\n\nfunction makePrintable() {\n  var hintInfo = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    hintInfo[_i] = arguments[_i];\n  }\n\n  var msg = '';\n\n  if (process.env.NODE_ENV !== 'production') {\n    var makePrintableStringIfPossible_1 = function (val) {\n      return val === void 0 ? 'undefined' : val === Infinity ? 'Infinity' : val === -Infinity ? '-Infinity' : util_1.eqNaN(val) ? 'NaN' : val instanceof Date ? 'Date(' + val.toISOString() + ')' : util_1.isFunction(val) ? 'function () { ... }' : util_1.isRegExp(val) ? val + '' : null;\n    };\n\n    msg = util_1.map(hintInfo, function (arg) {\n      if (util_1.isString(arg)) {\n        return arg;\n      } else {\n        var printableStr = makePrintableStringIfPossible_1(arg);\n\n        if (printableStr != null) {\n          return printableStr;\n        } else if (typeof JSON !== 'undefined' && JSON.stringify) {\n          try {\n            return JSON.stringify(arg, function (n, val) {\n              var printableStr = makePrintableStringIfPossible_1(val);\n              return printableStr == null ? val : printableStr;\n            });\n          } catch (err) {\n            return '?';\n          }\n        } else {\n          return '?';\n        }\n      }\n    }).join(' ');\n  }\n\n  return msg;\n}\n\nexports.makePrintable = makePrintable;\n\nfunction throwError(msg) {\n  throw new Error(msg);\n}\n\nexports.throwError = throwError;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/util/log.js"],"names":["exports","__esModule","util_1","require","ECHARTS_PREFIX","storedLogs","hasConsole","console","warn","log","str","error","deprecateLog","process","env","NODE_ENV","deprecateReplaceLog","oldOpt","newOpt","scope","consoleLog","args","_i","arguments","length","apply","makePrintable","hintInfo","msg","makePrintableStringIfPossible_1","val","Infinity","eqNaN","Date","toISOString","isFunction","isRegExp","map","arg","isString","printableStr","JSON","stringify","n","err","join","throwError","Error"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar ECHARTS_PREFIX = '[ECharts] ';\nvar storedLogs = {};\nvar hasConsole = typeof console !== 'undefined' && console.warn && console.log;\n\nfunction log(str) {\n  if (hasConsole) {\n    console.log(ECHARTS_PREFIX + str);\n  }\n}\n\nexports.log = log;\n\nfunction warn(str) {\n  if (hasConsole) {\n    console.warn(ECHARTS_PREFIX + str);\n  }\n}\n\nexports.warn = warn;\n\nfunction error(str) {\n  if (hasConsole) {\n    console.error(ECHARTS_PREFIX + str);\n  }\n}\n\nexports.error = error;\n\nfunction deprecateLog(str) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (storedLogs[str]) {\n      return;\n    }\n\n    if (hasConsole) {\n      storedLogs[str] = true;\n      console.warn(ECHARTS_PREFIX + 'DEPRECATED: ' + str);\n    }\n  }\n}\n\nexports.deprecateLog = deprecateLog;\n\nfunction deprecateReplaceLog(oldOpt, newOpt, scope) {\n  if (process.env.NODE_ENV !== 'production') {\n    deprecateLog((scope ? \"[\" + scope + \"]\" : '') + (oldOpt + \" is deprecated, use \" + newOpt + \" instead.\"));\n  }\n}\n\nexports.deprecateReplaceLog = deprecateReplaceLog;\n\nfunction consoleLog() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof console !== 'undefined' && console.log) {\n      console.log.apply(console, args);\n    }\n  }\n}\n\nexports.consoleLog = consoleLog;\n\nfunction makePrintable() {\n  var hintInfo = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    hintInfo[_i] = arguments[_i];\n  }\n\n  var msg = '';\n\n  if (process.env.NODE_ENV !== 'production') {\n    var makePrintableStringIfPossible_1 = function (val) {\n      return val === void 0 ? 'undefined' : val === Infinity ? 'Infinity' : val === -Infinity ? '-Infinity' : util_1.eqNaN(val) ? 'NaN' : val instanceof Date ? 'Date(' + val.toISOString() + ')' : util_1.isFunction(val) ? 'function () { ... }' : util_1.isRegExp(val) ? val + '' : null;\n    };\n\n    msg = util_1.map(hintInfo, function (arg) {\n      if (util_1.isString(arg)) {\n        return arg;\n      } else {\n        var printableStr = makePrintableStringIfPossible_1(arg);\n\n        if (printableStr != null) {\n          return printableStr;\n        } else if (typeof JSON !== 'undefined' && JSON.stringify) {\n          try {\n            return JSON.stringify(arg, function (n, val) {\n              var printableStr = makePrintableStringIfPossible_1(val);\n              return printableStr == null ? val : printableStr;\n            });\n          } catch (err) {\n            return '?';\n          }\n        } else {\n          return '?';\n        }\n      }\n    }).join(' ');\n  }\n\n  return msg;\n}\n\nexports.makePrintable = makePrintable;\n\nfunction throwError(msg) {\n  throw new Error(msg);\n}\n\nexports.throwError = throwError;"]},"metadata":{},"sourceType":"script"}