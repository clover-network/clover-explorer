{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar mix_1 = require(\"./mix\");\n\nvar is_function_1 = require(\"./is-function\");\n\nvar extend = function (subclass, superclass, overrides, staticOverrides) {\n  // 如果只提供父类构造函数，则自动生成子类构造函数\n  if (!is_function_1.default(superclass)) {\n    overrides = superclass;\n    superclass = subclass;\n\n    subclass = function () {};\n  }\n\n  var create = Object.create ? function (proto, c) {\n    return Object.create(proto, {\n      constructor: {\n        value: c\n      }\n    });\n  } : function (proto, c) {\n    function Tmp() {}\n\n    Tmp.prototype = proto;\n    var o = new Tmp();\n    o.constructor = c;\n    return o;\n  };\n  var superObj = create(superclass.prototype, subclass); // new superclass(),//实例化父类作为子类的prototype\n\n  subclass.prototype = mix_1.default(superObj, subclass.prototype); // 指定子类的prototype\n\n  subclass.superclass = create(superclass.prototype, superclass);\n  mix_1.default(superObj, overrides);\n  mix_1.default(subclass, staticOverrides);\n  return subclass;\n};\n\nexports.default = extend;","map":{"version":3,"sources":["../src/extend.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAEA,IAAM,MAAM,GAAG,UAAS,QAAT,EAAmB,UAAnB,EAA+B,SAA/B,EAA2C,eAA3C,EAA2D;AACxE;AACA,MAAI,CAAC,aAAA,CAAA,OAAA,CAAW,UAAX,CAAL,EAA6B;AAC3B,IAAA,SAAS,GAAG,UAAZ;AACA,IAAA,UAAU,GAAG,QAAb;;AACA,IAAA,QAAQ,GAAG,YAAA,CAAa,CAAxB;AACD;;AAED,MAAM,MAAM,GAAG,MAAM,CAAC,MAAP,GACb,UAAS,KAAT,EAAgB,CAAhB,EAAiB;AACf,WAAO,MAAM,CAAC,MAAP,CAAc,KAAd,EAAqB;AAC1B,MAAA,WAAW,EAAE;AACX,QAAA,KAAK,EAAE;AADI;AADa,KAArB,CAAP;AAKD,GAPY,GAQb,UAAS,KAAT,EAAgB,CAAhB,EAAiB;AACf,aAAS,GAAT,GAAY,CAAK;;AACjB,IAAA,GAAG,CAAC,SAAJ,GAAgB,KAAhB;AACA,QAAM,CAAC,GAAG,IAAI,GAAJ,EAAV;AACA,IAAA,CAAC,CAAC,WAAF,GAAgB,CAAhB;AACA,WAAO,CAAP;AACD,GAdH;AAgBA,MAAM,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,SAAZ,EAAuB,QAAvB,CAAvB,CAxBwE,CAwBf;;AACzD,EAAA,QAAQ,CAAC,SAAT,GAAqB,KAAA,CAAA,OAAA,CAAI,QAAJ,EAAc,QAAQ,CAAC,SAAvB,CAArB,CAzBwE,CAyBhB;;AACxD,EAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAAU,CAAC,SAAZ,EAAuB,UAAvB,CAA5B;AACA,EAAA,KAAA,CAAA,OAAA,CAAI,QAAJ,EAAc,SAAd;AACA,EAAA,KAAA,CAAA,OAAA,CAAI,QAAJ,EAAc,eAAd;AACA,SAAO,QAAP;AACD,CA9BD;;AAgCA,OAAA,CAAA,OAAA,GAAe,MAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mix_1 = require(\"./mix\");\nvar is_function_1 = require(\"./is-function\");\nvar extend = function (subclass, superclass, overrides, staticOverrides) {\n    // 如果只提供父类构造函数，则自动生成子类构造函数\n    if (!is_function_1.default(superclass)) {\n        overrides = superclass;\n        superclass = subclass;\n        subclass = function () { };\n    }\n    var create = Object.create ?\n        function (proto, c) {\n            return Object.create(proto, {\n                constructor: {\n                    value: c\n                }\n            });\n        } :\n        function (proto, c) {\n            function Tmp() { }\n            Tmp.prototype = proto;\n            var o = new Tmp();\n            o.constructor = c;\n            return o;\n        };\n    var superObj = create(superclass.prototype, subclass); // new superclass(),//实例化父类作为子类的prototype\n    subclass.prototype = mix_1.default(superObj, subclass.prototype); // 指定子类的prototype\n    subclass.superclass = create(superclass.prototype, superclass);\n    mix_1.default(superObj, overrides);\n    mix_1.default(subclass, staticOverrides);\n    return subclass;\n};\nexports.default = extend;\n//# sourceMappingURL=extend.js.map"]},"metadata":{},"sourceType":"script"}