{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model_1 = require(\"./Model\");\n\nvar Component_1 = require(\"./Component\");\n\nvar globalDefault_1 = require(\"./globalDefault\");\n\nvar sourceHelper_1 = require(\"../data/helper/sourceHelper\");\n\nvar internalComponentCreator_1 = require(\"./internalComponentCreator\");\n\nvar palette_1 = require(\"./mixin/palette\");\n\nvar reCreateSeriesIndices;\nvar assertSeriesInitialized;\nvar initBase;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n\nvar GlobalModel = function (_super) {\n  tslib_1.__extends(GlobalModel, _super);\n\n  function GlobalModel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  GlobalModel.prototype.init = function (option, parentModel, ecModel, theme, locale, optionManager) {\n    theme = theme || {};\n    this.option = null;\n    this._theme = new Model_1[\"default\"](theme);\n    this._locale = new Model_1[\"default\"](locale);\n    this._optionManager = optionManager;\n  };\n\n  GlobalModel.prototype.setOption = function (option, opts, optionPreprocessorFuncs) {\n    util_1.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n    var innerOpt = normalizeSetOptionInput(opts);\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs, innerOpt);\n\n    this._resetOption(null, innerOpt);\n  };\n\n  GlobalModel.prototype.resetOption = function (type, opt) {\n    return this._resetOption(type, normalizeSetOptionInput(opt));\n  };\n\n  GlobalModel.prototype._resetOption = function (type, opt) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase(this, baseOption);\n      } else {\n        this.restoreData();\n\n        this._mergeOption(baseOption, opt);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n\n      if (timelineOption) {\n        optionChanged = true;\n\n        this._mergeOption(timelineOption, opt);\n      }\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this);\n\n      if (mediaOptions.length) {\n        util_1.each(mediaOptions, function (mediaOption) {\n          optionChanged = true;\n\n          this._mergeOption(mediaOption, opt);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  };\n\n  GlobalModel.prototype.mergeOption = function (option) {\n    this._mergeOption(option, null);\n  };\n\n  GlobalModel.prototype._mergeOption = function (newOption, opt) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var componentsCount = this._componentsCount;\n    var newCmptTypes = [];\n    var newCmptTypeMap = util_1.createHashMap();\n    var replaceMergeMainTypeMap = opt && opt.replaceMergeMainTypeMap;\n    sourceHelper_1.resetSourceDefaulter(this);\n    util_1.each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!Component_1[\"default\"].hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? util_1.clone(componentOption) : util_1.merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCmptTypes.push(mainType);\n        newCmptTypeMap.set(mainType, true);\n      }\n    });\n\n    if (replaceMergeMainTypeMap) {\n      replaceMergeMainTypeMap.each(function (val, mainTypeInReplaceMerge) {\n        if (Component_1[\"default\"].hasClass(mainTypeInReplaceMerge) && !newCmptTypeMap.get(mainTypeInReplaceMerge)) {\n          newCmptTypes.push(mainTypeInReplaceMerge);\n          newCmptTypeMap.set(mainTypeInReplaceMerge, true);\n        }\n      });\n    }\n\n    Component_1[\"default\"].topologicalTravel(newCmptTypes, Component_1[\"default\"].getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType) {\n      var newCmptOptionList = internalComponentCreator_1.concatInternalOptions(this, mainType, modelUtil.normalizeToArray(newOption[mainType]));\n      var oldCmptList = componentsMap.get(mainType);\n      var mergeMode = !oldCmptList ? 'replaceAll' : replaceMergeMainTypeMap && replaceMergeMainTypeMap.get(mainType) ? 'replaceMerge' : 'normalMerge';\n      var mappingResult = modelUtil.mappingToExists(oldCmptList, newCmptOptionList, mergeMode);\n      modelUtil.setComponentTypeToKeyInfo(mappingResult, mainType, Component_1[\"default\"]);\n      option[mainType] = null;\n      componentsMap.set(mainType, null);\n      componentsCount.set(mainType, 0);\n      var optionsByMainType = [];\n      var cmptsByMainType = [];\n      var cmptsCountByMainType = 0;\n      util_1.each(mappingResult, function (resultItem, index) {\n        var componentModel = resultItem.existing;\n        var newCmptOption = resultItem.newOption;\n\n        if (!newCmptOption) {\n          if (componentModel) {\n            componentModel.mergeOption({}, this);\n            componentModel.optionUpdated({}, false);\n          }\n        } else {\n          var ComponentModelClass = Component_1[\"default\"].getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel.constructor === ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCmptOption, this);\n            componentModel.optionUpdated(newCmptOption, false);\n          } else {\n            var extraOpt = util_1.extend({\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCmptOption, this, this, extraOpt);\n            util_1.extend(componentModel, extraOpt);\n\n            if (resultItem.brandNew) {\n              componentModel.__requireNewView = true;\n            }\n\n            componentModel.init(newCmptOption, this, this);\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        if (componentModel) {\n          optionsByMainType.push(componentModel.option);\n          cmptsByMainType.push(componentModel);\n          cmptsCountByMainType++;\n        } else {\n          optionsByMainType.push(void 0);\n          cmptsByMainType.push(void 0);\n        }\n      }, this);\n      option[mainType] = optionsByMainType;\n      componentsMap.set(mainType, cmptsByMainType);\n      componentsCount.set(mainType, cmptsCountByMainType);\n\n      if (mainType === 'series') {\n        reCreateSeriesIndices(this);\n      }\n    }\n\n    if (!this._seriesIndices) {\n      reCreateSeriesIndices(this);\n    }\n  };\n\n  GlobalModel.prototype.getOption = function () {\n    var option = util_1.clone(this.option);\n    util_1.each(option, function (optInMainType, mainType) {\n      if (Component_1[\"default\"].hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(optInMainType);\n        var realLen = opts.length;\n        var metNonInner = false;\n\n        for (var i = realLen - 1; i >= 0; i--) {\n          if (opts[i] && !modelUtil.isComponentIdInternal(opts[i])) {\n            metNonInner = true;\n          } else {\n            opts[i] = null;\n            !metNonInner && realLen--;\n          }\n        }\n\n        opts.length = realLen;\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  };\n\n  GlobalModel.prototype.getTheme = function () {\n    return this._theme;\n  };\n\n  GlobalModel.prototype.getLocaleModel = function () {\n    return this._locale;\n  };\n\n  GlobalModel.prototype.getLocale = function (localePosition) {\n    var locale = this.getLocaleModel();\n    return locale.get(localePosition);\n  };\n\n  GlobalModel.prototype.setUpdatePayload = function (payload) {\n    this._payload = payload;\n  };\n\n  GlobalModel.prototype.getUpdatePayload = function () {\n    return this._payload;\n  };\n\n  GlobalModel.prototype.getComponent = function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      var cmpt = list[idx || 0];\n\n      if (cmpt) {\n        return cmpt;\n      } else if (idx == null) {\n        for (var i = 0; i < list.length; i++) {\n          if (list[i]) {\n            return list[i];\n          }\n        }\n      }\n    }\n  };\n\n  GlobalModel.prototype.queryComponents = function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cmpts = this._componentsMap.get(mainType);\n\n    if (!cmpts || !cmpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      result = [];\n      util_1.each(modelUtil.normalizeToArray(index), function (idx) {\n        cmpts[idx] && result.push(cmpts[idx]);\n      });\n    } else if (id != null) {\n      result = queryByIdOrName('id', id, cmpts);\n    } else if (name != null) {\n      result = queryByIdOrName('name', name, cmpts);\n    } else {\n      result = util_1.filter(cmpts, function (cmpt) {\n        return !!cmpt;\n      });\n    }\n\n    return filterBySubType(result, condition);\n  };\n\n  GlobalModel.prototype.findComponents = function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : util_1.filter(this._componentsMap.get(mainType), function (cmpt) {\n      return !!cmpt;\n    });\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? util_1.filter(res, condition.filter) : res;\n    }\n  };\n\n  GlobalModel.prototype.eachComponent = function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (util_1.isFunction(mainType)) {\n      var ctxForAll_1 = cb;\n      var cbForAll_1 = mainType;\n      componentsMap.each(function (cmpts, componentType) {\n        for (var i = 0; cmpts && i < cmpts.length; i++) {\n          var cmpt = cmpts[i];\n          cmpt && cbForAll_1.call(ctxForAll_1, componentType, cmpt, cmpt.componentIndex);\n        }\n      });\n    } else {\n      var cmpts = util_1.isString(mainType) ? componentsMap.get(mainType) : util_1.isObject(mainType) ? this.findComponents(mainType) : null;\n\n      for (var i = 0; cmpts && i < cmpts.length; i++) {\n        var cmpt = cmpts[i];\n        cmpt && cb.call(context, cmpt, cmpt.componentIndex);\n      }\n    }\n  };\n\n  GlobalModel.prototype.getSeriesByName = function (name) {\n    var nameStr = modelUtil.convertOptionIdName(name, null);\n    return util_1.filter(this._componentsMap.get('series'), function (oneSeries) {\n      return !!oneSeries && nameStr != null && oneSeries.name === nameStr;\n    });\n  };\n\n  GlobalModel.prototype.getSeriesByIndex = function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  };\n\n  GlobalModel.prototype.getSeriesByType = function (subType) {\n    return util_1.filter(this._componentsMap.get('series'), function (oneSeries) {\n      return !!oneSeries && oneSeries.subType === subType;\n    });\n  };\n\n  GlobalModel.prototype.getSeries = function () {\n    return util_1.filter(this._componentsMap.get('series').slice(), function (oneSeries) {\n      return !!oneSeries;\n    });\n  };\n\n  GlobalModel.prototype.getSeriesCount = function () {\n    return this._componentsCount.get('series');\n  };\n\n  GlobalModel.prototype.eachSeries = function (cb, context) {\n    assertSeriesInitialized(this);\n    util_1.each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  };\n\n  GlobalModel.prototype.eachRawSeries = function (cb, context) {\n    util_1.each(this._componentsMap.get('series'), function (series) {\n      series && cb.call(context, series, series.componentIndex);\n    });\n  };\n\n  GlobalModel.prototype.eachSeriesByType = function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    util_1.each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  };\n\n  GlobalModel.prototype.eachRawSeriesByType = function (subType, cb, context) {\n    return util_1.each(this.getSeriesByType(subType), cb, context);\n  };\n\n  GlobalModel.prototype.isSeriesFiltered = function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  };\n\n  GlobalModel.prototype.getCurrentSeriesIndices = function () {\n    return (this._seriesIndices || []).slice();\n  };\n\n  GlobalModel.prototype.filterSeries = function (cb, context) {\n    assertSeriesInitialized(this);\n    var newSeriesIndices = [];\n    util_1.each(this._seriesIndices, function (seriesRawIdx) {\n      var series = this._componentsMap.get('series')[seriesRawIdx];\n\n      cb.call(context, series, seriesRawIdx) && newSeriesIndices.push(seriesRawIdx);\n    }, this);\n    this._seriesIndices = newSeriesIndices;\n    this._seriesIndicesMap = util_1.createHashMap(newSeriesIndices);\n  };\n\n  GlobalModel.prototype.restoreData = function (payload) {\n    reCreateSeriesIndices(this);\n    var componentsMap = this._componentsMap;\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      if (Component_1[\"default\"].hasClass(componentType)) {\n        componentTypes.push(componentType);\n      }\n    });\n    Component_1[\"default\"].topologicalTravel(componentTypes, Component_1[\"default\"].getAllClassMainTypes(), function (componentType) {\n      util_1.each(componentsMap.get(componentType), function (component) {\n        if (component && (componentType !== 'series' || !isNotTargetSeries(component, payload))) {\n          component.restoreData();\n        }\n      });\n    });\n  };\n\n  GlobalModel.internalField = function () {\n    reCreateSeriesIndices = function (ecModel) {\n      var seriesIndices = ecModel._seriesIndices = [];\n      util_1.each(ecModel._componentsMap.get('series'), function (series) {\n        series && seriesIndices.push(series.componentIndex);\n      });\n      ecModel._seriesIndicesMap = util_1.createHashMap(seriesIndices);\n    };\n\n    assertSeriesInitialized = function (ecModel) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!ecModel._seriesIndices) {\n          throw new Error('Option should contains series.');\n        }\n      }\n    };\n\n    initBase = function (ecModel, baseOption) {\n      ecModel.option = {};\n      ecModel.option[OPTION_INNER_KEY] = 1;\n      ecModel._componentsMap = util_1.createHashMap({\n        series: []\n      });\n      ecModel._componentsCount = util_1.createHashMap();\n      var airaOption = baseOption.aria;\n\n      if (util_1.isObject(airaOption) && airaOption.enabled == null) {\n        airaOption.enabled = true;\n      }\n\n      mergeTheme(baseOption, ecModel._theme.option);\n      util_1.merge(baseOption, globalDefault_1[\"default\"], false);\n\n      ecModel._mergeOption(baseOption, null);\n    };\n  }();\n\n  return GlobalModel;\n}(Model_1[\"default\"]);\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seriesIndex;\n    var id = payload.seriesId;\n    var name_1 = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name_1 != null && seriesModel.name !== name_1;\n  }\n}\n\nfunction mergeTheme(option, theme) {\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  util_1.each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    }\n\n    if (!Component_1[\"default\"].hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? util_1.clone(themeItem) : util_1.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction queryByIdOrName(attr, idOrName, cmpts) {\n  if (util_1.isArray(idOrName)) {\n    var keyMap_1 = util_1.createHashMap();\n    util_1.each(idOrName, function (idOrNameItem) {\n      if (idOrNameItem != null) {\n        var idName = modelUtil.convertOptionIdName(idOrNameItem, null);\n        idName != null && keyMap_1.set(idOrNameItem, true);\n      }\n    });\n    return util_1.filter(cmpts, function (cmpt) {\n      return cmpt && keyMap_1.get(cmpt[attr]);\n    });\n  } else {\n    var idName_1 = modelUtil.convertOptionIdName(idOrName, null);\n    return util_1.filter(cmpts, function (cmpt) {\n      return cmpt && idName_1 != null && cmpt[attr] === idName_1;\n    });\n  }\n}\n\nfunction filterBySubType(components, condition) {\n  return condition.hasOwnProperty('subType') ? util_1.filter(components, function (cmpt) {\n    return cmpt && cmpt.subType === condition.subType;\n  }) : components;\n}\n\nfunction normalizeSetOptionInput(opts) {\n  var replaceMergeMainTypeMap = util_1.createHashMap();\n  opts && util_1.each(modelUtil.normalizeToArray(opts.replaceMerge), function (mainType) {\n    if (process.env.NODE_ENV !== 'production') {\n      util_1.assert(Component_1[\"default\"].hasClass(mainType), '\"' + mainType + '\" is not valid component main type in \"replaceMerge\"');\n    }\n\n    replaceMergeMainTypeMap.set(mainType, true);\n  });\n  return {\n    replaceMergeMainTypeMap: replaceMergeMainTypeMap\n  };\n}\n\nutil_1.mixin(GlobalModel, palette_1.PaletteMixin);\nexports[\"default\"] = GlobalModel;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/model/Global.js"],"names":["exports","__esModule","tslib_1","require","util_1","modelUtil","Model_1","Component_1","globalDefault_1","sourceHelper_1","internalComponentCreator_1","palette_1","reCreateSeriesIndices","assertSeriesInitialized","initBase","OPTION_INNER_KEY","GlobalModel","_super","__extends","apply","arguments","prototype","init","option","parentModel","ecModel","theme","locale","optionManager","_theme","_locale","_optionManager","setOption","opts","optionPreprocessorFuncs","assert","innerOpt","normalizeSetOptionInput","_resetOption","resetOption","type","opt","optionChanged","baseOption","mountOption","restoreData","_mergeOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","length","each","mediaOption","mergeOption","newOption","componentsMap","_componentsMap","componentsCount","_componentsCount","newCmptTypes","newCmptTypeMap","createHashMap","replaceMergeMainTypeMap","resetSourceDefaulter","componentOption","mainType","hasClass","clone","merge","push","set","val","mainTypeInReplaceMerge","get","topologicalTravel","getAllClassMainTypes","visitComponent","newCmptOptionList","concatInternalOptions","normalizeToArray","oldCmptList","mergeMode","mappingResult","mappingToExists","setComponentTypeToKeyInfo","optionsByMainType","cmptsByMainType","cmptsCountByMainType","resultItem","index","componentModel","existing","newCmptOption","optionUpdated","ComponentModelClass","getClass","keyInfo","subType","constructor","name","extraOpt","extend","componentIndex","brandNew","__requireNewView","_seriesIndices","getOption","optInMainType","realLen","metNonInner","i","isComponentIdInternal","getTheme","getLocaleModel","getLocale","localePosition","setUpdatePayload","payload","_payload","getUpdatePayload","getComponent","idx","list","cmpt","queryComponents","condition","id","cmpts","result","queryByIdOrName","filter","filterBySubType","findComponents","query","queryCond","getQueryCond","doFilter","q","indexAttr","idAttr","nameAttr","res","eachComponent","cb","context","isFunction","ctxForAll_1","cbForAll_1","componentType","call","isString","isObject","getSeriesByName","nameStr","convertOptionIdName","oneSeries","getSeriesByIndex","seriesIndex","getSeriesByType","getSeries","slice","getSeriesCount","eachSeries","rawSeriesIndex","series","eachRawSeries","eachSeriesByType","eachRawSeriesByType","isSeriesFiltered","seriesModel","_seriesIndicesMap","getCurrentSeriesIndices","filterSeries","newSeriesIndices","seriesRawIdx","componentTypes","components","component","isNotTargetSeries","internalField","seriesIndices","process","env","NODE_ENV","Error","airaOption","aria","enabled","mergeTheme","seriesId","name_1","seriesName","notMergeColorLayer","color","colorLayer","themeItem","attr","idOrName","isArray","keyMap_1","idOrNameItem","idName","idName_1","hasOwnProperty","replaceMerge","mixin","PaletteMixin"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model_1 = require(\"./Model\");\n\nvar Component_1 = require(\"./Component\");\n\nvar globalDefault_1 = require(\"./globalDefault\");\n\nvar sourceHelper_1 = require(\"../data/helper/sourceHelper\");\n\nvar internalComponentCreator_1 = require(\"./internalComponentCreator\");\n\nvar palette_1 = require(\"./mixin/palette\");\n\nvar reCreateSeriesIndices;\nvar assertSeriesInitialized;\nvar initBase;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n\nvar GlobalModel = function (_super) {\n  tslib_1.__extends(GlobalModel, _super);\n\n  function GlobalModel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  GlobalModel.prototype.init = function (option, parentModel, ecModel, theme, locale, optionManager) {\n    theme = theme || {};\n    this.option = null;\n    this._theme = new Model_1[\"default\"](theme);\n    this._locale = new Model_1[\"default\"](locale);\n    this._optionManager = optionManager;\n  };\n\n  GlobalModel.prototype.setOption = function (option, opts, optionPreprocessorFuncs) {\n    util_1.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n    var innerOpt = normalizeSetOptionInput(opts);\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs, innerOpt);\n\n    this._resetOption(null, innerOpt);\n  };\n\n  GlobalModel.prototype.resetOption = function (type, opt) {\n    return this._resetOption(type, normalizeSetOptionInput(opt));\n  };\n\n  GlobalModel.prototype._resetOption = function (type, opt) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase(this, baseOption);\n      } else {\n        this.restoreData();\n\n        this._mergeOption(baseOption, opt);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n\n      if (timelineOption) {\n        optionChanged = true;\n\n        this._mergeOption(timelineOption, opt);\n      }\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this);\n\n      if (mediaOptions.length) {\n        util_1.each(mediaOptions, function (mediaOption) {\n          optionChanged = true;\n\n          this._mergeOption(mediaOption, opt);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  };\n\n  GlobalModel.prototype.mergeOption = function (option) {\n    this._mergeOption(option, null);\n  };\n\n  GlobalModel.prototype._mergeOption = function (newOption, opt) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var componentsCount = this._componentsCount;\n    var newCmptTypes = [];\n    var newCmptTypeMap = util_1.createHashMap();\n    var replaceMergeMainTypeMap = opt && opt.replaceMergeMainTypeMap;\n    sourceHelper_1.resetSourceDefaulter(this);\n    util_1.each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!Component_1[\"default\"].hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? util_1.clone(componentOption) : util_1.merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCmptTypes.push(mainType);\n        newCmptTypeMap.set(mainType, true);\n      }\n    });\n\n    if (replaceMergeMainTypeMap) {\n      replaceMergeMainTypeMap.each(function (val, mainTypeInReplaceMerge) {\n        if (Component_1[\"default\"].hasClass(mainTypeInReplaceMerge) && !newCmptTypeMap.get(mainTypeInReplaceMerge)) {\n          newCmptTypes.push(mainTypeInReplaceMerge);\n          newCmptTypeMap.set(mainTypeInReplaceMerge, true);\n        }\n      });\n    }\n\n    Component_1[\"default\"].topologicalTravel(newCmptTypes, Component_1[\"default\"].getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType) {\n      var newCmptOptionList = internalComponentCreator_1.concatInternalOptions(this, mainType, modelUtil.normalizeToArray(newOption[mainType]));\n      var oldCmptList = componentsMap.get(mainType);\n      var mergeMode = !oldCmptList ? 'replaceAll' : replaceMergeMainTypeMap && replaceMergeMainTypeMap.get(mainType) ? 'replaceMerge' : 'normalMerge';\n      var mappingResult = modelUtil.mappingToExists(oldCmptList, newCmptOptionList, mergeMode);\n      modelUtil.setComponentTypeToKeyInfo(mappingResult, mainType, Component_1[\"default\"]);\n      option[mainType] = null;\n      componentsMap.set(mainType, null);\n      componentsCount.set(mainType, 0);\n      var optionsByMainType = [];\n      var cmptsByMainType = [];\n      var cmptsCountByMainType = 0;\n      util_1.each(mappingResult, function (resultItem, index) {\n        var componentModel = resultItem.existing;\n        var newCmptOption = resultItem.newOption;\n\n        if (!newCmptOption) {\n          if (componentModel) {\n            componentModel.mergeOption({}, this);\n            componentModel.optionUpdated({}, false);\n          }\n        } else {\n          var ComponentModelClass = Component_1[\"default\"].getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel.constructor === ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCmptOption, this);\n            componentModel.optionUpdated(newCmptOption, false);\n          } else {\n            var extraOpt = util_1.extend({\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCmptOption, this, this, extraOpt);\n            util_1.extend(componentModel, extraOpt);\n\n            if (resultItem.brandNew) {\n              componentModel.__requireNewView = true;\n            }\n\n            componentModel.init(newCmptOption, this, this);\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        if (componentModel) {\n          optionsByMainType.push(componentModel.option);\n          cmptsByMainType.push(componentModel);\n          cmptsCountByMainType++;\n        } else {\n          optionsByMainType.push(void 0);\n          cmptsByMainType.push(void 0);\n        }\n      }, this);\n      option[mainType] = optionsByMainType;\n      componentsMap.set(mainType, cmptsByMainType);\n      componentsCount.set(mainType, cmptsCountByMainType);\n\n      if (mainType === 'series') {\n        reCreateSeriesIndices(this);\n      }\n    }\n\n    if (!this._seriesIndices) {\n      reCreateSeriesIndices(this);\n    }\n  };\n\n  GlobalModel.prototype.getOption = function () {\n    var option = util_1.clone(this.option);\n    util_1.each(option, function (optInMainType, mainType) {\n      if (Component_1[\"default\"].hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(optInMainType);\n        var realLen = opts.length;\n        var metNonInner = false;\n\n        for (var i = realLen - 1; i >= 0; i--) {\n          if (opts[i] && !modelUtil.isComponentIdInternal(opts[i])) {\n            metNonInner = true;\n          } else {\n            opts[i] = null;\n            !metNonInner && realLen--;\n          }\n        }\n\n        opts.length = realLen;\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  };\n\n  GlobalModel.prototype.getTheme = function () {\n    return this._theme;\n  };\n\n  GlobalModel.prototype.getLocaleModel = function () {\n    return this._locale;\n  };\n\n  GlobalModel.prototype.getLocale = function (localePosition) {\n    var locale = this.getLocaleModel();\n    return locale.get(localePosition);\n  };\n\n  GlobalModel.prototype.setUpdatePayload = function (payload) {\n    this._payload = payload;\n  };\n\n  GlobalModel.prototype.getUpdatePayload = function () {\n    return this._payload;\n  };\n\n  GlobalModel.prototype.getComponent = function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      var cmpt = list[idx || 0];\n\n      if (cmpt) {\n        return cmpt;\n      } else if (idx == null) {\n        for (var i = 0; i < list.length; i++) {\n          if (list[i]) {\n            return list[i];\n          }\n        }\n      }\n    }\n  };\n\n  GlobalModel.prototype.queryComponents = function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cmpts = this._componentsMap.get(mainType);\n\n    if (!cmpts || !cmpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      result = [];\n      util_1.each(modelUtil.normalizeToArray(index), function (idx) {\n        cmpts[idx] && result.push(cmpts[idx]);\n      });\n    } else if (id != null) {\n      result = queryByIdOrName('id', id, cmpts);\n    } else if (name != null) {\n      result = queryByIdOrName('name', name, cmpts);\n    } else {\n      result = util_1.filter(cmpts, function (cmpt) {\n        return !!cmpt;\n      });\n    }\n\n    return filterBySubType(result, condition);\n  };\n\n  GlobalModel.prototype.findComponents = function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : util_1.filter(this._componentsMap.get(mainType), function (cmpt) {\n      return !!cmpt;\n    });\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? util_1.filter(res, condition.filter) : res;\n    }\n  };\n\n  GlobalModel.prototype.eachComponent = function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (util_1.isFunction(mainType)) {\n      var ctxForAll_1 = cb;\n      var cbForAll_1 = mainType;\n      componentsMap.each(function (cmpts, componentType) {\n        for (var i = 0; cmpts && i < cmpts.length; i++) {\n          var cmpt = cmpts[i];\n          cmpt && cbForAll_1.call(ctxForAll_1, componentType, cmpt, cmpt.componentIndex);\n        }\n      });\n    } else {\n      var cmpts = util_1.isString(mainType) ? componentsMap.get(mainType) : util_1.isObject(mainType) ? this.findComponents(mainType) : null;\n\n      for (var i = 0; cmpts && i < cmpts.length; i++) {\n        var cmpt = cmpts[i];\n        cmpt && cb.call(context, cmpt, cmpt.componentIndex);\n      }\n    }\n  };\n\n  GlobalModel.prototype.getSeriesByName = function (name) {\n    var nameStr = modelUtil.convertOptionIdName(name, null);\n    return util_1.filter(this._componentsMap.get('series'), function (oneSeries) {\n      return !!oneSeries && nameStr != null && oneSeries.name === nameStr;\n    });\n  };\n\n  GlobalModel.prototype.getSeriesByIndex = function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  };\n\n  GlobalModel.prototype.getSeriesByType = function (subType) {\n    return util_1.filter(this._componentsMap.get('series'), function (oneSeries) {\n      return !!oneSeries && oneSeries.subType === subType;\n    });\n  };\n\n  GlobalModel.prototype.getSeries = function () {\n    return util_1.filter(this._componentsMap.get('series').slice(), function (oneSeries) {\n      return !!oneSeries;\n    });\n  };\n\n  GlobalModel.prototype.getSeriesCount = function () {\n    return this._componentsCount.get('series');\n  };\n\n  GlobalModel.prototype.eachSeries = function (cb, context) {\n    assertSeriesInitialized(this);\n    util_1.each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  };\n\n  GlobalModel.prototype.eachRawSeries = function (cb, context) {\n    util_1.each(this._componentsMap.get('series'), function (series) {\n      series && cb.call(context, series, series.componentIndex);\n    });\n  };\n\n  GlobalModel.prototype.eachSeriesByType = function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    util_1.each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  };\n\n  GlobalModel.prototype.eachRawSeriesByType = function (subType, cb, context) {\n    return util_1.each(this.getSeriesByType(subType), cb, context);\n  };\n\n  GlobalModel.prototype.isSeriesFiltered = function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  };\n\n  GlobalModel.prototype.getCurrentSeriesIndices = function () {\n    return (this._seriesIndices || []).slice();\n  };\n\n  GlobalModel.prototype.filterSeries = function (cb, context) {\n    assertSeriesInitialized(this);\n    var newSeriesIndices = [];\n    util_1.each(this._seriesIndices, function (seriesRawIdx) {\n      var series = this._componentsMap.get('series')[seriesRawIdx];\n\n      cb.call(context, series, seriesRawIdx) && newSeriesIndices.push(seriesRawIdx);\n    }, this);\n    this._seriesIndices = newSeriesIndices;\n    this._seriesIndicesMap = util_1.createHashMap(newSeriesIndices);\n  };\n\n  GlobalModel.prototype.restoreData = function (payload) {\n    reCreateSeriesIndices(this);\n    var componentsMap = this._componentsMap;\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      if (Component_1[\"default\"].hasClass(componentType)) {\n        componentTypes.push(componentType);\n      }\n    });\n    Component_1[\"default\"].topologicalTravel(componentTypes, Component_1[\"default\"].getAllClassMainTypes(), function (componentType) {\n      util_1.each(componentsMap.get(componentType), function (component) {\n        if (component && (componentType !== 'series' || !isNotTargetSeries(component, payload))) {\n          component.restoreData();\n        }\n      });\n    });\n  };\n\n  GlobalModel.internalField = function () {\n    reCreateSeriesIndices = function (ecModel) {\n      var seriesIndices = ecModel._seriesIndices = [];\n      util_1.each(ecModel._componentsMap.get('series'), function (series) {\n        series && seriesIndices.push(series.componentIndex);\n      });\n      ecModel._seriesIndicesMap = util_1.createHashMap(seriesIndices);\n    };\n\n    assertSeriesInitialized = function (ecModel) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!ecModel._seriesIndices) {\n          throw new Error('Option should contains series.');\n        }\n      }\n    };\n\n    initBase = function (ecModel, baseOption) {\n      ecModel.option = {};\n      ecModel.option[OPTION_INNER_KEY] = 1;\n      ecModel._componentsMap = util_1.createHashMap({\n        series: []\n      });\n      ecModel._componentsCount = util_1.createHashMap();\n      var airaOption = baseOption.aria;\n\n      if (util_1.isObject(airaOption) && airaOption.enabled == null) {\n        airaOption.enabled = true;\n      }\n\n      mergeTheme(baseOption, ecModel._theme.option);\n      util_1.merge(baseOption, globalDefault_1[\"default\"], false);\n\n      ecModel._mergeOption(baseOption, null);\n    };\n  }();\n\n  return GlobalModel;\n}(Model_1[\"default\"]);\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seriesIndex;\n    var id = payload.seriesId;\n    var name_1 = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name_1 != null && seriesModel.name !== name_1;\n  }\n}\n\nfunction mergeTheme(option, theme) {\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  util_1.each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    }\n\n    if (!Component_1[\"default\"].hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? util_1.clone(themeItem) : util_1.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction queryByIdOrName(attr, idOrName, cmpts) {\n  if (util_1.isArray(idOrName)) {\n    var keyMap_1 = util_1.createHashMap();\n    util_1.each(idOrName, function (idOrNameItem) {\n      if (idOrNameItem != null) {\n        var idName = modelUtil.convertOptionIdName(idOrNameItem, null);\n        idName != null && keyMap_1.set(idOrNameItem, true);\n      }\n    });\n    return util_1.filter(cmpts, function (cmpt) {\n      return cmpt && keyMap_1.get(cmpt[attr]);\n    });\n  } else {\n    var idName_1 = modelUtil.convertOptionIdName(idOrName, null);\n    return util_1.filter(cmpts, function (cmpt) {\n      return cmpt && idName_1 != null && cmpt[attr] === idName_1;\n    });\n  }\n}\n\nfunction filterBySubType(components, condition) {\n  return condition.hasOwnProperty('subType') ? util_1.filter(components, function (cmpt) {\n    return cmpt && cmpt.subType === condition.subType;\n  }) : components;\n}\n\nfunction normalizeSetOptionInput(opts) {\n  var replaceMergeMainTypeMap = util_1.createHashMap();\n  opts && util_1.each(modelUtil.normalizeToArray(opts.replaceMerge), function (mainType) {\n    if (process.env.NODE_ENV !== 'production') {\n      util_1.assert(Component_1[\"default\"].hasClass(mainType), '\"' + mainType + '\" is not valid component main type in \"replaceMerge\"');\n    }\n\n    replaceMergeMainTypeMap.set(mainType, true);\n  });\n  return {\n    replaceMergeMainTypeMap: replaceMergeMainTypeMap\n  };\n}\n\nutil_1.mixin(GlobalModel, palette_1.PaletteMixin);\nexports[\"default\"] = GlobalModel;"]},"metadata":{},"sourceType":"script"}