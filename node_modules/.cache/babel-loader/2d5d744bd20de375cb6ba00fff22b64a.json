{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar Path_1 = require(\"zrender/lib/graphic/Path\");\n\nvar Group_1 = require(\"zrender/lib/graphic/Group\");\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar graphic_1 = require(\"../../util/graphic\");\n\nvar innerStore_1 = require(\"../../util/innerStore\");\n\nvar states_1 = require(\"../../util/states\");\n\nvar labelStyle_1 = require(\"../../label/labelStyle\");\n\nvar throttle_1 = require(\"../../util/throttle\");\n\nvar createClipPathFromCoordSys_1 = require(\"../helper/createClipPathFromCoordSys\");\n\nvar sausage_1 = require(\"../../util/shape/sausage\");\n\nvar Chart_1 = require(\"../../view/Chart\");\n\nvar CoordinateSystem_1 = require(\"../../coord/CoordinateSystem\");\n\nvar labelHelper_1 = require(\"../helper/labelHelper\");\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'borderWidth'];\nvar BAR_BORDER_RADIUS_QUERY = ['itemStyle', 'borderRadius'];\nvar _eventPos = [0, 0];\nvar mathMax = Math.max;\nvar mathMin = Math.min;\n\nfunction getClipArea(coord, data) {\n  var coordSysClipArea = coord.getArea && coord.getArea();\n\n  if (CoordinateSystem_1.isCoordinateSystemType(coord, 'cartesian2d')) {\n    var baseAxis = coord.getBaseAxis();\n\n    if (baseAxis.type !== 'category' || !baseAxis.onBand) {\n      var expandWidth = data.getLayout('bandWidth');\n\n      if (baseAxis.isHorizontal()) {\n        coordSysClipArea.x -= expandWidth;\n        coordSysClipArea.width += expandWidth * 2;\n      } else {\n        coordSysClipArea.y -= expandWidth;\n        coordSysClipArea.height += expandWidth * 2;\n      }\n    }\n  }\n\n  return coordSysClipArea;\n}\n\nvar BarView = function (_super) {\n  tslib_1.__extends(BarView, _super);\n\n  function BarView() {\n    var _this = _super.call(this) || this;\n\n    _this.type = BarView.type;\n    _this._isFirstFrame = true;\n    return _this;\n  }\n\n  BarView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    this._model = seriesModel;\n    this.removeOnRenderedListener(api);\n\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api, payload);\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.warn('Only cartesian2d and polar supported for bar.');\n    }\n  };\n\n  BarView.prototype.incrementalPrepareRender = function (seriesModel) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n\n    this._updateLargeClip(seriesModel);\n  };\n\n  BarView.prototype.incrementalRender = function (params, seriesModel) {\n    this._incrementalRenderLarge(params, seriesModel);\n  };\n\n  BarView.prototype._updateDrawMode = function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw !== this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  };\n\n  BarView.prototype._renderNormal = function (seriesModel, ecModel, api, payload) {\n    var _this = this;\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    var axis2DModel = baseAxis.model;\n    var realtimeSort = seriesModel.get('realtimeSort');\n\n    if (realtimeSort && data.count()) {\n      if (this._isFirstFrame) {\n        this._initSort(data, isHorizontalOrRadial, baseAxis, api);\n\n        this._isFirstFrame = false;\n        return;\n      } else {\n        this._onRendered = function () {\n          var orderMap = function (idx) {\n            var el = data.getItemGraphicEl(idx);\n\n            if (el) {\n              var shape = el.shape;\n              return (isHorizontalOrRadial ? shape.y + shape.height : shape.x + shape.width) || 0;\n            } else {\n              return 0;\n            }\n          };\n\n          _this._updateSort(data, orderMap, baseAxis, api);\n        };\n\n        api.getZr().on('rendered', this._onRendered);\n      }\n    }\n\n    var needsClip = seriesModel.get('clip', true) || realtimeSort;\n    var coordSysClipArea = getClipArea(coord, data);\n    group.removeClipPath();\n    var roundCap = seriesModel.get('roundCap', true);\n    var drawBackground = seriesModel.get('showBackground', true);\n    var backgroundModel = seriesModel.getModel('backgroundStyle');\n    var barBorderRadius = backgroundModel.get('borderRadius') || 0;\n    var bgEls = [];\n    var oldBgEls = this._backgroundEls;\n    var isInitSort = payload && payload.isInitSort;\n    var isChangeOrder = payload && payload.type === 'changeAxisOrder';\n\n    function createBackground(dataIndex) {\n      var bgLayout = getLayout[coord.type](data, dataIndex);\n      var bgEl = createBackgroundEl(coord, isHorizontalOrRadial, bgLayout);\n      bgEl.useStyle(backgroundModel.getItemStyle());\n\n      if (coord.type === 'cartesian2d') {\n        bgEl.setShape('r', barBorderRadius);\n      }\n\n      bgEls[dataIndex] = bgEl;\n      return bgEl;\n    }\n\n    ;\n    data.diff(oldData).add(function (dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n\n      if (drawBackground) {\n        createBackground(dataIndex);\n      }\n\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var isClipped = false;\n\n      if (needsClip) {\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n      }\n\n      var el = elementCreator[coord.type](seriesModel, data, dataIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, false, roundCap);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSort) {\n        updateRealtimeAnimation(seriesModel, axis2DModel, animationModel, el, layout, dataIndex, isHorizontalOrRadial, false, false);\n      } else {\n        graphic_1.initProps(el, {\n          shape: layout\n        }, seriesModel, dataIndex);\n      }\n\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      el.ignore = isClipped;\n    }).update(function (newIndex, oldIndex) {\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (drawBackground) {\n        var bgEl = void 0;\n\n        if (oldBgEls.length === 0) {\n          bgEl = createBackground(oldIndex);\n        } else {\n          bgEl = oldBgEls[oldIndex];\n          bgEl.useStyle(backgroundModel.getItemStyle());\n\n          if (coord.type === 'cartesian2d') {\n            bgEl.setShape('r', barBorderRadius);\n          }\n\n          bgEls[newIndex] = bgEl;\n        }\n\n        var bgLayout = getLayout[coord.type](data, newIndex);\n        var shape = createBackgroundShape(isHorizontalOrRadial, bgLayout, coord);\n        graphic_1.updateProps(bgEl, {\n          shape: shape\n        }, animationModel, newIndex);\n      }\n\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        el = null;\n        return;\n      }\n\n      var isClipped = false;\n\n      if (needsClip) {\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n        }\n      }\n\n      if (!el) {\n        el = elementCreator[coord.type](seriesModel, data, newIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, !!el, roundCap);\n      }\n\n      if (!isChangeOrder) {\n        updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n      }\n\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSort) {\n        updateRealtimeAnimation(seriesModel, axis2DModel, animationModel, el, layout, newIndex, isHorizontalOrRadial, true, isChangeOrder);\n      } else {\n        graphic_1.updateProps(el, {\n          shape: layout\n        }, seriesModel, newIndex, null);\n      }\n\n      data.setItemGraphicEl(newIndex, el);\n      el.ignore = isClipped;\n      group.add(el);\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n      el && graphic_1.removeElementWithFadeOut(el, seriesModel, dataIndex);\n    }).execute();\n    var bgGroup = this._backgroundGroup || (this._backgroundGroup = new Group_1[\"default\"]());\n    bgGroup.removeAll();\n\n    for (var i = 0; i < bgEls.length; ++i) {\n      bgGroup.add(bgEls[i]);\n    }\n\n    group.add(bgGroup);\n    this._backgroundEls = bgEls;\n    this._data = data;\n  };\n\n  BarView.prototype._renderLarge = function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n\n    this._updateLargeClip(seriesModel);\n  };\n\n  BarView.prototype._incrementalRenderLarge = function (params, seriesModel) {\n    this._removeBackground();\n\n    createLarge(seriesModel, this.group, true);\n  };\n\n  BarView.prototype._updateLargeClip = function (seriesModel) {\n    var clipPath = seriesModel.get('clip', true) ? createClipPathFromCoordSys_1.createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\n\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n  };\n\n  BarView.prototype._dataSort = function (data, idxMap) {\n    var info = [];\n    data.each(function (idx) {\n      info.push({\n        mappedValue: idxMap(idx),\n        ordinalNumber: idx,\n        beforeSortIndex: null\n      });\n    });\n    info.sort(function (a, b) {\n      return b.mappedValue - a.mappedValue;\n    });\n\n    for (var i = 0; i < info.length; ++i) {\n      info[info[i].ordinalNumber].beforeSortIndex = i;\n    }\n\n    return util_1.map(info, function (item) {\n      return {\n        ordinalNumber: item.ordinalNumber,\n        beforeSortIndex: item.beforeSortIndex\n      };\n    });\n  };\n\n  BarView.prototype._isDataOrderChanged = function (data, orderMap, oldOrder) {\n    var oldCount = oldOrder ? oldOrder.length : 0;\n\n    if (oldCount !== data.count()) {\n      return true;\n    }\n\n    var lastValue = Number.MAX_VALUE;\n\n    for (var i = 0; i < oldOrder.length; ++i) {\n      var value = orderMap(oldOrder[i].ordinalNumber);\n\n      if (value > lastValue) {\n        return true;\n      }\n\n      lastValue = value;\n    }\n\n    return false;\n  };\n\n  BarView.prototype._updateSort = function (data, orderMap, baseAxis, api) {\n    var oldOrder = baseAxis.scale.getCategorySortInfo();\n\n    var isOrderChanged = this._isDataOrderChanged(data, orderMap, oldOrder);\n\n    if (isOrderChanged) {\n      var newOrder = this._dataSort(data, orderMap);\n\n      var extent = baseAxis.scale.getExtent();\n\n      for (var i = extent[0]; i < extent[1]; ++i) {\n        if (!oldOrder[i] || oldOrder[i].ordinalNumber !== newOrder[i].ordinalNumber) {\n          this.removeOnRenderedListener(api);\n          var action = {\n            type: 'changeAxisOrder',\n            componentType: baseAxis.dim + 'Axis',\n            axisId: baseAxis.index,\n            sortInfo: newOrder\n          };\n          api.dispatchAction(action);\n          break;\n        }\n      }\n    }\n  };\n\n  BarView.prototype._initSort = function (data, isHorizontal, baseAxis, api) {\n    var action = {\n      type: 'changeAxisOrder',\n      componentType: baseAxis.dim + 'Axis',\n      isInitSort: true,\n      axisId: baseAxis.index,\n      sortInfo: this._dataSort(data, function (idx) {\n        return parseFloat(data.get(isHorizontal ? 'y' : 'x', idx)) || 0;\n      })\n    };\n    api.dispatchAction(action);\n  };\n\n  BarView.prototype.remove = function (ecModel, api) {\n    this._clear(this._model);\n\n    this.removeOnRenderedListener(api);\n  };\n\n  BarView.prototype.dispose = function (ecModel, api) {\n    this.removeOnRenderedListener(api);\n  };\n\n  BarView.prototype.removeOnRenderedListener = function (api) {\n    if (this._onRendered) {\n      api.getZr().off('rendered', this._onRendered);\n      this._onRendered = null;\n    }\n  };\n\n  BarView.prototype._clear = function (model) {\n    var group = this.group;\n    var data = this._data;\n\n    if (model && model.isAnimationEnabled() && data && !this._isLargeDraw) {\n      this._removeBackground();\n\n      this._backgroundEls = [];\n      data.eachItemGraphicEl(function (el) {\n        graphic_1.removeElementWithFadeOut(el, model, innerStore_1.getECData(el).dataIndex);\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n    this._isFirstFrame = true;\n  };\n\n  BarView.prototype._removeBackground = function () {\n    this.group.remove(this._backgroundGroup);\n    this._backgroundGroup = null;\n  };\n\n  BarView.type = 'bar';\n  return BarView;\n}(Chart_1[\"default\"]);\n\nvar clip = {\n  cartesian2d: function (coordSysBoundingRect, layout) {\n    var signWidth = layout.width < 0 ? -1 : 1;\n    var signHeight = layout.height < 0 ? -1 : 1;\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    var x = mathMax(layout.x, coordSysBoundingRect.x);\n    var x2 = mathMin(layout.x + layout.width, coordSysBoundingRect.x + coordSysBoundingRect.width);\n    var y = mathMax(layout.y, coordSysBoundingRect.y);\n    var y2 = mathMin(layout.y + layout.height, coordSysBoundingRect.y + coordSysBoundingRect.height);\n    layout.x = x;\n    layout.y = y;\n    layout.width = x2 - x;\n    layout.height = y2 - y;\n    var clipped = layout.width < 0 || layout.height < 0;\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    return clipped;\n  },\n  polar: function (coordSysClipArea, layout) {\n    var signR = layout.r0 <= layout.r ? 1 : -1;\n\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n\n    var r = mathMin(layout.r, coordSysClipArea.r);\n    var r0 = mathMax(layout.r0, coordSysClipArea.r0);\n    layout.r = r;\n    layout.r0 = r0;\n    var clipped = r - r0 < 0;\n\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n\n    return clipped;\n  }\n};\nvar elementCreator = {\n  cartesian2d: function (seriesModel, data, newIndex, layout, isHorizontal, animationModel, axisModel, isUpdate, roundCap) {\n    var rect = new graphic_1.Rect({\n      shape: util_1.extend({}, layout),\n      z2: 1\n    });\n    rect.__dataIndex = newIndex;\n    rect.name = 'item';\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      rectShape[animateProperty] = 0;\n    }\n\n    return rect;\n  },\n  polar: function (seriesModel, data, newIndex, layout, isRadial, animationModel, axisModel, isUpdate, roundCap) {\n    var clockwise = layout.startAngle < layout.endAngle;\n    var ShapeClass = !isRadial && roundCap ? sausage_1[\"default\"] : graphic_1.Sector;\n    var sector = new ShapeClass({\n      shape: util_1.defaults({\n        clockwise: clockwise\n      }, layout),\n      z2: 1\n    });\n    sector.name = 'item';\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      (isUpdate ? graphic_1.updateProps : graphic_1.initProps)(sector, {\n        shape: animateTarget\n      }, animationModel);\n    }\n\n    return sector;\n  }\n};\n\nfunction updateRealtimeAnimation(seriesModel, axisModel, animationModel, el, layout, newIndex, isHorizontal, isUpdate, isChangeOrder) {\n  if (animationModel || axisModel) {\n    var seriesTarget = void 0;\n    var axisTarget = void 0;\n\n    if (isHorizontal) {\n      axisTarget = {\n        x: layout.x,\n        width: layout.width\n      };\n      seriesTarget = {\n        y: layout.y,\n        height: layout.height\n      };\n    } else {\n      axisTarget = {\n        y: layout.y,\n        height: layout.height\n      };\n      seriesTarget = {\n        x: layout.x,\n        width: layout.width\n      };\n    }\n\n    if (!isChangeOrder) {\n      (isUpdate ? graphic_1.updateProps : graphic_1.initProps)(el, {\n        shape: seriesTarget\n      }, seriesModel, newIndex, null);\n    }\n\n    (isUpdate ? graphic_1.updateProps : graphic_1.initProps)(el, {\n      shape: axisTarget\n    }, axisModel, newIndex);\n  }\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = itemModel ? getLineWidth(itemModel, layout) : 0;\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction isZeroOnPolar(layout) {\n  return layout.startAngle != null && layout.endAngle != null && layout.startAngle === layout.endAngle;\n}\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var style = data.getItemVisual(dataIndex, 'style');\n\n  if (!isPolar) {\n    el.setShape('r', itemModel.get(BAR_BORDER_RADIUS_QUERY) || 0);\n  }\n\n  el.useStyle(style);\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n\n  if (!isPolar) {\n    var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n    var labelStatesModels = labelStyle_1.getLabelStatesModels(itemModel);\n    labelStyle_1.setLabelStyle(el, labelStatesModels, {\n      labelFetcher: seriesModel,\n      labelDataIndex: dataIndex,\n      defaultText: labelHelper_1.getDefaultLabel(seriesModel.getData(), dataIndex),\n      inheritColor: style.fill,\n      defaultOpacity: style.opacity,\n      defaultOutsidePosition: labelPositionOutside\n    });\n    var label = el.getTextContent();\n    labelStyle_1.setLabelValueAnimation(label, labelStatesModels, seriesModel.getRawValue(dataIndex), function (value) {\n      return labelHelper_1.getDefaultInterpolatedLabel(data, value);\n    });\n  }\n\n  var emphasisModel = itemModel.getModel(['emphasis']);\n  states_1.enableHoverEmphasis(el, emphasisModel.get('focus'), emphasisModel.get('blurScope'));\n  states_1.setStatesStylesFromModel(el, itemModel);\n\n  if (isZeroOnPolar(layout)) {\n    el.style.fill = 'none';\n    el.style.stroke = 'none';\n    util_1.each(el.states, function (state) {\n      if (state.style) {\n        state.style.fill = state.style.stroke = 'none';\n      }\n    });\n  }\n}\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  var width = isNaN(rawLayout.width) ? Number.MAX_VALUE : Math.abs(rawLayout.width);\n  var height = isNaN(rawLayout.height) ? Number.MAX_VALUE : Math.abs(rawLayout.height);\n  return Math.min(lineWidth, width, height);\n}\n\nvar LagePathShape = function () {\n  function LagePathShape() {}\n\n  return LagePathShape;\n}();\n\nvar LargePath = function (_super) {\n  tslib_1.__extends(LargePath, _super);\n\n  function LargePath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'largeBar';\n    return _this;\n  }\n\n  ;\n\n  LargePath.prototype.getDefaultShape = function () {\n    return new LagePathShape();\n  };\n\n  LargePath.prototype.buildPath = function (ctx, shape) {\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var baseDimIdx = this.__baseDimIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  };\n\n  return LargePath;\n}(Path_1[\"default\"]);\n\nfunction createLarge(seriesModel, group, incremental) {\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - baseDimIdx] = data.getLayout('valueAxisStart');\n  var largeDataIndices = data.getLayout('largeDataIndices');\n  var barWidth = data.getLayout('barWidth');\n  var backgroundModel = seriesModel.getModel('backgroundStyle');\n  var drawBackground = seriesModel.get('showBackground', true);\n\n  if (drawBackground) {\n    var points = data.getLayout('largeBackgroundPoints');\n    var backgroundStartPoint = [];\n    backgroundStartPoint[1 - baseDimIdx] = data.getLayout('backgroundStart');\n    var bgEl = new LargePath({\n      shape: {\n        points: points\n      },\n      incremental: !!incremental,\n      silent: true,\n      z2: 0\n    });\n    bgEl.__startPoint = backgroundStartPoint;\n    bgEl.__baseDimIdx = baseDimIdx;\n    bgEl.__largeDataIndices = largeDataIndices;\n    bgEl.__barWidth = barWidth;\n    setLargeBackgroundStyle(bgEl, backgroundModel, data);\n    group.add(bgEl);\n  }\n\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental\n  });\n  el.__startPoint = startPoint;\n  el.__baseDimIdx = baseDimIdx;\n  el.__largeDataIndices = largeDataIndices;\n  el.__barWidth = barWidth;\n  group.add(el);\n  setLargeStyle(el, seriesModel, data);\n  innerStore_1.getECData(el).seriesIndex = seriesModel.seriesIndex;\n\n  if (!seriesModel.get('silent')) {\n    el.on('mousedown', largePathUpdateDataIndex);\n    el.on('mousemove', largePathUpdateDataIndex);\n  }\n}\n\nvar largePathUpdateDataIndex = throttle_1.throttle(function (event) {\n  var largePath = this;\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\n  innerStore_1.getECData(largePath).dataIndex = dataIndex >= 0 ? dataIndex : null;\n}, 30, false);\n\nfunction largePathFindDataIndex(largePath, x, y) {\n  var baseDimIdx = largePath.__baseDimIdx;\n  var valueDimIdx = 1 - baseDimIdx;\n  var points = largePath.shape.points;\n  var largeDataIndices = largePath.__largeDataIndices;\n  var barWidthHalf = Math.abs(largePath.__barWidth / 2);\n  var startValueVal = largePath.__startPoint[valueDimIdx];\n  _eventPos[0] = x;\n  _eventPos[1] = y;\n  var pointerBaseVal = _eventPos[baseDimIdx];\n  var pointerValueVal = _eventPos[1 - baseDimIdx];\n  var baseLowerBound = pointerBaseVal - barWidthHalf;\n  var baseUpperBound = pointerBaseVal + barWidthHalf;\n\n  for (var i = 0, len = points.length / 2; i < len; i++) {\n    var ii = i * 2;\n    var barBaseVal = points[ii + baseDimIdx];\n    var barValueVal = points[ii + valueDimIdx];\n\n    if (barBaseVal >= baseLowerBound && barBaseVal <= baseUpperBound && (startValueVal <= barValueVal ? pointerValueVal >= startValueVal && pointerValueVal <= barValueVal : pointerValueVal >= barValueVal && pointerValueVal <= startValueVal)) {\n      return largeDataIndices[i];\n    }\n  }\n\n  return -1;\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var globalStyle = data.getVisual('style');\n  el.useStyle(util_1.extend({}, globalStyle));\n  el.style.fill = null;\n  el.style.stroke = globalStyle.fill;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction setLargeBackgroundStyle(el, backgroundModel, data) {\n  var borderColor = backgroundModel.get('borderColor') || backgroundModel.get('color');\n  var itemStyle = backgroundModel.getItemStyle();\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction createBackgroundShape(isHorizontalOrRadial, layout, coord) {\n  if (CoordinateSystem_1.isCoordinateSystemType(coord, 'cartesian2d')) {\n    var rectShape = layout;\n    var coordLayout = coord.getArea();\n    return {\n      x: isHorizontalOrRadial ? rectShape.x : coordLayout.x,\n      y: isHorizontalOrRadial ? coordLayout.y : rectShape.y,\n      width: isHorizontalOrRadial ? rectShape.width : coordLayout.width,\n      height: isHorizontalOrRadial ? coordLayout.height : rectShape.height\n    };\n  } else {\n    var coordLayout = coord.getArea();\n    var sectorShape = layout;\n    return {\n      cx: coordLayout.cx,\n      cy: coordLayout.cy,\n      r0: isHorizontalOrRadial ? coordLayout.r0 : sectorShape.r0,\n      r: isHorizontalOrRadial ? coordLayout.r : sectorShape.r,\n      startAngle: isHorizontalOrRadial ? sectorShape.startAngle : 0,\n      endAngle: isHorizontalOrRadial ? sectorShape.endAngle : Math.PI * 2\n    };\n  }\n}\n\nfunction createBackgroundEl(coord, isHorizontalOrRadial, layout) {\n  var ElementClz = coord.type === 'polar' ? graphic_1.Sector : graphic_1.Rect;\n  return new ElementClz({\n    shape: createBackgroundShape(isHorizontalOrRadial, layout, coord),\n    silent: true,\n    z2: 0\n  });\n}\n\nChart_1[\"default\"].registerClass(BarView);\nexports[\"default\"] = BarView;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/chart/bar/BarView.js"],"names":["exports","__esModule","tslib_1","require","Path_1","Group_1","util_1","graphic_1","innerStore_1","states_1","labelStyle_1","throttle_1","createClipPathFromCoordSys_1","sausage_1","Chart_1","CoordinateSystem_1","labelHelper_1","BAR_BORDER_WIDTH_QUERY","BAR_BORDER_RADIUS_QUERY","_eventPos","mathMax","Math","max","mathMin","min","getClipArea","coord","data","coordSysClipArea","getArea","isCoordinateSystemType","baseAxis","getBaseAxis","type","onBand","expandWidth","getLayout","isHorizontal","x","width","y","height","BarView","_super","__extends","_this","call","_isFirstFrame","prototype","render","seriesModel","ecModel","api","payload","_model","removeOnRenderedListener","_updateDrawMode","coordinateSystemType","get","_isLargeDraw","_renderLarge","_renderNormal","process","env","NODE_ENV","console","warn","incrementalPrepareRender","_clear","_updateLargeClip","incrementalRender","params","_incrementalRenderLarge","isLargeDraw","pipelineContext","large","group","getData","oldData","_data","coordinateSystem","isHorizontalOrRadial","dim","animationModel","isAnimationEnabled","axis2DModel","model","realtimeSort","count","_initSort","_onRendered","orderMap","idx","el","getItemGraphicEl","shape","_updateSort","getZr","on","needsClip","removeClipPath","roundCap","drawBackground","backgroundModel","getModel","barBorderRadius","bgEls","oldBgEls","_backgroundEls","isInitSort","isChangeOrder","createBackground","dataIndex","bgLayout","bgEl","createBackgroundEl","useStyle","getItemStyle","setShape","diff","add","itemModel","getItemModel","layout","hasValue","isClipped","clip","elementCreator","updateStyle","attr","updateRealtimeAnimation","initProps","setItemGraphicEl","ignore","update","newIndex","oldIndex","length","createBackgroundShape","updateProps","remove","removeElementWithFadeOut","execute","bgGroup","_backgroundGroup","removeAll","i","createLarge","_removeBackground","clipPath","createClipPath","setClipPath","_dataSort","idxMap","info","each","push","mappedValue","ordinalNumber","beforeSortIndex","sort","a","b","map","item","_isDataOrderChanged","oldOrder","oldCount","lastValue","Number","MAX_VALUE","value","scale","getCategorySortInfo","isOrderChanged","newOrder","extent","getExtent","action","componentType","axisId","index","sortInfo","dispatchAction","parseFloat","dispose","off","eachItemGraphicEl","getECData","cartesian2d","coordSysBoundingRect","signWidth","signHeight","x2","y2","clipped","polar","signR","r0","r","tmp","axisModel","isUpdate","rect","Rect","extend","z2","__dataIndex","name","rectShape","animateProperty","isRadial","clockwise","startAngle","endAngle","ShapeClass","Sector","sector","defaults","sectorShape","animateTarget","seriesTarget","axisTarget","getItemLayout","fixedLineWidth","getLineWidth","signX","signY","cx","cy","isZeroOnPolar","isPolar","style","getItemVisual","cursorStyle","getShallow","labelPositionOutside","labelStatesModels","getLabelStatesModels","setLabelStyle","labelFetcher","labelDataIndex","defaultText","getDefaultLabel","inheritColor","fill","defaultOpacity","opacity","defaultOutsidePosition","label","getTextContent","setLabelValueAnimation","getRawValue","getDefaultInterpolatedLabel","emphasisModel","enableHoverEmphasis","setStatesStylesFromModel","stroke","states","state","rawLayout","lineWidth","isNaN","abs","LagePathShape","LargePath","opts","getDefaultShape","buildPath","ctx","points","startPoint","__startPoint","baseDimIdx","__baseDimIdx","moveTo","lineTo","incremental","largeDataIndices","barWidth","backgroundStartPoint","silent","__largeDataIndices","__barWidth","setLargeBackgroundStyle","setLargeStyle","seriesIndex","largePathUpdateDataIndex","throttle","event","largePath","largePathFindDataIndex","offsetX","offsetY","valueDimIdx","barWidthHalf","startValueVal","pointerBaseVal","pointerValueVal","baseLowerBound","baseUpperBound","len","ii","barBaseVal","barValueVal","globalStyle","getVisual","borderColor","itemStyle","coordLayout","PI","ElementClz","registerClass"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar Path_1 = require(\"zrender/lib/graphic/Path\");\n\nvar Group_1 = require(\"zrender/lib/graphic/Group\");\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar graphic_1 = require(\"../../util/graphic\");\n\nvar innerStore_1 = require(\"../../util/innerStore\");\n\nvar states_1 = require(\"../../util/states\");\n\nvar labelStyle_1 = require(\"../../label/labelStyle\");\n\nvar throttle_1 = require(\"../../util/throttle\");\n\nvar createClipPathFromCoordSys_1 = require(\"../helper/createClipPathFromCoordSys\");\n\nvar sausage_1 = require(\"../../util/shape/sausage\");\n\nvar Chart_1 = require(\"../../view/Chart\");\n\nvar CoordinateSystem_1 = require(\"../../coord/CoordinateSystem\");\n\nvar labelHelper_1 = require(\"../helper/labelHelper\");\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'borderWidth'];\nvar BAR_BORDER_RADIUS_QUERY = ['itemStyle', 'borderRadius'];\nvar _eventPos = [0, 0];\nvar mathMax = Math.max;\nvar mathMin = Math.min;\n\nfunction getClipArea(coord, data) {\n  var coordSysClipArea = coord.getArea && coord.getArea();\n\n  if (CoordinateSystem_1.isCoordinateSystemType(coord, 'cartesian2d')) {\n    var baseAxis = coord.getBaseAxis();\n\n    if (baseAxis.type !== 'category' || !baseAxis.onBand) {\n      var expandWidth = data.getLayout('bandWidth');\n\n      if (baseAxis.isHorizontal()) {\n        coordSysClipArea.x -= expandWidth;\n        coordSysClipArea.width += expandWidth * 2;\n      } else {\n        coordSysClipArea.y -= expandWidth;\n        coordSysClipArea.height += expandWidth * 2;\n      }\n    }\n  }\n\n  return coordSysClipArea;\n}\n\nvar BarView = function (_super) {\n  tslib_1.__extends(BarView, _super);\n\n  function BarView() {\n    var _this = _super.call(this) || this;\n\n    _this.type = BarView.type;\n    _this._isFirstFrame = true;\n    return _this;\n  }\n\n  BarView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    this._model = seriesModel;\n    this.removeOnRenderedListener(api);\n\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api, payload);\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.warn('Only cartesian2d and polar supported for bar.');\n    }\n  };\n\n  BarView.prototype.incrementalPrepareRender = function (seriesModel) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n\n    this._updateLargeClip(seriesModel);\n  };\n\n  BarView.prototype.incrementalRender = function (params, seriesModel) {\n    this._incrementalRenderLarge(params, seriesModel);\n  };\n\n  BarView.prototype._updateDrawMode = function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw !== this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  };\n\n  BarView.prototype._renderNormal = function (seriesModel, ecModel, api, payload) {\n    var _this = this;\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    var axis2DModel = baseAxis.model;\n    var realtimeSort = seriesModel.get('realtimeSort');\n\n    if (realtimeSort && data.count()) {\n      if (this._isFirstFrame) {\n        this._initSort(data, isHorizontalOrRadial, baseAxis, api);\n\n        this._isFirstFrame = false;\n        return;\n      } else {\n        this._onRendered = function () {\n          var orderMap = function (idx) {\n            var el = data.getItemGraphicEl(idx);\n\n            if (el) {\n              var shape = el.shape;\n              return (isHorizontalOrRadial ? shape.y + shape.height : shape.x + shape.width) || 0;\n            } else {\n              return 0;\n            }\n          };\n\n          _this._updateSort(data, orderMap, baseAxis, api);\n        };\n\n        api.getZr().on('rendered', this._onRendered);\n      }\n    }\n\n    var needsClip = seriesModel.get('clip', true) || realtimeSort;\n    var coordSysClipArea = getClipArea(coord, data);\n    group.removeClipPath();\n    var roundCap = seriesModel.get('roundCap', true);\n    var drawBackground = seriesModel.get('showBackground', true);\n    var backgroundModel = seriesModel.getModel('backgroundStyle');\n    var barBorderRadius = backgroundModel.get('borderRadius') || 0;\n    var bgEls = [];\n    var oldBgEls = this._backgroundEls;\n    var isInitSort = payload && payload.isInitSort;\n    var isChangeOrder = payload && payload.type === 'changeAxisOrder';\n\n    function createBackground(dataIndex) {\n      var bgLayout = getLayout[coord.type](data, dataIndex);\n      var bgEl = createBackgroundEl(coord, isHorizontalOrRadial, bgLayout);\n      bgEl.useStyle(backgroundModel.getItemStyle());\n\n      if (coord.type === 'cartesian2d') {\n        bgEl.setShape('r', barBorderRadius);\n      }\n\n      bgEls[dataIndex] = bgEl;\n      return bgEl;\n    }\n\n    ;\n    data.diff(oldData).add(function (dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n\n      if (drawBackground) {\n        createBackground(dataIndex);\n      }\n\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var isClipped = false;\n\n      if (needsClip) {\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n      }\n\n      var el = elementCreator[coord.type](seriesModel, data, dataIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, false, roundCap);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSort) {\n        updateRealtimeAnimation(seriesModel, axis2DModel, animationModel, el, layout, dataIndex, isHorizontalOrRadial, false, false);\n      } else {\n        graphic_1.initProps(el, {\n          shape: layout\n        }, seriesModel, dataIndex);\n      }\n\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      el.ignore = isClipped;\n    }).update(function (newIndex, oldIndex) {\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (drawBackground) {\n        var bgEl = void 0;\n\n        if (oldBgEls.length === 0) {\n          bgEl = createBackground(oldIndex);\n        } else {\n          bgEl = oldBgEls[oldIndex];\n          bgEl.useStyle(backgroundModel.getItemStyle());\n\n          if (coord.type === 'cartesian2d') {\n            bgEl.setShape('r', barBorderRadius);\n          }\n\n          bgEls[newIndex] = bgEl;\n        }\n\n        var bgLayout = getLayout[coord.type](data, newIndex);\n        var shape = createBackgroundShape(isHorizontalOrRadial, bgLayout, coord);\n        graphic_1.updateProps(bgEl, {\n          shape: shape\n        }, animationModel, newIndex);\n      }\n\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        el = null;\n        return;\n      }\n\n      var isClipped = false;\n\n      if (needsClip) {\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n        }\n      }\n\n      if (!el) {\n        el = elementCreator[coord.type](seriesModel, data, newIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, !!el, roundCap);\n      }\n\n      if (!isChangeOrder) {\n        updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n      }\n\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSort) {\n        updateRealtimeAnimation(seriesModel, axis2DModel, animationModel, el, layout, newIndex, isHorizontalOrRadial, true, isChangeOrder);\n      } else {\n        graphic_1.updateProps(el, {\n          shape: layout\n        }, seriesModel, newIndex, null);\n      }\n\n      data.setItemGraphicEl(newIndex, el);\n      el.ignore = isClipped;\n      group.add(el);\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n      el && graphic_1.removeElementWithFadeOut(el, seriesModel, dataIndex);\n    }).execute();\n    var bgGroup = this._backgroundGroup || (this._backgroundGroup = new Group_1[\"default\"]());\n    bgGroup.removeAll();\n\n    for (var i = 0; i < bgEls.length; ++i) {\n      bgGroup.add(bgEls[i]);\n    }\n\n    group.add(bgGroup);\n    this._backgroundEls = bgEls;\n    this._data = data;\n  };\n\n  BarView.prototype._renderLarge = function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n\n    this._updateLargeClip(seriesModel);\n  };\n\n  BarView.prototype._incrementalRenderLarge = function (params, seriesModel) {\n    this._removeBackground();\n\n    createLarge(seriesModel, this.group, true);\n  };\n\n  BarView.prototype._updateLargeClip = function (seriesModel) {\n    var clipPath = seriesModel.get('clip', true) ? createClipPathFromCoordSys_1.createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\n\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n  };\n\n  BarView.prototype._dataSort = function (data, idxMap) {\n    var info = [];\n    data.each(function (idx) {\n      info.push({\n        mappedValue: idxMap(idx),\n        ordinalNumber: idx,\n        beforeSortIndex: null\n      });\n    });\n    info.sort(function (a, b) {\n      return b.mappedValue - a.mappedValue;\n    });\n\n    for (var i = 0; i < info.length; ++i) {\n      info[info[i].ordinalNumber].beforeSortIndex = i;\n    }\n\n    return util_1.map(info, function (item) {\n      return {\n        ordinalNumber: item.ordinalNumber,\n        beforeSortIndex: item.beforeSortIndex\n      };\n    });\n  };\n\n  BarView.prototype._isDataOrderChanged = function (data, orderMap, oldOrder) {\n    var oldCount = oldOrder ? oldOrder.length : 0;\n\n    if (oldCount !== data.count()) {\n      return true;\n    }\n\n    var lastValue = Number.MAX_VALUE;\n\n    for (var i = 0; i < oldOrder.length; ++i) {\n      var value = orderMap(oldOrder[i].ordinalNumber);\n\n      if (value > lastValue) {\n        return true;\n      }\n\n      lastValue = value;\n    }\n\n    return false;\n  };\n\n  BarView.prototype._updateSort = function (data, orderMap, baseAxis, api) {\n    var oldOrder = baseAxis.scale.getCategorySortInfo();\n\n    var isOrderChanged = this._isDataOrderChanged(data, orderMap, oldOrder);\n\n    if (isOrderChanged) {\n      var newOrder = this._dataSort(data, orderMap);\n\n      var extent = baseAxis.scale.getExtent();\n\n      for (var i = extent[0]; i < extent[1]; ++i) {\n        if (!oldOrder[i] || oldOrder[i].ordinalNumber !== newOrder[i].ordinalNumber) {\n          this.removeOnRenderedListener(api);\n          var action = {\n            type: 'changeAxisOrder',\n            componentType: baseAxis.dim + 'Axis',\n            axisId: baseAxis.index,\n            sortInfo: newOrder\n          };\n          api.dispatchAction(action);\n          break;\n        }\n      }\n    }\n  };\n\n  BarView.prototype._initSort = function (data, isHorizontal, baseAxis, api) {\n    var action = {\n      type: 'changeAxisOrder',\n      componentType: baseAxis.dim + 'Axis',\n      isInitSort: true,\n      axisId: baseAxis.index,\n      sortInfo: this._dataSort(data, function (idx) {\n        return parseFloat(data.get(isHorizontal ? 'y' : 'x', idx)) || 0;\n      })\n    };\n    api.dispatchAction(action);\n  };\n\n  BarView.prototype.remove = function (ecModel, api) {\n    this._clear(this._model);\n\n    this.removeOnRenderedListener(api);\n  };\n\n  BarView.prototype.dispose = function (ecModel, api) {\n    this.removeOnRenderedListener(api);\n  };\n\n  BarView.prototype.removeOnRenderedListener = function (api) {\n    if (this._onRendered) {\n      api.getZr().off('rendered', this._onRendered);\n      this._onRendered = null;\n    }\n  };\n\n  BarView.prototype._clear = function (model) {\n    var group = this.group;\n    var data = this._data;\n\n    if (model && model.isAnimationEnabled() && data && !this._isLargeDraw) {\n      this._removeBackground();\n\n      this._backgroundEls = [];\n      data.eachItemGraphicEl(function (el) {\n        graphic_1.removeElementWithFadeOut(el, model, innerStore_1.getECData(el).dataIndex);\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n    this._isFirstFrame = true;\n  };\n\n  BarView.prototype._removeBackground = function () {\n    this.group.remove(this._backgroundGroup);\n    this._backgroundGroup = null;\n  };\n\n  BarView.type = 'bar';\n  return BarView;\n}(Chart_1[\"default\"]);\n\nvar clip = {\n  cartesian2d: function (coordSysBoundingRect, layout) {\n    var signWidth = layout.width < 0 ? -1 : 1;\n    var signHeight = layout.height < 0 ? -1 : 1;\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    var x = mathMax(layout.x, coordSysBoundingRect.x);\n    var x2 = mathMin(layout.x + layout.width, coordSysBoundingRect.x + coordSysBoundingRect.width);\n    var y = mathMax(layout.y, coordSysBoundingRect.y);\n    var y2 = mathMin(layout.y + layout.height, coordSysBoundingRect.y + coordSysBoundingRect.height);\n    layout.x = x;\n    layout.y = y;\n    layout.width = x2 - x;\n    layout.height = y2 - y;\n    var clipped = layout.width < 0 || layout.height < 0;\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    return clipped;\n  },\n  polar: function (coordSysClipArea, layout) {\n    var signR = layout.r0 <= layout.r ? 1 : -1;\n\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n\n    var r = mathMin(layout.r, coordSysClipArea.r);\n    var r0 = mathMax(layout.r0, coordSysClipArea.r0);\n    layout.r = r;\n    layout.r0 = r0;\n    var clipped = r - r0 < 0;\n\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n\n    return clipped;\n  }\n};\nvar elementCreator = {\n  cartesian2d: function (seriesModel, data, newIndex, layout, isHorizontal, animationModel, axisModel, isUpdate, roundCap) {\n    var rect = new graphic_1.Rect({\n      shape: util_1.extend({}, layout),\n      z2: 1\n    });\n    rect.__dataIndex = newIndex;\n    rect.name = 'item';\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      rectShape[animateProperty] = 0;\n    }\n\n    return rect;\n  },\n  polar: function (seriesModel, data, newIndex, layout, isRadial, animationModel, axisModel, isUpdate, roundCap) {\n    var clockwise = layout.startAngle < layout.endAngle;\n    var ShapeClass = !isRadial && roundCap ? sausage_1[\"default\"] : graphic_1.Sector;\n    var sector = new ShapeClass({\n      shape: util_1.defaults({\n        clockwise: clockwise\n      }, layout),\n      z2: 1\n    });\n    sector.name = 'item';\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      (isUpdate ? graphic_1.updateProps : graphic_1.initProps)(sector, {\n        shape: animateTarget\n      }, animationModel);\n    }\n\n    return sector;\n  }\n};\n\nfunction updateRealtimeAnimation(seriesModel, axisModel, animationModel, el, layout, newIndex, isHorizontal, isUpdate, isChangeOrder) {\n  if (animationModel || axisModel) {\n    var seriesTarget = void 0;\n    var axisTarget = void 0;\n\n    if (isHorizontal) {\n      axisTarget = {\n        x: layout.x,\n        width: layout.width\n      };\n      seriesTarget = {\n        y: layout.y,\n        height: layout.height\n      };\n    } else {\n      axisTarget = {\n        y: layout.y,\n        height: layout.height\n      };\n      seriesTarget = {\n        x: layout.x,\n        width: layout.width\n      };\n    }\n\n    if (!isChangeOrder) {\n      (isUpdate ? graphic_1.updateProps : graphic_1.initProps)(el, {\n        shape: seriesTarget\n      }, seriesModel, newIndex, null);\n    }\n\n    (isUpdate ? graphic_1.updateProps : graphic_1.initProps)(el, {\n      shape: axisTarget\n    }, axisModel, newIndex);\n  }\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = itemModel ? getLineWidth(itemModel, layout) : 0;\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction isZeroOnPolar(layout) {\n  return layout.startAngle != null && layout.endAngle != null && layout.startAngle === layout.endAngle;\n}\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var style = data.getItemVisual(dataIndex, 'style');\n\n  if (!isPolar) {\n    el.setShape('r', itemModel.get(BAR_BORDER_RADIUS_QUERY) || 0);\n  }\n\n  el.useStyle(style);\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n\n  if (!isPolar) {\n    var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n    var labelStatesModels = labelStyle_1.getLabelStatesModels(itemModel);\n    labelStyle_1.setLabelStyle(el, labelStatesModels, {\n      labelFetcher: seriesModel,\n      labelDataIndex: dataIndex,\n      defaultText: labelHelper_1.getDefaultLabel(seriesModel.getData(), dataIndex),\n      inheritColor: style.fill,\n      defaultOpacity: style.opacity,\n      defaultOutsidePosition: labelPositionOutside\n    });\n    var label = el.getTextContent();\n    labelStyle_1.setLabelValueAnimation(label, labelStatesModels, seriesModel.getRawValue(dataIndex), function (value) {\n      return labelHelper_1.getDefaultInterpolatedLabel(data, value);\n    });\n  }\n\n  var emphasisModel = itemModel.getModel(['emphasis']);\n  states_1.enableHoverEmphasis(el, emphasisModel.get('focus'), emphasisModel.get('blurScope'));\n  states_1.setStatesStylesFromModel(el, itemModel);\n\n  if (isZeroOnPolar(layout)) {\n    el.style.fill = 'none';\n    el.style.stroke = 'none';\n    util_1.each(el.states, function (state) {\n      if (state.style) {\n        state.style.fill = state.style.stroke = 'none';\n      }\n    });\n  }\n}\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  var width = isNaN(rawLayout.width) ? Number.MAX_VALUE : Math.abs(rawLayout.width);\n  var height = isNaN(rawLayout.height) ? Number.MAX_VALUE : Math.abs(rawLayout.height);\n  return Math.min(lineWidth, width, height);\n}\n\nvar LagePathShape = function () {\n  function LagePathShape() {}\n\n  return LagePathShape;\n}();\n\nvar LargePath = function (_super) {\n  tslib_1.__extends(LargePath, _super);\n\n  function LargePath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'largeBar';\n    return _this;\n  }\n\n  ;\n\n  LargePath.prototype.getDefaultShape = function () {\n    return new LagePathShape();\n  };\n\n  LargePath.prototype.buildPath = function (ctx, shape) {\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var baseDimIdx = this.__baseDimIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  };\n\n  return LargePath;\n}(Path_1[\"default\"]);\n\nfunction createLarge(seriesModel, group, incremental) {\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - baseDimIdx] = data.getLayout('valueAxisStart');\n  var largeDataIndices = data.getLayout('largeDataIndices');\n  var barWidth = data.getLayout('barWidth');\n  var backgroundModel = seriesModel.getModel('backgroundStyle');\n  var drawBackground = seriesModel.get('showBackground', true);\n\n  if (drawBackground) {\n    var points = data.getLayout('largeBackgroundPoints');\n    var backgroundStartPoint = [];\n    backgroundStartPoint[1 - baseDimIdx] = data.getLayout('backgroundStart');\n    var bgEl = new LargePath({\n      shape: {\n        points: points\n      },\n      incremental: !!incremental,\n      silent: true,\n      z2: 0\n    });\n    bgEl.__startPoint = backgroundStartPoint;\n    bgEl.__baseDimIdx = baseDimIdx;\n    bgEl.__largeDataIndices = largeDataIndices;\n    bgEl.__barWidth = barWidth;\n    setLargeBackgroundStyle(bgEl, backgroundModel, data);\n    group.add(bgEl);\n  }\n\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental\n  });\n  el.__startPoint = startPoint;\n  el.__baseDimIdx = baseDimIdx;\n  el.__largeDataIndices = largeDataIndices;\n  el.__barWidth = barWidth;\n  group.add(el);\n  setLargeStyle(el, seriesModel, data);\n  innerStore_1.getECData(el).seriesIndex = seriesModel.seriesIndex;\n\n  if (!seriesModel.get('silent')) {\n    el.on('mousedown', largePathUpdateDataIndex);\n    el.on('mousemove', largePathUpdateDataIndex);\n  }\n}\n\nvar largePathUpdateDataIndex = throttle_1.throttle(function (event) {\n  var largePath = this;\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\n  innerStore_1.getECData(largePath).dataIndex = dataIndex >= 0 ? dataIndex : null;\n}, 30, false);\n\nfunction largePathFindDataIndex(largePath, x, y) {\n  var baseDimIdx = largePath.__baseDimIdx;\n  var valueDimIdx = 1 - baseDimIdx;\n  var points = largePath.shape.points;\n  var largeDataIndices = largePath.__largeDataIndices;\n  var barWidthHalf = Math.abs(largePath.__barWidth / 2);\n  var startValueVal = largePath.__startPoint[valueDimIdx];\n  _eventPos[0] = x;\n  _eventPos[1] = y;\n  var pointerBaseVal = _eventPos[baseDimIdx];\n  var pointerValueVal = _eventPos[1 - baseDimIdx];\n  var baseLowerBound = pointerBaseVal - barWidthHalf;\n  var baseUpperBound = pointerBaseVal + barWidthHalf;\n\n  for (var i = 0, len = points.length / 2; i < len; i++) {\n    var ii = i * 2;\n    var barBaseVal = points[ii + baseDimIdx];\n    var barValueVal = points[ii + valueDimIdx];\n\n    if (barBaseVal >= baseLowerBound && barBaseVal <= baseUpperBound && (startValueVal <= barValueVal ? pointerValueVal >= startValueVal && pointerValueVal <= barValueVal : pointerValueVal >= barValueVal && pointerValueVal <= startValueVal)) {\n      return largeDataIndices[i];\n    }\n  }\n\n  return -1;\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var globalStyle = data.getVisual('style');\n  el.useStyle(util_1.extend({}, globalStyle));\n  el.style.fill = null;\n  el.style.stroke = globalStyle.fill;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction setLargeBackgroundStyle(el, backgroundModel, data) {\n  var borderColor = backgroundModel.get('borderColor') || backgroundModel.get('color');\n  var itemStyle = backgroundModel.getItemStyle();\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction createBackgroundShape(isHorizontalOrRadial, layout, coord) {\n  if (CoordinateSystem_1.isCoordinateSystemType(coord, 'cartesian2d')) {\n    var rectShape = layout;\n    var coordLayout = coord.getArea();\n    return {\n      x: isHorizontalOrRadial ? rectShape.x : coordLayout.x,\n      y: isHorizontalOrRadial ? coordLayout.y : rectShape.y,\n      width: isHorizontalOrRadial ? rectShape.width : coordLayout.width,\n      height: isHorizontalOrRadial ? coordLayout.height : rectShape.height\n    };\n  } else {\n    var coordLayout = coord.getArea();\n    var sectorShape = layout;\n    return {\n      cx: coordLayout.cx,\n      cy: coordLayout.cy,\n      r0: isHorizontalOrRadial ? coordLayout.r0 : sectorShape.r0,\n      r: isHorizontalOrRadial ? coordLayout.r : sectorShape.r,\n      startAngle: isHorizontalOrRadial ? sectorShape.startAngle : 0,\n      endAngle: isHorizontalOrRadial ? sectorShape.endAngle : Math.PI * 2\n    };\n  }\n}\n\nfunction createBackgroundEl(coord, isHorizontalOrRadial, layout) {\n  var ElementClz = coord.type === 'polar' ? graphic_1.Sector : graphic_1.Rect;\n  return new ElementClz({\n    shape: createBackgroundShape(isHorizontalOrRadial, layout, coord),\n    silent: true,\n    z2: 0\n  });\n}\n\nChart_1[\"default\"].registerClass(BarView);\nexports[\"default\"] = BarView;"]},"metadata":{},"sourceType":"script"}