{"ast":null,"code":"export function getScaleMax(maxAngle, yField, data) {\n  var yData = data.map(function (item) {\n    return item[yField];\n  });\n  var maxValue = Math.max.apply(Math, yData);\n  var formatRadian = Math.abs(maxAngle) % 360;\n\n  if (!formatRadian) {\n    return maxValue;\n  }\n\n  return maxValue * 360 / formatRadian;\n}","map":{"version":3,"sources":["../../../src/plots/radial-bar/utils.ts"],"names":[],"mappings":"AAEA,OAAM,SAAU,WAAV,CAAsB,QAAtB,EAAwC,MAAxC,EAAwD,IAAxD,EAAkE;AACtE,MAAM,KAAK,GAAG,IAAI,CAAC,GAAL,CAAS,UAAC,IAAD,EAAK;AAAK,WAAA,IAAI,CAAJ,MAAI,CAAJ;AAAY,GAA/B,CAAd;AACA,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAL,CAAQ,KAAR,CAAA,IAAA,EAAY,KAAZ,CAAjB;AACA,MAAM,YAAY,GAAG,IAAI,CAAC,GAAL,CAAS,QAAT,IAAqB,GAA1C;;AACA,MAAI,CAAC,YAAL,EAAmB;AACjB,WAAO,QAAP;AACD;;AACD,SAAQ,QAAQ,GAAG,GAAZ,GAAmB,YAA1B;AACD","sourcesContent":["import { Data } from '../../types';\n\nexport function getScaleMax(maxAngle: number, yField: string, data: Data): number {\n  const yData = data.map((item) => item[yField]);\n  const maxValue = Math.max(...yData);\n  const formatRadian = Math.abs(maxAngle) % 360;\n  if (!formatRadian) {\n    return maxValue;\n  }\n  return (maxValue * 360) / formatRadian;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}