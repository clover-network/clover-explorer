{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar model_1 = require(\"../util/model\");\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar log_1 = require(\"../util/log\");\n\nvar QUERY_REG = /^(min|max)?(.+)$/;\n\nvar OptionManager = function () {\n  function OptionManager(api) {\n    this._timelineOptions = [];\n    this._mediaList = [];\n    this._currentMediaIndices = [];\n    this._api = api;\n  }\n\n  OptionManager.prototype.setOption = function (rawOption, optionPreprocessorFuncs, opt) {\n    if (rawOption) {\n      util_1.each(model_1.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && util_1.isTypedArray(series.data) && util_1.setAsPrimitive(series.data);\n      });\n      util_1.each(model_1.normalizeToArray(rawOption.dataset), function (dataset) {\n        dataset && dataset.source && util_1.isTypedArray(dataset.source) && util_1.setAsPrimitive(dataset.source);\n      });\n    }\n\n    rawOption = util_1.clone(rawOption);\n    var optionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption(rawOption, optionPreprocessorFuncs, !optionBackup);\n    this._newBaseOption = newParsedOption.baseOption;\n\n    if (optionBackup) {\n      if (newParsedOption.timelineOptions.length) {\n        optionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        optionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        optionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  };\n\n  OptionManager.prototype.mountOption = function (isRecreate) {\n    var optionBackup = this._optionBackup;\n    this._timelineOptions = optionBackup.timelineOptions;\n    this._mediaList = optionBackup.mediaList;\n    this._mediaDefault = optionBackup.mediaDefault;\n    this._currentMediaIndices = [];\n    return util_1.clone(isRecreate ? optionBackup.baseOption : this._newBaseOption);\n  };\n\n  OptionManager.prototype.getTimelineOption = function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = util_1.clone(timelineOptions[timelineModel.getCurrentIndex()]);\n      }\n    }\n\n    return option;\n  };\n\n  OptionManager.prototype.getMediaOption = function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = [];\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    }\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    }\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = util_1.map(indices, function (index) {\n        return util_1.clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    }\n\n    this._currentMediaIndices = indices;\n    return result;\n  };\n\n  return OptionManager;\n}();\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption;\n  var declaredBaseOption = rawOption.baseOption;\n  var timelineOnRoot = rawOption.timeline;\n  var timelineOptionsOnRoot = rawOption.options;\n  var mediaOnRoot = rawOption.media;\n  var hasMedia = !!rawOption.media;\n  var hasTimeline = !!(timelineOptionsOnRoot || timelineOnRoot || declaredBaseOption && declaredBaseOption.timeline);\n\n  if (declaredBaseOption) {\n    baseOption = declaredBaseOption;\n\n    if (!baseOption.timeline) {\n      baseOption.timeline = timelineOnRoot;\n    }\n  } else {\n    if (hasTimeline || hasMedia) {\n      rawOption.options = rawOption.media = null;\n    }\n\n    baseOption = rawOption;\n  }\n\n  if (hasMedia) {\n    if (util_1.isArray(mediaOnRoot)) {\n      util_1.each(mediaOnRoot, function (singleMedia) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (singleMedia && !singleMedia.option && util_1.isObject(singleMedia.query) && util_1.isObject(singleMedia.query.option)) {\n            log_1.error('Illegal media option. Must be like { media: [ { query: {}, option: {} } ] }');\n          }\n        }\n\n        if (singleMedia && singleMedia.option) {\n          if (singleMedia.query) {\n            mediaList.push(singleMedia);\n          } else if (!mediaDefault) {\n            mediaDefault = singleMedia;\n          }\n        }\n      });\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        log_1.error('Illegal media option. Must be an array. Like { media: [ {...}, {...} ] }');\n      }\n    }\n  }\n\n  doPreprocess(baseOption);\n  util_1.each(timelineOptionsOnRoot, function (option) {\n    return doPreprocess(option);\n  });\n  util_1.each(mediaList, function (media) {\n    return doPreprocess(media.option);\n  });\n\n  function doPreprocess(option) {\n    util_1.each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  }\n\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptionsOnRoot || [],\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight\n  };\n  var applicatable = true;\n  util_1.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  return indices1.join(',') === indices2.join(',');\n}\n\nexports[\"default\"] = OptionManager;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/model/OptionManager.js"],"names":["exports","__esModule","model_1","require","util_1","log_1","QUERY_REG","OptionManager","api","_timelineOptions","_mediaList","_currentMediaIndices","_api","prototype","setOption","rawOption","optionPreprocessorFuncs","opt","each","normalizeToArray","series","data","isTypedArray","setAsPrimitive","dataset","source","clone","optionBackup","_optionBackup","newParsedOption","parseRawOption","_newBaseOption","baseOption","timelineOptions","length","mediaList","mediaDefault","mountOption","isRecreate","_mediaDefault","getTimelineOption","ecModel","option","timelineModel","getComponent","getCurrentIndex","getMediaOption","ecWidth","getWidth","ecHeight","getHeight","indices","result","i","len","applyMediaQuery","query","push","indicesEquals","map","index","isNew","declaredBaseOption","timelineOnRoot","timeline","timelineOptionsOnRoot","options","mediaOnRoot","media","hasMedia","hasTimeline","isArray","singleMedia","process","env","NODE_ENV","isObject","error","doPreprocess","preProcess","realMap","width","height","aspectratio","applicatable","value","attr","matched","match","operator","realAttr","toLowerCase","compare","real","expect","indices1","indices2","join"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar model_1 = require(\"../util/model\");\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar log_1 = require(\"../util/log\");\n\nvar QUERY_REG = /^(min|max)?(.+)$/;\n\nvar OptionManager = function () {\n  function OptionManager(api) {\n    this._timelineOptions = [];\n    this._mediaList = [];\n    this._currentMediaIndices = [];\n    this._api = api;\n  }\n\n  OptionManager.prototype.setOption = function (rawOption, optionPreprocessorFuncs, opt) {\n    if (rawOption) {\n      util_1.each(model_1.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && util_1.isTypedArray(series.data) && util_1.setAsPrimitive(series.data);\n      });\n      util_1.each(model_1.normalizeToArray(rawOption.dataset), function (dataset) {\n        dataset && dataset.source && util_1.isTypedArray(dataset.source) && util_1.setAsPrimitive(dataset.source);\n      });\n    }\n\n    rawOption = util_1.clone(rawOption);\n    var optionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption(rawOption, optionPreprocessorFuncs, !optionBackup);\n    this._newBaseOption = newParsedOption.baseOption;\n\n    if (optionBackup) {\n      if (newParsedOption.timelineOptions.length) {\n        optionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        optionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        optionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  };\n\n  OptionManager.prototype.mountOption = function (isRecreate) {\n    var optionBackup = this._optionBackup;\n    this._timelineOptions = optionBackup.timelineOptions;\n    this._mediaList = optionBackup.mediaList;\n    this._mediaDefault = optionBackup.mediaDefault;\n    this._currentMediaIndices = [];\n    return util_1.clone(isRecreate ? optionBackup.baseOption : this._newBaseOption);\n  };\n\n  OptionManager.prototype.getTimelineOption = function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = util_1.clone(timelineOptions[timelineModel.getCurrentIndex()]);\n      }\n    }\n\n    return option;\n  };\n\n  OptionManager.prototype.getMediaOption = function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = [];\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    }\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    }\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = util_1.map(indices, function (index) {\n        return util_1.clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    }\n\n    this._currentMediaIndices = indices;\n    return result;\n  };\n\n  return OptionManager;\n}();\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption;\n  var declaredBaseOption = rawOption.baseOption;\n  var timelineOnRoot = rawOption.timeline;\n  var timelineOptionsOnRoot = rawOption.options;\n  var mediaOnRoot = rawOption.media;\n  var hasMedia = !!rawOption.media;\n  var hasTimeline = !!(timelineOptionsOnRoot || timelineOnRoot || declaredBaseOption && declaredBaseOption.timeline);\n\n  if (declaredBaseOption) {\n    baseOption = declaredBaseOption;\n\n    if (!baseOption.timeline) {\n      baseOption.timeline = timelineOnRoot;\n    }\n  } else {\n    if (hasTimeline || hasMedia) {\n      rawOption.options = rawOption.media = null;\n    }\n\n    baseOption = rawOption;\n  }\n\n  if (hasMedia) {\n    if (util_1.isArray(mediaOnRoot)) {\n      util_1.each(mediaOnRoot, function (singleMedia) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (singleMedia && !singleMedia.option && util_1.isObject(singleMedia.query) && util_1.isObject(singleMedia.query.option)) {\n            log_1.error('Illegal media option. Must be like { media: [ { query: {}, option: {} } ] }');\n          }\n        }\n\n        if (singleMedia && singleMedia.option) {\n          if (singleMedia.query) {\n            mediaList.push(singleMedia);\n          } else if (!mediaDefault) {\n            mediaDefault = singleMedia;\n          }\n        }\n      });\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        log_1.error('Illegal media option. Must be an array. Like { media: [ {...}, {...} ] }');\n      }\n    }\n  }\n\n  doPreprocess(baseOption);\n  util_1.each(timelineOptionsOnRoot, function (option) {\n    return doPreprocess(option);\n  });\n  util_1.each(mediaList, function (media) {\n    return doPreprocess(media.option);\n  });\n\n  function doPreprocess(option) {\n    util_1.each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  }\n\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptionsOnRoot || [],\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight\n  };\n  var applicatable = true;\n  util_1.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  return indices1.join(',') === indices2.join(',');\n}\n\nexports[\"default\"] = OptionManager;"]},"metadata":{},"sourceType":"script"}