{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { isString } from '@antv/util';\nimport TimeBarTooltip from './timeBarTooltip';\nimport ControllerBtn from './controllerBtn';\nimport { VALUE_CHANGE, TIMELINE_START, TIMELINE_END, PLAY_PAUSE_BTN, NEXT_STEP_BTN, PRE_STEP_BTN, TIMEBAR_CONFIG_CHANGE } from './constant';\nvar DEFAULT_SELECTEDTICK_STYLE = {\n  fill: '#5B8FF9'\n};\nvar DEFAULT_UNSELECTEDTICK_STYLE = {\n  fill: '#e6e8e9'\n};\n\nvar TimeBarSlice =\n/** @class */\nfunction () {\n  function TimeBarSlice(cfgs) {\n    this.frameCount = 0;\n    var graph = cfgs.graph,\n        canvas = cfgs.canvas,\n        group = cfgs.group,\n        width = cfgs.width,\n        height = cfgs.height,\n        padding = cfgs.padding,\n        data = cfgs.data,\n        start = cfgs.start,\n        end = cfgs.end,\n        _a = cfgs.x,\n        x = _a === void 0 ? 0 : _a,\n        _b = cfgs.y,\n        y = _b === void 0 ? 0 : _b,\n        tickLabelFormatter = cfgs.tickLabelFormatter,\n        _c = cfgs.selectedTickStyle,\n        selectedTickStyle = _c === void 0 ? DEFAULT_SELECTEDTICK_STYLE : _c,\n        _d = cfgs.unselectedTickStyle,\n        unselectedTickStyle = _d === void 0 ? DEFAULT_UNSELECTEDTICK_STYLE : _d,\n        tooltipBackgroundColor = cfgs.tooltipBackgroundColor,\n        tooltipFomatter = cfgs.tooltipFomatter;\n    this.graph = graph;\n    this.group = group;\n    this.sliceGroup = group.addGroup({\n      name: 'slice-group'\n    });\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this.padding = padding;\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.tickLabelFormatter = tickLabelFormatter;\n    this.selectedTickStyle = selectedTickStyle;\n    this.unselectedTickStyle = unselectedTickStyle;\n    this.x = x;\n    this.y = y;\n    this.tooltipBackgroundColor = tooltipBackgroundColor;\n    this.tooltipFomatter = tooltipFomatter;\n    this.renderSlices();\n    this.initEvent();\n  }\n\n  TimeBarSlice.prototype.renderSlices = function () {\n    var _a = this,\n        width = _a.width,\n        height = _a.height,\n        padding = _a.padding,\n        data = _a.data,\n        start = _a.start,\n        end = _a.end,\n        tickLabelFormatter = _a.tickLabelFormatter,\n        selectedTickStyle = _a.selectedTickStyle,\n        unselectedTickStyle = _a.unselectedTickStyle;\n\n    var realWidth = width - 2 * padding;\n    var fontSize = 10;\n    var labelLineHeight = 4;\n    var labelAreaHeight = 3 * padding + labelLineHeight + fontSize;\n    var ticksAreaHeight = height - labelAreaHeight - 2 * padding;\n    var gap = 2;\n    var ticksLength = data.length;\n    var tickWidth = (realWidth - gap * (ticksLength - 1)) / ticksLength;\n    this.tickWidth = tickWidth;\n    var sliceGroup = this.sliceGroup;\n    var tickRects = [];\n    var labels = [];\n    var startTickId = Math.round(ticksLength * start);\n    var endTickId = Math.round(ticksLength * end);\n    this.startTickRectId = startTickId;\n    this.endTickRectId = endTickId;\n    data.forEach(function (d, i) {\n      // draw the tick rects\n      var selected = i >= startTickId && i <= endTickId;\n      var tickStyle = selected ? selectedTickStyle : unselectedTickStyle;\n      var rect = sliceGroup.addShape('rect', {\n        attrs: __assign({\n          x: padding + i * (tickWidth + gap),\n          y: padding,\n          width: tickWidth,\n          height: ticksAreaHeight\n        }, tickStyle),\n        draggable: true,\n        name: \"tick-rect-\" + i\n      }); // draw the pick tick rects\n\n      var pickRect = sliceGroup.addShape('rect', {\n        attrs: {\n          x: padding + i * tickWidth + gap * (2 * i - 1) / 2,\n          y: padding,\n          width: i === 0 || i === ticksLength - 1 ? tickWidth + gap / 2 : tickWidth + gap,\n          height: ticksAreaHeight,\n          fill: '#fff',\n          opacity: 0\n        },\n        draggable: true,\n        name: \"pick-rect-\" + i\n      });\n      pickRect.toFront();\n      var rectBBox = rect.getBBox();\n      var centerX = (rectBBox.minX + rectBBox.maxX) / 2;\n      tickRects.push({\n        rect: rect,\n        pickRect: pickRect,\n        value: d.date,\n        x: centerX,\n        y: rectBBox.minY\n      });\n      var label;\n\n      if (tickLabelFormatter) {\n        label = tickLabelFormatter(d);\n\n        if (!isString(label) && label) {\n          // return true\n          label = d.date;\n        }\n      } else if (i % Math.round(ticksLength / 10) === 0) {\n        label = d.date;\n      }\n\n      if (label) {\n        labels.push(label); // draw tick lines\n\n        var lineStartY = rectBBox.maxY + padding * 2;\n        sliceGroup.addShape('line', {\n          attrs: {\n            stroke: '#BFBFBF',\n            x1: centerX,\n            y1: lineStartY,\n            x2: centerX,\n            y2: lineStartY + labelLineHeight\n          }\n        });\n        var labelStartY = lineStartY + labelLineHeight + padding;\n        var text = sliceGroup.addShape('text', {\n          attrs: {\n            fill: '#8c8c8c',\n            stroke: '#fff',\n            lineWidth: 1,\n            x: centerX,\n            y: labelStartY,\n            textAlign: 'center',\n            text: label,\n            textBaseline: 'top',\n            fontSize: 10\n          },\n          capture: false\n        });\n        var textBBox = text.getBBox();\n\n        if (textBBox.maxX > width) {\n          text.attr('textAlign', 'right');\n        } else if (textBBox.minX < 0) {\n          text.attr('textAlign', 'left');\n        } // draw tick labels\n\n      }\n    });\n    this.tickRects = tickRects; // 渲染播放、快进和后退的控制按钮\n\n    var group = this.group;\n    this.currentSpeed = 1;\n    this.controllerBtnGroup = new ControllerBtn({\n      group: group,\n      x: this.x,\n      y: this.y + height + 5,\n      width: width,\n      height: 40,\n      hiddleToggle: true,\n      speed: this.currentSpeed\n    });\n  };\n\n  TimeBarSlice.prototype.initEvent = function () {\n    var _this = this;\n\n    var sliceGroup = this.sliceGroup;\n    sliceGroup.on('click', function (e) {\n      var targetRect = e.target;\n      if (targetRect.get('type') !== 'rect' || !targetRect.get('name')) return;\n      var id = parseInt(targetRect.get('name').split('-')[2], 10);\n\n      if (!isNaN(id)) {\n        var tickRects_1 = _this.tickRects; // cancel the selected ticks\n\n        var unselectedTickStyle_1 = _this.unselectedTickStyle;\n        tickRects_1.forEach(function (tickRect) {\n          tickRect.rect.attr(unselectedTickStyle_1);\n        });\n        var selectedTickStyle = _this.selectedTickStyle;\n        tickRects_1[id].rect.attr(selectedTickStyle);\n        _this.startTickRectId = id;\n        _this.endTickRectId = id;\n        var ticksLength = tickRects_1.length;\n        var start = id / ticksLength;\n\n        _this.graph.emit(VALUE_CHANGE, {\n          value: [start, start]\n        });\n      }\n    });\n    sliceGroup.on('dragstart', function (e) {\n      var tickRects = _this.tickRects; // cancel the selected ticks\n\n      var unselectedTickStyle = _this.unselectedTickStyle;\n      tickRects.forEach(function (tickRect) {\n        tickRect.rect.attr(unselectedTickStyle);\n      });\n      var targetRect = e.target;\n      var id = parseInt(targetRect.get('name').split('-')[2], 10);\n      var selectedTickStyle = _this.selectedTickStyle;\n      tickRects[id].rect.attr(selectedTickStyle);\n      _this.startTickRectId = id;\n      var ticksLength = tickRects.length;\n      var start = id / ticksLength;\n\n      _this.graph.emit(VALUE_CHANGE, {\n        value: [start, start]\n      });\n\n      _this.dragging = true;\n    });\n    sliceGroup.on('dragover', function (e) {\n      if (!_this.dragging) return;\n      if (e.target.get('type') !== 'rect') return;\n      var id = parseInt(e.target.get('name').split('-')[2], 10);\n      var startTickRectId = _this.startTickRectId;\n      var tickRects = _this.tickRects;\n      var selectedTickStyle = _this.selectedTickStyle;\n      var unselectedTickStyle = _this.unselectedTickStyle;\n\n      for (var i = 0; i < tickRects.length; i++) {\n        var style = i >= startTickRectId && i <= id ? selectedTickStyle : unselectedTickStyle;\n        tickRects[i].rect.attr(style);\n      }\n\n      var ticksLength = tickRects.length;\n      _this.endTickRectId = id;\n      var start = startTickRectId / ticksLength;\n      var end = id / ticksLength;\n\n      _this.graph.emit(VALUE_CHANGE, {\n        value: [start, end]\n      });\n    });\n    sliceGroup.on('drop', function (e) {\n      if (!_this.dragging) return;\n      _this.dragging = false;\n      if (e.target.get('type') !== 'rect') return;\n      var startTickRectId = _this.startTickRectId;\n      var id = parseInt(e.target.get('name').split('-')[2], 10);\n      if (id < startTickRectId) return;\n      var selectedTickStyle = _this.selectedTickStyle;\n      var tickRects = _this.tickRects;\n      tickRects[id].rect.attr(selectedTickStyle);\n      _this.endTickRectId = id;\n      var ticksLength = tickRects.length;\n      var start = startTickRectId / ticksLength;\n      var end = id / ticksLength;\n\n      _this.graph.emit(VALUE_CHANGE, {\n        value: [start, end]\n      });\n    }); // tooltip\n\n    var _a = this,\n        tooltipBackgroundColor = _a.tooltipBackgroundColor,\n        tooltipFomatter = _a.tooltipFomatter,\n        canvas = _a.canvas;\n\n    var tooltip = new TimeBarTooltip({\n      container: canvas.get('container'),\n      backgroundColor: tooltipBackgroundColor\n    });\n    var tickRects = this.tickRects;\n    tickRects.forEach(function (tickRect) {\n      var pickRect = tickRect.pickRect;\n      pickRect.on('mouseenter', function (e) {\n        var rect = e.target;\n        if (rect.get('type') !== 'rect') return;\n        var id = parseInt(rect.get('name').split('-')[2], 10);\n        var clientPoint = canvas.getClientByPoint(tickRects[id].x, tickRects[id].y);\n        tooltip.show({\n          x: tickRects[id].x,\n          y: tickRects[id].y,\n          clientX: clientPoint.x,\n          clientY: clientPoint.y,\n          text: tooltipFomatter ? tooltipFomatter(tickRects[id].value) : tickRects[id].value\n        });\n      });\n      pickRect.on('mouseleave', function (e) {\n        tooltip.hide();\n      });\n    }); // play controller events\n\n    var group = this.group; // 播放区按钮控制\n\n    /** 播放/暂停事件 */\n\n    group.on(PLAY_PAUSE_BTN + \":click\", function () {\n      _this.isPlay = !_this.isPlay;\n\n      _this.changePlayStatus();\n    }); // 处理前进一步的事件\n\n    group.on(NEXT_STEP_BTN + \":click\", function () {\n      _this.updateStartEnd(1);\n    }); // 处理后退一步的事件\n\n    group.on(PRE_STEP_BTN + \":click\", function () {\n      _this.updateStartEnd(-1);\n    });\n    group.on(TIMEBAR_CONFIG_CHANGE, function (_a) {\n      var type = _a.type,\n          speed = _a.speed;\n      _this.currentSpeed = speed;\n    });\n  };\n\n  TimeBarSlice.prototype.changePlayStatus = function (isSync) {\n    if (isSync === void 0) {\n      isSync = true;\n    }\n\n    this.controllerBtnGroup.playButton.update({\n      isPlay: this.isPlay\n    });\n\n    if (this.isPlay) {\n      // 开始播放\n      this.playHandler = this.startPlay();\n      this.graph.emit(TIMELINE_START, null);\n    } else {\n      // 结束播放\n      if (this.playHandler) {\n        window.cancelAnimationFrame(this.playHandler);\n\n        if (isSync) {\n          this.graph.emit(TIMELINE_END, null);\n        }\n      }\n    }\n  };\n\n  TimeBarSlice.prototype.startPlay = function () {\n    var _this = this;\n\n    return window.requestAnimationFrame(function () {\n      var speed = _this.currentSpeed; // 一分钟刷新一次\n\n      if (_this.frameCount % (60 / speed) === 0) {\n        _this.frameCount = 0;\n\n        _this.updateStartEnd(1);\n      }\n\n      _this.frameCount++;\n\n      if (_this.isPlay) {\n        _this.playHandler = _this.startPlay();\n      }\n    });\n  };\n\n  TimeBarSlice.prototype.updateStartEnd = function (sign) {\n    var self = this;\n    var tickRects = this.tickRects;\n    var ticksLength = tickRects.length;\n    var unselectedTickStyle = this.unselectedTickStyle;\n    var selectedTickStyle = this.selectedTickStyle;\n    var previousEndTickRectId = self.endTickRectId;\n\n    if (sign > 0) {\n      self.endTickRectId++;\n    } else {\n      tickRects[self.endTickRectId].rect.attr(unselectedTickStyle);\n      self.endTickRectId--;\n    } // 若此时 start 与 end 不同，范围前进/后退/播放\n\n\n    if (previousEndTickRectId !== self.startTickRectId) {\n      if (self.endTickRectId < self.startTickRectId) {\n        self.startTickRectId = self.endTickRectId;\n      }\n    } else {\n      // 否则是单帧的前进/后退/播放\n      for (var i = self.startTickRectId; i <= self.endTickRectId - 1; i++) {\n        tickRects[i].rect.attr(unselectedTickStyle);\n      }\n\n      self.startTickRectId = self.endTickRectId;\n    }\n\n    if (tickRects[self.endTickRectId]) {\n      tickRects[self.endTickRectId].rect.attr(selectedTickStyle);\n      var start = self.startTickRectId / ticksLength;\n      var end = self.endTickRectId / ticksLength;\n      this.graph.emit(VALUE_CHANGE, {\n        value: [start, end]\n      });\n    }\n  };\n\n  TimeBarSlice.prototype.destory = function () {\n    this.graph.off(VALUE_CHANGE);\n    var group = this.sliceGroup;\n    group.off('click');\n    group.off('dragstart');\n    group.off('dragover');\n    group.off('drop');\n    this.tickRects.forEach(function (tickRect) {\n      var pickRect = tickRect.pickRect;\n      pickRect.off('mouseenter');\n      pickRect.off('mouseleave');\n    });\n    this.tickRects.length = 0;\n    group.off(PLAY_PAUSE_BTN + \":click\");\n    group.off(NEXT_STEP_BTN + \":click\");\n    group.off(PRE_STEP_BTN + \":click\");\n    group.off(TIMEBAR_CONFIG_CHANGE);\n    this.sliceGroup.destroy();\n  };\n\n  return TimeBarSlice;\n}();\n\nexport default TimeBarSlice;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@antv/g6/es/plugins/timeBar/timeBarSlice.js"],"names":["__assign","isString","TimeBarTooltip","ControllerBtn","VALUE_CHANGE","TIMELINE_START","TIMELINE_END","PLAY_PAUSE_BTN","NEXT_STEP_BTN","PRE_STEP_BTN","TIMEBAR_CONFIG_CHANGE","DEFAULT_SELECTEDTICK_STYLE","fill","DEFAULT_UNSELECTEDTICK_STYLE","TimeBarSlice","cfgs","frameCount","graph","canvas","group","width","height","padding","data","start","end","_a","x","_b","y","tickLabelFormatter","_c","selectedTickStyle","_d","unselectedTickStyle","tooltipBackgroundColor","tooltipFomatter","sliceGroup","addGroup","name","renderSlices","initEvent","prototype","realWidth","fontSize","labelLineHeight","labelAreaHeight","ticksAreaHeight","gap","ticksLength","length","tickWidth","tickRects","labels","startTickId","Math","round","endTickId","startTickRectId","endTickRectId","forEach","d","i","selected","tickStyle","rect","addShape","attrs","draggable","pickRect","opacity","toFront","rectBBox","getBBox","centerX","minX","maxX","push","value","date","minY","label","lineStartY","maxY","stroke","x1","y1","x2","y2","labelStartY","text","lineWidth","textAlign","textBaseline","capture","textBBox","attr","currentSpeed","controllerBtnGroup","hiddleToggle","speed","_this","on","e","targetRect","target","get","id","parseInt","split","isNaN","tickRects_1","unselectedTickStyle_1","tickRect","emit","dragging","style","tooltip","container","backgroundColor","clientPoint","getClientByPoint","show","clientX","clientY","hide","isPlay","changePlayStatus","updateStartEnd","type","isSync","playButton","update","playHandler","startPlay","window","cancelAnimationFrame","requestAnimationFrame","sign","self","previousEndTickRectId","destory","off","destroy"],"mappings":"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","sourcesContent":["import { __assign } from \"tslib\";\nimport { isString } from '@antv/util';\nimport TimeBarTooltip from './timeBarTooltip';\nimport ControllerBtn from './controllerBtn';\nimport { VALUE_CHANGE, TIMELINE_START, TIMELINE_END, PLAY_PAUSE_BTN, NEXT_STEP_BTN, PRE_STEP_BTN, TIMEBAR_CONFIG_CHANGE } from './constant';\nvar DEFAULT_SELECTEDTICK_STYLE = {\n  fill: '#5B8FF9'\n};\nvar DEFAULT_UNSELECTEDTICK_STYLE = {\n  fill: '#e6e8e9'\n};\n\nvar TimeBarSlice =\n/** @class */\nfunction () {\n  function TimeBarSlice(cfgs) {\n    this.frameCount = 0;\n    var graph = cfgs.graph,\n        canvas = cfgs.canvas,\n        group = cfgs.group,\n        width = cfgs.width,\n        height = cfgs.height,\n        padding = cfgs.padding,\n        data = cfgs.data,\n        start = cfgs.start,\n        end = cfgs.end,\n        _a = cfgs.x,\n        x = _a === void 0 ? 0 : _a,\n        _b = cfgs.y,\n        y = _b === void 0 ? 0 : _b,\n        tickLabelFormatter = cfgs.tickLabelFormatter,\n        _c = cfgs.selectedTickStyle,\n        selectedTickStyle = _c === void 0 ? DEFAULT_SELECTEDTICK_STYLE : _c,\n        _d = cfgs.unselectedTickStyle,\n        unselectedTickStyle = _d === void 0 ? DEFAULT_UNSELECTEDTICK_STYLE : _d,\n        tooltipBackgroundColor = cfgs.tooltipBackgroundColor,\n        tooltipFomatter = cfgs.tooltipFomatter;\n    this.graph = graph;\n    this.group = group;\n    this.sliceGroup = group.addGroup({\n      name: 'slice-group'\n    });\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this.padding = padding;\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.tickLabelFormatter = tickLabelFormatter;\n    this.selectedTickStyle = selectedTickStyle;\n    this.unselectedTickStyle = unselectedTickStyle;\n    this.x = x;\n    this.y = y;\n    this.tooltipBackgroundColor = tooltipBackgroundColor;\n    this.tooltipFomatter = tooltipFomatter;\n    this.renderSlices();\n    this.initEvent();\n  }\n\n  TimeBarSlice.prototype.renderSlices = function () {\n    var _a = this,\n        width = _a.width,\n        height = _a.height,\n        padding = _a.padding,\n        data = _a.data,\n        start = _a.start,\n        end = _a.end,\n        tickLabelFormatter = _a.tickLabelFormatter,\n        selectedTickStyle = _a.selectedTickStyle,\n        unselectedTickStyle = _a.unselectedTickStyle;\n\n    var realWidth = width - 2 * padding;\n    var fontSize = 10;\n    var labelLineHeight = 4;\n    var labelAreaHeight = 3 * padding + labelLineHeight + fontSize;\n    var ticksAreaHeight = height - labelAreaHeight - 2 * padding;\n    var gap = 2;\n    var ticksLength = data.length;\n    var tickWidth = (realWidth - gap * (ticksLength - 1)) / ticksLength;\n    this.tickWidth = tickWidth;\n    var sliceGroup = this.sliceGroup;\n    var tickRects = [];\n    var labels = [];\n    var startTickId = Math.round(ticksLength * start);\n    var endTickId = Math.round(ticksLength * end);\n    this.startTickRectId = startTickId;\n    this.endTickRectId = endTickId;\n    data.forEach(function (d, i) {\n      // draw the tick rects\n      var selected = i >= startTickId && i <= endTickId;\n      var tickStyle = selected ? selectedTickStyle : unselectedTickStyle;\n      var rect = sliceGroup.addShape('rect', {\n        attrs: __assign({\n          x: padding + i * (tickWidth + gap),\n          y: padding,\n          width: tickWidth,\n          height: ticksAreaHeight\n        }, tickStyle),\n        draggable: true,\n        name: \"tick-rect-\" + i\n      }); // draw the pick tick rects\n\n      var pickRect = sliceGroup.addShape('rect', {\n        attrs: {\n          x: padding + i * tickWidth + gap * (2 * i - 1) / 2,\n          y: padding,\n          width: i === 0 || i === ticksLength - 1 ? tickWidth + gap / 2 : tickWidth + gap,\n          height: ticksAreaHeight,\n          fill: '#fff',\n          opacity: 0\n        },\n        draggable: true,\n        name: \"pick-rect-\" + i\n      });\n      pickRect.toFront();\n      var rectBBox = rect.getBBox();\n      var centerX = (rectBBox.minX + rectBBox.maxX) / 2;\n      tickRects.push({\n        rect: rect,\n        pickRect: pickRect,\n        value: d.date,\n        x: centerX,\n        y: rectBBox.minY\n      });\n      var label;\n\n      if (tickLabelFormatter) {\n        label = tickLabelFormatter(d);\n\n        if (!isString(label) && label) {\n          // return true\n          label = d.date;\n        }\n      } else if (i % Math.round(ticksLength / 10) === 0) {\n        label = d.date;\n      }\n\n      if (label) {\n        labels.push(label); // draw tick lines\n\n        var lineStartY = rectBBox.maxY + padding * 2;\n        sliceGroup.addShape('line', {\n          attrs: {\n            stroke: '#BFBFBF',\n            x1: centerX,\n            y1: lineStartY,\n            x2: centerX,\n            y2: lineStartY + labelLineHeight\n          }\n        });\n        var labelStartY = lineStartY + labelLineHeight + padding;\n        var text = sliceGroup.addShape('text', {\n          attrs: {\n            fill: '#8c8c8c',\n            stroke: '#fff',\n            lineWidth: 1,\n            x: centerX,\n            y: labelStartY,\n            textAlign: 'center',\n            text: label,\n            textBaseline: 'top',\n            fontSize: 10\n          },\n          capture: false\n        });\n        var textBBox = text.getBBox();\n\n        if (textBBox.maxX > width) {\n          text.attr('textAlign', 'right');\n        } else if (textBBox.minX < 0) {\n          text.attr('textAlign', 'left');\n        } // draw tick labels\n\n      }\n    });\n    this.tickRects = tickRects; // 渲染播放、快进和后退的控制按钮\n\n    var group = this.group;\n    this.currentSpeed = 1;\n    this.controllerBtnGroup = new ControllerBtn({\n      group: group,\n      x: this.x,\n      y: this.y + height + 5,\n      width: width,\n      height: 40,\n      hiddleToggle: true,\n      speed: this.currentSpeed\n    });\n  };\n\n  TimeBarSlice.prototype.initEvent = function () {\n    var _this = this;\n\n    var sliceGroup = this.sliceGroup;\n    sliceGroup.on('click', function (e) {\n      var targetRect = e.target;\n      if (targetRect.get('type') !== 'rect' || !targetRect.get('name')) return;\n      var id = parseInt(targetRect.get('name').split('-')[2], 10);\n\n      if (!isNaN(id)) {\n        var tickRects_1 = _this.tickRects; // cancel the selected ticks\n\n        var unselectedTickStyle_1 = _this.unselectedTickStyle;\n        tickRects_1.forEach(function (tickRect) {\n          tickRect.rect.attr(unselectedTickStyle_1);\n        });\n        var selectedTickStyle = _this.selectedTickStyle;\n        tickRects_1[id].rect.attr(selectedTickStyle);\n        _this.startTickRectId = id;\n        _this.endTickRectId = id;\n        var ticksLength = tickRects_1.length;\n        var start = id / ticksLength;\n\n        _this.graph.emit(VALUE_CHANGE, {\n          value: [start, start]\n        });\n      }\n    });\n    sliceGroup.on('dragstart', function (e) {\n      var tickRects = _this.tickRects; // cancel the selected ticks\n\n      var unselectedTickStyle = _this.unselectedTickStyle;\n      tickRects.forEach(function (tickRect) {\n        tickRect.rect.attr(unselectedTickStyle);\n      });\n      var targetRect = e.target;\n      var id = parseInt(targetRect.get('name').split('-')[2], 10);\n      var selectedTickStyle = _this.selectedTickStyle;\n      tickRects[id].rect.attr(selectedTickStyle);\n      _this.startTickRectId = id;\n      var ticksLength = tickRects.length;\n      var start = id / ticksLength;\n\n      _this.graph.emit(VALUE_CHANGE, {\n        value: [start, start]\n      });\n\n      _this.dragging = true;\n    });\n    sliceGroup.on('dragover', function (e) {\n      if (!_this.dragging) return;\n      if (e.target.get('type') !== 'rect') return;\n      var id = parseInt(e.target.get('name').split('-')[2], 10);\n      var startTickRectId = _this.startTickRectId;\n      var tickRects = _this.tickRects;\n      var selectedTickStyle = _this.selectedTickStyle;\n      var unselectedTickStyle = _this.unselectedTickStyle;\n\n      for (var i = 0; i < tickRects.length; i++) {\n        var style = i >= startTickRectId && i <= id ? selectedTickStyle : unselectedTickStyle;\n        tickRects[i].rect.attr(style);\n      }\n\n      var ticksLength = tickRects.length;\n      _this.endTickRectId = id;\n      var start = startTickRectId / ticksLength;\n      var end = id / ticksLength;\n\n      _this.graph.emit(VALUE_CHANGE, {\n        value: [start, end]\n      });\n    });\n    sliceGroup.on('drop', function (e) {\n      if (!_this.dragging) return;\n      _this.dragging = false;\n      if (e.target.get('type') !== 'rect') return;\n      var startTickRectId = _this.startTickRectId;\n      var id = parseInt(e.target.get('name').split('-')[2], 10);\n      if (id < startTickRectId) return;\n      var selectedTickStyle = _this.selectedTickStyle;\n      var tickRects = _this.tickRects;\n      tickRects[id].rect.attr(selectedTickStyle);\n      _this.endTickRectId = id;\n      var ticksLength = tickRects.length;\n      var start = startTickRectId / ticksLength;\n      var end = id / ticksLength;\n\n      _this.graph.emit(VALUE_CHANGE, {\n        value: [start, end]\n      });\n    }); // tooltip\n\n    var _a = this,\n        tooltipBackgroundColor = _a.tooltipBackgroundColor,\n        tooltipFomatter = _a.tooltipFomatter,\n        canvas = _a.canvas;\n\n    var tooltip = new TimeBarTooltip({\n      container: canvas.get('container'),\n      backgroundColor: tooltipBackgroundColor\n    });\n    var tickRects = this.tickRects;\n    tickRects.forEach(function (tickRect) {\n      var pickRect = tickRect.pickRect;\n      pickRect.on('mouseenter', function (e) {\n        var rect = e.target;\n        if (rect.get('type') !== 'rect') return;\n        var id = parseInt(rect.get('name').split('-')[2], 10);\n        var clientPoint = canvas.getClientByPoint(tickRects[id].x, tickRects[id].y);\n        tooltip.show({\n          x: tickRects[id].x,\n          y: tickRects[id].y,\n          clientX: clientPoint.x,\n          clientY: clientPoint.y,\n          text: tooltipFomatter ? tooltipFomatter(tickRects[id].value) : tickRects[id].value\n        });\n      });\n      pickRect.on('mouseleave', function (e) {\n        tooltip.hide();\n      });\n    }); // play controller events\n\n    var group = this.group; // 播放区按钮控制\n\n    /** 播放/暂停事件 */\n\n    group.on(PLAY_PAUSE_BTN + \":click\", function () {\n      _this.isPlay = !_this.isPlay;\n\n      _this.changePlayStatus();\n    }); // 处理前进一步的事件\n\n    group.on(NEXT_STEP_BTN + \":click\", function () {\n      _this.updateStartEnd(1);\n    }); // 处理后退一步的事件\n\n    group.on(PRE_STEP_BTN + \":click\", function () {\n      _this.updateStartEnd(-1);\n    });\n    group.on(TIMEBAR_CONFIG_CHANGE, function (_a) {\n      var type = _a.type,\n          speed = _a.speed;\n      _this.currentSpeed = speed;\n    });\n  };\n\n  TimeBarSlice.prototype.changePlayStatus = function (isSync) {\n    if (isSync === void 0) {\n      isSync = true;\n    }\n\n    this.controllerBtnGroup.playButton.update({\n      isPlay: this.isPlay\n    });\n\n    if (this.isPlay) {\n      // 开始播放\n      this.playHandler = this.startPlay();\n      this.graph.emit(TIMELINE_START, null);\n    } else {\n      // 结束播放\n      if (this.playHandler) {\n        window.cancelAnimationFrame(this.playHandler);\n\n        if (isSync) {\n          this.graph.emit(TIMELINE_END, null);\n        }\n      }\n    }\n  };\n\n  TimeBarSlice.prototype.startPlay = function () {\n    var _this = this;\n\n    return window.requestAnimationFrame(function () {\n      var speed = _this.currentSpeed; // 一分钟刷新一次\n\n      if (_this.frameCount % (60 / speed) === 0) {\n        _this.frameCount = 0;\n\n        _this.updateStartEnd(1);\n      }\n\n      _this.frameCount++;\n\n      if (_this.isPlay) {\n        _this.playHandler = _this.startPlay();\n      }\n    });\n  };\n\n  TimeBarSlice.prototype.updateStartEnd = function (sign) {\n    var self = this;\n    var tickRects = this.tickRects;\n    var ticksLength = tickRects.length;\n    var unselectedTickStyle = this.unselectedTickStyle;\n    var selectedTickStyle = this.selectedTickStyle;\n    var previousEndTickRectId = self.endTickRectId;\n\n    if (sign > 0) {\n      self.endTickRectId++;\n    } else {\n      tickRects[self.endTickRectId].rect.attr(unselectedTickStyle);\n      self.endTickRectId--;\n    } // 若此时 start 与 end 不同，范围前进/后退/播放\n\n\n    if (previousEndTickRectId !== self.startTickRectId) {\n      if (self.endTickRectId < self.startTickRectId) {\n        self.startTickRectId = self.endTickRectId;\n      }\n    } else {\n      // 否则是单帧的前进/后退/播放\n      for (var i = self.startTickRectId; i <= self.endTickRectId - 1; i++) {\n        tickRects[i].rect.attr(unselectedTickStyle);\n      }\n\n      self.startTickRectId = self.endTickRectId;\n    }\n\n    if (tickRects[self.endTickRectId]) {\n      tickRects[self.endTickRectId].rect.attr(selectedTickStyle);\n      var start = self.startTickRectId / ticksLength;\n      var end = self.endTickRectId / ticksLength;\n      this.graph.emit(VALUE_CHANGE, {\n        value: [start, end]\n      });\n    }\n  };\n\n  TimeBarSlice.prototype.destory = function () {\n    this.graph.off(VALUE_CHANGE);\n    var group = this.sliceGroup;\n    group.off('click');\n    group.off('dragstart');\n    group.off('dragover');\n    group.off('drop');\n    this.tickRects.forEach(function (tickRect) {\n      var pickRect = tickRect.pickRect;\n      pickRect.off('mouseenter');\n      pickRect.off('mouseleave');\n    });\n    this.tickRects.length = 0;\n    group.off(PLAY_PAUSE_BTN + \":click\");\n    group.off(NEXT_STEP_BTN + \":click\");\n    group.off(PRE_STEP_BTN + \":click\");\n    group.off(TIMEBAR_CONFIG_CHANGE);\n    this.sliceGroup.destroy();\n  };\n\n  return TimeBarSlice;\n}();\n\nexport default TimeBarSlice;"]},"metadata":{},"sourceType":"module"}