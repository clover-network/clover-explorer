{"ast":null,"code":"import React, { Fragment, useMemo, useRef, useState, useCallback } from 'react';\nimport { withTheme, withDimensions, LegacyContainer, SvgWrapper, ResponsiveWrapper, getRelativeCursor } from '@nivo/core';\nimport { scaleLinear } from 'd3-scale';\nimport { Delaunay } from 'd3-delaunay';\nimport compose from 'recompose/compose';\nimport defaultProps from 'recompose/defaultProps';\nimport withPropsOnChange from 'recompose/withPropsOnChange';\nimport pure from 'recompose/pure';\nimport PropTypes from 'prop-types';\nvar VoronoiPropTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  })).isRequired,\n  xDomain: PropTypes.arrayOf(PropTypes.number).isRequired,\n  yDomain: PropTypes.arrayOf(PropTypes.number).isRequired,\n  layers: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.oneOf(['links', 'cells', 'points', 'bounds']), PropTypes.func])).isRequired,\n  enableLinks: PropTypes.bool.isRequired,\n  linkLineWidth: PropTypes.number.isRequired,\n  linkLineColor: PropTypes.string.isRequired,\n  enableCells: PropTypes.bool.isRequired,\n  cellLineWidth: PropTypes.number.isRequired,\n  cellLineColor: PropTypes.string.isRequired,\n  enablePoints: PropTypes.bool.isRequired,\n  pointSize: PropTypes.number.isRequired,\n  pointColor: PropTypes.string.isRequired,\n  delaunay: PropTypes.object.isRequired,\n  voronoi: PropTypes.object.isRequired\n};\nvar VoronoiDefaultProps = {\n  xDomain: [0, 1],\n  yDomain: [0, 1],\n  layers: ['links', 'cells', 'points', 'bounds'],\n  enableLinks: false,\n  linkLineWidth: 1,\n  linkLineColor: '#bbb',\n  enableCells: true,\n  cellLineWidth: 2,\n  cellLineColor: '#000',\n  enablePoints: true,\n  pointSize: 4,\n  pointColor: '#666'\n};\n\nvar enhance = function (Component) {\n  return compose(defaultProps(VoronoiDefaultProps), withTheme(), withDimensions(), withPropsOnChange(['xDomain', 'yDomain', 'width', 'height'], function (_ref) {\n    var xDomain = _ref.xDomain,\n        yDomain = _ref.yDomain,\n        width = _ref.width,\n        height = _ref.height;\n    return {\n      xScale: scaleLinear().domain(xDomain).range([0, width]),\n      yScale: scaleLinear().domain(yDomain).range([0, height])\n    };\n  }), withPropsOnChange(['data', 'xScale', 'yScale'], function (_ref2) {\n    var data = _ref2.data,\n        xScale = _ref2.xScale,\n        yScale = _ref2.yScale;\n    return {\n      scaledPoints: data.map(function (d) {\n        return {\n          data: d,\n          x: xScale(d.x),\n          y: yScale(d.y)\n        };\n      })\n    };\n  }), withPropsOnChange(['scaledPoints', 'width', 'height'], function (_ref3) {\n    var scaledPoints = _ref3.scaledPoints,\n        width = _ref3.width,\n        height = _ref3.height;\n    var delaunay = Delaunay.from(scaledPoints.map(function (p) {\n      return [p.x, p.y];\n    }));\n    var voronoi = delaunay.voronoi([0, 0, width, height]);\n    return {\n      delaunay: delaunay,\n      voronoi: voronoi\n    };\n  }), pure)(Component);\n};\n\nvar Voronoi = function Voronoi(_ref) {\n  var delaunay = _ref.delaunay,\n      voronoi = _ref.voronoi,\n      data = _ref.data,\n      layers = _ref.layers,\n      margin = _ref.margin,\n      width = _ref.width,\n      height = _ref.height,\n      outerWidth = _ref.outerWidth,\n      outerHeight = _ref.outerHeight,\n      enableLinks = _ref.enableLinks,\n      linkLineWidth = _ref.linkLineWidth,\n      linkLineColor = _ref.linkLineColor,\n      enableCells = _ref.enableCells,\n      cellLineWidth = _ref.cellLineWidth,\n      cellLineColor = _ref.cellLineColor,\n      enablePoints = _ref.enablePoints,\n      pointSize = _ref.pointSize,\n      pointColor = _ref.pointColor,\n      theme = _ref.theme;\n  var context = {\n    width: width,\n    height: height,\n    data: data,\n    delaunay: delaunay,\n    voronoi: voronoi\n  };\n  var layerById = {\n    bounds: React.createElement(\"path\", {\n      key: \"bounds\",\n      fill: \"none\",\n      stroke: cellLineColor,\n      strokeWidth: cellLineWidth,\n      d: voronoi.renderBounds()\n    })\n  };\n\n  if (enableLinks === true) {\n    layerById.links = React.createElement(\"path\", {\n      key: \"links\",\n      stroke: linkLineColor,\n      strokeWidth: linkLineWidth,\n      fill: \"none\",\n      d: delaunay.render()\n    });\n  }\n\n  if (enableCells === true) {\n    layerById.cells = React.createElement(\"path\", {\n      key: \"cells\",\n      d: voronoi.render(),\n      fill: \"none\",\n      stroke: cellLineColor,\n      strokeWidth: cellLineWidth\n    });\n  }\n\n  if (enablePoints === true) {\n    layerById.points = React.createElement(\"path\", {\n      key: \"points\",\n      stroke: \"none\",\n      fill: pointColor,\n      d: delaunay.renderPoints(undefined, pointSize / 2)\n    });\n  }\n\n  return React.createElement(LegacyContainer, {\n    isInteractive: false,\n    theme: theme,\n    animate: false\n  }, function () {\n    return React.createElement(SvgWrapper, {\n      width: outerWidth,\n      height: outerHeight,\n      margin: margin,\n      theme: theme\n    }, layers.map(function (layer, i) {\n      if (typeof layer === 'function') {\n        return React.createElement(Fragment, {\n          key: i\n        }, layer(context));\n      }\n\n      return layerById[layer];\n    }));\n  });\n};\n\nvar Voronoi$1 = enhance(Voronoi);\n\nvar ResponsiveVoronoi = function ResponsiveVoronoi(props) {\n  return React.createElement(ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React.createElement(Voronoi$1, Object.assign({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nvar getAccessor = function getAccessor(directive) {\n  return typeof directive === 'function' ? directive : function (d) {\n    return d[directive];\n  };\n};\n\nvar computeMeshPoints = function computeMeshPoints(_ref) {\n  var points = _ref.points,\n      _ref$x = _ref.x,\n      x = _ref$x === void 0 ? 'x' : _ref$x,\n      _ref$y = _ref.y,\n      y = _ref$y === void 0 ? 'y' : _ref$y;\n  var getX = getAccessor(x);\n  var getY = getAccessor(y);\n  return points.map(function (p) {\n    return [getX(p), getY(p)];\n  });\n};\n\nvar computeMesh = function computeMesh(_ref2) {\n  var points = _ref2.points,\n      width = _ref2.width,\n      height = _ref2.height,\n      debug = _ref2.debug;\n  var delaunay = Delaunay.from(points);\n  var voronoi = debug === true ? delaunay.voronoi([0, 0, width, height]) : undefined;\n  return {\n    delaunay: delaunay,\n    voronoi: voronoi\n  };\n};\n\nvar useVoronoiMesh = function useVoronoiMesh(_ref) {\n  var points = _ref.points,\n      x = _ref.x,\n      y = _ref.y,\n      width = _ref.width,\n      height = _ref.height,\n      debug = _ref.debug;\n  var points2d = useMemo(function () {\n    return computeMeshPoints({\n      points: points,\n      x: x,\n      y: y\n    });\n  }, [points, x, y]);\n  return useMemo(function () {\n    return computeMesh({\n      points: points2d,\n      width: width,\n      height: height,\n      debug: debug\n    });\n  }, [points2d, width, height, debug]);\n};\n\nvar Mesh = function Mesh(_ref) {\n  var nodes = _ref.nodes,\n      width = _ref.width,\n      height = _ref.height,\n      x = _ref.x,\n      y = _ref.y,\n      debug = _ref.debug,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseMove = _ref.onMouseMove,\n      onMouseLeave = _ref.onMouseLeave,\n      onClick = _ref.onClick;\n  var elementRef = useRef(null);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentIndex = _useState2[0],\n      setCurrentIndex = _useState2[1];\n\n  var _useVoronoiMesh = useVoronoiMesh({\n    points: nodes,\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    debug: debug\n  }),\n      delaunay = _useVoronoiMesh.delaunay,\n      voronoi = _useVoronoiMesh.voronoi;\n\n  var voronoiPath = useMemo(function () {\n    return debug ? voronoi.render() : undefined;\n  });\n  var getIndexAndNodeFromEvent = useCallback(function (event) {\n    var _getRelativeCursor = getRelativeCursor(elementRef.current, event),\n        _getRelativeCursor2 = _slicedToArray(_getRelativeCursor, 2),\n        x = _getRelativeCursor2[0],\n        y = _getRelativeCursor2[1];\n\n    var index = delaunay.find(x, y);\n    return [index, index !== undefined ? nodes[index] : null];\n  }, [delaunay]);\n  var handleMouseEnter = useCallback(function (event) {\n    var _getIndexAndNodeFromE = getIndexAndNodeFromEvent(event),\n        _getIndexAndNodeFromE2 = _slicedToArray(_getIndexAndNodeFromE, 2),\n        index = _getIndexAndNodeFromE2[0],\n        node = _getIndexAndNodeFromE2[1];\n\n    if (currentIndex !== index) setCurrentIndex(index);\n    node && onMouseEnter && onMouseEnter(node, event);\n  }, [getIndexAndNodeFromEvent, setCurrentIndex]);\n  var handleMouseMove = useCallback(function (event) {\n    var _getIndexAndNodeFromE3 = getIndexAndNodeFromEvent(event),\n        _getIndexAndNodeFromE4 = _slicedToArray(_getIndexAndNodeFromE3, 2),\n        index = _getIndexAndNodeFromE4[0],\n        node = _getIndexAndNodeFromE4[1];\n\n    if (currentIndex !== index) setCurrentIndex(index);\n    node && onMouseMove && onMouseMove(node, event);\n  }, [getIndexAndNodeFromEvent, setCurrentIndex]);\n  var handleMouseLeave = useCallback(function (event) {\n    setCurrentIndex(null);\n\n    if (onMouseLeave) {\n      var previousNode;\n\n      if (currentIndex !== undefined && currentIndex !== null) {\n        previousNode = nodes[currentIndex];\n      }\n\n      previousNode && onMouseLeave(previousNode, event);\n    }\n  }, [setCurrentIndex, currentIndex, nodes]);\n  var handleClick = useCallback(function (event) {\n    var _getIndexAndNodeFromE5 = getIndexAndNodeFromEvent(event),\n        _getIndexAndNodeFromE6 = _slicedToArray(_getIndexAndNodeFromE5, 2),\n        index = _getIndexAndNodeFromE6[0],\n        node = _getIndexAndNodeFromE6[1];\n\n    if (currentIndex !== index) setCurrentIndex(index);\n    onClick && onClick(node, event);\n  }, [getIndexAndNodeFromEvent, setCurrentIndex]);\n  return React.createElement(\"g\", {\n    ref: elementRef\n  }, debug && React.createElement(\"path\", {\n    d: voronoiPath,\n    stroke: \"red\",\n    strokeWidth: 1,\n    opacity: 0.75\n  }), currentIndex !== null && debug && React.createElement(\"path\", {\n    fill: \"red\",\n    opacity: 0.35,\n    d: voronoi.renderCell(currentIndex)\n  }), React.createElement(\"rect\", {\n    width: width,\n    height: height,\n    fill: \"red\",\n    opacity: 0,\n    style: {\n      cursor: 'auto'\n    },\n    onMouseEnter: handleMouseEnter,\n    onMouseMove: handleMouseMove,\n    onMouseLeave: handleMouseLeave,\n    onClick: handleClick\n  }));\n};\n\nMesh.defaultProps = {\n  x: 'x',\n  y: 'y',\n  debug: false\n};\n\nvar renderVoronoiToCanvas = function renderVoronoiToCanvas(ctx, voronoi) {\n  ctx.save();\n  ctx.globalAlpha = 0.75;\n  ctx.beginPath();\n  voronoi.render(ctx);\n  ctx.strokeStyle = 'red';\n  ctx.lineWidth = 1;\n  ctx.stroke();\n  ctx.restore();\n};\n\nvar renderVoronoiCellToCanvas = function renderVoronoiCellToCanvas(ctx, voronoi, index) {\n  ctx.save();\n  ctx.globalAlpha = 0.35;\n  ctx.beginPath();\n  voronoi.renderCell(index, ctx);\n  ctx.fillStyle = 'red';\n  ctx.fill();\n  ctx.restore();\n};\n\nexport { Mesh, ResponsiveVoronoi, Voronoi$1 as Voronoi, VoronoiDefaultProps, VoronoiPropTypes, computeMesh, computeMeshPoints, renderVoronoiCellToCanvas, renderVoronoiToCanvas, useVoronoiMesh };","map":{"version":3,"sources":["../src/props.js","../src/enhance.js","../src/Voronoi.js","../src/ResponsiveVoronoi.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/computeMesh.js","../src/hooks.js","../src/Mesh.js","../src/meshCanvas.js"],"names":["VoronoiPropTypes","data","id","PropTypes","x","y","isRequired","xDomain","yDomain","layers","enableLinks","linkLineWidth","linkLineColor","enableCells","cellLineWidth","cellLineColor","enablePoints","pointSize","pointColor","delaunay","voronoi","VoronoiDefaultProps","compose","defaultProps","withTheme","withDimensions","withPropsOnChange","width","height","xScale","scaleLinear","yScale","scaledPoints","d","p","Voronoi","margin","outerWidth","outerHeight","theme","context","layerById","bounds","i","layer","enhance","ResponsiveVoronoi","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","getAccessor","computeMeshPoints","points","getX","getY","computeMesh","debug","Delaunay","useVoronoiMesh","points2d","useMemo","Mesh","nodes","onMouseEnter","onMouseMove","onMouseLeave","onClick","elementRef","useRef","currentIndex","setCurrentIndex","useState","voronoiPath","getIndexAndNodeFromEvent","useCallback","getRelativeCursor","index","handleMouseEnter","node","handleMouseMove","handleMouseLeave","previousNode","handleClick","cursor","renderVoronoiToCanvas","ctx","renderVoronoiCellToCanvas"],"mappings":";;;;;;;;;IAUaA,gBAAgB,GAAG;AAC5BC,EAAAA,IAAI,EAAE,SAAS,CAAT,OAAA,CACF,SAAS,CAAT,KAAA,CAAgB;AACZC,IAAAA,EAAE,EAAEC,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,MAAA,EAAmBA,SAAS,CAAhDA,MAAoB,CAApBA,EADQ,UAAA;AAEZC,IAAAA,CAAC,EAAED,SAAS,CAATA,MAAAA,CAFS,UAAA;AAGZE,IAAAA,CAAC,EAAEF,SAAS,CAATA,MAAAA,CAAiBG;AAHR,GAAhB,CADE,EADsB,UAAA;AAS5BC,EAAAA,OAAO,EAAEJ,SAAS,CAATA,OAAAA,CAAkBA,SAAS,CAA3BA,MAAAA,EATmB,UAAA;AAU5BK,EAAAA,OAAO,EAAEL,SAAS,CAATA,OAAAA,CAAkBA,SAAS,CAA3BA,MAAAA,EAVmB,UAAA;AAY5BM,EAAAA,MAAM,EAAEN,SAAS,CAATA,OAAAA,CACJA,SAAS,CAATA,SAAAA,CAAoB,CAChBA,SAAS,CAATA,KAAAA,CAAgB,CAAA,OAAA,EAAA,OAAA,EAAA,QAAA,EADA,QACA,CAAhBA,CADgB,EAEhBA,SAAS,CAHTA,IACgB,CAApBA,CADIA,EAZoB,UAAA;AAmB5BO,EAAAA,WAAW,EAAEP,SAAS,CAATA,IAAAA,CAnBe,UAAA;AAoB5BQ,EAAAA,aAAa,EAAER,SAAS,CAATA,MAAAA,CApBa,UAAA;AAqB5BS,EAAAA,aAAa,EAAET,SAAS,CAATA,MAAAA,CArBa,UAAA;AAuB5BU,EAAAA,WAAW,EAAEV,SAAS,CAATA,IAAAA,CAvBe,UAAA;AAwB5BW,EAAAA,aAAa,EAAEX,SAAS,CAATA,MAAAA,CAxBa,UAAA;AAyB5BY,EAAAA,aAAa,EAAEZ,SAAS,CAATA,MAAAA,CAzBa,UAAA;AA2B5Ba,EAAAA,YAAY,EAAEb,SAAS,CAATA,IAAAA,CA3Bc,UAAA;AA4B5Bc,EAAAA,SAAS,EAAEd,SAAS,CAATA,MAAAA,CA5BiB,UAAA;AA6B5Be,EAAAA,UAAU,EAAEf,SAAS,CAATA,MAAAA,CA7BgB,UAAA;AA+B5BgB,EAAAA,QAAQ,EAAEhB,SAAS,CAATA,MAAAA,CA/BkB,UAAA;AAgC5BiB,EAAAA,OAAO,EAAEjB,SAAS,CAATA,MAAAA,CAAiBG;AAhCE,C;IAmCnBe,mBAAmB,GAAG;AAC/Bd,EAAAA,OAAO,EAAE,CAAA,CAAA,EADsB,CACtB,CADsB;AAE/BC,EAAAA,OAAO,EAAE,CAAA,CAAA,EAFsB,CAEtB,CAFsB;AAI/BC,EAAAA,MAAM,EAAE,CAAA,OAAA,EAAA,OAAA,EAAA,QAAA,EAJuB,QAIvB,CAJuB;AAM/BC,EAAAA,WAAW,EANoB,KAAA;AAO/BC,EAAAA,aAAa,EAPkB,CAAA;AAQ/BC,EAAAA,aAAa,EARkB,MAAA;AAU/BC,EAAAA,WAAW,EAVoB,IAAA;AAW/BC,EAAAA,aAAa,EAXkB,CAAA;AAY/BC,EAAAA,aAAa,EAZkB,MAAA;AAc/BC,EAAAA,YAAY,EAdmB,IAAA;AAe/BC,EAAAA,SAAS,EAfsB,CAAA;AAgB/BC,EAAAA,UAAU,EAAE;AAhBmB,C;;AC5BnC,IAAA,OAAA,GAAe,UAAA,SAAA,EAAS;AAAA,SACpBI,OAAO,CACHC,YAAY,CADT,mBACS,CADT,EAEHC,SAFG,EAAA,EAGHC,cAHG,EAAA,EAIHC,iBAAiB,CACb,CAAA,SAAA,EAAA,SAAA,EAAA,OAAA,EADa,QACb,CADa,EAEb,UAAA,IAAA,EAAA;AAAA,QAAGnB,OAAH,GAAA,IAAA,CAAA,OAAA;AAAA,QAAYC,OAAZ,GAAA,IAAA,CAAA,OAAA;AAAA,QAAqBmB,KAArB,GAAA,IAAA,CAAA,KAAA;AAAA,QAA4BC,MAA5B,GAAA,IAAA,CAAA,MAAA;AAAA,WAA0C;AACtCC,MAAAA,MAAM,EAAEC,WAAW,GAAXA,MAAAA,CAAAA,OAAAA,EAAAA,KAAAA,CAAoC,CAAA,CAAA,EADN,KACM,CAApCA,CAD8B;AAEtCC,MAAAA,MAAM,EAAED,WAAW,GAAXA,MAAAA,CAAAA,OAAAA,EAAAA,KAAAA,CAAoC,CAAA,CAAA,EAApCA,MAAoC,CAApCA;AAF8B,KAA1C;AAND,GAIc,CAJd,EAWHJ,iBAAiB,CAAC,CAAA,MAAA,EAAA,QAAA,EAAD,QAAC,CAAD,EAA+B,UAAA,KAAA,EAAA;AAAA,QAAGzB,IAAH,GAAA,KAAA,CAAA,IAAA;AAAA,QAAS4B,MAAT,GAAA,KAAA,CAAA,MAAA;AAAA,QAAiBE,MAAjB,GAAA,KAAA,CAAA,MAAA;AAAA,WAA+B;AAC3EC,MAAAA,YAAY,EAAE,IAAI,CAAJ,GAAA,CAAS,UAAA,CAAA,EAAC;AAAA,eAAK;AACzB/B,UAAAA,IAAI,EADqB,CAAA;AAEzBG,UAAAA,CAAC,EAAEyB,MAAM,CAACI,CAAC,CAFc,CAEhB,CAFgB;AAGzB5B,UAAAA,CAAC,EAAE0B,MAAM,CAACE,CAAC,CAAF,CAAA;AAHgB,SAAL;AAAV,OAAA;AAD6D,KAA/B;AAX7C,GAWc,CAXd,EAkBHP,iBAAiB,CACb,CAAA,cAAA,EAAA,OAAA,EADa,QACb,CADa,EAEb,UAAA,KAAA,EAAqC;AAAA,QAAlCM,YAAkC,GAAA,KAAA,CAAlCA,YAAkC;AAAA,QAApBL,KAAoB,GAAA,KAAA,CAApBA,KAAoB;AAAA,QAAbC,MAAa,GAAA,KAAA,CAAbA,MAAa;AACjC,QAAMT,QAAQ,GAAG,QAAQ,CAAR,IAAA,CAAc,YAAY,CAAZ,GAAA,CAAiB,UAAA,CAAA,EAAC;AAAA,aAAI,CAACe,CAAC,CAAF,CAAA,EAAMA,CAAC,CAAX,CAAI,CAAJ;AAAjD,KAA+B,CAAd,CAAjB;AACA,QAAMd,OAAO,GAAGD,QAAQ,CAARA,OAAAA,CAAiB,CAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAjC,MAAiC,CAAjBA,CAAhB;AAEA,WAAO;AACHA,MAAAA,QAAQ,EADL,QAAA;AAEHC,MAAAA,OAAO,EAAPA;AAFG,KAAP;AAxBL,GAkBc,CAlBd,EAAPE,IAAO,CAAPA,CADoB,SACpBA,CADoB;AAAxB,CAAA;;ACJA,IAAMa,OAAO,GAAG,SAAVA,OAAU,CAAA,IAAA,EA0BV;AAAA,MAzBFhB,QAyBE,GAAA,IAAA,CAzBFA,QAyBE;AAAA,MAxBFC,OAwBE,GAAA,IAAA,CAxBFA,OAwBE;AAAA,MAtBFnB,IAsBE,GAAA,IAAA,CAtBFA,IAsBE;AAAA,MArBFQ,MAqBE,GAAA,IAAA,CArBFA,MAqBE;AAAA,MAnBF2B,MAmBE,GAAA,IAAA,CAnBFA,MAmBE;AAAA,MAlBFT,KAkBE,GAAA,IAAA,CAlBFA,KAkBE;AAAA,MAjBFC,MAiBE,GAAA,IAAA,CAjBFA,MAiBE;AAAA,MAhBFS,UAgBE,GAAA,IAAA,CAhBFA,UAgBE;AAAA,MAfFC,WAeE,GAAA,IAAA,CAfFA,WAeE;AAAA,MAbF5B,WAaE,GAAA,IAAA,CAbFA,WAaE;AAAA,MAZFC,aAYE,GAAA,IAAA,CAZFA,aAYE;AAAA,MAXFC,aAWE,GAAA,IAAA,CAXFA,aAWE;AAAA,MATFC,WASE,GAAA,IAAA,CATFA,WASE;AAAA,MARFC,aAQE,GAAA,IAAA,CARFA,aAQE;AAAA,MAPFC,aAOE,GAAA,IAAA,CAPFA,aAOE;AAAA,MALFC,YAKE,GAAA,IAAA,CALFA,YAKE;AAAA,MAJFC,SAIE,GAAA,IAAA,CAJFA,SAIE;AAAA,MAHFC,UAGE,GAAA,IAAA,CAHFA,UAGE;AAAA,MADFqB,KACE,GAAA,IAAA,CADFA,KACE;AACF,MAAMC,OAAO,GAAG;AACZb,IAAAA,KAAK,EADO,KAAA;AAEZC,IAAAA,MAAM,EAFM,MAAA;AAGZ3B,IAAAA,IAAI,EAHQ,IAAA;AAIZkB,IAAAA,QAAQ,EAJI,QAAA;AAKZC,IAAAA,OAAO,EAAPA;AALY,GAAhB;AAQA,MAAMqB,SAAS,GAAG;AACdC,IAAAA,MAAM,EACF,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACI,MAAA,GAAG,EADP,QAAA;AAEI,MAAA,IAAI,EAFR,MAAA;AAGI,MAAA,MAAM,EAHV,aAAA;AAII,MAAA,WAAW,EAJf,aAAA;AAKI,MAAA,CAAC,EAAEtB,OAAO,CAAPA,YAAAA;AALP,KAAA;AAFU,GAAlB;;AAWA,MAAIV,WAAW,KAAf,IAAA,EAA0B;AACtB+B,IAAAA,SAAS,CAATA,KAAAA,GACI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACI,MAAA,GAAG,EADP,OAAA;AAEI,MAAA,MAAM,EAFV,aAAA;AAGI,MAAA,WAAW,EAHf,aAAA;AAII,MAAA,IAAI,EAJR,MAAA;AAKI,MAAA,CAAC,EAAEtB,QAAQ,CAARA,MAAAA;AALP,KAAA,CADJsB;AASH;;AACD,MAAI5B,WAAW,KAAf,IAAA,EAA0B;AACtB4B,IAAAA,SAAS,CAATA,KAAAA,GACI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACI,MAAA,GAAG,EADP,OAAA;AAEI,MAAA,CAAC,EAAErB,OAAO,CAFd,MAEOA,EAFP;AAGI,MAAA,IAAI,EAHR,MAAA;AAII,MAAA,MAAM,EAJV,aAAA;AAKI,MAAA,WAAW,EAAEN;AALjB,KAAA,CADJ2B;AASH;;AACD,MAAIzB,YAAY,KAAhB,IAAA,EAA2B;AACvByB,IAAAA,SAAS,CAATA,MAAAA,GACI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACI,MAAA,GAAG,EADP,QAAA;AAEI,MAAA,MAAM,EAFV,MAAA;AAGI,MAAA,IAAI,EAHR,UAAA;AAII,MAAA,CAAC,EAAEtB,QAAQ,CAARA,YAAAA,CAAAA,SAAAA,EAAiCF,SAAS,GAA1CE,CAAAA;AAJP,KAAA,CADJsB;AAQH;;AAED,SACI,KAAA,CAAA,aAAA,CAAA,eAAA,EAAA;AAAiB,IAAA,aAAa,EAA9B,KAAA;AAAuC,IAAA,KAAK,EAA5C,KAAA;AAAqD,IAAA,OAAO,EAAE;AAA9D,GAAA,EAEQ,YAAA;AAAA,WACI,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AACI,MAAA,KAAK,EADT,UAAA;AAEI,MAAA,MAAM,EAFV,WAAA;AAGI,MAAA,MAAM,EAHV,MAAA;AAII,MAAA,KAAK,EAAEF;AAJX,KAAA,EAMK,MAAM,CAAN,GAAA,CAAW,UAAA,KAAA,EAAA,CAAA,EAAc;AACtB,UAAI,OAAA,KAAA,KAAJ,UAAA,EAAiC;AAC7B,eAAO,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAU,UAAA,GAAG,EAAEI;AAAf,SAAA,EAAmBC,KAAK,CAA/B,OAA+B,CAAxB,CAAP;AACH;;AACD,aAAOH,SAAS,CAAhB,KAAgB,CAAhB;AAXZ,KAOS,CANL,CADJ;AAHZ,GACI,CADJ;AA/EJ,CAAA;;AAwGA,IAAA,SAAA,GAAeI,OAAO,CAAtB,OAAsB,CAAtB;;ICzGMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,KAAA,EAAK;AAAA,SAC3B,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,IAAA,EACK,UAAA,IAAA,EAAA;AAAA,QAAGnB,KAAH,GAAA,IAAA,CAAA,KAAA;AAAA,QAAUC,MAAV,GAAA,IAAA,CAAA,MAAA;AAAA,WAAuB,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAS,MAAA,KAAK,EAAd,KAAA;AAAuB,MAAA,MAAM,EAAEA;AAA/B,KAAA,EAAvB,KAAuB,CAAA,CAAvB;AAFsB,GAC3B,CAD2B;AAAA,C;;ACZhB,SAAS,eAAT,CAAyB,GAAzB,EAA8B;AAC3C,MAAI,KAAK,CAAC,OAAN,CAAc,GAAd,CAAJ,EAAwB,OAAO,GAAP;AAC1B;;ACFe,SAAS,qBAAT,CAA+B,GAA/B,EAAoC,CAApC,EAAuC;AACpD,MAAI,OAAO,MAAP,KAAkB,WAAlB,IAAiC,EAAE,MAAM,CAAC,QAAP,IAAmB,MAAM,CAAC,GAAD,CAA3B,CAArC,EAAwE;AACxE,MAAI,IAAI,GAAG,EAAX;AACA,MAAI,EAAE,GAAG,IAAT;AACA,MAAI,EAAE,GAAG,KAAT;AACA,MAAI,EAAE,GAAG,SAAT;;AAEA,MAAI;AACF,SAAK,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,QAAR,CAAH,EAAT,EAAiC,EAAtC,EAA0C,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAH,EAAN,EAAiB,IAAxB,CAA1C,EAAyE,EAAE,GAAG,IAA9E,EAAoF;AAClF,MAAA,IAAI,CAAC,IAAL,CAAU,EAAE,CAAC,KAAb;;AAEA,UAAI,CAAC,IAAI,IAAI,CAAC,MAAL,KAAgB,CAAzB,EAA4B;AAC7B;AACF,GAND,CAME,OAAO,GAAP,EAAY;AACZ,IAAA,EAAE,GAAG,IAAL;AACA,IAAA,EAAE,GAAG,GAAL;AACD,GATD,SASU;AACR,QAAI;AACF,UAAI,CAAC,EAAD,IAAO,EAAE,CAAC,QAAD,CAAF,IAAgB,IAA3B,EAAiC,EAAE,CAAC,QAAD,CAAF;AAClC,KAFD,SAEU;AACR,UAAI,EAAJ,EAAQ,MAAM,EAAN;AACT;AACF;;AAED,SAAO,IAAP;AACF;;ACzBe,SAAS,iBAAT,CAA2B,GAA3B,EAAgC,GAAhC,EAAqC;AAClD,MAAI,GAAG,IAAI,IAAP,IAAe,GAAG,GAAG,GAAG,CAAC,MAA7B,EAAqC,GAAG,GAAG,GAAG,CAAC,MAAV;;AAErC,OAAK,IAAI,CAAC,GAAG,CAAR,EAAW,IAAI,GAAG,IAAI,KAAJ,CAAU,GAAV,CAAvB,EAAuC,CAAC,GAAG,GAA3C,EAAgD,CAAC,EAAjD,EAAqD;AACnD,IAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,GAAG,CAAC,CAAD,CAAb;AACD;;AAED,SAAO,IAAP;AACF;;ACPe,SAAS,2BAAT,CAAqC,CAArC,EAAwC,MAAxC,EAAgD;AAC7D,MAAI,CAAC,CAAL,EAAQ;AACR,MAAI,OAAO,CAAP,KAAa,QAAjB,EAA2B,OAAOmB,iBAAgB,CAAC,CAAD,EAAI,MAAJ,CAAvB;AAC3B,MAAI,CAAC,GAAG,MAAM,CAAC,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,CAA/B,EAAkC,KAAlC,CAAwC,CAAxC,EAA2C,CAAC,CAA5C,CAAR;AACA,MAAI,CAAC,KAAK,QAAN,IAAkB,CAAC,CAAC,WAAxB,EAAqC,CAAC,GAAG,CAAC,CAAC,WAAF,CAAc,IAAlB;AACrC,MAAI,CAAC,KAAK,KAAN,IAAe,CAAC,KAAK,KAAzB,EAAgC,OAAO,KAAK,CAAC,IAAN,CAAW,CAAX,CAAP;AAChC,MAAI,CAAC,KAAK,WAAN,IAAqB,2CAA2C,IAA3C,CAAgD,CAAhD,CAAzB,EAA6E,OAAOA,iBAAgB,CAAC,CAAD,EAAI,MAAJ,CAAvB;AAC/E;;ACRe,SAAS,gBAAT,GAA4B;AACzC,QAAM,IAAI,SAAJ,CAAc,2IAAd,CAAN;AACF;;ACEe,SAAS,cAAT,CAAwB,GAAxB,EAA6B,CAA7B,EAAgC;AAC7C,SAAOC,eAAc,CAAC,GAAD,CAAdA,IAAuBC,qBAAoB,CAAC,GAAD,EAAM,CAAN,CAA3CD,IAAuDE,2BAA0B,CAAC,GAAD,EAAM,CAAN,CAAjFF,IAA6FG,gBAAe,EAAnH;AACF;;ACIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAA,SAAA,EAAS;AAAA,SAAK,OAAA,SAAA,KAAA,UAAA,GAAA,SAAA,GAA8C,UAAA,CAAA,EAAC;AAAA,WAAInB,CAAC,CAAL,SAAK,CAAL;AAApD,GAAA;AAA7B,CAAA;;IAUaoB,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,IAAA,EAAkC;AAAA,MAA/BC,MAA+B,GAAA,IAAA,CAA/BA,MAA+B;AAAA,MAAA,MAAA,GAAA,IAAA,CAAvBlD,CAAuB;AAAA,MAAvBA,CAAuB,GAAA,MAAA,KAAA,KAAA,CAAA,GAAnB,GAAmB,GAAA,MAAA;AAAA,MAAA,MAAA,GAAA,IAAA,CAAdC,CAAc;AAAA,MAAdA,CAAc,GAAA,MAAA,KAAA,KAAA,CAAA,GAAV,GAAU,GAAA,MAAA;AAC/D,MAAMkD,IAAI,GAAGH,WAAW,CAAxB,CAAwB,CAAxB;AACA,MAAMI,IAAI,GAAGJ,WAAW,CAAxB,CAAwB,CAAxB;AAEA,SAAO,MAAM,CAAN,GAAA,CAAW,UAAA,CAAA,EAAC;AAAA,WAAI,CAACG,IAAI,CAAL,CAAK,CAAL,EAAUC,IAAI,CAAlB,CAAkB,CAAd,CAAJ;AAAnB,GAAO,CAAP;AACH,C;;IAEYC,WAAW,GAAG,SAAdA,WAAc,CAAA,KAAA,EAAsC;AAAA,MAAnCH,MAAmC,GAAA,KAAA,CAAnCA,MAAmC;AAAA,MAA3B3B,KAA2B,GAAA,KAAA,CAA3BA,KAA2B;AAAA,MAApBC,MAAoB,GAAA,KAAA,CAApBA,MAAoB;AAAA,MAAZ8B,KAAY,GAAA,KAAA,CAAZA,KAAY;AAC7D,MAAMvC,QAAQ,GAAGwC,QAAQ,CAARA,IAAAA,CAAjB,MAAiBA,CAAjB;AACA,MAAMvC,OAAO,GAAGsC,KAAK,KAALA,IAAAA,GAAiBvC,QAAQ,CAARA,OAAAA,CAAiB,CAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAlCuC,MAAkC,CAAjBvC,CAAjBuC,GAAhB,SAAA;AAEA,SAAO;AAAEvC,IAAAA,QAAQ,EAAV,QAAA;AAAYC,IAAAA,OAAO,EAAPA;AAAZ,GAAP;AACH,C;;ICrBYwC,cAAc,GAAG,SAAjBA,cAAiB,CAAA,IAAA,EAA4C;AAAA,MAAzCN,MAAyC,GAAA,IAAA,CAAzCA,MAAyC;AAAA,MAAjClD,CAAiC,GAAA,IAAA,CAAjCA,CAAiC;AAAA,MAA9BC,CAA8B,GAAA,IAAA,CAA9BA,CAA8B;AAAA,MAA3BsB,KAA2B,GAAA,IAAA,CAA3BA,KAA2B;AAAA,MAApBC,MAAoB,GAAA,IAAA,CAApBA,MAAoB;AAAA,MAAZ8B,KAAY,GAAA,IAAA,CAAZA,KAAY;AACtE,MAAMG,QAAQ,GAAGC,OAAO,CAAC,YAAA;AAAA,WAAMT,iBAAiB,CAAC;AAAEC,MAAAA,MAAM,EAAR,MAAA;AAAUlD,MAAAA,CAAC,EAAX,CAAA;AAAaC,MAAAA,CAAC,EAADA;AAAb,KAAD,CAAvB;AAAD,GAAA,EAA4C,CAAA,MAAA,EAAA,CAAA,EAApE,CAAoE,CAA5C,CAAxB;AAEA,SAAOyD,OAAO,CAAC,YAAA;AAAA,WAAML,WAAW,CAAC;AAAEH,MAAAA,MAAM,EAAR,QAAA;AAAoB3B,MAAAA,KAAK,EAAzB,KAAA;AAA2BC,MAAAA,MAAM,EAAjC,MAAA;AAAmC8B,MAAAA,KAAK,EAALA;AAAnC,KAAD,CAAjB;AAAD,GAAA,EAAgE,CAAA,QAAA,EAAA,KAAA,EAAA,MAAA,EAA9E,KAA8E,CAAhE,CAAd;AAMH,C;;ICPKK,IAAI,GAAG,SAAPA,IAAO,CAAA,IAAA,EAYP;AAAA,MAXFC,KAWE,GAAA,IAAA,CAXFA,KAWE;AAAA,MAVFrC,KAUE,GAAA,IAAA,CAVFA,KAUE;AAAA,MATFC,MASE,GAAA,IAAA,CATFA,MASE;AAAA,MARFxB,CAQE,GAAA,IAAA,CARFA,CAQE;AAAA,MAPFC,CAOE,GAAA,IAAA,CAPFA,CAOE;AAAA,MANFqD,KAME,GAAA,IAAA,CANFA,KAME;AAAA,MAJFO,YAIE,GAAA,IAAA,CAJFA,YAIE;AAAA,MAHFC,WAGE,GAAA,IAAA,CAHFA,WAGE;AAAA,MAFFC,YAEE,GAAA,IAAA,CAFFA,YAEE;AAAA,MADFC,OACE,GAAA,IAAA,CADFA,OACE;AACF,MAAMC,UAAU,GAAGC,MAAM,CAAzB,IAAyB,CAAzB;;AADE,MAAA,SAAA,GAEsCG,QAAQ,CAF9C,IAE8C,CAF9C;AAAA,MAAA,UAAA,GAAA,cAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAA,MAEKF,YAFL,GAAA,UAAA,CAAA,CAAA,CAAA;AAAA,MAEmBC,eAFnB,GAAA,UAAA,CAAA,CAAA,CAAA;;AAAA,MAAA,eAAA,GAI4BZ,cAAc,CAAC;AACzCN,IAAAA,MAAM,EADmC,KAAA;AAEzClD,IAAAA,CAAC,EAFwC,CAAA;AAGzCC,IAAAA,CAAC,EAHwC,CAAA;AAIzCsB,IAAAA,KAAK,EAJoC,KAAA;AAKzCC,IAAAA,MAAM,EALmC,MAAA;AAMzC8B,IAAAA,KAAK,EAALA;AANyC,GAAD,CAJ1C;AAAA,MAIMvC,QAJN,GAAA,eAAA,CAAA,QAAA;AAAA,MAIgBC,OAJhB,GAAA,eAAA,CAAA,OAAA;;AAYF,MAAMsD,WAAW,GAAGZ,OAAO,CAAC,YAAA;AAAA,WAAOJ,KAAK,GAAGtC,OAAO,CAAV,MAAGA,EAAH,GAAZ,SAAA;AAA5B,GAA2B,CAA3B;AAEA,MAAMuD,wBAAwB,GAAGC,WAAW,CACxC,UAAA,KAAA,EAAS;AAAA,QAAA,kBAAA,GACUC,iBAAiB,CAACR,UAAU,CAAX,OAAA,EAD3B,KAC2B,CAD3B;AAAA,QAAA,mBAAA,GAAA,cAAA,CAAA,kBAAA,EAAA,CAAA,CAAA;AAAA,QACEjE,CADF,GAAA,mBAAA,CAAA,CAAA,CAAA;AAAA,QACKC,CADL,GAAA,mBAAA,CAAA,CAAA,CAAA;;AAEL,QAAMyE,KAAK,GAAG3D,QAAQ,CAARA,IAAAA,CAAAA,CAAAA,EAAd,CAAcA,CAAd;AAEA,WAAO,CAAA,KAAA,EAAQ2D,KAAK,KAALA,SAAAA,GAAsBd,KAAK,CAA3Bc,KAA2B,CAA3BA,GAAf,IAAO,CAAP;AALoC,GAAA,EAOxC,CAPJ,QAOI,CAPwC,CAA5C;AASA,MAAMC,gBAAgB,GAAGH,WAAW,CAChC,UAAA,KAAA,EAAS;AAAA,QAAA,qBAAA,GACiBD,wBAAwB,CADzC,KACyC,CADzC;AAAA,QAAA,sBAAA,GAAA,cAAA,CAAA,qBAAA,EAAA,CAAA,CAAA;AAAA,QACEG,KADF,GAAA,sBAAA,CAAA,CAAA,CAAA;AAAA,QACSE,IADT,GAAA,sBAAA,CAAA,CAAA,CAAA;;AAEL,QAAIT,YAAY,KAAhB,KAAA,EAA4BC,eAAe,CAAfA,KAAe,CAAfA;AAC5BQ,IAAAA,IAAI,IAAJA,YAAAA,IAAwBf,YAAY,CAAA,IAAA,EAApCe,KAAoC,CAApCA;AAJ4B,GAAA,EAMhC,CAAA,wBAAA,EANJ,eAMI,CANgC,CAApC;AAQA,MAAMC,eAAe,GAAGL,WAAW,CAC/B,UAAA,KAAA,EAAS;AAAA,QAAA,sBAAA,GACiBD,wBAAwB,CADzC,KACyC,CADzC;AAAA,QAAA,sBAAA,GAAA,cAAA,CAAA,sBAAA,EAAA,CAAA,CAAA;AAAA,QACEG,KADF,GAAA,sBAAA,CAAA,CAAA,CAAA;AAAA,QACSE,IADT,GAAA,sBAAA,CAAA,CAAA,CAAA;;AAEL,QAAIT,YAAY,KAAhB,KAAA,EAA4BC,eAAe,CAAfA,KAAe,CAAfA;AAC5BQ,IAAAA,IAAI,IAAJA,WAAAA,IAAuBd,WAAW,CAAA,IAAA,EAAlCc,KAAkC,CAAlCA;AAJ2B,GAAA,EAM/B,CAAA,wBAAA,EANJ,eAMI,CAN+B,CAAnC;AAQA,MAAME,gBAAgB,GAAGN,WAAW,CAChC,UAAA,KAAA,EAAS;AACLJ,IAAAA,eAAe,CAAfA,IAAe,CAAfA;;AACA,QAAA,YAAA,EAAkB;AACd,UAAA,YAAA;;AACA,UAAID,YAAY,KAAZA,SAAAA,IAA8BA,YAAY,KAA9C,IAAA,EAAyD;AACrDY,QAAAA,YAAY,GAAGnB,KAAK,CAApBmB,YAAoB,CAApBA;AACH;;AACDA,MAAAA,YAAY,IAAIhB,YAAY,CAAA,YAAA,EAA5BgB,KAA4B,CAA5BA;AACH;AAT2B,GAAA,EAWhC,CAAA,eAAA,EAAA,YAAA,EAXJ,KAWI,CAXgC,CAApC;AAaA,MAAMC,WAAW,GAAGR,WAAW,CAC3B,UAAA,KAAA,EAAS;AAAA,QAAA,sBAAA,GACiBD,wBAAwB,CADzC,KACyC,CADzC;AAAA,QAAA,sBAAA,GAAA,cAAA,CAAA,sBAAA,EAAA,CAAA,CAAA;AAAA,QACEG,KADF,GAAA,sBAAA,CAAA,CAAA,CAAA;AAAA,QACSE,IADT,GAAA,sBAAA,CAAA,CAAA,CAAA;;AAEL,QAAIT,YAAY,KAAhB,KAAA,EAA4BC,eAAe,CAAfA,KAAe,CAAfA;AAC5BJ,IAAAA,OAAO,IAAIA,OAAO,CAAA,IAAA,EAAlBA,KAAkB,CAAlBA;AAJuB,GAAA,EAM3B,CAAA,wBAAA,EANJ,eAMI,CAN2B,CAA/B;AASA,SACI,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AAAG,IAAA,GAAG,EAAEC;AAAR,GAAA,EACKX,KAAK,IAAI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,CAAC,EAAP,WAAA;AAAsB,IAAA,MAAM,EAA5B,KAAA;AAAmC,IAAA,WAAW,EAA9C,CAAA;AAAmD,IAAA,OAAO,EAAE;AAA5D,GAAA,CADd,EAEKa,YAAY,KAAZA,IAAAA,IAAAA,KAAAA,IACG,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,IAAI,EAAV,KAAA;AAAiB,IAAA,OAAO,EAAxB,IAAA;AAAgC,IAAA,CAAC,EAAEnD,OAAO,CAAPA,UAAAA,CAAAA,YAAAA;AAAnC,GAAA,CAHR,EAKI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACI,IAAA,KAAK,EADT,KAAA;AAEI,IAAA,MAAM,EAFV,MAAA;AAGI,IAAA,IAAI,EAHR,KAAA;AAII,IAAA,OAAO,EAJX,CAAA;AAKI,IAAA,KAAK,EAAE;AAAEiE,MAAAA,MAAM,EAAE;AAAV,KALX;AAMI,IAAA,YAAY,EANhB,gBAAA;AAOI,IAAA,WAAW,EAPf,eAAA;AAQI,IAAA,YAAY,EARhB,gBAAA;AASI,IAAA,OAAO,EAAED;AATb,GAAA,CALJ,CADJ;AAmBH,C;;AAcDrB,IAAI,CAAJA,YAAAA,GAAoB;AAChB3D,EAAAA,CAAC,EADe,GAAA;AAEhBC,EAAAA,CAAC,EAFe,GAAA;AAGhBqD,EAAAA,KAAK,EAAE;AAHS,CAApBK;;IC9GauB,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAA,GAAA,EAAA,OAAA,EAAkB;AACnDC,EAAAA,GAAG,CAAHA,IAAAA;AAEAA,EAAAA,GAAG,CAAHA,WAAAA,GAAAA,IAAAA;AACAA,EAAAA,GAAG,CAAHA,SAAAA;AACAnE,EAAAA,OAAO,CAAPA,MAAAA,CAAAA,GAAAA;AACAmE,EAAAA,GAAG,CAAHA,WAAAA,GAAAA,KAAAA;AACAA,EAAAA,GAAG,CAAHA,SAAAA,GAAAA,CAAAA;AACAA,EAAAA,GAAG,CAAHA,MAAAA;AAEAA,EAAAA,GAAG,CAAHA,OAAAA;AACH,C;;IAEYC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAA,GAAA,EAAA,OAAA,EAAA,KAAA,EAAyB;AAC9DD,EAAAA,GAAG,CAAHA,IAAAA;AAEAA,EAAAA,GAAG,CAAHA,WAAAA,GAAAA,IAAAA;AACAA,EAAAA,GAAG,CAAHA,SAAAA;AACAnE,EAAAA,OAAO,CAAPA,UAAAA,CAAAA,KAAAA,EAAAA,GAAAA;AACAmE,EAAAA,GAAG,CAAHA,SAAAA,GAAAA,KAAAA;AACAA,EAAAA,GAAG,CAAHA,IAAAA;AAEAA,EAAAA,GAAG,CAAHA,OAAAA;AACH,C","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\n\nexport const VoronoiPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n        })\n    ).isRequired,\n\n    xDomain: PropTypes.arrayOf(PropTypes.number).isRequired,\n    yDomain: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf(['links', 'cells', 'points', 'bounds']),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    enableLinks: PropTypes.bool.isRequired,\n    linkLineWidth: PropTypes.number.isRequired,\n    linkLineColor: PropTypes.string.isRequired,\n\n    enableCells: PropTypes.bool.isRequired,\n    cellLineWidth: PropTypes.number.isRequired,\n    cellLineColor: PropTypes.string.isRequired,\n\n    enablePoints: PropTypes.bool.isRequired,\n    pointSize: PropTypes.number.isRequired,\n    pointColor: PropTypes.string.isRequired,\n\n    delaunay: PropTypes.object.isRequired,\n    voronoi: PropTypes.object.isRequired,\n}\n\nexport const VoronoiDefaultProps = {\n    xDomain: [0, 1],\n    yDomain: [0, 1],\n\n    layers: ['links', 'cells', 'points', 'bounds'],\n\n    enableLinks: false,\n    linkLineWidth: 1,\n    linkLineColor: '#bbb',\n\n    enableCells: true,\n    cellLineWidth: 2,\n    cellLineColor: '#000',\n\n    enablePoints: true,\n    pointSize: 4,\n    pointColor: '#666',\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { scaleLinear } from 'd3-scale'\nimport { Delaunay } from 'd3-delaunay'\nimport compose from 'recompose/compose'\nimport defaultProps from 'recompose/defaultProps'\nimport withPropsOnChange from 'recompose/withPropsOnChange'\nimport pure from 'recompose/pure'\nimport { withTheme, withDimensions } from '@nivo/core'\nimport { VoronoiDefaultProps } from './props'\n\nexport default Component =>\n    compose(\n        defaultProps(VoronoiDefaultProps),\n        withTheme(),\n        withDimensions(),\n        withPropsOnChange(\n            ['xDomain', 'yDomain', 'width', 'height'],\n            ({ xDomain, yDomain, width, height }) => ({\n                xScale: scaleLinear().domain(xDomain).range([0, width]),\n                yScale: scaleLinear().domain(yDomain).range([0, height]),\n            })\n        ),\n        withPropsOnChange(['data', 'xScale', 'yScale'], ({ data, xScale, yScale }) => ({\n            scaledPoints: data.map(d => ({\n                data: d,\n                x: xScale(d.x),\n                y: yScale(d.y),\n            })),\n        })),\n        withPropsOnChange(\n            ['scaledPoints', 'width', 'height'],\n            ({ scaledPoints, width, height }) => {\n                const delaunay = Delaunay.from(scaledPoints.map(p => [p.x, p.y]))\n                const voronoi = delaunay.voronoi([0, 0, width, height])\n\n                return {\n                    delaunay,\n                    voronoi,\n                }\n            }\n        ),\n        pure\n    )(Component)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Fragment } from 'react'\nimport { LegacyContainer, SvgWrapper } from '@nivo/core'\nimport enhance from './enhance'\nimport { VoronoiPropTypes } from './props'\n\nconst Voronoi = ({\n    delaunay,\n    voronoi,\n\n    data,\n    layers,\n\n    margin,\n    width,\n    height,\n    outerWidth,\n    outerHeight,\n\n    enableLinks,\n    linkLineWidth,\n    linkLineColor,\n\n    enableCells,\n    cellLineWidth,\n    cellLineColor,\n\n    enablePoints,\n    pointSize,\n    pointColor,\n\n    theme,\n}) => {\n    const context = {\n        width,\n        height,\n        data,\n        delaunay,\n        voronoi,\n    }\n\n    const layerById = {\n        bounds: (\n            <path\n                key=\"bounds\"\n                fill=\"none\"\n                stroke={cellLineColor}\n                strokeWidth={cellLineWidth}\n                d={voronoi.renderBounds()}\n            />\n        ),\n    }\n    if (enableLinks === true) {\n        layerById.links = (\n            <path\n                key=\"links\"\n                stroke={linkLineColor}\n                strokeWidth={linkLineWidth}\n                fill=\"none\"\n                d={delaunay.render()}\n            />\n        )\n    }\n    if (enableCells === true) {\n        layerById.cells = (\n            <path\n                key=\"cells\"\n                d={voronoi.render()}\n                fill=\"none\"\n                stroke={cellLineColor}\n                strokeWidth={cellLineWidth}\n            />\n        )\n    }\n    if (enablePoints === true) {\n        layerById.points = (\n            <path\n                key=\"points\"\n                stroke=\"none\"\n                fill={pointColor}\n                d={delaunay.renderPoints(undefined, pointSize / 2)}\n            />\n        )\n    }\n\n    return (\n        <LegacyContainer isInteractive={false} theme={theme} animate={false}>\n            {\n                (/*{ showTooltip, hideTooltip }*/) => (\n                    <SvgWrapper\n                        width={outerWidth}\n                        height={outerHeight}\n                        margin={margin}\n                        theme={theme}\n                    >\n                        {layers.map((layer, i) => {\n                            if (typeof layer === 'function') {\n                                return <Fragment key={i}>{layer(context)}</Fragment>\n                            }\n                            return layerById[layer]\n                        })}\n                    </SvgWrapper>\n                )\n            }\n        </LegacyContainer>\n    )\n}\n\nVoronoi.propTypes = VoronoiPropTypes\n\nexport default enhance(Voronoi)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Voronoi from './Voronoi'\n\nconst ResponsiveVoronoi = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Voronoi width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveVoronoi\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { Delaunay } from 'd3-delaunay'\n\nconst getAccessor = directive => (typeof directive === 'function' ? directive : d => d[directive])\n\n/**\n * The delaunay generator requires an array\n * where each point is defined as an array\n * of 2 elements: [x: number, y: number].\n *\n * Points represent the raw input data\n * and x/y represent accessors to x & y.\n */\nexport const computeMeshPoints = ({ points, x = 'x', y = 'y' }) => {\n    const getX = getAccessor(x)\n    const getY = getAccessor(y)\n\n    return points.map(p => [getX(p), getY(p)])\n}\n\nexport const computeMesh = ({ points, width, height, debug }) => {\n    const delaunay = Delaunay.from(points)\n    const voronoi = debug === true ? delaunay.voronoi([0, 0, width, height]) : undefined\n\n    return { delaunay, voronoi }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useMemo } from 'react'\nimport { computeMeshPoints, computeMesh } from './computeMesh'\n\nexport const useVoronoiMesh = ({ points, x, y, width, height, debug }) => {\n    const points2d = useMemo(() => computeMeshPoints({ points, x, y }), [points, x, y])\n\n    return useMemo(() => computeMesh({ points: points2d, width, height, debug }), [\n        points2d,\n        width,\n        height,\n        debug,\n    ])\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useRef, useState, useCallback, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { getRelativeCursor } from '@nivo/core'\nimport { useVoronoiMesh } from './hooks'\n\nconst Mesh = ({\n    nodes,\n    width,\n    height,\n    x,\n    y,\n    debug,\n\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n}) => {\n    const elementRef = useRef(null)\n    const [currentIndex, setCurrentIndex] = useState(null)\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points: nodes,\n        x,\n        y,\n        width,\n        height,\n        debug,\n    })\n    const voronoiPath = useMemo(() => (debug ? voronoi.render() : undefined))\n\n    const getIndexAndNodeFromEvent = useCallback(\n        event => {\n            const [x, y] = getRelativeCursor(elementRef.current, event)\n            const index = delaunay.find(x, y)\n\n            return [index, index !== undefined ? nodes[index] : null]\n        },\n        [delaunay]\n    )\n    const handleMouseEnter = useCallback(\n        event => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            if (currentIndex !== index) setCurrentIndex(index)\n            node && onMouseEnter && onMouseEnter(node, event)\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex]\n    )\n    const handleMouseMove = useCallback(\n        event => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            if (currentIndex !== index) setCurrentIndex(index)\n            node && onMouseMove && onMouseMove(node, event)\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex]\n    )\n    const handleMouseLeave = useCallback(\n        event => {\n            setCurrentIndex(null)\n            if (onMouseLeave) {\n                let previousNode\n                if (currentIndex !== undefined && currentIndex !== null) {\n                    previousNode = nodes[currentIndex]\n                }\n                previousNode && onMouseLeave(previousNode, event)\n            }\n        },\n        [setCurrentIndex, currentIndex, nodes]\n    )\n    const handleClick = useCallback(\n        event => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            if (currentIndex !== index) setCurrentIndex(index)\n            onClick && onClick(node, event)\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex]\n    )\n\n    return (\n        <g ref={elementRef}>\n            {debug && <path d={voronoiPath} stroke=\"red\" strokeWidth={1} opacity={0.75} />}\n            {currentIndex !== null && debug && (\n                <path fill=\"red\" opacity={0.35} d={voronoi.renderCell(currentIndex)} />\n            )}\n            <rect\n                width={width}\n                height={height}\n                fill=\"red\"\n                opacity={0}\n                style={{ cursor: 'auto' }}\n                onMouseEnter={handleMouseEnter}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        </g>\n    )\n}\n\nMesh.propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    nodes: PropTypes.array.isRequired,\n    x: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.func]).isRequired,\n    y: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.func]).isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    debug: PropTypes.bool.isRequired,\n}\nMesh.defaultProps = {\n    x: 'x',\n    y: 'y',\n    debug: false,\n}\n\nexport default Mesh\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport const renderVoronoiToCanvas = (ctx, voronoi) => {\n    ctx.save()\n\n    ctx.globalAlpha = 0.75\n    ctx.beginPath()\n    voronoi.render(ctx)\n    ctx.strokeStyle = 'red'\n    ctx.lineWidth = 1\n    ctx.stroke()\n\n    ctx.restore()\n}\n\nexport const renderVoronoiCellToCanvas = (ctx, voronoi, index) => {\n    ctx.save()\n\n    ctx.globalAlpha = 0.35\n    ctx.beginPath()\n    voronoi.renderCell(index, ctx)\n    ctx.fillStyle = 'red'\n    ctx.fill()\n\n    ctx.restore()\n}\n"]},"metadata":{},"sourceType":"module"}