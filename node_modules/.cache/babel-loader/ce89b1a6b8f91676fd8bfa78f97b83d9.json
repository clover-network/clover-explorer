{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nvar AnimationWrap = function () {\n  function AnimationWrap() {\n    this._storage = [];\n    this._elExistsMap = {};\n  }\n\n  AnimationWrap.prototype.add = function (el, target, duration, delay, easing) {\n    if (this._elExistsMap[el.id]) {\n      return false;\n    }\n\n    this._elExistsMap[el.id] = true;\n\n    this._storage.push({\n      el: el,\n      target: target,\n      duration: duration,\n      delay: delay,\n      easing: easing\n    });\n\n    return true;\n  };\n\n  AnimationWrap.prototype.finished = function (callback) {\n    this._finishedCallback = callback;\n    return this;\n  };\n\n  AnimationWrap.prototype.start = function () {\n    var _this = this;\n\n    var count = this._storage.length;\n\n    var checkTerminate = function () {\n      count--;\n\n      if (count <= 0) {\n        _this._storage.length = 0;\n        _this._elExistsMap = {};\n        _this._finishedCallback && _this._finishedCallback();\n      }\n    };\n\n    for (var i = 0, len = this._storage.length; i < len; i++) {\n      var item = this._storage[i];\n      item.el.animateTo(item.target, {\n        duration: item.duration,\n        delay: item.delay,\n        easing: item.easing,\n        setToFinal: true,\n        done: checkTerminate,\n        aborted: checkTerminate\n      });\n    }\n\n    return this;\n  };\n\n  return AnimationWrap;\n}();\n\nexport function createWrap() {\n  return new AnimationWrap();\n}","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/esm/util/animation.js"],"names":["AnimationWrap","_storage","_elExistsMap","prototype","add","el","target","duration","delay","easing","id","push","finished","callback","_finishedCallback","start","_this","count","length","checkTerminate","i","len","item","animateTo","setToFinal","done","aborted","createWrap"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AAEA,IAAIA,aAAa,GAAG,YAAY;AAC9B,WAASA,aAAT,GAAyB;AACvB,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,YAAL,GAAoB,EAApB;AACD;;AAEDF,EAAAA,aAAa,CAACG,SAAd,CAAwBC,GAAxB,GAA8B,UAAUC,EAAV,EAAcC,MAAd,EAAsBC,QAAtB,EAAgCC,KAAhC,EAAuCC,MAAvC,EAA+C;AAC3E,QAAI,KAAKP,YAAL,CAAkBG,EAAE,CAACK,EAArB,CAAJ,EAA8B;AAC5B,aAAO,KAAP;AACD;;AAED,SAAKR,YAAL,CAAkBG,EAAE,CAACK,EAArB,IAA2B,IAA3B;;AAEA,SAAKT,QAAL,CAAcU,IAAd,CAAmB;AACjBN,MAAAA,EAAE,EAAEA,EADa;AAEjBC,MAAAA,MAAM,EAAEA,MAFS;AAGjBC,MAAAA,QAAQ,EAAEA,QAHO;AAIjBC,MAAAA,KAAK,EAAEA,KAJU;AAKjBC,MAAAA,MAAM,EAAEA;AALS,KAAnB;;AAQA,WAAO,IAAP;AACD,GAhBD;;AAkBAT,EAAAA,aAAa,CAACG,SAAd,CAAwBS,QAAxB,GAAmC,UAAUC,QAAV,EAAoB;AACrD,SAAKC,iBAAL,GAAyBD,QAAzB;AACA,WAAO,IAAP;AACD,GAHD;;AAKAb,EAAAA,aAAa,CAACG,SAAd,CAAwBY,KAAxB,GAAgC,YAAY;AAC1C,QAAIC,KAAK,GAAG,IAAZ;;AAEA,QAAIC,KAAK,GAAG,KAAKhB,QAAL,CAAciB,MAA1B;;AAEA,QAAIC,cAAc,GAAG,YAAY;AAC/BF,MAAAA,KAAK;;AAEL,UAAIA,KAAK,IAAI,CAAb,EAAgB;AACdD,QAAAA,KAAK,CAACf,QAAN,CAAeiB,MAAf,GAAwB,CAAxB;AACAF,QAAAA,KAAK,CAACd,YAAN,GAAqB,EAArB;AACAc,QAAAA,KAAK,CAACF,iBAAN,IAA2BE,KAAK,CAACF,iBAAN,EAA3B;AACD;AACF,KARD;;AAUA,SAAK,IAAIM,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG,KAAKpB,QAAL,CAAciB,MAApC,EAA4CE,CAAC,GAAGC,GAAhD,EAAqDD,CAAC,EAAtD,EAA0D;AACxD,UAAIE,IAAI,GAAG,KAAKrB,QAAL,CAAcmB,CAAd,CAAX;AACAE,MAAAA,IAAI,CAACjB,EAAL,CAAQkB,SAAR,CAAkBD,IAAI,CAAChB,MAAvB,EAA+B;AAC7BC,QAAAA,QAAQ,EAAEe,IAAI,CAACf,QADc;AAE7BC,QAAAA,KAAK,EAAEc,IAAI,CAACd,KAFiB;AAG7BC,QAAAA,MAAM,EAAEa,IAAI,CAACb,MAHgB;AAI7Be,QAAAA,UAAU,EAAE,IAJiB;AAK7BC,QAAAA,IAAI,EAAEN,cALuB;AAM7BO,QAAAA,OAAO,EAAEP;AANoB,OAA/B;AAQD;;AAED,WAAO,IAAP;AACD,GA5BD;;AA8BA,SAAOnB,aAAP;AACD,CA5DmB,EAApB;;AA8DA,OAAO,SAAS2B,UAAT,GAAsB;AAC3B,SAAO,IAAI3B,aAAJ,EAAP;AACD","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nvar AnimationWrap = function () {\n  function AnimationWrap() {\n    this._storage = [];\n    this._elExistsMap = {};\n  }\n\n  AnimationWrap.prototype.add = function (el, target, duration, delay, easing) {\n    if (this._elExistsMap[el.id]) {\n      return false;\n    }\n\n    this._elExistsMap[el.id] = true;\n\n    this._storage.push({\n      el: el,\n      target: target,\n      duration: duration,\n      delay: delay,\n      easing: easing\n    });\n\n    return true;\n  };\n\n  AnimationWrap.prototype.finished = function (callback) {\n    this._finishedCallback = callback;\n    return this;\n  };\n\n  AnimationWrap.prototype.start = function () {\n    var _this = this;\n\n    var count = this._storage.length;\n\n    var checkTerminate = function () {\n      count--;\n\n      if (count <= 0) {\n        _this._storage.length = 0;\n        _this._elExistsMap = {};\n        _this._finishedCallback && _this._finishedCallback();\n      }\n    };\n\n    for (var i = 0, len = this._storage.length; i < len; i++) {\n      var item = this._storage[i];\n      item.el.animateTo(item.target, {\n        duration: item.duration,\n        delay: item.delay,\n        easing: item.easing,\n        setToFinal: true,\n        done: checkTerminate,\n        aborted: checkTerminate\n      });\n    }\n\n    return this;\n  };\n\n  return AnimationWrap;\n}();\n\nexport function createWrap() {\n  return new AnimationWrap();\n}"]},"metadata":{},"sourceType":"module"}