{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar each_1 = require(\"@antv/util/lib/each\");\n\nvar is_array_1 = require(\"@antv/util/lib/is-array\");\n\nvar is_string_1 = require(\"@antv/util/lib/is-string\");\n\nvar regexTags = /[MLHVQTCSAZ]([^MLHVQTCSAZ]*)/ig;\nvar regexDot = /[^\\s\\,]+/ig;\n\nfunction parsePath(p) {\n  var path = p || [];\n\n  if (is_array_1.default(path)) {\n    return path;\n  }\n\n  if (is_string_1.default(path)) {\n    path = path.match(regexTags);\n    each_1.default(path, function (item, index) {\n      // @ts-ignore\n      item = item.match(regexDot);\n\n      if (item[0].length > 1) {\n        var tag = item[0].charAt(0); // @ts-ignore\n\n        item.splice(1, 0, item[0].substr(1)); // @ts-ignore\n\n        item[0] = tag;\n      } // @ts-ignore\n\n\n      each_1.default(item, function (sub, i) {\n        if (!isNaN(sub)) {\n          // @ts-ignore\n          item[i] = +sub;\n        }\n      }); // @ts-ignore\n\n      path[index] = item;\n    });\n    return path;\n  }\n}\n\nexports.default = parsePath;","map":{"version":3,"sources":["../src/parse-path.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AAEA,IAAM,SAAS,GAAG,gCAAlB;AACA,IAAM,QAAQ,GAAG,YAAjB;;AAEA,SAAS,SAAT,CAAmB,CAAnB,EAA4B;AAC1B,MAAI,IAAI,GAAG,CAAC,IAAI,EAAhB;;AACA,MAAI,UAAA,CAAA,OAAA,CAAQ,IAAR,CAAJ,EAAmB;AACjB,WAAO,IAAP;AACD;;AAED,MAAI,WAAA,CAAA,OAAA,CAAS,IAAT,CAAJ,EAAoB;AAClB,IAAA,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,SAAX,CAAP;AACA,IAAA,MAAA,CAAA,OAAA,CAAK,IAAL,EAAW,UAAC,IAAD,EAAO,KAAP,EAAY;AACrB;AACA,MAAA,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,QAAX,CAAP;;AACA,UAAI,IAAI,CAAC,CAAD,CAAJ,CAAQ,MAAR,GAAiB,CAArB,EAAwB;AACtB,YAAM,GAAG,GAAG,IAAI,CAAC,CAAD,CAAJ,CAAQ,MAAR,CAAe,CAAf,CAAZ,CADsB,CAEtB;;AACA,QAAA,IAAI,CAAC,MAAL,CAAY,CAAZ,EAAe,CAAf,EAAkB,IAAI,CAAC,CAAD,CAAJ,CAAQ,MAAR,CAAe,CAAf,CAAlB,EAHsB,CAItB;;AACA,QAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,GAAV;AACD,OAToB,CAUrB;;;AACA,MAAA,MAAA,CAAA,OAAA,CAAK,IAAL,EAAW,UAAU,GAAV,EAAe,CAAf,EAAgB;AACzB,YAAI,CAAC,KAAK,CAAC,GAAD,CAAV,EAAiB;AACf;AACA,UAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAC,GAAX;AACD;AACF,OALD,EAXqB,CAiBrB;;AACA,MAAA,IAAI,CAAC,KAAD,CAAJ,GAAc,IAAd;AACD,KAnBD;AAoBA,WAAO,IAAP;AACD;AACF;;AAED,OAAA,CAAA,OAAA,GAAe,SAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar each_1 = require(\"@antv/util/lib/each\");\nvar is_array_1 = require(\"@antv/util/lib/is-array\");\nvar is_string_1 = require(\"@antv/util/lib/is-string\");\nvar regexTags = /[MLHVQTCSAZ]([^MLHVQTCSAZ]*)/ig;\nvar regexDot = /[^\\s\\,]+/ig;\nfunction parsePath(p) {\n    var path = p || [];\n    if (is_array_1.default(path)) {\n        return path;\n    }\n    if (is_string_1.default(path)) {\n        path = path.match(regexTags);\n        each_1.default(path, function (item, index) {\n            // @ts-ignore\n            item = item.match(regexDot);\n            if (item[0].length > 1) {\n                var tag = item[0].charAt(0);\n                // @ts-ignore\n                item.splice(1, 0, item[0].substr(1));\n                // @ts-ignore\n                item[0] = tag;\n            }\n            // @ts-ignore\n            each_1.default(item, function (sub, i) {\n                if (!isNaN(sub)) {\n                    // @ts-ignore\n                    item[i] = +sub;\n                }\n            });\n            // @ts-ignore\n            path[index] = item;\n        });\n        return path;\n    }\n}\nexports.default = parsePath;\n//# sourceMappingURL=parse-path.js.map"]},"metadata":{},"sourceType":"script"}