{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env_1 = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar Component_1 = require(\"./Component\");\n\nvar palette_1 = require(\"./mixin/palette\");\n\nvar dataFormat_1 = require(\"../model/mixin/dataFormat\");\n\nvar layout_1 = require(\"../util/layout\");\n\nvar task_1 = require(\"../stream/task\");\n\nvar clazz_1 = require(\"../util/clazz\");\n\nvar sourceManager_1 = require(\"../data/helper/sourceManager\");\n\nvar seriesFormatTooltip_1 = require(\"../component/tooltip/seriesFormatTooltip\");\n\nvar inner = modelUtil.makeInner();\n\nfunction getSelectionKey(data, dataIndex) {\n  return data.getName(dataIndex) || data.getId(dataIndex);\n}\n\nvar SeriesModel = function (_super) {\n  tslib_1.__extends(SeriesModel, _super);\n\n  function SeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._selectedDataIndicesMap = {};\n    return _this;\n  }\n\n  SeriesModel.prototype.init = function (option, parentModel, ecModel) {\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = task_1.createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    var sourceManager = inner(this).sourceManager = new sourceManager_1.SourceManager(this);\n    sourceManager.prepareSource();\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n\n    if (process.env.NODE_ENV !== 'production') {\n      zrUtil.assert(data, 'getInitialData returned invalid data.');\n    }\n\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n\n    this._initSelectedMapFromData(data);\n  };\n\n  SeriesModel.prototype.mergeDefaultAndTheme = function (option, ecModel) {\n    var layoutMode = layout_1.fetchLayoutMode(this);\n    var inputPositionParams = layoutMode ? layout_1.getLayoutParams(option) : {};\n    var themeSubType = this.subType;\n\n    if (Component_1[\"default\"].hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption());\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      layout_1.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  };\n\n  SeriesModel.prototype.mergeOption = function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = layout_1.fetchLayoutMode(this);\n\n    if (layoutMode) {\n      layout_1.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var sourceManager = inner(this).sourceManager;\n    sourceManager.dirty();\n    sourceManager.prepareSource();\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n\n    this._initSelectedMapFromData(data);\n  };\n\n  SeriesModel.prototype.fillDataTextStyle = function (data) {\n    if (data && !zrUtil.isTypedArray(data)) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  };\n\n  SeriesModel.prototype.getInitialData = function (option, ecModel) {\n    return;\n  };\n\n  SeriesModel.prototype.appendData = function (params) {\n    var data = this.getRawData();\n    data.appendData(params.data);\n  };\n\n  SeriesModel.prototype.getData = function (dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      return inner(this).data;\n    }\n  };\n\n  SeriesModel.prototype.getAllData = function () {\n    var mainData = this.getData();\n    return mainData && mainData.getLinkedDataAll ? mainData.getLinkedDataAll() : [{\n      data: mainData\n    }];\n  };\n\n  SeriesModel.prototype.setData = function (data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context;\n      context.outputData = data;\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  };\n\n  SeriesModel.prototype.getSource = function () {\n    return inner(this).sourceManager.getSource();\n  };\n\n  SeriesModel.prototype.getRawData = function () {\n    return inner(this).dataBeforeProcessed;\n  };\n\n  SeriesModel.prototype.getBaseAxis = function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  };\n\n  SeriesModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\n    return seriesFormatTooltip_1.defaultSeriesFormatTooltip({\n      series: this,\n      dataIndex: dataIndex,\n      multipleSeries: multipleSeries\n    });\n  };\n\n  SeriesModel.prototype.isAnimationEnabled = function () {\n    if (env_1[\"default\"].node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return !!animationEnabled;\n  };\n\n  SeriesModel.prototype.restoreData = function () {\n    this.dataTask.dirty();\n  };\n\n  SeriesModel.prototype.getColorFromPalette = function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel;\n    var color = palette_1.PaletteMixin.prototype.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  };\n\n  SeriesModel.prototype.coordDimToDataDim = function (coordDim) {\n    return this.getRawData().mapDimensionsAll(coordDim);\n  };\n\n  SeriesModel.prototype.getProgressive = function () {\n    return this.get('progressive');\n  };\n\n  SeriesModel.prototype.getProgressiveThreshold = function () {\n    return this.get('progressiveThreshold');\n  };\n\n  SeriesModel.prototype.select = function (innerDataIndices, dataType) {\n    this._innerSelect(this.getData(dataType), innerDataIndices);\n  };\n\n  SeriesModel.prototype.unselect = function (innerDataIndices, dataType) {\n    var selectedMap = this.option.selectedMap;\n\n    if (!selectedMap) {\n      return;\n    }\n\n    var data = this.getData(dataType);\n\n    for (var i = 0; i < innerDataIndices.length; i++) {\n      var dataIndex = innerDataIndices[i];\n      var nameOrId = getSelectionKey(data, dataIndex);\n      selectedMap[nameOrId] = false;\n      this._selectedDataIndicesMap[nameOrId] = -1;\n    }\n  };\n\n  SeriesModel.prototype.toggleSelect = function (innerDataIndices, dataType) {\n    var tmpArr = [];\n\n    for (var i = 0; i < innerDataIndices.length; i++) {\n      tmpArr[0] = innerDataIndices[i];\n      this.isSelected(innerDataIndices[i], dataType) ? this.unselect(tmpArr, dataType) : this.select(tmpArr, dataType);\n    }\n  };\n\n  SeriesModel.prototype.getSelectedDataIndices = function () {\n    var selectedDataIndicesMap = this._selectedDataIndicesMap;\n    var nameOrIds = zrUtil.keys(selectedDataIndicesMap);\n    var dataIndices = [];\n\n    for (var i = 0; i < nameOrIds.length; i++) {\n      var dataIndex = selectedDataIndicesMap[nameOrIds[i]];\n\n      if (dataIndex >= 0) {\n        dataIndices.push(dataIndex);\n      }\n    }\n\n    return dataIndices;\n  };\n\n  SeriesModel.prototype.isSelected = function (dataIndex, dataType) {\n    var selectedMap = this.option.selectedMap;\n\n    if (!selectedMap) {\n      return false;\n    }\n\n    var data = this.getData(dataType);\n    var nameOrId = getSelectionKey(data, dataIndex);\n    return selectedMap[nameOrId] || false;\n  };\n\n  SeriesModel.prototype._innerSelect = function (data, innerDataIndices) {\n    var _a, _b;\n\n    var selectedMode = this.option.selectedMode;\n    var len = innerDataIndices.length;\n\n    if (!selectedMode || !len) {\n      return;\n    }\n\n    if (selectedMode === 'multiple') {\n      var selectedMap = this.option.selectedMap || (this.option.selectedMap = {});\n\n      for (var i = 0; i < len; i++) {\n        var dataIndex = innerDataIndices[i];\n        var nameOrId = getSelectionKey(data, dataIndex);\n        selectedMap[nameOrId] = true;\n        this._selectedDataIndicesMap[nameOrId] = data.getRawIndex(dataIndex);\n      }\n    } else if (selectedMode === 'single' || selectedMode === true) {\n      var lastDataIndex = innerDataIndices[len - 1];\n      var nameOrId = getSelectionKey(data, lastDataIndex);\n      this.option.selectedMap = (_a = {}, _a[nameOrId] = true, _a);\n      this._selectedDataIndicesMap = (_b = {}, _b[nameOrId] = data.getRawIndex(lastDataIndex), _b);\n    }\n  };\n\n  SeriesModel.prototype._initSelectedMapFromData = function (data) {\n    if (this.option.selectedMap) {\n      return;\n    }\n\n    var dataIndices = [];\n\n    if (data.hasItemOption) {\n      data.each(function (idx) {\n        var rawItem = data.getRawDataItem(idx);\n\n        if (typeof rawItem === 'object' && rawItem.selected) {\n          dataIndices.push(idx);\n        }\n      });\n    }\n\n    if (dataIndices.length > 0) {\n      this._innerSelect(data, dataIndices);\n    }\n  };\n\n  SeriesModel.registerClass = function (clz) {\n    return Component_1[\"default\"].registerClass(clz);\n  };\n\n  SeriesModel.protoInitialize = function () {\n    var proto = SeriesModel.prototype;\n    proto.type = 'series.__base__';\n    proto.seriesIndex = 0;\n    proto.useColorPaletteOnData = false;\n    proto.ignoreStyleOnData = false;\n    proto.hasSymbolVisual = false;\n    proto.defaultSymbol = 'circle';\n    proto.visualStyleAccessPath = 'itemStyle';\n    proto.visualDrawType = 'fill';\n  }();\n\n  return SeriesModel;\n}(Component_1[\"default\"]);\n\nzrUtil.mixin(SeriesModel, dataFormat_1.DataFormatMixin);\nzrUtil.mixin(SeriesModel, palette_1.PaletteMixin);\nclazz_1.mountExtend(SeriesModel, Component_1[\"default\"]);\n\nfunction autoSeriesName(seriesModel) {\n  var name = seriesModel.name;\n\n  if (!modelUtil.isNameSpecified(seriesModel)) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimensionsAll('seriesName');\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  if (context.outputData && param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n}\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(tslib_1.__spreadArrays(data.CHANGABLE_METHODS, data.DOWNSAMPLE_METHODS), function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataChange, seriesModel));\n  });\n}\n\nfunction onDataChange(seriesModel, newList) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    task.setOutputEnd((newList || this).count());\n  }\n\n  return newList;\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nexports[\"default\"] = SeriesModel;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/model/Series.js"],"names":["exports","__esModule","tslib_1","require","zrUtil","env_1","modelUtil","Component_1","palette_1","dataFormat_1","layout_1","task_1","clazz_1","sourceManager_1","seriesFormatTooltip_1","inner","makeInner","getSelectionKey","data","dataIndex","getName","getId","SeriesModel","_super","__extends","_this","apply","arguments","_selectedDataIndicesMap","prototype","init","option","parentModel","ecModel","seriesIndex","componentIndex","dataTask","createTask","count","dataTaskCount","reset","dataTaskReset","context","model","mergeDefaultAndTheme","sourceManager","SourceManager","prepareSource","getInitialData","wrapData","process","env","NODE_ENV","assert","dataBeforeProcessed","autoSeriesName","_initSelectedMapFromData","layoutMode","fetchLayoutMode","inputPositionParams","getLayoutParams","themeSubType","subType","hasClass","merge","getTheme","get","getDefaultOption","defaultEmphasis","fillDataTextStyle","mergeLayoutParam","mergeOption","newSeriesOption","dirty","isTypedArray","props","i","length","label","appendData","params","getRawData","getData","dataType","task","getCurrentTask","getLinkedData","getAllData","mainData","getLinkedDataAll","setData","outputData","getSource","getBaseAxis","coordSys","coordinateSystem","formatTooltip","multipleSeries","defaultSeriesFormatTooltip","series","isAnimationEnabled","node","animationEnabled","getShallow","restoreData","getColorFromPalette","name","scope","requestColorNum","color","PaletteMixin","call","coordDimToDataDim","coordDim","mapDimensionsAll","getProgressive","getProgressiveThreshold","select","innerDataIndices","_innerSelect","unselect","selectedMap","nameOrId","toggleSelect","tmpArr","isSelected","getSelectedDataIndices","selectedDataIndicesMap","nameOrIds","keys","dataIndices","push","_a","_b","selectedMode","len","getRawIndex","lastDataIndex","hasItemOption","each","idx","rawItem","getRawDataItem","selected","registerClass","clz","protoInitialize","proto","type","useColorPaletteOnData","ignoreStyleOnData","hasSymbolVisual","defaultSymbol","visualStyleAccessPath","visualDrawType","mixin","DataFormatMixin","mountExtend","seriesModel","isNameSpecified","getSeriesAutoName","dataDims","nameArr","dataDim","dimInfo","getDimensionInfo","displayName","join","cloneShallow","dataTaskProgress","param","end","__spreadArrays","CHANGABLE_METHODS","DOWNSAMPLE_METHODS","methodName","wrapMethod","curry","onDataChange","newList","setOutputEnd","scheduler","pipeline","getPipeline","uid","currentTask","agentStubMap"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env_1 = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar Component_1 = require(\"./Component\");\n\nvar palette_1 = require(\"./mixin/palette\");\n\nvar dataFormat_1 = require(\"../model/mixin/dataFormat\");\n\nvar layout_1 = require(\"../util/layout\");\n\nvar task_1 = require(\"../stream/task\");\n\nvar clazz_1 = require(\"../util/clazz\");\n\nvar sourceManager_1 = require(\"../data/helper/sourceManager\");\n\nvar seriesFormatTooltip_1 = require(\"../component/tooltip/seriesFormatTooltip\");\n\nvar inner = modelUtil.makeInner();\n\nfunction getSelectionKey(data, dataIndex) {\n  return data.getName(dataIndex) || data.getId(dataIndex);\n}\n\nvar SeriesModel = function (_super) {\n  tslib_1.__extends(SeriesModel, _super);\n\n  function SeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._selectedDataIndicesMap = {};\n    return _this;\n  }\n\n  SeriesModel.prototype.init = function (option, parentModel, ecModel) {\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = task_1.createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    var sourceManager = inner(this).sourceManager = new sourceManager_1.SourceManager(this);\n    sourceManager.prepareSource();\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n\n    if (process.env.NODE_ENV !== 'production') {\n      zrUtil.assert(data, 'getInitialData returned invalid data.');\n    }\n\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n\n    this._initSelectedMapFromData(data);\n  };\n\n  SeriesModel.prototype.mergeDefaultAndTheme = function (option, ecModel) {\n    var layoutMode = layout_1.fetchLayoutMode(this);\n    var inputPositionParams = layoutMode ? layout_1.getLayoutParams(option) : {};\n    var themeSubType = this.subType;\n\n    if (Component_1[\"default\"].hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption());\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      layout_1.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  };\n\n  SeriesModel.prototype.mergeOption = function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = layout_1.fetchLayoutMode(this);\n\n    if (layoutMode) {\n      layout_1.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var sourceManager = inner(this).sourceManager;\n    sourceManager.dirty();\n    sourceManager.prepareSource();\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n\n    this._initSelectedMapFromData(data);\n  };\n\n  SeriesModel.prototype.fillDataTextStyle = function (data) {\n    if (data && !zrUtil.isTypedArray(data)) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  };\n\n  SeriesModel.prototype.getInitialData = function (option, ecModel) {\n    return;\n  };\n\n  SeriesModel.prototype.appendData = function (params) {\n    var data = this.getRawData();\n    data.appendData(params.data);\n  };\n\n  SeriesModel.prototype.getData = function (dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      return inner(this).data;\n    }\n  };\n\n  SeriesModel.prototype.getAllData = function () {\n    var mainData = this.getData();\n    return mainData && mainData.getLinkedDataAll ? mainData.getLinkedDataAll() : [{\n      data: mainData\n    }];\n  };\n\n  SeriesModel.prototype.setData = function (data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context;\n      context.outputData = data;\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  };\n\n  SeriesModel.prototype.getSource = function () {\n    return inner(this).sourceManager.getSource();\n  };\n\n  SeriesModel.prototype.getRawData = function () {\n    return inner(this).dataBeforeProcessed;\n  };\n\n  SeriesModel.prototype.getBaseAxis = function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  };\n\n  SeriesModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\n    return seriesFormatTooltip_1.defaultSeriesFormatTooltip({\n      series: this,\n      dataIndex: dataIndex,\n      multipleSeries: multipleSeries\n    });\n  };\n\n  SeriesModel.prototype.isAnimationEnabled = function () {\n    if (env_1[\"default\"].node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return !!animationEnabled;\n  };\n\n  SeriesModel.prototype.restoreData = function () {\n    this.dataTask.dirty();\n  };\n\n  SeriesModel.prototype.getColorFromPalette = function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel;\n    var color = palette_1.PaletteMixin.prototype.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  };\n\n  SeriesModel.prototype.coordDimToDataDim = function (coordDim) {\n    return this.getRawData().mapDimensionsAll(coordDim);\n  };\n\n  SeriesModel.prototype.getProgressive = function () {\n    return this.get('progressive');\n  };\n\n  SeriesModel.prototype.getProgressiveThreshold = function () {\n    return this.get('progressiveThreshold');\n  };\n\n  SeriesModel.prototype.select = function (innerDataIndices, dataType) {\n    this._innerSelect(this.getData(dataType), innerDataIndices);\n  };\n\n  SeriesModel.prototype.unselect = function (innerDataIndices, dataType) {\n    var selectedMap = this.option.selectedMap;\n\n    if (!selectedMap) {\n      return;\n    }\n\n    var data = this.getData(dataType);\n\n    for (var i = 0; i < innerDataIndices.length; i++) {\n      var dataIndex = innerDataIndices[i];\n      var nameOrId = getSelectionKey(data, dataIndex);\n      selectedMap[nameOrId] = false;\n      this._selectedDataIndicesMap[nameOrId] = -1;\n    }\n  };\n\n  SeriesModel.prototype.toggleSelect = function (innerDataIndices, dataType) {\n    var tmpArr = [];\n\n    for (var i = 0; i < innerDataIndices.length; i++) {\n      tmpArr[0] = innerDataIndices[i];\n      this.isSelected(innerDataIndices[i], dataType) ? this.unselect(tmpArr, dataType) : this.select(tmpArr, dataType);\n    }\n  };\n\n  SeriesModel.prototype.getSelectedDataIndices = function () {\n    var selectedDataIndicesMap = this._selectedDataIndicesMap;\n    var nameOrIds = zrUtil.keys(selectedDataIndicesMap);\n    var dataIndices = [];\n\n    for (var i = 0; i < nameOrIds.length; i++) {\n      var dataIndex = selectedDataIndicesMap[nameOrIds[i]];\n\n      if (dataIndex >= 0) {\n        dataIndices.push(dataIndex);\n      }\n    }\n\n    return dataIndices;\n  };\n\n  SeriesModel.prototype.isSelected = function (dataIndex, dataType) {\n    var selectedMap = this.option.selectedMap;\n\n    if (!selectedMap) {\n      return false;\n    }\n\n    var data = this.getData(dataType);\n    var nameOrId = getSelectionKey(data, dataIndex);\n    return selectedMap[nameOrId] || false;\n  };\n\n  SeriesModel.prototype._innerSelect = function (data, innerDataIndices) {\n    var _a, _b;\n\n    var selectedMode = this.option.selectedMode;\n    var len = innerDataIndices.length;\n\n    if (!selectedMode || !len) {\n      return;\n    }\n\n    if (selectedMode === 'multiple') {\n      var selectedMap = this.option.selectedMap || (this.option.selectedMap = {});\n\n      for (var i = 0; i < len; i++) {\n        var dataIndex = innerDataIndices[i];\n        var nameOrId = getSelectionKey(data, dataIndex);\n        selectedMap[nameOrId] = true;\n        this._selectedDataIndicesMap[nameOrId] = data.getRawIndex(dataIndex);\n      }\n    } else if (selectedMode === 'single' || selectedMode === true) {\n      var lastDataIndex = innerDataIndices[len - 1];\n      var nameOrId = getSelectionKey(data, lastDataIndex);\n      this.option.selectedMap = (_a = {}, _a[nameOrId] = true, _a);\n      this._selectedDataIndicesMap = (_b = {}, _b[nameOrId] = data.getRawIndex(lastDataIndex), _b);\n    }\n  };\n\n  SeriesModel.prototype._initSelectedMapFromData = function (data) {\n    if (this.option.selectedMap) {\n      return;\n    }\n\n    var dataIndices = [];\n\n    if (data.hasItemOption) {\n      data.each(function (idx) {\n        var rawItem = data.getRawDataItem(idx);\n\n        if (typeof rawItem === 'object' && rawItem.selected) {\n          dataIndices.push(idx);\n        }\n      });\n    }\n\n    if (dataIndices.length > 0) {\n      this._innerSelect(data, dataIndices);\n    }\n  };\n\n  SeriesModel.registerClass = function (clz) {\n    return Component_1[\"default\"].registerClass(clz);\n  };\n\n  SeriesModel.protoInitialize = function () {\n    var proto = SeriesModel.prototype;\n    proto.type = 'series.__base__';\n    proto.seriesIndex = 0;\n    proto.useColorPaletteOnData = false;\n    proto.ignoreStyleOnData = false;\n    proto.hasSymbolVisual = false;\n    proto.defaultSymbol = 'circle';\n    proto.visualStyleAccessPath = 'itemStyle';\n    proto.visualDrawType = 'fill';\n  }();\n\n  return SeriesModel;\n}(Component_1[\"default\"]);\n\nzrUtil.mixin(SeriesModel, dataFormat_1.DataFormatMixin);\nzrUtil.mixin(SeriesModel, palette_1.PaletteMixin);\nclazz_1.mountExtend(SeriesModel, Component_1[\"default\"]);\n\nfunction autoSeriesName(seriesModel) {\n  var name = seriesModel.name;\n\n  if (!modelUtil.isNameSpecified(seriesModel)) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimensionsAll('seriesName');\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  if (context.outputData && param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n}\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(tslib_1.__spreadArrays(data.CHANGABLE_METHODS, data.DOWNSAMPLE_METHODS), function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataChange, seriesModel));\n  });\n}\n\nfunction onDataChange(seriesModel, newList) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    task.setOutputEnd((newList || this).count());\n  }\n\n  return newList;\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nexports[\"default\"] = SeriesModel;"]},"metadata":{},"sourceType":"script"}