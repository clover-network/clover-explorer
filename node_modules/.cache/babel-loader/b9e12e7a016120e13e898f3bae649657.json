{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nimport * as zrUtil from 'zrender/esm/core/util';\nimport * as graphic from '../util/graphic';\nimport * as textContain from 'zrender/esm/contain/text';\nvar PI = Math.PI;\nexport default function defaultLoading(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    textColor: '#000',\n    fontSize: '12px',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    showSpinner: true,\n    color: '#5470c6',\n    spinnerRadius: 10,\n    lineWidth: 5,\n    zlevel: 0\n  });\n  var group = new graphic.Group();\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  group.add(mask);\n  var font = opts.fontSize + ' sans-serif';\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none'\n    },\n    textContent: new graphic.Text({\n      style: {\n        text: opts.text,\n        fill: opts.textColor,\n        font: font\n      }\n    }),\n    textConfig: {\n      position: 'right',\n      distance: 10\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  group.add(labelRect);\n  var arc;\n\n  if (opts.showSpinner) {\n    arc = new graphic.Arc({\n      shape: {\n        startAngle: -PI / 2,\n        endAngle: -PI / 2 + 0.1,\n        r: opts.spinnerRadius\n      },\n      style: {\n        stroke: opts.color,\n        lineCap: 'round',\n        lineWidth: opts.lineWidth\n      },\n      zlevel: opts.zlevel,\n      z: 10001\n    });\n    arc.animateShape(true).when(1000, {\n      endAngle: PI * 3 / 2\n    }).start('circularInOut');\n    arc.animateShape(true).when(1000, {\n      startAngle: PI * 3 / 2\n    }).delay(300).start('circularInOut');\n    group.add(arc);\n  }\n\n  group.resize = function () {\n    var textWidth = textContain.getWidth(opts.text, font);\n    var r = opts.showSpinner ? opts.spinnerRadius : 0;\n    var cx = (api.getWidth() - r * 2 - (opts.showSpinner && textWidth ? 10 : 0) - textWidth) / 2 - (opts.showSpinner ? 0 : textWidth / 2);\n    var cy = api.getHeight() / 2;\n    opts.showSpinner && arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/esm/loading/default.js"],"names":["zrUtil","graphic","textContain","PI","Math","defaultLoading","api","opts","defaults","text","textColor","fontSize","maskColor","showSpinner","color","spinnerRadius","lineWidth","zlevel","group","Group","mask","Rect","style","fill","z","add","font","labelRect","textContent","Text","textConfig","position","distance","arc","Arc","shape","startAngle","endAngle","r","stroke","lineCap","animateShape","when","start","delay","resize","textWidth","getWidth","cx","cy","getHeight","setShape","x","y","width","height"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport * as zrUtil from 'zrender/esm/core/util';\nimport * as graphic from '../util/graphic';\nimport * as textContain from 'zrender/esm/contain/text';\nvar PI = Math.PI;\nexport default function defaultLoading(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    textColor: '#000',\n    fontSize: '12px',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    showSpinner: true,\n    color: '#5470c6',\n    spinnerRadius: 10,\n    lineWidth: 5,\n    zlevel: 0\n  });\n  var group = new graphic.Group();\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  group.add(mask);\n  var font = opts.fontSize + ' sans-serif';\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none'\n    },\n    textContent: new graphic.Text({\n      style: {\n        text: opts.text,\n        fill: opts.textColor,\n        font: font\n      }\n    }),\n    textConfig: {\n      position: 'right',\n      distance: 10\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  group.add(labelRect);\n  var arc;\n\n  if (opts.showSpinner) {\n    arc = new graphic.Arc({\n      shape: {\n        startAngle: -PI / 2,\n        endAngle: -PI / 2 + 0.1,\n        r: opts.spinnerRadius\n      },\n      style: {\n        stroke: opts.color,\n        lineCap: 'round',\n        lineWidth: opts.lineWidth\n      },\n      zlevel: opts.zlevel,\n      z: 10001\n    });\n    arc.animateShape(true).when(1000, {\n      endAngle: PI * 3 / 2\n    }).start('circularInOut');\n    arc.animateShape(true).when(1000, {\n      startAngle: PI * 3 / 2\n    }).delay(300).start('circularInOut');\n    group.add(arc);\n  }\n\n  group.resize = function () {\n    var textWidth = textContain.getWidth(opts.text, font);\n    var r = opts.showSpinner ? opts.spinnerRadius : 0;\n    var cx = (api.getWidth() - r * 2 - (opts.showSpinner && textWidth ? 10 : 0) - textWidth) / 2 - (opts.showSpinner ? 0 : textWidth / 2);\n    var cy = api.getHeight() / 2;\n    opts.showSpinner && arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}"]},"metadata":{},"sourceType":"module"}