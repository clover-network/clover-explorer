{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar parseText_1 = require(\"./helper/parseText\");\n\nvar TSpan_1 = require(\"./TSpan\");\n\nvar util_1 = require(\"../core/util\");\n\nvar text_1 = require(\"../contain/text\");\n\nvar Image_1 = require(\"./Image\");\n\nvar Rect_1 = require(\"./shape/Rect\");\n\nvar BoundingRect_1 = require(\"../core/BoundingRect\");\n\nvar matrix_1 = require(\"../core/matrix\");\n\nvar Displayable_1 = require(\"./Displayable\");\n\nvar DEFAULT_RICH_TEXT_COLOR = {\n  fill: '#000'\n};\nvar DEFAULT_STROKE_LINE_WIDTH = 2;\nexports.DEFAULT_TEXT_ANIMATION_PROPS = {\n  style: util_1.defaults({\n    fill: true,\n    stroke: true,\n    fillOpacity: true,\n    strokeOpacity: true,\n    lineWidth: true,\n    fontSize: true,\n    lineHeight: true,\n    width: true,\n    height: true,\n    textShadowColor: true,\n    textShadowBlur: true,\n    textShadowOffsetX: true,\n    textShadowOffsetY: true,\n    backgroundColor: true,\n    padding: true,\n    borderColor: true,\n    borderWidth: true,\n    borderRadius: true\n  }, Displayable_1.DEFAULT_COMMON_ANIMATION_PROPS.style)\n};\n\nvar ZRText = function (_super) {\n  tslib_1.__extends(ZRText, _super);\n\n  function ZRText(opts) {\n    var _this = _super.call(this) || this;\n\n    _this.type = 'text';\n    _this._children = [];\n    _this._defaultStyle = DEFAULT_RICH_TEXT_COLOR;\n\n    _this.attr(opts);\n\n    return _this;\n  }\n\n  ZRText.prototype.childrenRef = function () {\n    return this._children;\n  };\n\n  ZRText.prototype.update = function () {\n    if (this.styleChanged()) {\n      this._updateSubTexts();\n    }\n\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      child.zlevel = this.zlevel;\n      child.z = this.z;\n      child.z2 = this.z2;\n      child.culling = this.culling;\n      child.cursor = this.cursor;\n      child.invisible = this.invisible;\n    }\n\n    var attachedTransform = this.attachedTransform;\n\n    if (attachedTransform) {\n      attachedTransform.updateTransform();\n      var m = attachedTransform.transform;\n\n      if (m) {\n        this.transform = this.transform || [];\n        matrix_1.copy(this.transform, m);\n      } else {\n        this.transform = null;\n      }\n    } else {\n      _super.prototype.update.call(this);\n    }\n  };\n\n  ZRText.prototype.getComputedTransform = function () {\n    if (this.__hostTarget) {\n      this.__hostTarget.getComputedTransform();\n\n      this.__hostTarget.updateInnerText(true);\n    }\n\n    return this.attachedTransform ? this.attachedTransform.getComputedTransform() : _super.prototype.getComputedTransform.call(this);\n  };\n\n  ZRText.prototype._updateSubTexts = function () {\n    this._childCursor = 0;\n    normalizeTextStyle(this.style);\n    this.style.rich ? this._updateRichTexts() : this._updatePlainTexts();\n    this._children.length = this._childCursor;\n    this.styleUpdated();\n  };\n\n  ZRText.prototype.addSelfToZr = function (zr) {\n    _super.prototype.addSelfToZr.call(this, zr);\n\n    for (var i = 0; i < this._children.length; i++) {\n      this._children[i].__zr = zr;\n    }\n  };\n\n  ZRText.prototype.removeSelfFromZr = function (zr) {\n    _super.prototype.removeSelfFromZr.call(this, zr);\n\n    for (var i = 0; i < this._children.length; i++) {\n      this._children[i].__zr = null;\n    }\n  };\n\n  ZRText.prototype.getBoundingRect = function () {\n    if (this.styleChanged()) {\n      this._updateSubTexts();\n    }\n\n    if (!this._rect) {\n      var tmpRect = new BoundingRect_1[\"default\"](0, 0, 0, 0);\n      var children = this._children;\n      var tmpMat = [];\n      var rect = null;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i];\n        var childRect = child.getBoundingRect();\n        var transform = child.getLocalTransform(tmpMat);\n\n        if (transform) {\n          tmpRect.copy(childRect);\n          tmpRect.applyTransform(transform);\n          rect = rect || tmpRect.clone();\n          rect.union(tmpRect);\n        } else {\n          rect = rect || childRect.clone();\n          rect.union(childRect);\n        }\n      }\n\n      this._rect = rect || tmpRect;\n    }\n\n    return this._rect;\n  };\n\n  ZRText.prototype.setDefaultTextStyle = function (defaultTextStyle) {\n    this._defaultStyle = defaultTextStyle || DEFAULT_RICH_TEXT_COLOR;\n  };\n\n  ZRText.prototype.setTextContent = function (textContent) {\n    throw new Error('Can\\'t attach text on another text');\n  };\n\n  ZRText.prototype._mergeStyle = function (targetStyle, sourceStyle) {\n    if (!sourceStyle) {\n      return targetStyle;\n    }\n\n    var sourceRich = sourceStyle.rich;\n    var targetRich = targetStyle.rich || sourceRich && {};\n    util_1.extend(targetStyle, sourceStyle);\n\n    if (sourceRich && targetRich) {\n      this._mergeRich(targetRich, sourceRich);\n\n      targetStyle.rich = targetRich;\n    } else if (targetRich) {\n      targetStyle.rich = targetRich;\n    }\n\n    return targetStyle;\n  };\n\n  ZRText.prototype._mergeRich = function (targetRich, sourceRich) {\n    var richNames = util_1.keys(sourceRich);\n\n    for (var i = 0; i < richNames.length; i++) {\n      var richName = richNames[i];\n      targetRich[richName] = targetRich[richName] || {};\n      util_1.extend(targetRich[richName], sourceRich[richName]);\n    }\n  };\n\n  ZRText.prototype.getAnimationStyleProps = function () {\n    return exports.DEFAULT_TEXT_ANIMATION_PROPS;\n  };\n\n  ZRText.prototype._getOrCreateChild = function (Ctor) {\n    var child = this._children[this._childCursor];\n\n    if (!child || !(child instanceof Ctor)) {\n      child = new Ctor();\n    }\n\n    this._children[this._childCursor++] = child;\n    child.__zr = this.__zr;\n    child.parent = this;\n    return child;\n  };\n\n  ZRText.prototype._updatePlainTexts = function () {\n    var style = this.style;\n    var textFont = style.font || text_1.DEFAULT_FONT;\n    var textPadding = style.padding;\n    var text = getStyleText(style);\n    var contentBlock = parseText_1.parsePlainText(text, style);\n    var needDrawBg = needDrawBackground(style);\n    var bgColorDrawn = !!style.backgroundColor;\n    var outerHeight = contentBlock.outerHeight;\n    var textLines = contentBlock.lines;\n    var lineHeight = contentBlock.lineHeight;\n    var defaultStyle = this._defaultStyle;\n    var baseX = style.x || 0;\n    var baseY = style.y || 0;\n    var textAlign = style.align || defaultStyle.align || 'left';\n    var verticalAlign = style.verticalAlign || defaultStyle.verticalAlign || 'top';\n    var textX = baseX;\n    var textY = text_1.adjustTextY(baseY, contentBlock.contentHeight, verticalAlign);\n\n    if (needDrawBg || textPadding) {\n      var outerWidth_1 = contentBlock.width;\n      textPadding && (outerWidth_1 += textPadding[1] + textPadding[3]);\n      var boxX = text_1.adjustTextX(baseX, outerWidth_1, textAlign);\n      var boxY = text_1.adjustTextY(baseY, outerHeight, verticalAlign);\n      needDrawBg && this._renderBackground(style, style, boxX, boxY, outerWidth_1, outerHeight);\n    }\n\n    textY += lineHeight / 2;\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n\n      if (verticalAlign === 'top') {\n        textY += textPadding[0];\n      } else if (verticalAlign === 'bottom') {\n        textY -= textPadding[2];\n      }\n    }\n\n    var defaultLineWidth = 0;\n    var useDefaultFill = false;\n    var textFill = getFill('fill' in style ? style.fill : (useDefaultFill = true, defaultStyle.fill));\n    var textStroke = getStroke('stroke' in style ? style.stroke : !bgColorDrawn && (!defaultStyle.autoStroke || useDefaultFill) ? (defaultLineWidth = DEFAULT_STROKE_LINE_WIDTH, defaultStyle.stroke) : null);\n    var hasShadow = style.textShadowBlur > 0;\n    var fixedBoundingRect = style.width != null && (style.overflow === 'truncate' || style.overflow === 'break' || style.overflow === 'breakAll');\n    var calculatedLineHeight = contentBlock.calculatedLineHeight;\n\n    for (var i = 0; i < textLines.length; i++) {\n      var el = this._getOrCreateChild(TSpan_1[\"default\"]);\n\n      var subElStyle = el.createStyle();\n      el.useStyle(subElStyle);\n      subElStyle.text = textLines[i];\n      subElStyle.x = textX;\n      subElStyle.y = textY;\n\n      if (textAlign) {\n        subElStyle.textAlign = textAlign;\n      }\n\n      subElStyle.textBaseline = 'middle';\n      subElStyle.opacity = style.opacity;\n      subElStyle.strokeFirst = true;\n\n      if (hasShadow) {\n        subElStyle.shadowBlur = style.textShadowBlur || 0;\n        subElStyle.shadowColor = style.textShadowColor || 'transparent';\n        subElStyle.shadowOffsetX = style.textShadowOffsetX || 0;\n        subElStyle.shadowOffsetY = style.textShadowOffsetY || 0;\n      }\n\n      if (textStroke) {\n        subElStyle.stroke = textStroke;\n        subElStyle.lineWidth = style.lineWidth || defaultLineWidth;\n        subElStyle.lineDash = style.lineDash;\n        subElStyle.lineDashOffset = style.lineDashOffset || 0;\n      }\n\n      if (textFill) {\n        subElStyle.fill = textFill;\n      }\n\n      subElStyle.font = textFont;\n      textY += lineHeight;\n\n      if (fixedBoundingRect) {\n        el.setBoundingRect(new BoundingRect_1[\"default\"](text_1.adjustTextX(subElStyle.x, style.width, subElStyle.textAlign), text_1.adjustTextY(subElStyle.y, calculatedLineHeight, subElStyle.textBaseline), style.width, calculatedLineHeight));\n      }\n    }\n  };\n\n  ZRText.prototype._updateRichTexts = function () {\n    var style = this.style;\n    var text = getStyleText(style);\n    var contentBlock = parseText_1.parseRichText(text, style);\n    var contentWidth = contentBlock.width;\n    var outerWidth = contentBlock.outerWidth;\n    var outerHeight = contentBlock.outerHeight;\n    var textPadding = style.padding;\n    var baseX = style.x || 0;\n    var baseY = style.y || 0;\n    var defaultStyle = this._defaultStyle;\n    var textAlign = style.align || defaultStyle.align;\n    var verticalAlign = style.verticalAlign || defaultStyle.verticalAlign;\n    var boxX = text_1.adjustTextX(baseX, outerWidth, textAlign);\n    var boxY = text_1.adjustTextY(baseY, outerHeight, verticalAlign);\n    var xLeft = boxX;\n    var lineTop = boxY;\n\n    if (textPadding) {\n      xLeft += textPadding[3];\n      lineTop += textPadding[0];\n    }\n\n    var xRight = xLeft + contentWidth;\n\n    if (needDrawBackground(style)) {\n      this._renderBackground(style, style, boxX, boxY, outerWidth, outerHeight);\n    }\n\n    var bgColorDrawn = !!style.backgroundColor;\n\n    for (var i = 0; i < contentBlock.lines.length; i++) {\n      var line = contentBlock.lines[i];\n      var tokens = line.tokens;\n      var tokenCount = tokens.length;\n      var lineHeight = line.lineHeight;\n      var remainedWidth = line.width;\n      var leftIndex = 0;\n      var lineXLeft = xLeft;\n      var lineXRight = xRight;\n      var rightIndex = tokenCount - 1;\n      var token = void 0;\n\n      while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.align || token.align === 'left')) {\n        this._placeToken(token, style, lineHeight, lineTop, lineXLeft, 'left', bgColorDrawn);\n\n        remainedWidth -= token.width;\n        lineXLeft += token.width;\n        leftIndex++;\n      }\n\n      while (rightIndex >= 0 && (token = tokens[rightIndex], token.align === 'right')) {\n        this._placeToken(token, style, lineHeight, lineTop, lineXRight, 'right', bgColorDrawn);\n\n        remainedWidth -= token.width;\n        lineXRight -= token.width;\n        rightIndex--;\n      }\n\n      lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - remainedWidth) / 2;\n\n      while (leftIndex <= rightIndex) {\n        token = tokens[leftIndex];\n\n        this._placeToken(token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center', bgColorDrawn);\n\n        lineXLeft += token.width;\n        leftIndex++;\n      }\n\n      lineTop += lineHeight;\n    }\n  };\n\n  ZRText.prototype._placeToken = function (token, style, lineHeight, lineTop, x, textAlign, parentBgColorDrawn) {\n    var tokenStyle = style.rich[token.styleName] || {};\n    tokenStyle.text = token.text;\n    var verticalAlign = token.verticalAlign;\n    var y = lineTop + lineHeight / 2;\n\n    if (verticalAlign === 'top') {\n      y = lineTop + token.height / 2;\n    } else if (verticalAlign === 'bottom') {\n      y = lineTop + lineHeight - token.height / 2;\n    }\n\n    var needDrawBg = !token.isLineHolder && needDrawBackground(tokenStyle);\n    needDrawBg && this._renderBackground(tokenStyle, style, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n    var bgColorDrawn = !!tokenStyle.backgroundColor;\n    var textPadding = token.textPadding;\n\n    if (textPadding) {\n      x = getTextXForPadding(x, textAlign, textPadding);\n      y -= token.height / 2 - textPadding[0] - token.innerHeight / 2;\n    }\n\n    var el = this._getOrCreateChild(TSpan_1[\"default\"]);\n\n    var subElStyle = el.createStyle();\n    el.useStyle(subElStyle);\n    var defaultStyle = this._defaultStyle;\n    var useDefaultFill = false;\n    var defaultLineWidth = 0;\n    var textFill = getStroke('fill' in tokenStyle ? tokenStyle.fill : 'fill' in style ? style.fill : (useDefaultFill = true, defaultStyle.fill));\n    var textStroke = getStroke('stroke' in tokenStyle ? tokenStyle.stroke : 'stroke' in style ? style.stroke : !bgColorDrawn && !parentBgColorDrawn && (!defaultStyle.autoStroke || useDefaultFill) ? (defaultLineWidth = DEFAULT_STROKE_LINE_WIDTH, defaultStyle.stroke) : null);\n    var hasShadow = tokenStyle.textShadowBlur > 0 || style.textShadowBlur > 0;\n    subElStyle.text = token.text;\n    subElStyle.x = x;\n    subElStyle.y = y;\n\n    if (hasShadow) {\n      subElStyle.shadowBlur = tokenStyle.textShadowBlur || style.textShadowBlur || 0;\n      subElStyle.shadowColor = tokenStyle.textShadowColor || style.textShadowColor || 'transparent';\n      subElStyle.shadowOffsetX = tokenStyle.textShadowOffsetX || style.textShadowOffsetX || 0;\n      subElStyle.shadowOffsetY = tokenStyle.textShadowOffsetY || style.textShadowOffsetY || 0;\n    }\n\n    subElStyle.textAlign = textAlign;\n    subElStyle.textBaseline = 'middle';\n    subElStyle.font = token.font || text_1.DEFAULT_FONT;\n    subElStyle.opacity = util_1.retrieve3(tokenStyle.opacity, style.opacity, 1);\n\n    if (textStroke) {\n      subElStyle.lineWidth = util_1.retrieve3(tokenStyle.lineWidth, style.lineWidth, defaultLineWidth);\n      subElStyle.lineDash = util_1.retrieve2(tokenStyle.lineDash, style.lineDash);\n      subElStyle.lineDashOffset = style.lineDashOffset || 0;\n      subElStyle.stroke = textStroke;\n    }\n\n    if (textFill) {\n      subElStyle.fill = textFill;\n    }\n\n    var textWidth = token.contentWidth;\n    var textHeight = token.contentHeight;\n    el.setBoundingRect(new BoundingRect_1[\"default\"](text_1.adjustTextX(subElStyle.x, textWidth, subElStyle.textAlign), text_1.adjustTextY(subElStyle.y, textHeight, subElStyle.textBaseline), textWidth, textHeight));\n  };\n\n  ZRText.prototype._renderBackground = function (style, topStyle, x, y, width, height) {\n    var textBackgroundColor = style.backgroundColor;\n    var textBorderWidth = style.borderWidth;\n    var textBorderColor = style.borderColor;\n    var isPlainBg = util_1.isString(textBackgroundColor);\n    var textBorderRadius = style.borderRadius;\n    var self = this;\n    var rectEl;\n    var imgEl;\n\n    if (isPlainBg || textBorderWidth && textBorderColor) {\n      rectEl = this._getOrCreateChild(Rect_1[\"default\"]);\n      rectEl.useStyle(rectEl.createStyle());\n      rectEl.style.fill = null;\n      var rectShape = rectEl.shape;\n      rectShape.x = x;\n      rectShape.y = y;\n      rectShape.width = width;\n      rectShape.height = height;\n      rectShape.r = textBorderRadius;\n      rectEl.dirtyShape();\n    }\n\n    if (isPlainBg) {\n      var rectStyle = rectEl.style;\n      rectStyle.fill = textBackgroundColor || null;\n      rectStyle.fillOpacity = util_1.retrieve2(style.fillOpacity, 1);\n    } else if (textBackgroundColor && textBackgroundColor.image) {\n      imgEl = this._getOrCreateChild(Image_1[\"default\"]);\n\n      imgEl.onload = function () {\n        self.dirtyStyle();\n      };\n\n      var imgStyle = imgEl.style;\n      imgStyle.image = textBackgroundColor.image;\n      imgStyle.x = x;\n      imgStyle.y = y;\n      imgStyle.width = width;\n      imgStyle.height = height;\n    }\n\n    if (textBorderWidth && textBorderColor) {\n      var rectStyle = rectEl.style;\n      rectStyle.lineWidth = textBorderWidth;\n      rectStyle.stroke = textBorderColor;\n      rectStyle.strokeOpacity = util_1.retrieve2(style.strokeOpacity, 1);\n      rectStyle.lineDash = style.borderDash;\n      rectStyle.lineDashOffset = style.borderDashOffset || 0;\n      rectEl.strokeContainThreshold = 0;\n\n      if (rectEl.hasFill() && rectEl.hasStroke()) {\n        rectStyle.strokeFirst = true;\n        rectStyle.lineWidth *= 2;\n      }\n    }\n\n    var commonStyle = (rectEl || imgEl).style;\n    commonStyle.shadowBlur = style.shadowBlur || 0;\n    commonStyle.shadowColor = style.shadowColor || 'transparent';\n    commonStyle.shadowOffsetX = style.shadowOffsetX || 0;\n    commonStyle.shadowOffsetY = style.shadowOffsetY || 0;\n    commonStyle.opacity = util_1.retrieve3(style.opacity, topStyle.opacity, 1);\n  };\n\n  ZRText.makeFont = function (style) {\n    var font = '';\n\n    if (style.fontSize || style.fontFamily || style.fontWeight) {\n      var fontSize = '';\n\n      if (typeof style.fontSize === 'string' && (style.fontSize.indexOf('px') !== -1 || style.fontSize.indexOf('rem') !== -1 || style.fontSize.indexOf('em') !== -1)) {\n        fontSize = style.fontSize;\n      } else if (!isNaN(+style.fontSize)) {\n        fontSize = style.fontSize + 'px';\n      } else {\n        fontSize = '12px';\n      }\n\n      font = [style.fontStyle, style.fontWeight, fontSize, style.fontFamily || 'sans-serif'].join(' ');\n    }\n\n    return font && util_1.trim(font) || style.textFont || style.font;\n  };\n\n  return ZRText;\n}(Displayable_1[\"default\"]);\n\nvar VALID_TEXT_ALIGN = {\n  left: true,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  util_1.each(style.rich, normalizeStyle);\n  return style;\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = ZRText.makeFont(style);\n    var textAlign = style.align;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.align = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left';\n    var verticalAlign = style.verticalAlign;\n    verticalAlign === 'center' && (verticalAlign = 'middle');\n    style.verticalAlign = verticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[verticalAlign] ? verticalAlign : 'top';\n    var textPadding = style.padding;\n\n    if (textPadding) {\n      style.padding = util_1.normalizeCssArray(style.padding);\n    }\n  }\n}\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n\nfunction getStyleText(style) {\n  var text = style.text;\n  text != null && (text += '');\n  return text;\n}\n\nfunction needDrawBackground(style) {\n  return !!(style.backgroundColor || style.borderWidth && style.borderColor);\n}\n\nexports[\"default\"] = ZRText;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/zrender/lib/graphic/Text.js"],"names":["exports","__esModule","tslib_1","require","parseText_1","TSpan_1","util_1","text_1","Image_1","Rect_1","BoundingRect_1","matrix_1","Displayable_1","DEFAULT_RICH_TEXT_COLOR","fill","DEFAULT_STROKE_LINE_WIDTH","DEFAULT_TEXT_ANIMATION_PROPS","style","defaults","stroke","fillOpacity","strokeOpacity","lineWidth","fontSize","lineHeight","width","height","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","backgroundColor","padding","borderColor","borderWidth","borderRadius","DEFAULT_COMMON_ANIMATION_PROPS","ZRText","_super","__extends","opts","_this","call","type","_children","_defaultStyle","attr","prototype","childrenRef","update","styleChanged","_updateSubTexts","i","length","child","zlevel","z","z2","culling","cursor","invisible","attachedTransform","updateTransform","m","transform","copy","getComputedTransform","__hostTarget","updateInnerText","_childCursor","normalizeTextStyle","rich","_updateRichTexts","_updatePlainTexts","styleUpdated","addSelfToZr","zr","__zr","removeSelfFromZr","getBoundingRect","_rect","tmpRect","children","tmpMat","rect","childRect","getLocalTransform","applyTransform","clone","union","setDefaultTextStyle","defaultTextStyle","setTextContent","textContent","Error","_mergeStyle","targetStyle","sourceStyle","sourceRich","targetRich","extend","_mergeRich","richNames","keys","richName","getAnimationStyleProps","_getOrCreateChild","Ctor","parent","textFont","font","DEFAULT_FONT","textPadding","text","getStyleText","contentBlock","parsePlainText","needDrawBg","needDrawBackground","bgColorDrawn","outerHeight","textLines","lines","defaultStyle","baseX","x","baseY","y","textAlign","align","verticalAlign","textX","textY","adjustTextY","contentHeight","outerWidth_1","boxX","adjustTextX","boxY","_renderBackground","getTextXForPadding","defaultLineWidth","useDefaultFill","textFill","getFill","textStroke","getStroke","autoStroke","hasShadow","fixedBoundingRect","overflow","calculatedLineHeight","el","subElStyle","createStyle","useStyle","textBaseline","opacity","strokeFirst","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","lineDash","lineDashOffset","setBoundingRect","parseRichText","contentWidth","outerWidth","xLeft","lineTop","xRight","line","tokens","tokenCount","remainedWidth","leftIndex","lineXLeft","lineXRight","rightIndex","token","_placeToken","parentBgColorDrawn","tokenStyle","styleName","isLineHolder","innerHeight","retrieve3","retrieve2","textWidth","textHeight","topStyle","textBackgroundColor","textBorderWidth","textBorderColor","isPlainBg","isString","textBorderRadius","self","rectEl","imgEl","rectShape","shape","r","dirtyShape","rectStyle","image","onload","dirtyStyle","imgStyle","borderDash","borderDashOffset","strokeContainThreshold","hasFill","hasStroke","commonStyle","makeFont","fontFamily","fontWeight","indexOf","isNaN","fontStyle","join","trim","VALID_TEXT_ALIGN","left","right","center","VALID_TEXT_VERTICAL_ALIGN","top","bottom","middle","normalizeStyle","each","normalizeCssArray","colorStops"],"mappings":"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","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar tslib_1 = require(\"tslib\");\nvar parseText_1 = require(\"./helper/parseText\");\nvar TSpan_1 = require(\"./TSpan\");\nvar util_1 = require(\"../core/util\");\nvar text_1 = require(\"../contain/text\");\nvar Image_1 = require(\"./Image\");\nvar Rect_1 = require(\"./shape/Rect\");\nvar BoundingRect_1 = require(\"../core/BoundingRect\");\nvar matrix_1 = require(\"../core/matrix\");\nvar Displayable_1 = require(\"./Displayable\");\nvar DEFAULT_RICH_TEXT_COLOR = {\n    fill: '#000'\n};\nvar DEFAULT_STROKE_LINE_WIDTH = 2;\nexports.DEFAULT_TEXT_ANIMATION_PROPS = {\n    style: util_1.defaults({\n        fill: true,\n        stroke: true,\n        fillOpacity: true,\n        strokeOpacity: true,\n        lineWidth: true,\n        fontSize: true,\n        lineHeight: true,\n        width: true,\n        height: true,\n        textShadowColor: true,\n        textShadowBlur: true,\n        textShadowOffsetX: true,\n        textShadowOffsetY: true,\n        backgroundColor: true,\n        padding: true,\n        borderColor: true,\n        borderWidth: true,\n        borderRadius: true\n    }, Displayable_1.DEFAULT_COMMON_ANIMATION_PROPS.style)\n};\nvar ZRText = (function (_super) {\n    tslib_1.__extends(ZRText, _super);\n    function ZRText(opts) {\n        var _this = _super.call(this) || this;\n        _this.type = 'text';\n        _this._children = [];\n        _this._defaultStyle = DEFAULT_RICH_TEXT_COLOR;\n        _this.attr(opts);\n        return _this;\n    }\n    ZRText.prototype.childrenRef = function () {\n        return this._children;\n    };\n    ZRText.prototype.update = function () {\n        if (this.styleChanged()) {\n            this._updateSubTexts();\n        }\n        for (var i = 0; i < this._children.length; i++) {\n            var child = this._children[i];\n            child.zlevel = this.zlevel;\n            child.z = this.z;\n            child.z2 = this.z2;\n            child.culling = this.culling;\n            child.cursor = this.cursor;\n            child.invisible = this.invisible;\n        }\n        var attachedTransform = this.attachedTransform;\n        if (attachedTransform) {\n            attachedTransform.updateTransform();\n            var m = attachedTransform.transform;\n            if (m) {\n                this.transform = this.transform || [];\n                matrix_1.copy(this.transform, m);\n            }\n            else {\n                this.transform = null;\n            }\n        }\n        else {\n            _super.prototype.update.call(this);\n        }\n    };\n    ZRText.prototype.getComputedTransform = function () {\n        if (this.__hostTarget) {\n            this.__hostTarget.getComputedTransform();\n            this.__hostTarget.updateInnerText(true);\n        }\n        return this.attachedTransform ? this.attachedTransform.getComputedTransform()\n            : _super.prototype.getComputedTransform.call(this);\n    };\n    ZRText.prototype._updateSubTexts = function () {\n        this._childCursor = 0;\n        normalizeTextStyle(this.style);\n        this.style.rich\n            ? this._updateRichTexts()\n            : this._updatePlainTexts();\n        this._children.length = this._childCursor;\n        this.styleUpdated();\n    };\n    ZRText.prototype.addSelfToZr = function (zr) {\n        _super.prototype.addSelfToZr.call(this, zr);\n        for (var i = 0; i < this._children.length; i++) {\n            this._children[i].__zr = zr;\n        }\n    };\n    ZRText.prototype.removeSelfFromZr = function (zr) {\n        _super.prototype.removeSelfFromZr.call(this, zr);\n        for (var i = 0; i < this._children.length; i++) {\n            this._children[i].__zr = null;\n        }\n    };\n    ZRText.prototype.getBoundingRect = function () {\n        if (this.styleChanged()) {\n            this._updateSubTexts();\n        }\n        if (!this._rect) {\n            var tmpRect = new BoundingRect_1[\"default\"](0, 0, 0, 0);\n            var children = this._children;\n            var tmpMat = [];\n            var rect = null;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            this._rect = rect || tmpRect;\n        }\n        return this._rect;\n    };\n    ZRText.prototype.setDefaultTextStyle = function (defaultTextStyle) {\n        this._defaultStyle = defaultTextStyle || DEFAULT_RICH_TEXT_COLOR;\n    };\n    ZRText.prototype.setTextContent = function (textContent) {\n        throw new Error('Can\\'t attach text on another text');\n    };\n    ZRText.prototype._mergeStyle = function (targetStyle, sourceStyle) {\n        if (!sourceStyle) {\n            return targetStyle;\n        }\n        var sourceRich = sourceStyle.rich;\n        var targetRich = targetStyle.rich || (sourceRich && {});\n        util_1.extend(targetStyle, sourceStyle);\n        if (sourceRich && targetRich) {\n            this._mergeRich(targetRich, sourceRich);\n            targetStyle.rich = targetRich;\n        }\n        else if (targetRich) {\n            targetStyle.rich = targetRich;\n        }\n        return targetStyle;\n    };\n    ZRText.prototype._mergeRich = function (targetRich, sourceRich) {\n        var richNames = util_1.keys(sourceRich);\n        for (var i = 0; i < richNames.length; i++) {\n            var richName = richNames[i];\n            targetRich[richName] = targetRich[richName] || {};\n            util_1.extend(targetRich[richName], sourceRich[richName]);\n        }\n    };\n    ZRText.prototype.getAnimationStyleProps = function () {\n        return exports.DEFAULT_TEXT_ANIMATION_PROPS;\n    };\n    ZRText.prototype._getOrCreateChild = function (Ctor) {\n        var child = this._children[this._childCursor];\n        if (!child || !(child instanceof Ctor)) {\n            child = new Ctor();\n        }\n        this._children[this._childCursor++] = child;\n        child.__zr = this.__zr;\n        child.parent = this;\n        return child;\n    };\n    ZRText.prototype._updatePlainTexts = function () {\n        var style = this.style;\n        var textFont = style.font || text_1.DEFAULT_FONT;\n        var textPadding = style.padding;\n        var text = getStyleText(style);\n        var contentBlock = parseText_1.parsePlainText(text, style);\n        var needDrawBg = needDrawBackground(style);\n        var bgColorDrawn = !!(style.backgroundColor);\n        var outerHeight = contentBlock.outerHeight;\n        var textLines = contentBlock.lines;\n        var lineHeight = contentBlock.lineHeight;\n        var defaultStyle = this._defaultStyle;\n        var baseX = style.x || 0;\n        var baseY = style.y || 0;\n        var textAlign = style.align || defaultStyle.align || 'left';\n        var verticalAlign = style.verticalAlign || defaultStyle.verticalAlign || 'top';\n        var textX = baseX;\n        var textY = text_1.adjustTextY(baseY, contentBlock.contentHeight, verticalAlign);\n        if (needDrawBg || textPadding) {\n            var outerWidth_1 = contentBlock.width;\n            textPadding && (outerWidth_1 += textPadding[1] + textPadding[3]);\n            var boxX = text_1.adjustTextX(baseX, outerWidth_1, textAlign);\n            var boxY = text_1.adjustTextY(baseY, outerHeight, verticalAlign);\n            needDrawBg && this._renderBackground(style, style, boxX, boxY, outerWidth_1, outerHeight);\n        }\n        textY += lineHeight / 2;\n        if (textPadding) {\n            textX = getTextXForPadding(baseX, textAlign, textPadding);\n            if (verticalAlign === 'top') {\n                textY += textPadding[0];\n            }\n            else if (verticalAlign === 'bottom') {\n                textY -= textPadding[2];\n            }\n        }\n        var defaultLineWidth = 0;\n        var useDefaultFill = false;\n        var textFill = getFill('fill' in style\n            ? style.fill\n            : (useDefaultFill = true, defaultStyle.fill));\n        var textStroke = getStroke('stroke' in style\n            ? style.stroke\n            : (!bgColorDrawn\n                && (!defaultStyle.autoStroke || useDefaultFill))\n                ? (defaultLineWidth = DEFAULT_STROKE_LINE_WIDTH, defaultStyle.stroke)\n                : null);\n        var hasShadow = style.textShadowBlur > 0;\n        var fixedBoundingRect = style.width != null\n            && (style.overflow === 'truncate' || style.overflow === 'break' || style.overflow === 'breakAll');\n        var calculatedLineHeight = contentBlock.calculatedLineHeight;\n        for (var i = 0; i < textLines.length; i++) {\n            var el = this._getOrCreateChild(TSpan_1[\"default\"]);\n            var subElStyle = el.createStyle();\n            el.useStyle(subElStyle);\n            subElStyle.text = textLines[i];\n            subElStyle.x = textX;\n            subElStyle.y = textY;\n            if (textAlign) {\n                subElStyle.textAlign = textAlign;\n            }\n            subElStyle.textBaseline = 'middle';\n            subElStyle.opacity = style.opacity;\n            subElStyle.strokeFirst = true;\n            if (hasShadow) {\n                subElStyle.shadowBlur = style.textShadowBlur || 0;\n                subElStyle.shadowColor = style.textShadowColor || 'transparent';\n                subElStyle.shadowOffsetX = style.textShadowOffsetX || 0;\n                subElStyle.shadowOffsetY = style.textShadowOffsetY || 0;\n            }\n            if (textStroke) {\n                subElStyle.stroke = textStroke;\n                subElStyle.lineWidth = style.lineWidth || defaultLineWidth;\n                subElStyle.lineDash = style.lineDash;\n                subElStyle.lineDashOffset = style.lineDashOffset || 0;\n            }\n            if (textFill) {\n                subElStyle.fill = textFill;\n            }\n            subElStyle.font = textFont;\n            textY += lineHeight;\n            if (fixedBoundingRect) {\n                el.setBoundingRect(new BoundingRect_1[\"default\"](text_1.adjustTextX(subElStyle.x, style.width, subElStyle.textAlign), text_1.adjustTextY(subElStyle.y, calculatedLineHeight, subElStyle.textBaseline), style.width, calculatedLineHeight));\n            }\n        }\n    };\n    ZRText.prototype._updateRichTexts = function () {\n        var style = this.style;\n        var text = getStyleText(style);\n        var contentBlock = parseText_1.parseRichText(text, style);\n        var contentWidth = contentBlock.width;\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n        var textPadding = style.padding;\n        var baseX = style.x || 0;\n        var baseY = style.y || 0;\n        var defaultStyle = this._defaultStyle;\n        var textAlign = style.align || defaultStyle.align;\n        var verticalAlign = style.verticalAlign || defaultStyle.verticalAlign;\n        var boxX = text_1.adjustTextX(baseX, outerWidth, textAlign);\n        var boxY = text_1.adjustTextY(baseY, outerHeight, verticalAlign);\n        var xLeft = boxX;\n        var lineTop = boxY;\n        if (textPadding) {\n            xLeft += textPadding[3];\n            lineTop += textPadding[0];\n        }\n        var xRight = xLeft + contentWidth;\n        if (needDrawBackground(style)) {\n            this._renderBackground(style, style, boxX, boxY, outerWidth, outerHeight);\n        }\n        var bgColorDrawn = !!(style.backgroundColor);\n        for (var i = 0; i < contentBlock.lines.length; i++) {\n            var line = contentBlock.lines[i];\n            var tokens = line.tokens;\n            var tokenCount = tokens.length;\n            var lineHeight = line.lineHeight;\n            var remainedWidth = line.width;\n            var leftIndex = 0;\n            var lineXLeft = xLeft;\n            var lineXRight = xRight;\n            var rightIndex = tokenCount - 1;\n            var token = void 0;\n            while (leftIndex < tokenCount\n                && (token = tokens[leftIndex], !token.align || token.align === 'left')) {\n                this._placeToken(token, style, lineHeight, lineTop, lineXLeft, 'left', bgColorDrawn);\n                remainedWidth -= token.width;\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n            while (rightIndex >= 0\n                && (token = tokens[rightIndex], token.align === 'right')) {\n                this._placeToken(token, style, lineHeight, lineTop, lineXRight, 'right', bgColorDrawn);\n                remainedWidth -= token.width;\n                lineXRight -= token.width;\n                rightIndex--;\n            }\n            lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - remainedWidth) / 2;\n            while (leftIndex <= rightIndex) {\n                token = tokens[leftIndex];\n                this._placeToken(token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center', bgColorDrawn);\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n            lineTop += lineHeight;\n        }\n    };\n    ZRText.prototype._placeToken = function (token, style, lineHeight, lineTop, x, textAlign, parentBgColorDrawn) {\n        var tokenStyle = style.rich[token.styleName] || {};\n        tokenStyle.text = token.text;\n        var verticalAlign = token.verticalAlign;\n        var y = lineTop + lineHeight / 2;\n        if (verticalAlign === 'top') {\n            y = lineTop + token.height / 2;\n        }\n        else if (verticalAlign === 'bottom') {\n            y = lineTop + lineHeight - token.height / 2;\n        }\n        var needDrawBg = !token.isLineHolder && needDrawBackground(tokenStyle);\n        needDrawBg && this._renderBackground(tokenStyle, style, textAlign === 'right'\n            ? x - token.width\n            : textAlign === 'center'\n                ? x - token.width / 2\n                : x, y - token.height / 2, token.width, token.height);\n        var bgColorDrawn = !!tokenStyle.backgroundColor;\n        var textPadding = token.textPadding;\n        if (textPadding) {\n            x = getTextXForPadding(x, textAlign, textPadding);\n            y -= token.height / 2 - textPadding[0] - token.innerHeight / 2;\n        }\n        var el = this._getOrCreateChild(TSpan_1[\"default\"]);\n        var subElStyle = el.createStyle();\n        el.useStyle(subElStyle);\n        var defaultStyle = this._defaultStyle;\n        var useDefaultFill = false;\n        var defaultLineWidth = 0;\n        var textFill = getStroke('fill' in tokenStyle ? tokenStyle.fill\n            : 'fill' in style ? style.fill\n                : (useDefaultFill = true, defaultStyle.fill));\n        var textStroke = getStroke('stroke' in tokenStyle ? tokenStyle.stroke\n            : 'stroke' in style ? style.stroke\n                : (!bgColorDrawn\n                    && !parentBgColorDrawn\n                    && (!defaultStyle.autoStroke || useDefaultFill)) ? (defaultLineWidth = DEFAULT_STROKE_LINE_WIDTH, defaultStyle.stroke)\n                    : null);\n        var hasShadow = tokenStyle.textShadowBlur > 0\n            || style.textShadowBlur > 0;\n        subElStyle.text = token.text;\n        subElStyle.x = x;\n        subElStyle.y = y;\n        if (hasShadow) {\n            subElStyle.shadowBlur = tokenStyle.textShadowBlur || style.textShadowBlur || 0;\n            subElStyle.shadowColor = tokenStyle.textShadowColor || style.textShadowColor || 'transparent';\n            subElStyle.shadowOffsetX = tokenStyle.textShadowOffsetX || style.textShadowOffsetX || 0;\n            subElStyle.shadowOffsetY = tokenStyle.textShadowOffsetY || style.textShadowOffsetY || 0;\n        }\n        subElStyle.textAlign = textAlign;\n        subElStyle.textBaseline = 'middle';\n        subElStyle.font = token.font || text_1.DEFAULT_FONT;\n        subElStyle.opacity = util_1.retrieve3(tokenStyle.opacity, style.opacity, 1);\n        if (textStroke) {\n            subElStyle.lineWidth = util_1.retrieve3(tokenStyle.lineWidth, style.lineWidth, defaultLineWidth);\n            subElStyle.lineDash = util_1.retrieve2(tokenStyle.lineDash, style.lineDash);\n            subElStyle.lineDashOffset = style.lineDashOffset || 0;\n            subElStyle.stroke = textStroke;\n        }\n        if (textFill) {\n            subElStyle.fill = textFill;\n        }\n        var textWidth = token.contentWidth;\n        var textHeight = token.contentHeight;\n        el.setBoundingRect(new BoundingRect_1[\"default\"](text_1.adjustTextX(subElStyle.x, textWidth, subElStyle.textAlign), text_1.adjustTextY(subElStyle.y, textHeight, subElStyle.textBaseline), textWidth, textHeight));\n    };\n    ZRText.prototype._renderBackground = function (style, topStyle, x, y, width, height) {\n        var textBackgroundColor = style.backgroundColor;\n        var textBorderWidth = style.borderWidth;\n        var textBorderColor = style.borderColor;\n        var isPlainBg = util_1.isString(textBackgroundColor);\n        var textBorderRadius = style.borderRadius;\n        var self = this;\n        var rectEl;\n        var imgEl;\n        if (isPlainBg || (textBorderWidth && textBorderColor)) {\n            rectEl = this._getOrCreateChild(Rect_1[\"default\"]);\n            rectEl.useStyle(rectEl.createStyle());\n            rectEl.style.fill = null;\n            var rectShape = rectEl.shape;\n            rectShape.x = x;\n            rectShape.y = y;\n            rectShape.width = width;\n            rectShape.height = height;\n            rectShape.r = textBorderRadius;\n            rectEl.dirtyShape();\n        }\n        if (isPlainBg) {\n            var rectStyle = rectEl.style;\n            rectStyle.fill = textBackgroundColor || null;\n            rectStyle.fillOpacity = util_1.retrieve2(style.fillOpacity, 1);\n        }\n        else if (textBackgroundColor && textBackgroundColor.image) {\n            imgEl = this._getOrCreateChild(Image_1[\"default\"]);\n            imgEl.onload = function () {\n                self.dirtyStyle();\n            };\n            var imgStyle = imgEl.style;\n            imgStyle.image = textBackgroundColor.image;\n            imgStyle.x = x;\n            imgStyle.y = y;\n            imgStyle.width = width;\n            imgStyle.height = height;\n        }\n        if (textBorderWidth && textBorderColor) {\n            var rectStyle = rectEl.style;\n            rectStyle.lineWidth = textBorderWidth;\n            rectStyle.stroke = textBorderColor;\n            rectStyle.strokeOpacity = util_1.retrieve2(style.strokeOpacity, 1);\n            rectStyle.lineDash = style.borderDash;\n            rectStyle.lineDashOffset = style.borderDashOffset || 0;\n            rectEl.strokeContainThreshold = 0;\n            if (rectEl.hasFill() && rectEl.hasStroke()) {\n                rectStyle.strokeFirst = true;\n                rectStyle.lineWidth *= 2;\n            }\n        }\n        var commonStyle = (rectEl || imgEl).style;\n        commonStyle.shadowBlur = style.shadowBlur || 0;\n        commonStyle.shadowColor = style.shadowColor || 'transparent';\n        commonStyle.shadowOffsetX = style.shadowOffsetX || 0;\n        commonStyle.shadowOffsetY = style.shadowOffsetY || 0;\n        commonStyle.opacity = util_1.retrieve3(style.opacity, topStyle.opacity, 1);\n    };\n    ZRText.makeFont = function (style) {\n        var font = '';\n        if (style.fontSize || style.fontFamily || style.fontWeight) {\n            var fontSize = '';\n            if (typeof style.fontSize === 'string'\n                && (style.fontSize.indexOf('px') !== -1\n                    || style.fontSize.indexOf('rem') !== -1\n                    || style.fontSize.indexOf('em') !== -1)) {\n                fontSize = style.fontSize;\n            }\n            else if (!isNaN(+style.fontSize)) {\n                fontSize = style.fontSize + 'px';\n            }\n            else {\n                fontSize = '12px';\n            }\n            font = [\n                style.fontStyle,\n                style.fontWeight,\n                fontSize,\n                style.fontFamily || 'sans-serif'\n            ].join(' ');\n        }\n        return font && util_1.trim(font) || style.textFont || style.font;\n    };\n    return ZRText;\n}(Displayable_1[\"default\"]));\nvar VALID_TEXT_ALIGN = { left: true, right: 1, center: 1 };\nvar VALID_TEXT_VERTICAL_ALIGN = { top: 1, bottom: 1, middle: 1 };\nfunction normalizeTextStyle(style) {\n    normalizeStyle(style);\n    util_1.each(style.rich, normalizeStyle);\n    return style;\n}\nexports.normalizeTextStyle = normalizeTextStyle;\nfunction normalizeStyle(style) {\n    if (style) {\n        style.font = ZRText.makeFont(style);\n        var textAlign = style.align;\n        textAlign === 'middle' && (textAlign = 'center');\n        style.align = (textAlign == null || VALID_TEXT_ALIGN[textAlign]) ? textAlign : 'left';\n        var verticalAlign = style.verticalAlign;\n        verticalAlign === 'center' && (verticalAlign = 'middle');\n        style.verticalAlign = (verticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[verticalAlign]) ? verticalAlign : 'top';\n        var textPadding = style.padding;\n        if (textPadding) {\n            style.padding = util_1.normalizeCssArray(style.padding);\n        }\n    }\n}\nfunction getStroke(stroke, lineWidth) {\n    return (stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none')\n        ? null\n        : (stroke.image || stroke.colorStops)\n            ? '#000'\n            : stroke;\n}\nfunction getFill(fill) {\n    return (fill == null || fill === 'none')\n        ? null\n        : (fill.image || fill.colorStops)\n            ? '#000'\n            : fill;\n}\nfunction getTextXForPadding(x, textAlign, textPadding) {\n    return textAlign === 'right'\n        ? (x - textPadding[1])\n        : textAlign === 'center'\n            ? (x + textPadding[3] / 2 - textPadding[1] / 2)\n            : (x + textPadding[3]);\n}\nfunction getStyleText(style) {\n    var text = style.text;\n    text != null && (text += '');\n    return text;\n}\nfunction needDrawBackground(style) {\n    return !!(style.backgroundColor\n        || (style.borderWidth && style.borderColor));\n}\nexports[\"default\"] = ZRText;\n"]},"metadata":{},"sourceType":"script"}