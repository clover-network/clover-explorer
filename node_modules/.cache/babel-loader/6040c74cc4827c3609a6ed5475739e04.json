{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar model_1 = require(\"../../util/model\");\n\nfunction createRenderPlanner() {\n  var inner = model_1.makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = !!fields.large;\n    var originalProgressive = !!fields.progressiveRender;\n    var large = fields.large = !!(pipelineContext && pipelineContext.large);\n    var progressive = fields.progressiveRender = !!(pipelineContext && pipelineContext.progressiveRender);\n    return !!(originalLarge !== large || originalProgressive !== progressive) && 'reset';\n  };\n}\n\nexports[\"default\"] = createRenderPlanner;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/chart/helper/createRenderPlanner.js"],"names":["exports","__esModule","model_1","require","createRenderPlanner","inner","makeInner","seriesModel","fields","pipelineContext","originalLarge","large","originalProgressive","progressiveRender","progressive"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AAEA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAAC,kBAAD,CAArB;;AAEA,SAASC,mBAAT,GAA+B;AAC7B,MAAIC,KAAK,GAAGH,OAAO,CAACI,SAAR,EAAZ;AACA,SAAO,UAAUC,WAAV,EAAuB;AAC5B,QAAIC,MAAM,GAAGH,KAAK,CAACE,WAAD,CAAlB;AACA,QAAIE,eAAe,GAAGF,WAAW,CAACE,eAAlC;AACA,QAAIC,aAAa,GAAG,CAAC,CAACF,MAAM,CAACG,KAA7B;AACA,QAAIC,mBAAmB,GAAG,CAAC,CAACJ,MAAM,CAACK,iBAAnC;AACA,QAAIF,KAAK,GAAGH,MAAM,CAACG,KAAP,GAAe,CAAC,EAAEF,eAAe,IAAIA,eAAe,CAACE,KAArC,CAA5B;AACA,QAAIG,WAAW,GAAGN,MAAM,CAACK,iBAAP,GAA2B,CAAC,EAAEJ,eAAe,IAAIA,eAAe,CAACI,iBAArC,CAA9C;AACA,WAAO,CAAC,EAAEH,aAAa,KAAKC,KAAlB,IAA2BC,mBAAmB,KAAKE,WAArD,CAAD,IAAsE,OAA7E;AACD,GARD;AASD;;AAEDd,OAAO,CAAC,SAAD,CAAP,GAAqBI,mBAArB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar model_1 = require(\"../../util/model\");\n\nfunction createRenderPlanner() {\n  var inner = model_1.makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = !!fields.large;\n    var originalProgressive = !!fields.progressiveRender;\n    var large = fields.large = !!(pipelineContext && pipelineContext.large);\n    var progressive = fields.progressiveRender = !!(pipelineContext && pipelineContext.progressiveRender);\n    return !!(originalLarge !== large || originalProgressive !== progressive) && 'reset';\n  };\n}\n\nexports[\"default\"] = createRenderPlanner;"]},"metadata":{},"sourceType":"script"}