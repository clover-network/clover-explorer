{"ast":null,"code":"var adjMatrix = function adjMatrix(graph, directed) {\n  var nodes = graph.getNodes();\n  var edges = graph.getEdges();\n  var matrix = []; // map node with index in data.nodes\n\n  var nodeMap = {};\n\n  if (!nodes) {\n    throw new Error('invalid nodes data!');\n  }\n\n  if (nodes) {\n    nodes.forEach(function (node, i) {\n      nodeMap[node.getID()] = i;\n      var row = [];\n      matrix.push(row);\n    });\n  }\n\n  if (edges) {\n    edges.forEach(function (e) {\n      var model = e.getModel();\n      var source = model.source,\n          target = model.target;\n      var sIndex = nodeMap[source];\n      var tIndex = nodeMap[target];\n      matrix[sIndex][tIndex] = 1;\n\n      if (!directed) {\n        matrix[tIndex][sIndex] = 1;\n      }\n    });\n  }\n\n  return matrix;\n};\n\nexport default adjMatrix;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@antv/g6/es/algorithm/adjacent-matrix.js"],"names":["adjMatrix","graph","directed","nodes","getNodes","edges","getEdges","matrix","nodeMap","Error","forEach","node","i","getID","row","push","e","model","getModel","source","target","sIndex","tIndex"],"mappings":"AAAA,IAAIA,SAAS,GAAG,SAASA,SAAT,CAAmBC,KAAnB,EAA0BC,QAA1B,EAAoC;AAClD,MAAIC,KAAK,GAAGF,KAAK,CAACG,QAAN,EAAZ;AACA,MAAIC,KAAK,GAAGJ,KAAK,CAACK,QAAN,EAAZ;AACA,MAAIC,MAAM,GAAG,EAAb,CAHkD,CAGjC;;AAEjB,MAAIC,OAAO,GAAG,EAAd;;AAEA,MAAI,CAACL,KAAL,EAAY;AACV,UAAM,IAAIM,KAAJ,CAAU,qBAAV,CAAN;AACD;;AAED,MAAIN,KAAJ,EAAW;AACTA,IAAAA,KAAK,CAACO,OAAN,CAAc,UAAUC,IAAV,EAAgBC,CAAhB,EAAmB;AAC/BJ,MAAAA,OAAO,CAACG,IAAI,CAACE,KAAL,EAAD,CAAP,GAAwBD,CAAxB;AACA,UAAIE,GAAG,GAAG,EAAV;AACAP,MAAAA,MAAM,CAACQ,IAAP,CAAYD,GAAZ;AACD,KAJD;AAKD;;AAED,MAAIT,KAAJ,EAAW;AACTA,IAAAA,KAAK,CAACK,OAAN,CAAc,UAAUM,CAAV,EAAa;AACzB,UAAIC,KAAK,GAAGD,CAAC,CAACE,QAAF,EAAZ;AACA,UAAIC,MAAM,GAAGF,KAAK,CAACE,MAAnB;AAAA,UACIC,MAAM,GAAGH,KAAK,CAACG,MADnB;AAEA,UAAIC,MAAM,GAAGb,OAAO,CAACW,MAAD,CAApB;AACA,UAAIG,MAAM,GAAGd,OAAO,CAACY,MAAD,CAApB;AACAb,MAAAA,MAAM,CAACc,MAAD,CAAN,CAAeC,MAAf,IAAyB,CAAzB;;AAEA,UAAI,CAACpB,QAAL,EAAe;AACbK,QAAAA,MAAM,CAACe,MAAD,CAAN,CAAeD,MAAf,IAAyB,CAAzB;AACD;AACF,KAXD;AAYD;;AAED,SAAOd,MAAP;AACD,CAnCD;;AAqCA,eAAeP,SAAf","sourcesContent":["var adjMatrix = function adjMatrix(graph, directed) {\n  var nodes = graph.getNodes();\n  var edges = graph.getEdges();\n  var matrix = []; // map node with index in data.nodes\n\n  var nodeMap = {};\n\n  if (!nodes) {\n    throw new Error('invalid nodes data!');\n  }\n\n  if (nodes) {\n    nodes.forEach(function (node, i) {\n      nodeMap[node.getID()] = i;\n      var row = [];\n      matrix.push(row);\n    });\n  }\n\n  if (edges) {\n    edges.forEach(function (e) {\n      var model = e.getModel();\n      var source = model.source,\n          target = model.target;\n      var sIndex = nodeMap[source];\n      var tIndex = nodeMap[target];\n      matrix[sIndex][tIndex] = 1;\n\n      if (!directed) {\n        matrix[tIndex][sIndex] = 1;\n      }\n    });\n  }\n\n  return matrix;\n};\n\nexport default adjMatrix;"]},"metadata":{},"sourceType":"module"}