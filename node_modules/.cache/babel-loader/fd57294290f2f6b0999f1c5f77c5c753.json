{"ast":null,"code":"var _jsxFileName = \"/Users/wanglijie/wanglijie/clover-defi-wallet/src/pages/AssetsMDetails/index.tsx\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Text } from 'rebass';\nimport AppBody from '../AppBody';\nimport { AutoColumn } from '../../components/Column';\nimport { RowBetween } from '../../components/Row';\nimport CloseBtn from \"../../assets/images/closeBtn.svg\";\nimport { ResponsiveLine } from '@nivo/line';\nimport { ResponsiveBar } from \"@nivo/bar\";\nimport { getOrdinalColorScale } from '@nivo/colors';\nimport { AreaChart, XAxis, Area, PieChart, Pie, Cell, Tooltip, Legend } from 'recharts';\nconst BodyWrapper = styled(AutoColumn)`\n`;\nconst HeadContainer = styled(RowBetween)`\n  margin-top: 50px;\n  padding: 0 20px;\n  height: 44px;\n`;\nconst PieChartWrapper = styled.div`\n  height: 250px;\n  display: flex;\n  justify-content: center;\n`;\nconst LineChartWrapper = styled.div`\n  margin: 0 30px;\n  height: 250px;\n  background: linear-gradient(180deg,#FFFFFF 0%, #FFF6FA 50%, #FFFFFF 100%);\n  border-radius: 15px;\n`;\nconst BarChartWrapper = styled.div`\n  position: relative;\n  margin: 20px 30px;\n  height: 220px;\n  background: linear-gradient(180deg, #FFFFFF 0%, #EFFBFF 50%, #FFFFFF 100%);\n  border-radius: 15px;\n`;\nexport default class AssetsMDetail extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.goBack = () => {\n      this.props.history.goBack();\n    };\n  }\n\n  render() {\n    const pieData = [{\n      id: \"Total assets\",\n      name: \"Total assets\",\n      value: 75,\n      color: \"#FF7D30\"\n    }, {\n      id: \"Total liabilities\",\n      name: \"Total liabilities\",\n      value: 25,\n      color: \"#FF589D\"\n    }];\n    const pieInnerStyles = {\n      root: {\n        fontFamily: \"consolas, sans-serif\",\n        textAlign: \"center\",\n        position: \"relative\",\n        width: 600,\n        height: 600\n      },\n      overlay: {\n        height: 110,\n        width: 110,\n        borderRadius: '50%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        backgroundColor: '#ffffff',\n        boxShadow: '0px 5px 10px 2px rgba(255, 125, 48, 0.15)',\n        position: \"absolute\",\n        top: 200,\n        right: 133,\n        bottom: 0,\n        alignItems: \"center\"\n      },\n      number: {\n        color: \"#333333\",\n        fontSize: \"15px\",\n        fontWeight: 'bold'\n      },\n      text: {\n        color: \"#999999\",\n        fontSize: \"12px\",\n        fontWeight: \"normal\"\n      }\n    };\n\n    const renderActiveTooltipPie = props => {\n      const {\n        payload\n      } = props;\n      return payload[0] ? /*#__PURE__*/React.createElement(\"div\", {\n        key: payload[0].payload.id,\n        style: {\n          color: '#999999',\n          fontSize: '11px',\n          backgroundColor: '#ffffff',\n          borderRadius: '5px',\n          padding: '3px 10px',\n          boxShadow: '0px 0px 10px 2px rgba(0, 0, 0, 0.15)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          display: 'inline-block',\n          marginRight: '5px',\n          width: '8px',\n          height: '8px',\n          borderRadius: '4px',\n          background: payload[0].payload.color\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      }), payload[0].payload.name, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: '#333333',\n          marginLeft: '5px',\n          fontSize: '13px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }\n      }, \"$\", payload[0].payload.value)) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 26\n        }\n      });\n    };\n\n    const renderLegendPie = props => {\n      const {\n        payload\n      } = props;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }, payload.map((entry, index) => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          display: 'inline-block',\n          marginRight: '5px',\n          width: '8px',\n          height: '8px',\n          borderRadius: '4px',\n          background: entry.color\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: '#666666',\n          fontSize: '11px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 33\n        }\n      }, entry.value))));\n    };\n\n    const renderPieChart = /*#__PURE__*/React.createElement(PieChart, {\n      width: 240,\n      height: 240,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Pie, {\n      data: pieData,\n      innerRadius: 78,\n      outerRadius: 90,\n      fill: \"#8884d8\",\n      startAngle: 90,\n      endAngle: -270,\n      paddingAngle: 5,\n      cornerRadius: 5,\n      dataKey: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, pieData.map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n      key: `cell-${index}`,\n      fill: entry.color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 55\n      }\n    }))), /*#__PURE__*/React.createElement(Tooltip, {\n      content: renderActiveTooltipPie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      verticalAlign: \"bottom\",\n      content: renderLegendPie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }));\n    const lineData = [{\n      \"id\": \"Total liabilities\",\n      \"color\": \"#406AFE\",\n      \"data\": [{\n        \"x\": \"2020.07.20\",\n        \"y\": 50.00\n      }, {\n        \"x\": \"2020.08\",\n        \"y\": 100.00\n      }, {\n        \"x\": \"2020.08.10\",\n        \"y\": 400.00\n      }, {\n        \"x\": \"2020.08.20\",\n        \"y\": 150.00\n      }, {\n        \"x\": \"2020.09\",\n        \"y\": 490.00\n      }, {\n        \"x\": \"2020.09.10\",\n        \"y\": 300.00\n      }, {\n        \"x\": \"2020.09.20\",\n        \"y\": 200.00\n      }, {\n        \"x\": \"2020.10\",\n        \"y\": 300.00\n      }, {\n        \"x\": \"2020.10.10\",\n        \"y\": 500.00\n      }, {\n        \"x\": \"2020.10.20\",\n        \"y\": 890.00\n      }, {\n        \"x\": \"2020.11\",\n        \"y\": 450.00\n      }, {\n        \"x\": \"2020.11.10\",\n        \"y\": 500.00\n      }]\n    }, {\n      \"id\": \"NetAssets\",\n      \"color\": \"#FF71C5\",\n      \"data\": [{\n        \"x\": \"2020.07.20\",\n        \"y\": 100.00\n      }, {\n        \"x\": \"2020.08\",\n        \"y\": 200.00\n      }, {\n        \"x\": \"2020.08.10\",\n        \"y\": 500.00\n      }, {\n        \"x\": \"2020.08.20\",\n        \"y\": 350.00\n      }, {\n        \"x\": \"2020.09\",\n        \"y\": 590.00\n      }, {\n        \"x\": \"2020.09.10\",\n        \"y\": 400.00\n      }, {\n        \"x\": \"2020.09.20\",\n        \"y\": 300.00\n      }, {\n        \"x\": \"2020.10\",\n        \"y\": 400.00\n      }, {\n        \"x\": \"2020.10.10\",\n        \"y\": 600.00\n      }, {\n        \"x\": \"2020.10.20\",\n        \"y\": 790.00\n      }, {\n        \"x\": \"2020.11\",\n        \"y\": 550.00\n      }, {\n        \"x\": \"2020.11.10\",\n        \"y\": 600.00\n      }]\n    }, {\n      \"id\": \"TotalAssets\",\n      \"color\": \"#F6883B\",\n      \"data\": [{\n        \"x\": \"2020.07.20\",\n        \"y\": 200.00\n      }, {\n        \"x\": \"2020.08\",\n        \"y\": 300.00\n      }, {\n        \"x\": \"2020.08.10\",\n        \"y\": 600.00\n      }, {\n        \"x\": \"2020.08.20\",\n        \"y\": 450.00\n      }, {\n        \"x\": \"2020.09\",\n        \"y\": 790.00\n      }, {\n        \"x\": \"2020.09.10\",\n        \"y\": 600.00\n      }, {\n        \"x\": \"2020.09.20\",\n        \"y\": 500.00\n      }, {\n        \"x\": \"2020.10\",\n        \"y\": 600.00\n      }, {\n        \"x\": \"2020.10.10\",\n        \"y\": 800.00\n      }, {\n        \"x\": \"2020.10.20\",\n        \"y\": 990.00\n      }, {\n        \"x\": \"2020.11\",\n        \"y\": 750.00\n      }, {\n        \"x\": \"2020.11.10\",\n        \"y\": 800.00\n      }]\n    }];\n    const barData = [{\n      currency: 'CLV',\n      earnings: 25.03,\n      color: '#FF7D30'\n    }, {\n      currency: 'cETH',\n      earnings: 20.00,\n      color: '#FF71C5'\n    }, {\n      currency: 'ACA',\n      earnings: 15.00,\n      color: '#406AFE'\n    }, {\n      currency: 'aUSD',\n      earnings: 10.00,\n      color: '#F6883B'\n    }, {\n      currency: 'bUSD',\n      earnings: -10.00,\n      color: '#FF71C5'\n    }, {\n      currency: 'cUSD',\n      earnings: -15.00,\n      color: '#FF7D30'\n    }];\n\n    const BarComponent = props => {\n      return /*#__PURE__*/React.createElement(\"g\", {\n        transform: `translate(${props.x},${props.y})`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"rect\", {\n        width: props.width,\n        height: props.height,\n        fill: props.color,\n        rx: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"text\", {\n        x: props.width + 5,\n        y: props.data.value > 0 ? -17 : props.height + 17,\n        textAnchor: \"end\",\n        dominantBaseline: \"central\",\n        fill: \"#666666\",\n        style: {\n          fontWeight: 400,\n          fontSize: 13\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 21\n        }\n      }, props.data.value > 0 ? `+$${props.data.value}` : `-$${props.data.value * -1}`));\n    };\n\n    const barInnerStyles = {\n      overlay: {\n        width: 115,\n        height: 30,\n        display: 'flex',\n        flexDirection: 'row',\n        position: \"absolute\",\n        top: 0,\n        right: 0\n      },\n      span: {\n        width: '3px',\n        height: '100%',\n        backgroundColor: '#FF7D30',\n        marginRight: '5px'\n      },\n      divWrapper: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      number: {\n        color: \"#333333\",\n        fontSize: \"13px\"\n      },\n      text: {\n        color: \"#999999\",\n        textAlign: 'center',\n        fontSize: \"10px\",\n        lineHeight: '14px'\n      }\n    };\n    const data = [{\n      \"name\": \"2020.07.20\",\n      \"Total liabilities\": 100,\n      \"NetAssets\": 200,\n      \"TotalAssets\": 300\n    }, {\n      \"name\": \"2020.08\",\n      \"Total liabilities\": 200,\n      \"NetAssets\": 300,\n      \"TotalAssets\": 400\n    }, {\n      \"name\": \"2020.08.10\",\n      \"Total liabilities\": 300,\n      \"NetAssets\": 400,\n      \"TotalAssets\": 500\n    }, {\n      \"name\": \"2020.08.20\",\n      \"Total liabilities\": 200,\n      \"NetAssets\": 300,\n      \"TotalAssets\": 400\n    }, {\n      \"name\": \"2020.09\",\n      \"Total liabilities\": 100,\n      \"NetAssets\": 200,\n      \"TotalAssets\": 300\n    }, {\n      \"name\": \"2020.09.10\",\n      \"Total liabilities\": 300,\n      \"NetAssets\": 400,\n      \"TotalAssets\": 500\n    }, {\n      \"name\": \"2020.09.20\",\n      \"Total liabilities\": 400,\n      \"NetAssets\": 500,\n      \"TotalAssets\": 600\n    }, {\n      \"name\": \"2020.09.20\",\n      \"Total liabilities\": 300,\n      \"NetAssets\": 400,\n      \"TotalAssets\": 500\n    }, {\n      \"name\": \"2020.10\",\n      \"Total liabilities\": 200,\n      \"NetAssets\": 300,\n      \"TotalAssets\": 400\n    }, {\n      \"name\": \"2020.10.10\",\n      \"Total liabilities\": 400,\n      \"NetAssets\": 500,\n      \"TotalAssets\": 600\n    }, {\n      \"name\": \"2020.10.20\",\n      \"Total liabilities\": 500,\n      \"NetAssets\": 600,\n      \"TotalAssets\": 700\n    }, {\n      \"name\": \"2020.11\",\n      \"Total liabilities\": 800,\n      \"NetAssets\": 700,\n      \"TotalAssets\": 900\n    }, {\n      \"name\": \"2020.11.10\",\n      \"Total liabilities\": 400,\n      \"NetAssets\": 500,\n      \"TotalAssets\": 600\n    }, {\n      \"name\": \"2020.11.20\",\n      \"Total liabilities\": 500,\n      \"NetAssets\": 600,\n      \"TotalAssets\": 700\n    }];\n    return /*#__PURE__*/React.createElement(AppBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BodyWrapper, {\n      gap: 'md',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(HeadContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"23px\",\n      fontWeight: \"bold\",\n      color: \"#333333\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 25\n      }\n    }, \"Assets\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: CloseBtn,\n      alt: \"\",\n      width: \"15px\",\n      height: \"15px\",\n      onClick: this.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"18px\",\n      fontWeight: \"bold\",\n      color: \"#333333\",\n      marginLeft: \"25px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 21\n      }\n    }, \"Assets distribution\"), /*#__PURE__*/React.createElement(PieChartWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 21\n      }\n    }, renderPieChart, /*#__PURE__*/React.createElement(\"div\", {\n      style: pieInnerStyles.overlay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: pieInnerStyles.number,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 29\n      }\n    }, \"$234995.300\"), /*#__PURE__*/React.createElement(\"span\", {\n      style: pieInnerStyles.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 29\n      }\n    }, \"Net assets\"))), /*#__PURE__*/React.createElement(LineChartWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(AreaChart, {\n      width: 370,\n      height: 250,\n      data: data,\n      margin: {\n        top: 10,\n        right: 30,\n        left: 0,\n        bottom: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"defs\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"linearGradient\", {\n      id: \"colorLiabilities\",\n      x1: \"0\",\n      y1: \"0\",\n      x2: \"0\",\n      y2: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"stop\", {\n      offset: \"5%\",\n      stopColor: \"#406AFE\",\n      stopOpacity: 0.7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"stop\", {\n      offset: \"80%\",\n      stopColor: \"#ffffff\",\n      stopOpacity: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n      id: \"colorNetAssets\",\n      x1: \"0\",\n      y1: \"0\",\n      x2: \"0\",\n      y2: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"stop\", {\n      offset: \"5%\",\n      stopColor: \"#FF71C5\",\n      stopOpacity: 0.7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"stop\", {\n      offset: \"80%\",\n      stopColor: \"#ffffff\",\n      stopOpacity: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n      id: \"colorTotalAssets\",\n      x1: \"0\",\n      y1: \"0\",\n      x2: \"0\",\n      y2: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"stop\", {\n      offset: \"5%\",\n      stopColor: \"#FF7D30\",\n      stopOpacity: 0.7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"stop\", {\n      offset: \"80%\",\n      stopColor: \"#ffffff\",\n      stopOpacity: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Area, {\n      type: \"monotone\",\n      dataKey: \"TotalAssets\",\n      stroke: \"#FF7D30\",\n      fillOpacity: 1,\n      fill: \"url(#colorTotalAssets)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Area, {\n      type: \"monotone\",\n      dataKey: \"NetAssets\",\n      stroke: \"#FF71C5\",\n      fillOpacity: 1,\n      fill: \"url(#colorNetAssets)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Area, {\n      type: \"monotone\",\n      dataKey: \"Total liabilities\",\n      stroke: \"#406AFE\",\n      fillOpacity: 1,\n      fill: \"url(#colorLiabilities)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"18px\",\n      fontWeight: \"bold\",\n      color: \"#333333\",\n      marginLeft: \"25px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 21\n      }\n    }, \"Assets trend\"), /*#__PURE__*/React.createElement(LineChartWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ResponsiveLine, {\n      data: lineData,\n      margin: {\n        top: 30,\n        right: 0,\n        bottom: 50,\n        left: 0\n      },\n      xScale: {\n        type: 'point'\n      },\n      yScale: {\n        type: 'linear',\n        min: 'auto',\n        max: 'auto',\n        stacked: false,\n        reverse: false\n      },\n      yFormat: \" >-.2f\",\n      axisTop: null,\n      axisRight: null,\n      axisLeft: null,\n      axisBottom: {\n        orient: 'bottom',\n        tickSize: 0,\n        tickPadding: 15,\n        tickRotation: 0,\n        tickValues: [\"2020.08\", \"2020.09\", \"2020.10\", \"2020.11\"]\n      },\n      enableArea: true,\n      enableGridX: false,\n      enableGridY: false,\n      crosshairType: \"top\",\n      curve: \"monotoneX\",\n      colors: ['#406AFE', '#FF71C5', '#F6883B'],\n      pointSize: 5,\n      pointColor: \"#ffffff\",\n      pointBorderWidth: 2,\n      pointBorderColor: {\n        from: 'serieColor'\n      },\n      pointLabelYOffset: -12,\n      enablePoints: false,\n      useMesh: true,\n      enableSlices: \"x\",\n      animate: true,\n      sliceTooltip: ({\n        slice\n      }) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            background: 'white',\n            padding: '9px 12px',\n            opacity: '0.92',\n            width: '130px',\n            height: '140px',\n            borderRadius: '10px',\n            boxShadow: '0px 0px 10px 2px rgba(0, 0, 0, 0.15)'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 37\n          }\n        }, slice.points.map(point => /*#__PURE__*/React.createElement(\"div\", {\n          key: point.id,\n          style: {\n            color: '#999999',\n            padding: '3px 0',\n            fontSize: '11px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            display: 'inline-block',\n            marginRight: '5px',\n            width: '8px',\n            height: '8px',\n            borderRadius: '4px',\n            background: point.serieColor\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 53\n          }\n        }), point.serieId), /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: '#333333',\n            marginLeft: '13px',\n            fontSize: '13px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 49\n          }\n        }, \"$\", point.data.yFormatted))));\n      },\n      defs: [{\n        id: 'gradientA',\n        type: 'linearGradient',\n        colors: [{\n          offset: 0,\n          color: '#F6883B'\n        }, {\n          offset: 60,\n          color: '#ffffff'\n        }]\n      }, {\n        id: 'gradientB',\n        type: 'linearGradient',\n        colors: [{\n          offset: 0,\n          color: '#FF71C5'\n        }, {\n          offset: 60,\n          color: '#ffffff'\n        }]\n      }, {\n        id: 'gradientC',\n        type: 'linearGradient',\n        colors: [{\n          offset: 0,\n          color: '#406AFE'\n        }, {\n          offset: 100,\n          color: '#ffffff'\n        }]\n      }],\n      fill: [{\n        match: d => d.id === 'TotalAssets',\n        id: 'gradientA'\n      }, {\n        match: d => d.id === 'NetAssets',\n        id: 'gradientB'\n      }, {\n        match: d => d.id === 'Total liabilities',\n        id: 'gradientC'\n      }] // legends={[\n      //     {\n      //         anchor: 'top',\n      //         direction: 'row',\n      //         justify: false,\n      //         translateX: 10,\n      //         translateY: -40,\n      //         itemsSpacing: 0,\n      //         itemDirection: 'left-to-right',\n      //         itemWidth: 100,\n      //         itemHeight: 20,\n      //         symbolSize: 8,\n      //         symbolShape: 'circle',\n      //     }\n      // ]}\n      ,\n      theme: {\n        axis: {\n          ticks: {\n            text: {\n              fill: \"#666666\"\n            }\n          }\n        } // legends: {\n        //     text: {\n        //         fill: \"#999999\",\n        //     }\n        // }\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"18px\",\n      fontWeight: \"bold\",\n      color: \"#333333\",\n      marginLeft: \"25px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 21\n      }\n    }, \"Profit and loss of assets\"), /*#__PURE__*/React.createElement(BarChartWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 758,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ResponsiveBar, {\n      enableGridY: false,\n      margin: {\n        top: 60,\n        right: 20,\n        bottom: 60,\n        left: 20\n      },\n      padding: 0.6,\n      colors: getOrdinalColorScale(barData.map(c => c.color), 'index'),\n      axisBottom: {\n        tickSize: 0,\n        tickPadding: 35,\n        tickRotation: 0\n      },\n      axisLeft: null,\n      borderRadius: 5,\n      labelTextColor: \"#666666\",\n      barComponent: BarComponent,\n      data: barData,\n      keys: [\"earnings\"],\n      indexBy: \"currency\",\n      markers: [{\n        axis: 'y',\n        value: 0,\n        lineStyle: {\n          stroke: 'rgba(64, 106, 254, 0.12)'\n        }\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: barInnerStyles.overlay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: barInnerStyles.span,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: barInnerStyles.divWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: barInnerStyles.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 33\n      }\n    }, \"Earnings today\"), /*#__PURE__*/React.createElement(\"span\", {\n      style: barInnerStyles.number,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 33\n      }\n    }, \"$1254576.03\"))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/src/pages/AssetsMDetails/index.tsx"],"names":["React","Component","styled","Text","AppBody","AutoColumn","RowBetween","ResponsiveLine","ResponsiveBar","getOrdinalColorScale","AreaChart","XAxis","Area","PieChart","Pie","Cell","Tooltip","Legend","BodyWrapper","HeadContainer","PieChartWrapper","div","LineChartWrapper","BarChartWrapper","AssetsMDetail","goBack","props","history","render","pieData","id","name","value","color","pieInnerStyles","root","fontFamily","textAlign","position","width","height","overlay","borderRadius","display","flexDirection","justifyContent","backgroundColor","boxShadow","top","right","bottom","alignItems","number","fontSize","fontWeight","text","renderActiveTooltipPie","payload","padding","marginRight","background","marginLeft","renderLegendPie","map","entry","index","renderPieChart","lineData","barData","currency","earnings","BarComponent","x","y","data","barInnerStyles","span","divWrapper","lineHeight","CloseBtn","left","type","min","max","stacked","reverse","orient","tickSize","tickPadding","tickRotation","tickValues","from","slice","opacity","points","point","serieColor","serieId","yFormatted","colors","offset","match","d","axis","ticks","fill","c","lineStyle","stroke"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport styled from 'styled-components'\nimport { Text } from 'rebass'\nimport AppBody from '../AppBody'\nimport Column, { AutoColumn, ColumnCenter } from '../../components/Column'\nimport Row, {RowBetween, RowEnd} from '../../components/Row'\nimport CloseBtn from '../../assets/images/closeBtn.svg'\nimport { ResponsivePie } from '@nivo/pie';\nimport { ResponsiveLine } from '@nivo/line';\nimport { ResponsiveBar } from \"@nivo/bar\";\nimport { getOrdinalColorScale } from '@nivo/colors';\nimport { AreaChart, XAxis, YAxis, CartesianGrid, Area, PieChart, Pie, Cell, Tooltip, Sector, Legend } from 'recharts';\n\nconst BodyWrapper = styled(AutoColumn)`\n`;\n\nconst HeadContainer = styled(RowBetween)`\n  margin-top: 50px;\n  padding: 0 20px;\n  height: 44px;\n`;\n\nconst PieChartWrapper = styled.div`\n  height: 250px;\n  display: flex;\n  justify-content: center;\n`;\n\nconst LineChartWrapper = styled.div`\n  margin: 0 30px;\n  height: 250px;\n  background: linear-gradient(180deg,#FFFFFF 0%, #FFF6FA 50%, #FFFFFF 100%);\n  border-radius: 15px;\n`;\n\nconst BarChartWrapper = styled.div`\n  position: relative;\n  margin: 20px 30px;\n  height: 220px;\n  background: linear-gradient(180deg, #FFFFFF 0%, #EFFBFF 50%, #FFFFFF 100%);\n  border-radius: 15px;\n`;\n\nexport default class AssetsMDetail extends Component<any, any> {\n    // constructor(props: any, context: any) {\n    //     super(props, context);\n    //     this.state = {\n    //         activeIndex: 0,\n    //     };\n    // }\n\n    goBack = () => {\n        this.props.history.goBack();\n    }\n    render() {\n        const pieData = [\n            {\n                id: \"Total assets\",\n                name: \"Total assets\",\n                value: 75,\n                color: \"#FF7D30\"\n            },\n            {\n                id: \"Total liabilities\",\n                name: \"Total liabilities\",\n                value: 25,\n                color: \"#FF589D\"\n            },\n        ];\n        const pieInnerStyles = {\n            root: {\n                fontFamily: \"consolas, sans-serif\",\n                textAlign: \"center\",\n                position: \"relative\",\n                width: 600,\n                height: 600,\n            },\n            overlay: {\n                height: 110,\n                width: 110,\n                borderRadius: '50%',\n                display: 'flex',\n                flexDirection: 'column' as 'column',\n                justifyContent: 'center' as 'center',\n                backgroundColor: '#ffffff',\n                boxShadow: '0px 5px 10px 2px rgba(255, 125, 48, 0.15)',\n                position: \"absolute\" as \"absolute\",\n                top: 200,\n                right: 133,\n                bottom: 0,\n                alignItems: \"center\" as \"center\",\n            },\n            number: {\n                color: \"#333333\",\n                fontSize: \"15px\",\n                fontWeight: 'bold' as 'bold'\n            },\n            text: {\n                color: \"#999999\",\n                fontSize: \"12px\",\n                fontWeight: \"normal\" as \"normal\"\n            }\n        };\n        const renderActiveTooltipPie = (props: any) => {\n            const { payload } = props;\n            return (\n                payload[0]? <div\n                    key={payload[0].payload.id}\n                    style={{\n                        color: '#999999',\n                        fontSize: '11px',\n                        backgroundColor: '#ffffff',\n                        borderRadius: '5px',\n                        padding: '3px 10px',\n                        boxShadow: '0px 0px 10px 2px rgba(0, 0, 0, 0.15)',\n                    }}\n                >\n                        <span style={{\n                            display: 'inline-block',\n                            marginRight: '5px',\n                            width: '8px',\n                            height: '8px',\n                            borderRadius: '4px',\n                            background: payload[0].payload.color\n                        }}></span>\n                    {payload[0].payload.name}\n                    <span style={{color: '#333333', marginLeft: '5px', fontSize: '13px'}}>${payload[0].payload.value}</span>\n                </div> : <div></div>\n            );\n        };\n        const renderLegendPie = (props: any) => {\n            const { payload } = props;\n\n            return (\n                <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                    {\n                        payload.map((entry: any, index: number) => (\n                            <div>\n                                <span style={{\n                                    display: 'inline-block',\n                                    marginRight: '5px',\n                                    width: '8px',\n                                    height: '8px',\n                                    borderRadius: '4px',\n                                    background: entry.color\n                                }}></span>\n                                <span style={{color: '#666666', fontSize: '11px'}}>{entry.value}</span>\n                            </div>\n                        ))\n                    }\n                </div>\n            );\n        }\n        const renderPieChart = (\n            <PieChart width={240} height={240}>\n                <Pie\n                    data={pieData}\n                    innerRadius={78}\n                    outerRadius={90}\n                    fill=\"#8884d8\"\n                    startAngle={90}\n                    endAngle={-270}\n                    paddingAngle={5}\n                    cornerRadius={5}\n                    dataKey=\"value\"\n                >\n                    {\n                        pieData.map((entry, index) => <Cell key={`cell-${index}`} fill={entry.color} />)\n                    }\n                </Pie>\n                <Tooltip content={renderActiveTooltipPie} />\n                <Legend verticalAlign=\"bottom\"  content={renderLegendPie} />\n            </PieChart>\n        );\n\n        const lineData = [\n            {\n                \"id\": \"Total liabilities\",\n                \"color\": \"#406AFE\",\n                \"data\": [\n                    {\n                        \"x\": \"2020.07.20\",\n                        \"y\": 50.00\n                    },\n                    {\n                        \"x\": \"2020.08\",\n                        \"y\": 100.00\n                    },\n                    {\n                        \"x\": \"2020.08.10\",\n                        \"y\": 400.00\n                    },\n                    {\n                        \"x\": \"2020.08.20\",\n                        \"y\": 150.00\n                    },\n                    {\n                        \"x\": \"2020.09\",\n                        \"y\": 490.00\n                    },\n                    {\n                        \"x\": \"2020.09.10\",\n                        \"y\": 300.00\n                    },\n                    {\n                        \"x\": \"2020.09.20\",\n                        \"y\": 200.00\n                    },\n                    {\n                        \"x\": \"2020.10\",\n                        \"y\": 300.00\n                    },\n                    {\n                        \"x\": \"2020.10.10\",\n                        \"y\": 500.00\n                    },\n                    {\n                        \"x\": \"2020.10.20\",\n                        \"y\": 890.00\n                    },\n                    {\n                        \"x\": \"2020.11\",\n                        \"y\": 450.00\n                    },\n                    {\n                        \"x\": \"2020.11.10\",\n                        \"y\": 500.00\n                    },\n                ]\n            },\n            {\n                \"id\": \"NetAssets\",\n                \"color\": \"#FF71C5\",\n                \"data\": [\n                    {\n                        \"x\": \"2020.07.20\",\n                        \"y\": 100.00\n                    },\n                    {\n                        \"x\": \"2020.08\",\n                        \"y\": 200.00\n                    },\n                    {\n                        \"x\": \"2020.08.10\",\n                        \"y\": 500.00\n                    },\n                    {\n                        \"x\": \"2020.08.20\",\n                        \"y\": 350.00\n                    },\n                    {\n                        \"x\": \"2020.09\",\n                        \"y\": 590.00\n                    },\n                    {\n                        \"x\": \"2020.09.10\",\n                        \"y\": 400.00\n                    },\n                    {\n                        \"x\": \"2020.09.20\",\n                        \"y\": 300.00\n                    },\n                    {\n                        \"x\": \"2020.10\",\n                        \"y\": 400.00\n                    },\n                    {\n                        \"x\": \"2020.10.10\",\n                        \"y\": 600.00\n                    },\n                    {\n                        \"x\": \"2020.10.20\",\n                        \"y\": 790.00\n                    },\n                    {\n                        \"x\": \"2020.11\",\n                        \"y\": 550.00\n                    },\n                    {\n                        \"x\": \"2020.11.10\",\n                        \"y\": 600.00\n                    },\n                ]\n            },\n            {\n                \"id\": \"TotalAssets\",\n                \"color\": \"#F6883B\",\n                \"data\": [\n                    {\n                        \"x\": \"2020.07.20\",\n                        \"y\": 200.00\n                    },\n                    {\n                        \"x\": \"2020.08\",\n                        \"y\": 300.00\n                    },\n                    {\n                        \"x\": \"2020.08.10\",\n                        \"y\": 600.00\n                    },\n                    {\n                        \"x\": \"2020.08.20\",\n                        \"y\": 450.00\n                    },\n                    {\n                        \"x\": \"2020.09\",\n                        \"y\": 790.00\n                    },\n                    {\n                        \"x\": \"2020.09.10\",\n                        \"y\": 600.00\n                    },\n                    {\n                        \"x\": \"2020.09.20\",\n                        \"y\": 500.00\n                    },\n                    {\n                        \"x\": \"2020.10\",\n                        \"y\": 600.00\n                    },\n                    {\n                        \"x\": \"2020.10.10\",\n                        \"y\": 800.00\n                    },\n                    {\n                        \"x\": \"2020.10.20\",\n                        \"y\": 990.00\n                    },\n                    {\n                        \"x\": \"2020.11\",\n                        \"y\": 750.00\n                    },\n                    {\n                        \"x\": \"2020.11.10\",\n                        \"y\": 800.00\n                    },\n                ]\n            },\n        ];\n\n        const barData = [\n            { currency: 'CLV', earnings: 25.03, color: '#FF7D30' },\n            { currency: 'cETH', earnings: 20.00, color: '#FF71C5' },\n            { currency: 'ACA', earnings: 15.00, color: '#406AFE' },\n            { currency: 'aUSD', earnings: 10.00, color: '#F6883B' },\n            { currency: 'bUSD', earnings: -10.00, color: '#FF71C5' },\n            { currency: 'cUSD', earnings: -15.00, color: '#FF7D30' }\n        ];\n\n        const BarComponent = (props: any) => {\n            return (\n                <g transform={`translate(${props.x},${props.y})`}>\n                    <rect\n                        width={props.width}\n                        height={props.height}\n                        fill={props.color}\n                        rx={1}\n                    />\n                    <text\n                        x={props.width + 5}\n                        y={props.data.value > 0 ? -17 : props.height + 17}\n                        textAnchor=\"end\"\n                        dominantBaseline=\"central\"\n                        fill='#666666'\n                        style={{\n                            fontWeight: 400,\n                            fontSize: 13,\n                        }}\n                    >\n                        {props.data.value > 0 ? `+$${props.data.value}` : `-$${props.data.value * -1}`}\n                    </text>\n                </g>\n            )\n        }\n\n        const barInnerStyles = {\n            overlay: {\n                width: 115,\n                height: 30,\n                display: 'flex',\n                flexDirection: 'row' as 'row',\n                position: \"absolute\" as \"absolute\",\n                top: 0,\n                right: 0,\n            },\n            span: {\n                width: '3px',\n                height: '100%',\n                backgroundColor: '#FF7D30',\n                marginRight: '5px'\n            },\n            divWrapper: {\n                display: 'flex',\n                flexDirection: 'column' as 'column',\n            },\n            number: {\n                color: \"#333333\",\n                fontSize: \"13px\",\n            },\n            text: {\n                color: \"#999999\",\n                textAlign: 'center' as 'center',\n                fontSize: \"10px\",\n                lineHeight: '14px',\n            }\n        };\n\n\n        const data = [\n            {\n                \"name\": \"2020.07.20\",\n                \"Total liabilities\": 100,\n                \"NetAssets\": 200,\n                \"TotalAssets\": 300\n            },\n            {\n                \"name\": \"2020.08\",\n                \"Total liabilities\": 200,\n                \"NetAssets\": 300,\n                \"TotalAssets\": 400\n            },\n            {\n                \"name\": \"2020.08.10\",\n                \"Total liabilities\": 300,\n                \"NetAssets\": 400,\n                \"TotalAssets\": 500\n            },\n            {\n                \"name\": \"2020.08.20\",\n                \"Total liabilities\": 200,\n                \"NetAssets\": 300,\n                \"TotalAssets\": 400\n            },\n            {\n                \"name\": \"2020.09\",\n                \"Total liabilities\": 100,\n                \"NetAssets\": 200,\n                \"TotalAssets\": 300\n            },\n            {\n                \"name\": \"2020.09.10\",\n                \"Total liabilities\": 300,\n                \"NetAssets\": 400,\n                \"TotalAssets\": 500\n            },\n            {\n                \"name\": \"2020.09.20\",\n                \"Total liabilities\": 400,\n                \"NetAssets\": 500,\n                \"TotalAssets\": 600\n            },\n            {\n                \"name\": \"2020.09.20\",\n                \"Total liabilities\": 300,\n                \"NetAssets\": 400,\n                \"TotalAssets\": 500\n            },\n            {\n                \"name\": \"2020.10\",\n                \"Total liabilities\": 200,\n                \"NetAssets\": 300,\n                \"TotalAssets\": 400\n            },\n            {\n                \"name\": \"2020.10.10\",\n                \"Total liabilities\": 400,\n                \"NetAssets\": 500,\n                \"TotalAssets\": 600\n            },\n            {\n                \"name\": \"2020.10.20\",\n                \"Total liabilities\": 500,\n                \"NetAssets\": 600,\n                \"TotalAssets\": 700\n            },\n            {\n                \"name\": \"2020.11\",\n                \"Total liabilities\": 800,\n                \"NetAssets\": 700,\n                \"TotalAssets\": 900\n            },\n            {\n                \"name\": \"2020.11.10\",\n                \"Total liabilities\": 400,\n                \"NetAssets\": 500,\n                \"TotalAssets\": 600\n            } ,\n            {\n                \"name\": \"2020.11.20\",\n                \"Total liabilities\": 500,\n                \"NetAssets\": 600,\n                \"TotalAssets\": 700\n            }\n        ]\n\n\n        return (\n            <AppBody>\n                <BodyWrapper gap={'md'}>\n                    <HeadContainer>\n                        <Text fontSize='23px' fontWeight='bold' color='#333333'>Assets</Text>\n                        <img src={CloseBtn} alt=\"\" width='15px' height='15px' onClick={this.goBack} />\n                    </HeadContainer>\n                    <Text fontSize='18px' fontWeight='bold' color='#333333' marginLeft='25px'>Assets distribution</Text>\n                    <PieChartWrapper>\n                        {renderPieChart}\n                        <div style={pieInnerStyles.overlay}>\n                            <span style={pieInnerStyles.number}>$234995.300</span>\n                            <span style={pieInnerStyles.text}>Net assets</span>\n                        </div>\n                    </PieChartWrapper>\n                    <LineChartWrapper>\n                        <AreaChart width={370} height={250} data={data}\n                                   margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n                            <defs>\n                                <linearGradient id=\"colorLiabilities\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                    <stop offset=\"5%\" stopColor=\"#406AFE\" stopOpacity={0.7}/>\n                                    <stop offset=\"80%\" stopColor=\"#ffffff\" stopOpacity={0}/>\n                                </linearGradient>\n                                <linearGradient id=\"colorNetAssets\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                    <stop offset=\"5%\" stopColor=\"#FF71C5\" stopOpacity={0.7}/>\n                                    <stop offset=\"80%\" stopColor=\"#ffffff\" stopOpacity={0}/>\n                                </linearGradient>\n                                <linearGradient id=\"colorTotalAssets\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                    <stop offset=\"5%\" stopColor=\"#FF7D30\" stopOpacity={0.7}/>\n                                    <stop offset=\"80%\" stopColor=\"#ffffff\" stopOpacity={0}/>\n                                </linearGradient>\n                            </defs>\n                            <XAxis dataKey=\"name\" />\n                            {/*<YAxis />*/}\n                            {/*<CartesianGrid strokeDasharray=\"3 3\" />*/}\n                            <Tooltip />\n                            <Area type=\"monotone\" dataKey=\"TotalAssets\" stroke=\"#FF7D30\" fillOpacity={1} fill=\"url(#colorTotalAssets)\" />\n\n                            <Area type=\"monotone\" dataKey=\"NetAssets\" stroke=\"#FF71C5\" fillOpacity={1} fill=\"url(#colorNetAssets)\" />\n\n                            <Area type=\"monotone\" dataKey=\"Total liabilities\" stroke=\"#406AFE\" fillOpacity={1} fill=\"url(#colorLiabilities)\" />\n                        </AreaChart>\n                    </LineChartWrapper>\n                    {/*<div style={{height: 250}}>*/}\n                    {/*    <ResponsivePie*/}\n                    {/*        data={pieData}*/}\n                    {/*        margin={{ top: 20, right: 0, bottom: 50, left: 0 }}*/}\n                    {/*        startAngle={1}*/}\n                    {/*        innerRadius={0.88}*/}\n                    {/*        padAngle={3}*/}\n                    {/*        cornerRadius={5}*/}\n                    {/*        colors={['#FF7D30', '#FF589D']}*/}\n                    {/*        borderWidth={1}*/}\n                    {/*        borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}*/}\n                    {/*        radialLabelsSkipAngle={10}*/}\n                    {/*        radialLabelsTextColor=\"#333333\"*/}\n                    {/*        radialLabelsLinkColor={{ from: 'color' }}*/}\n                    {/*        sliceLabelsSkipAngle={10}*/}\n                    {/*        sliceLabelsTextColor=\"#333333\"*/}\n                    {/*        enableRadialLabels={false}*/}\n                    {/*        enableSliceLabels={false}*/}\n                    {/*        tooltip={function(e){*/}\n                    {/*            var t=e.datum;*/}\n                    {/*            return <div*/}\n                    {/*                key={t.id}*/}\n                    {/*                style={{*/}\n                    {/*                    color: '#999999',*/}\n                    {/*                    fontSize: '11px',*/}\n                    {/*                    backgroundColor: '#ffffff',*/}\n                    {/*                    borderRadius: '5px',*/}\n                    {/*                    padding: '3px 10px',*/}\n                    {/*                    boxShadow: '0px 0px 10px 2px rgba(0, 0, 0, 0.15)',*/}\n                    {/*                }}*/}\n                    {/*            >*/}\n                    {/*                <span style={{*/}\n                    {/*                    display: 'inline-block',*/}\n                    {/*                    marginRight: '5px',*/}\n                    {/*                    width: '8px',*/}\n                    {/*                    height: '8px',*/}\n                    {/*                    borderRadius: '4px',*/}\n                    {/*                    background: t.color*/}\n                    {/*                }}></span>*/}\n                    {/*                {t.id}*/}\n                    {/*                <span style={{color: '#333333', marginLeft: '5px', fontSize: '13px'}}>${t.value}</span>*/}\n                    {/*            </div>*/}\n                    {/*        }}*/}\n                    {/*        legends={[*/}\n                    {/*            {*/}\n                    {/*                anchor: 'bottom',*/}\n                    {/*                direction: 'row',*/}\n                    {/*                justify: false,*/}\n                    {/*                translateX: 0,*/}\n                    {/*                translateY: 40,*/}\n                    {/*                itemsSpacing: 20,*/}\n                    {/*                itemWidth: 100,*/}\n                    {/*                itemHeight: 18,*/}\n                    {/*                itemTextColor: '#999',*/}\n                    {/*                itemDirection: 'left-to-right',*/}\n                    {/*                itemOpacity: 1,*/}\n                    {/*                symbolSize: 8,*/}\n                    {/*                symbolShape: 'circle',*/}\n                    {/*                effects: [*/}\n                    {/*                    {*/}\n                    {/*                        on: 'hover',*/}\n                    {/*                        style: {*/}\n                    {/*                            itemTextColor: '#000',*/}\n                    {/*                        }*/}\n                    {/*                    }*/}\n                    {/*                ]*/}\n                    {/*            }*/}\n                    {/*        ]}*/}\n                    {/*        theme={{*/}\n                    {/*            legends: {*/}\n                    {/*                text: {*/}\n                    {/*                    color: '#666666'*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }}*/}\n                    {/*    />*/}\n                    {/*    <div style={pieInnerStyles.overlay}>*/}\n                    {/*        <span style={pieInnerStyles.number}>$234995.300</span>*/}\n                    {/*        <span style={pieInnerStyles.text}>Net assets</span>*/}\n                    {/*    </div>*/}\n                    {/*</div>*/}\n\n                    <Text fontSize='18px' fontWeight='bold' color='#333333' marginLeft='25px'>Assets trend</Text>\n                    <LineChartWrapper>\n                        <ResponsiveLine\n                            data={lineData}\n                            margin={{ top: 30, right: 0, bottom: 50, left: 0 }}\n                            xScale={{ type: 'point' }}\n                            yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}\n                            yFormat=\" >-.2f\"\n                            axisTop={null}\n                            axisRight={null}\n                            axisLeft={null}\n                            axisBottom={{\n                                orient: 'bottom',\n                                tickSize: 0,\n                                tickPadding: 15,\n                                tickRotation: 0,\n                                tickValues: [\"2020.08\", \"2020.09\", \"2020.10\", \"2020.11\"],\n                            }}\n                            enableArea={true}\n                            enableGridX={false}\n                            enableGridY={false}\n                            crosshairType=\"top\"\n                            curve='monotoneX'\n                            colors={['#406AFE', '#FF71C5', '#F6883B']}\n                            pointSize={5}\n                            pointColor=\"#ffffff\"\n                            pointBorderWidth={2}\n                            pointBorderColor={{ from: 'serieColor' }}\n                            pointLabelYOffset={-12}\n                            enablePoints={false}\n                            useMesh={true}\n                            enableSlices='x'\n                            animate={true}\n                            sliceTooltip={({ slice }) => {\n                                return (\n                                    <div\n                                        style={{\n                                            background: 'white',\n                                            padding: '9px 12px',\n                                            opacity: '0.92',\n                                            width: '130px',\n                                            height: '140px',\n                                            borderRadius: '10px',\n                                            boxShadow: '0px 0px 10px 2px rgba(0, 0, 0, 0.15)',\n                                        }}\n                                    >\n                                        {slice.points.map(point => (\n                                            <div\n                                                key={point.id}\n                                                style={{\n                                                    color: '#999999',\n                                                    padding: '3px 0',\n                                                    fontSize: '11px'\n                                                }}\n                                            >\n                                                <div>\n                                                    <span style={{\n                                                        display: 'inline-block',\n                                                        marginRight: '5px',\n                                                        width: '8px',\n                                                        height: '8px',\n                                                        borderRadius: '4px',\n                                                        background: point.serieColor\n                                                    }}></span>\n                                                    {point.serieId}\n                                                </div>\n                                                <span style={{color: '#333333', marginLeft: '13px', fontSize: '13px'}}>${point.data.yFormatted}</span>\n                                            </div>\n                                        ))}\n                                    </div>\n                                )\n                            }}\n                            defs={[\n                                {\n                                    id: 'gradientA',\n                                    type: 'linearGradient',\n                                    colors: [\n                                        { offset: 0, color: '#F6883B' },\n                                        { offset: 60, color: '#ffffff' },\n                                    ],\n                                },\n                                {\n                                    id: 'gradientB',\n                                    type: 'linearGradient',\n                                    colors: [\n                                        { offset: 0, color: '#FF71C5' },\n                                        { offset: 60, color: '#ffffff' },\n                                    ],\n                                },\n                                {\n                                    id: 'gradientC',\n                                    type: 'linearGradient',\n                                    colors: [\n                                        { offset: 0, color: '#406AFE' },\n                                        { offset: 100, color: '#ffffff' },\n                                    ],\n                                },\n                            ]}\n                            fill={[\n                                { match: d => d.id === 'TotalAssets', id: 'gradientA' },\n                                { match: d => d.id === 'NetAssets', id: 'gradientB' },\n                                { match: d => d.id === 'Total liabilities', id: 'gradientC' },\n                            ]}\n                            // legends={[\n                            //     {\n                            //         anchor: 'top',\n                            //         direction: 'row',\n                            //         justify: false,\n                            //         translateX: 10,\n                            //         translateY: -40,\n                            //         itemsSpacing: 0,\n                            //         itemDirection: 'left-to-right',\n                            //         itemWidth: 100,\n                            //         itemHeight: 20,\n                            //         symbolSize: 8,\n                            //         symbolShape: 'circle',\n                            //     }\n                            // ]}\n                            theme={{\n                                axis: {\n                                    ticks: {\n                                        text: {\n                                            fill: \"#666666\",\n                                        },\n                                    },\n                                },\n                                // legends: {\n                                //     text: {\n                                //         fill: \"#999999\",\n                                //     }\n                                // }\n                            }}\n                        />\n                    </LineChartWrapper>\n\n                    <Text fontSize='18px' fontWeight='bold' color='#333333' marginLeft='25px'>Profit and loss of assets</Text>\n                    <BarChartWrapper>\n                        <ResponsiveBar\n                            enableGridY={false}\n                            margin={{ top: 60, right: 20, bottom: 60, left: 20 }}\n                            padding={0.6}\n                            colors={getOrdinalColorScale(barData.map(c => c.color), 'index')}\n                            axisBottom={{\n                                tickSize: 0,\n                                tickPadding: 35,\n                                tickRotation: 0,\n                            }}\n                            axisLeft={null}\n                            borderRadius={5}\n                            labelTextColor='#666666'\n                            barComponent={BarComponent}\n                            data={barData}\n                            keys={[\"earnings\"]}\n                            indexBy=\"currency\"\n                            markers={[\n                                {\n                                    axis: 'y',\n                                    value: 0,\n                                    lineStyle: { stroke: 'rgba(64, 106, 254, 0.12)'},\n                                },\n                            ]}\n                        />\n                        <div style={barInnerStyles.overlay}>\n                            <span style={barInnerStyles.span}></span>\n                            <div style={barInnerStyles.divWrapper}>\n                                <span style={barInnerStyles.text}>Earnings today</span>\n                                <span style={barInnerStyles.number}>$1254576.03</span>\n                            </div>\n                        </div>\n                    </BarChartWrapper>\n                </BodyWrapper>\n            </AppBody>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}