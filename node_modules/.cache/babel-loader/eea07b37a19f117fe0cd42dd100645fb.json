{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar number_1 = require(\"../../util/number\");\n\nvar graphic_1 = require(\"../../util/graphic\");\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar labelGuideHelper_1 = require(\"../../label/labelGuideHelper\");\n\nvar labelLayoutHelper_1 = require(\"../../label/labelLayoutHelper\");\n\nvar RADIAN = Math.PI / 180;\n\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight, viewLeft, viewTop, farthestX) {\n  if (list.length < 2) {\n    return;\n  }\n\n  ;\n\n  function recalculateXOnSemiToAlignOnEllipseCurve(semi) {\n    var rB = semi.rB;\n    var rB2 = rB * rB;\n\n    for (var i = 0; i < semi.list.length; i++) {\n      var item = semi.list[i];\n      var dy = Math.abs(item.label.y - cy);\n      var rA = r + item.len;\n      var rA2 = rA * rA;\n      var dx = Math.sqrt((1 - Math.abs(dy * dy / rB2)) * rA2);\n      item.label.x = cx + (dx + item.len2) * dir;\n    }\n  }\n\n  function recalculateX(items) {\n    var topSemi = {\n      list: [],\n      maxY: 0\n    };\n    var bottomSemi = {\n      list: [],\n      maxY: 0\n    };\n\n    for (var i = 0; i < items.length; i++) {\n      if (items[i].labelAlignTo !== 'none') {\n        continue;\n      }\n\n      var item = items[i];\n      var semi = item.label.y > cy ? bottomSemi : topSemi;\n      var dy = Math.abs(item.label.y - cy);\n\n      if (dy > semi.maxY) {\n        var dx = item.label.x - cx - item.len2 * dir;\n        var rA = r + item.len;\n        var rB = dx < rA ? Math.sqrt(dy * dy / (1 - dx * dx / rA / rA)) : rA;\n        semi.rB = rB;\n        semi.maxY = dy;\n      }\n\n      semi.list.push(item);\n    }\n\n    recalculateXOnSemiToAlignOnEllipseCurve(topSemi);\n    recalculateXOnSemiToAlignOnEllipseCurve(bottomSemi);\n  }\n\n  var len = list.length;\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].position === 'outer' && list[i].labelAlignTo === 'labelLine') {\n      var dx = list[i].label.x - farthestX;\n      list[i].linePoints[1][0] += dx;\n      list[i].label.x = farthestX;\n    }\n  }\n\n  if (labelLayoutHelper_1.shiftLayoutOnY(list, viewTop, viewTop + viewHeight)) {\n    recalculateX(list);\n  }\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight, viewLeft, viewTop) {\n  var leftList = [];\n  var rightList = [];\n  var leftmostX = Number.MAX_VALUE;\n  var rightmostX = -Number.MAX_VALUE;\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var label = labelLayoutList[i].label;\n\n    if (isPositionCenter(labelLayoutList[i])) {\n      continue;\n    }\n\n    if (label.x < cx) {\n      leftmostX = Math.min(leftmostX, label.x);\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightmostX = Math.max(rightmostX, label.x);\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight, viewLeft, viewTop, rightmostX);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight, viewLeft, viewTop, leftmostX);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var layout = labelLayoutList[i];\n    var label = layout.label;\n\n    if (isPositionCenter(layout)) {\n      continue;\n    }\n\n    var linePoints = layout.linePoints;\n\n    if (linePoints) {\n      var isAlignToEdge = layout.labelAlignTo === 'edge';\n      var realTextWidth = layout.rect.width;\n      var targetTextWidth = void 0;\n\n      if (isAlignToEdge) {\n        if (label.x < cx) {\n          targetTextWidth = linePoints[2][0] - layout.labelDistance - viewLeft - layout.edgeDistance;\n        } else {\n          targetTextWidth = viewLeft + viewWidth - layout.edgeDistance - linePoints[2][0] - layout.labelDistance;\n        }\n      } else {\n        if (label.x < cx) {\n          targetTextWidth = label.x - viewLeft - layout.bleedMargin;\n        } else {\n          targetTextWidth = viewLeft + viewWidth - label.x - layout.bleedMargin;\n        }\n      }\n\n      if (targetTextWidth < layout.rect.width) {\n        layout.label.style.width = targetTextWidth;\n\n        if (layout.labelAlignTo === 'edge') {\n          realTextWidth = targetTextWidth;\n        }\n      }\n\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (isAlignToEdge) {\n        if (label.x < cx) {\n          linePoints[2][0] = viewLeft + layout.edgeDistance + realTextWidth + layout.labelDistance;\n        } else {\n          linePoints[2][0] = viewLeft + viewWidth - layout.edgeDistance - realTextWidth - layout.labelDistance;\n        }\n      } else {\n        if (label.x < cx) {\n          linePoints[2][0] = label.x + layout.labelDistance;\n        } else {\n          linePoints[2][0] = label.x - layout.labelDistance;\n        }\n\n        linePoints[1][0] = linePoints[2][0] + dist;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = label.y;\n    }\n  }\n}\n\nfunction isPositionCenter(sectorShape) {\n  return sectorShape.position === 'center';\n}\n\nfunction pieLabelLayout(seriesModel) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  var minShowLabelRadian = (seriesModel.get('minShowLabelAngle') || 0) * RADIAN;\n  var viewRect = data.getLayout('viewRect');\n  var r = data.getLayout('r');\n  var viewWidth = viewRect.width;\n  var viewLeft = viewRect.x;\n  var viewTop = viewRect.y;\n  var viewHeight = viewRect.height;\n\n  function setNotShow(el) {\n    el.ignore = true;\n  }\n\n  function isLabelShown(label) {\n    if (!label.ignore) {\n      return true;\n    }\n\n    for (var key in label.states) {\n      if (label.states[key].ignore === false) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  data.each(function (idx) {\n    var sector = data.getItemGraphicEl(idx);\n    var sectorShape = sector.shape;\n    var label = sector.getTextContent();\n    var labelLine = sector.getTextGuideLine();\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label');\n    var labelPosition = labelModel.get('position') || itemModel.get(['emphasis', 'label', 'position']);\n    var labelDistance = labelModel.get('distanceToLabelLine');\n    var labelAlignTo = labelModel.get('alignTo');\n    var edgeDistance = number_1.parsePercent(labelModel.get('edgeDistance'), viewWidth);\n    var bleedMargin = labelModel.get('bleedMargin');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    labelLineLen = number_1.parsePercent(labelLineLen, viewWidth);\n    var labelLineLen2 = labelLineModel.get('length2');\n    labelLineLen2 = number_1.parsePercent(labelLineLen2, viewWidth);\n\n    if (Math.abs(sectorShape.endAngle - sectorShape.startAngle) < minShowLabelRadian) {\n      util_1.each(label.states, setNotShow);\n      label.ignore = true;\n      return;\n    }\n\n    if (!isLabelShown(label)) {\n      return;\n    }\n\n    var midAngle = (sectorShape.startAngle + sectorShape.endAngle) / 2;\n    var nx = Math.cos(midAngle);\n    var ny = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = sectorShape.cx;\n    cy = sectorShape.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = sectorShape.cx;\n      textY = sectorShape.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (sectorShape.r + sectorShape.r0) / 2 * nx : sectorShape.r * nx) + cx;\n      var y1 = (isLabelInside ? (sectorShape.r + sectorShape.r0) / 2 * ny : sectorShape.r * ny) + cy;\n      textX = x1 + nx * 3;\n      textY = y1 + ny * 3;\n\n      if (!isLabelInside) {\n        var x2 = x1 + nx * (labelLineLen + r - sectorShape.r);\n        var y2 = y1 + ny * (labelLineLen + r - sectorShape.r);\n        var x3 = x2 + (nx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n\n        if (labelAlignTo === 'edge') {\n          textX = nx < 0 ? viewLeft + edgeDistance : viewLeft + viewWidth - edgeDistance;\n        } else {\n          textX = x3 + (nx < 0 ? -labelDistance : labelDistance);\n        }\n\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : labelAlignTo === 'edge' ? nx > 0 ? 'right' : 'left' : nx > 0 ? 'left' : 'right';\n    }\n\n    var labelRotate;\n    var rotate = labelModel.get('rotate');\n\n    if (typeof rotate === 'number') {\n      labelRotate = rotate * (Math.PI / 180);\n    } else {\n      labelRotate = rotate ? nx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    }\n\n    hasLabelRotate = !!labelRotate;\n    label.x = textX;\n    label.y = textY;\n    label.rotation = labelRotate;\n    label.setStyle({\n      verticalAlign: 'middle'\n    });\n\n    if (!isLabelInside) {\n      var textRect = label.getBoundingRect().clone();\n      textRect.applyTransform(label.getComputedTransform());\n      var margin = (label.style.margin || 0) + 2.1;\n      textRect.y -= margin / 2;\n      textRect.height += margin;\n      labelLayoutList.push({\n        label: label,\n        labelLine: labelLine,\n        position: labelPosition,\n        len: labelLineLen,\n        len2: labelLineLen2,\n        minTurnAngle: labelLineModel.get('minTurnAngle'),\n        maxSurfaceAngle: labelLineModel.get('maxSurfaceAngle'),\n        surfaceNormal: new graphic_1.Point(nx, ny),\n        linePoints: linePoints,\n        textAlign: textAlign,\n        labelDistance: labelDistance,\n        labelAlignTo: labelAlignTo,\n        edgeDistance: edgeDistance,\n        bleedMargin: bleedMargin,\n        rect: textRect\n      });\n    } else {\n      label.setStyle({\n        align: textAlign\n      });\n      var selectState = label.states.select;\n\n      if (selectState) {\n        selectState.x += label.x;\n        selectState.y += label.y;\n      }\n    }\n\n    sector.setTextConfig({\n      inside: isLabelInside\n    });\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight, viewLeft, viewTop);\n  }\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var layout = labelLayoutList[i];\n    var label = layout.label;\n    var labelLine = layout.labelLine;\n    var notShowLabel = isNaN(label.x) || isNaN(label.y);\n\n    if (label) {\n      label.setStyle({\n        align: layout.textAlign\n      });\n\n      if (notShowLabel) {\n        util_1.each(label.states, setNotShow);\n        label.ignore = true;\n      }\n\n      var selectState = label.states.select;\n\n      if (selectState) {\n        selectState.x += label.x;\n        selectState.y += label.y;\n      }\n    }\n\n    if (labelLine) {\n      var linePoints = layout.linePoints;\n\n      if (notShowLabel || !linePoints) {\n        util_1.each(labelLine.states, setNotShow);\n        labelLine.ignore = true;\n      } else {\n        labelGuideHelper_1.limitTurnAngle(linePoints, layout.minTurnAngle);\n        labelGuideHelper_1.limitSurfaceAngle(linePoints, layout.surfaceNormal, layout.maxSurfaceAngle);\n        labelLine.setShape({\n          points: linePoints\n        });\n        label.__hostTarget.textGuideLineConfig = {\n          anchor: new graphic_1.Point(linePoints[0][0], linePoints[0][1])\n        };\n      }\n    }\n  }\n}\n\nexports[\"default\"] = pieLabelLayout;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/chart/pie/labelLayout.js"],"names":["exports","__esModule","number_1","require","graphic_1","util_1","labelGuideHelper_1","labelLayoutHelper_1","RADIAN","Math","PI","adjustSingleSide","list","cx","cy","r","dir","viewWidth","viewHeight","viewLeft","viewTop","farthestX","length","recalculateXOnSemiToAlignOnEllipseCurve","semi","rB","rB2","i","item","dy","abs","label","y","rA","len","rA2","dx","sqrt","x","len2","recalculateX","items","topSemi","maxY","bottomSemi","labelAlignTo","push","position","linePoints","shiftLayoutOnY","avoidOverlap","labelLayoutList","leftList","rightList","leftmostX","Number","MAX_VALUE","rightmostX","isPositionCenter","min","max","layout","isAlignToEdge","realTextWidth","rect","width","targetTextWidth","labelDistance","edgeDistance","bleedMargin","style","dist","sectorShape","pieLabelLayout","seriesModel","data","getData","hasLabelRotate","minShowLabelRadian","get","viewRect","getLayout","height","setNotShow","el","ignore","isLabelShown","key","states","each","idx","sector","getItemGraphicEl","shape","getTextContent","labelLine","getTextGuideLine","itemModel","getItemModel","labelModel","getModel","labelPosition","parsePercent","labelLineModel","labelLineLen","labelLineLen2","endAngle","startAngle","midAngle","nx","cos","ny","sin","textX","textY","textAlign","isLabelInside","x1","r0","y1","x2","y2","x3","y3","labelRotate","rotate","rotation","setStyle","verticalAlign","textRect","getBoundingRect","clone","applyTransform","getComputedTransform","margin","minTurnAngle","maxSurfaceAngle","surfaceNormal","Point","align","selectState","select","setTextConfig","inside","notShowLabel","isNaN","limitTurnAngle","limitSurfaceAngle","setShape","points","__hostTarget","textGuideLineConfig","anchor"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar number_1 = require(\"../../util/number\");\n\nvar graphic_1 = require(\"../../util/graphic\");\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar labelGuideHelper_1 = require(\"../../label/labelGuideHelper\");\n\nvar labelLayoutHelper_1 = require(\"../../label/labelLayoutHelper\");\n\nvar RADIAN = Math.PI / 180;\n\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight, viewLeft, viewTop, farthestX) {\n  if (list.length < 2) {\n    return;\n  }\n\n  ;\n\n  function recalculateXOnSemiToAlignOnEllipseCurve(semi) {\n    var rB = semi.rB;\n    var rB2 = rB * rB;\n\n    for (var i = 0; i < semi.list.length; i++) {\n      var item = semi.list[i];\n      var dy = Math.abs(item.label.y - cy);\n      var rA = r + item.len;\n      var rA2 = rA * rA;\n      var dx = Math.sqrt((1 - Math.abs(dy * dy / rB2)) * rA2);\n      item.label.x = cx + (dx + item.len2) * dir;\n    }\n  }\n\n  function recalculateX(items) {\n    var topSemi = {\n      list: [],\n      maxY: 0\n    };\n    var bottomSemi = {\n      list: [],\n      maxY: 0\n    };\n\n    for (var i = 0; i < items.length; i++) {\n      if (items[i].labelAlignTo !== 'none') {\n        continue;\n      }\n\n      var item = items[i];\n      var semi = item.label.y > cy ? bottomSemi : topSemi;\n      var dy = Math.abs(item.label.y - cy);\n\n      if (dy > semi.maxY) {\n        var dx = item.label.x - cx - item.len2 * dir;\n        var rA = r + item.len;\n        var rB = dx < rA ? Math.sqrt(dy * dy / (1 - dx * dx / rA / rA)) : rA;\n        semi.rB = rB;\n        semi.maxY = dy;\n      }\n\n      semi.list.push(item);\n    }\n\n    recalculateXOnSemiToAlignOnEllipseCurve(topSemi);\n    recalculateXOnSemiToAlignOnEllipseCurve(bottomSemi);\n  }\n\n  var len = list.length;\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].position === 'outer' && list[i].labelAlignTo === 'labelLine') {\n      var dx = list[i].label.x - farthestX;\n      list[i].linePoints[1][0] += dx;\n      list[i].label.x = farthestX;\n    }\n  }\n\n  if (labelLayoutHelper_1.shiftLayoutOnY(list, viewTop, viewTop + viewHeight)) {\n    recalculateX(list);\n  }\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight, viewLeft, viewTop) {\n  var leftList = [];\n  var rightList = [];\n  var leftmostX = Number.MAX_VALUE;\n  var rightmostX = -Number.MAX_VALUE;\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var label = labelLayoutList[i].label;\n\n    if (isPositionCenter(labelLayoutList[i])) {\n      continue;\n    }\n\n    if (label.x < cx) {\n      leftmostX = Math.min(leftmostX, label.x);\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightmostX = Math.max(rightmostX, label.x);\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight, viewLeft, viewTop, rightmostX);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight, viewLeft, viewTop, leftmostX);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var layout = labelLayoutList[i];\n    var label = layout.label;\n\n    if (isPositionCenter(layout)) {\n      continue;\n    }\n\n    var linePoints = layout.linePoints;\n\n    if (linePoints) {\n      var isAlignToEdge = layout.labelAlignTo === 'edge';\n      var realTextWidth = layout.rect.width;\n      var targetTextWidth = void 0;\n\n      if (isAlignToEdge) {\n        if (label.x < cx) {\n          targetTextWidth = linePoints[2][0] - layout.labelDistance - viewLeft - layout.edgeDistance;\n        } else {\n          targetTextWidth = viewLeft + viewWidth - layout.edgeDistance - linePoints[2][0] - layout.labelDistance;\n        }\n      } else {\n        if (label.x < cx) {\n          targetTextWidth = label.x - viewLeft - layout.bleedMargin;\n        } else {\n          targetTextWidth = viewLeft + viewWidth - label.x - layout.bleedMargin;\n        }\n      }\n\n      if (targetTextWidth < layout.rect.width) {\n        layout.label.style.width = targetTextWidth;\n\n        if (layout.labelAlignTo === 'edge') {\n          realTextWidth = targetTextWidth;\n        }\n      }\n\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (isAlignToEdge) {\n        if (label.x < cx) {\n          linePoints[2][0] = viewLeft + layout.edgeDistance + realTextWidth + layout.labelDistance;\n        } else {\n          linePoints[2][0] = viewLeft + viewWidth - layout.edgeDistance - realTextWidth - layout.labelDistance;\n        }\n      } else {\n        if (label.x < cx) {\n          linePoints[2][0] = label.x + layout.labelDistance;\n        } else {\n          linePoints[2][0] = label.x - layout.labelDistance;\n        }\n\n        linePoints[1][0] = linePoints[2][0] + dist;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = label.y;\n    }\n  }\n}\n\nfunction isPositionCenter(sectorShape) {\n  return sectorShape.position === 'center';\n}\n\nfunction pieLabelLayout(seriesModel) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  var minShowLabelRadian = (seriesModel.get('minShowLabelAngle') || 0) * RADIAN;\n  var viewRect = data.getLayout('viewRect');\n  var r = data.getLayout('r');\n  var viewWidth = viewRect.width;\n  var viewLeft = viewRect.x;\n  var viewTop = viewRect.y;\n  var viewHeight = viewRect.height;\n\n  function setNotShow(el) {\n    el.ignore = true;\n  }\n\n  function isLabelShown(label) {\n    if (!label.ignore) {\n      return true;\n    }\n\n    for (var key in label.states) {\n      if (label.states[key].ignore === false) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  data.each(function (idx) {\n    var sector = data.getItemGraphicEl(idx);\n    var sectorShape = sector.shape;\n    var label = sector.getTextContent();\n    var labelLine = sector.getTextGuideLine();\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label');\n    var labelPosition = labelModel.get('position') || itemModel.get(['emphasis', 'label', 'position']);\n    var labelDistance = labelModel.get('distanceToLabelLine');\n    var labelAlignTo = labelModel.get('alignTo');\n    var edgeDistance = number_1.parsePercent(labelModel.get('edgeDistance'), viewWidth);\n    var bleedMargin = labelModel.get('bleedMargin');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    labelLineLen = number_1.parsePercent(labelLineLen, viewWidth);\n    var labelLineLen2 = labelLineModel.get('length2');\n    labelLineLen2 = number_1.parsePercent(labelLineLen2, viewWidth);\n\n    if (Math.abs(sectorShape.endAngle - sectorShape.startAngle) < minShowLabelRadian) {\n      util_1.each(label.states, setNotShow);\n      label.ignore = true;\n      return;\n    }\n\n    if (!isLabelShown(label)) {\n      return;\n    }\n\n    var midAngle = (sectorShape.startAngle + sectorShape.endAngle) / 2;\n    var nx = Math.cos(midAngle);\n    var ny = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = sectorShape.cx;\n    cy = sectorShape.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = sectorShape.cx;\n      textY = sectorShape.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (sectorShape.r + sectorShape.r0) / 2 * nx : sectorShape.r * nx) + cx;\n      var y1 = (isLabelInside ? (sectorShape.r + sectorShape.r0) / 2 * ny : sectorShape.r * ny) + cy;\n      textX = x1 + nx * 3;\n      textY = y1 + ny * 3;\n\n      if (!isLabelInside) {\n        var x2 = x1 + nx * (labelLineLen + r - sectorShape.r);\n        var y2 = y1 + ny * (labelLineLen + r - sectorShape.r);\n        var x3 = x2 + (nx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n\n        if (labelAlignTo === 'edge') {\n          textX = nx < 0 ? viewLeft + edgeDistance : viewLeft + viewWidth - edgeDistance;\n        } else {\n          textX = x3 + (nx < 0 ? -labelDistance : labelDistance);\n        }\n\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : labelAlignTo === 'edge' ? nx > 0 ? 'right' : 'left' : nx > 0 ? 'left' : 'right';\n    }\n\n    var labelRotate;\n    var rotate = labelModel.get('rotate');\n\n    if (typeof rotate === 'number') {\n      labelRotate = rotate * (Math.PI / 180);\n    } else {\n      labelRotate = rotate ? nx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    }\n\n    hasLabelRotate = !!labelRotate;\n    label.x = textX;\n    label.y = textY;\n    label.rotation = labelRotate;\n    label.setStyle({\n      verticalAlign: 'middle'\n    });\n\n    if (!isLabelInside) {\n      var textRect = label.getBoundingRect().clone();\n      textRect.applyTransform(label.getComputedTransform());\n      var margin = (label.style.margin || 0) + 2.1;\n      textRect.y -= margin / 2;\n      textRect.height += margin;\n      labelLayoutList.push({\n        label: label,\n        labelLine: labelLine,\n        position: labelPosition,\n        len: labelLineLen,\n        len2: labelLineLen2,\n        minTurnAngle: labelLineModel.get('minTurnAngle'),\n        maxSurfaceAngle: labelLineModel.get('maxSurfaceAngle'),\n        surfaceNormal: new graphic_1.Point(nx, ny),\n        linePoints: linePoints,\n        textAlign: textAlign,\n        labelDistance: labelDistance,\n        labelAlignTo: labelAlignTo,\n        edgeDistance: edgeDistance,\n        bleedMargin: bleedMargin,\n        rect: textRect\n      });\n    } else {\n      label.setStyle({\n        align: textAlign\n      });\n      var selectState = label.states.select;\n\n      if (selectState) {\n        selectState.x += label.x;\n        selectState.y += label.y;\n      }\n    }\n\n    sector.setTextConfig({\n      inside: isLabelInside\n    });\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight, viewLeft, viewTop);\n  }\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var layout = labelLayoutList[i];\n    var label = layout.label;\n    var labelLine = layout.labelLine;\n    var notShowLabel = isNaN(label.x) || isNaN(label.y);\n\n    if (label) {\n      label.setStyle({\n        align: layout.textAlign\n      });\n\n      if (notShowLabel) {\n        util_1.each(label.states, setNotShow);\n        label.ignore = true;\n      }\n\n      var selectState = label.states.select;\n\n      if (selectState) {\n        selectState.x += label.x;\n        selectState.y += label.y;\n      }\n    }\n\n    if (labelLine) {\n      var linePoints = layout.linePoints;\n\n      if (notShowLabel || !linePoints) {\n        util_1.each(labelLine.states, setNotShow);\n        labelLine.ignore = true;\n      } else {\n        labelGuideHelper_1.limitTurnAngle(linePoints, layout.minTurnAngle);\n        labelGuideHelper_1.limitSurfaceAngle(linePoints, layout.surfaceNormal, layout.maxSurfaceAngle);\n        labelLine.setShape({\n          points: linePoints\n        });\n        label.__hostTarget.textGuideLineConfig = {\n          anchor: new graphic_1.Point(linePoints[0][0], linePoints[0][1])\n        };\n      }\n    }\n  }\n}\n\nexports[\"default\"] = pieLabelLayout;"]},"metadata":{},"sourceType":"script"}