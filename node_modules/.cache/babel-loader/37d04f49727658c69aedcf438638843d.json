{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar OrdinalMeta = function () {\n  function OrdinalMeta(opt) {\n    this.categories = opt.categories || [];\n    this._needCollect = opt.needCollect;\n    this._deduplication = opt.deduplication;\n  }\n\n  OrdinalMeta.createByAxisModel = function (axisModel) {\n    var option = axisModel.option;\n    var data = option.data;\n    var categories = data && util_1.map(data, getName);\n    return new OrdinalMeta({\n      categories: categories,\n      needCollect: !categories,\n      deduplication: option.dedplication !== false\n    });\n  };\n\n  ;\n\n  OrdinalMeta.prototype.getOrdinal = function (category) {\n    return this._getOrCreateMap().get(category);\n  };\n\n  OrdinalMeta.prototype.parseAndCollect = function (category) {\n    var index;\n    var needCollect = this._needCollect;\n\n    if (typeof category !== 'string' && !needCollect) {\n      return category;\n    }\n\n    if (needCollect && !this._deduplication) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      return index;\n    }\n\n    var map = this._getOrCreateMap();\n\n    index = map.get(category);\n\n    if (index == null) {\n      if (needCollect) {\n        index = this.categories.length;\n        this.categories[index] = category;\n        map.set(category, index);\n      } else {\n        index = NaN;\n      }\n    }\n\n    return index;\n  };\n\n  OrdinalMeta.prototype._getOrCreateMap = function () {\n    return this._map || (this._map = util_1.createHashMap(this.categories));\n  };\n\n  return OrdinalMeta;\n}();\n\nfunction getName(obj) {\n  if (util_1.isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nexports[\"default\"] = OrdinalMeta;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/data/OrdinalMeta.js"],"names":["exports","__esModule","util_1","require","OrdinalMeta","opt","categories","_needCollect","needCollect","_deduplication","deduplication","createByAxisModel","axisModel","option","data","map","getName","dedplication","prototype","getOrdinal","category","_getOrCreateMap","get","parseAndCollect","index","length","set","NaN","_map","createHashMap","obj","isObject","value"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar OrdinalMeta = function () {\n  function OrdinalMeta(opt) {\n    this.categories = opt.categories || [];\n    this._needCollect = opt.needCollect;\n    this._deduplication = opt.deduplication;\n  }\n\n  OrdinalMeta.createByAxisModel = function (axisModel) {\n    var option = axisModel.option;\n    var data = option.data;\n    var categories = data && util_1.map(data, getName);\n    return new OrdinalMeta({\n      categories: categories,\n      needCollect: !categories,\n      deduplication: option.dedplication !== false\n    });\n  };\n\n  ;\n\n  OrdinalMeta.prototype.getOrdinal = function (category) {\n    return this._getOrCreateMap().get(category);\n  };\n\n  OrdinalMeta.prototype.parseAndCollect = function (category) {\n    var index;\n    var needCollect = this._needCollect;\n\n    if (typeof category !== 'string' && !needCollect) {\n      return category;\n    }\n\n    if (needCollect && !this._deduplication) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      return index;\n    }\n\n    var map = this._getOrCreateMap();\n\n    index = map.get(category);\n\n    if (index == null) {\n      if (needCollect) {\n        index = this.categories.length;\n        this.categories[index] = category;\n        map.set(category, index);\n      } else {\n        index = NaN;\n      }\n    }\n\n    return index;\n  };\n\n  OrdinalMeta.prototype._getOrCreateMap = function () {\n    return this._map || (this._map = util_1.createHashMap(this.categories));\n  };\n\n  return OrdinalMeta;\n}();\n\nfunction getName(obj) {\n  if (util_1.isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nexports[\"default\"] = OrdinalMeta;"]},"metadata":{},"sourceType":"script"}