{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar echarts = require(\"../../echarts\");\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar cartesianAxisHelper_1 = require(\"./cartesianAxisHelper\");\n\nvar axisHelper_1 = require(\"../axisHelper\");\n\nvar scaleRawExtentInfo_1 = require(\"../scaleRawExtentInfo\");\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.FILTER + 10, {\n  getTargetSeries: function (ecModel) {\n    var seriesModelMap = util_1.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      cartesianAxisHelper_1.isCartesian2DSeries(seriesModel) && seriesModelMap.set(seriesModel.uid, seriesModel);\n    });\n    return seriesModelMap;\n  },\n  overallReset: function (ecModel, api) {\n    var seriesRecords = [];\n    var axisRecordMap = util_1.createHashMap();\n    prepareDataExtentOnAxis(ecModel, axisRecordMap, seriesRecords);\n    calculateFilteredExtent(axisRecordMap, seriesRecords);\n    shrinkAxisExtent(axisRecordMap);\n  }\n});\n\nfunction prepareDataExtentOnAxis(ecModel, axisRecordMap, seriesRecords) {\n  ecModel.eachSeries(function (seriesModel) {\n    if (!cartesianAxisHelper_1.isCartesian2DSeries(seriesModel)) {\n      return;\n    }\n\n    var axesModelMap = cartesianAxisHelper_1.findAxisModels(seriesModel);\n    var xAxisModel = axesModelMap.xAxisModel;\n    var yAxisModel = axesModelMap.yAxisModel;\n    var xAxis = xAxisModel.axis;\n    var yAxis = yAxisModel.axis;\n    var xRawExtentInfo = xAxis.scale.rawExtentInfo;\n    var yRawExtentInfo = yAxis.scale.rawExtentInfo;\n    var data = seriesModel.getData();\n\n    if (xRawExtentInfo && xRawExtentInfo.frozen || yRawExtentInfo && yRawExtentInfo.frozen) {\n      return;\n    }\n\n    seriesRecords.push({\n      seriesModel: seriesModel,\n      xAxisModel: xAxisModel,\n      yAxisModel: yAxisModel\n    });\n    axisHelper_1.unionAxisExtentFromData(prepareAxisRecord(axisRecordMap, xAxisModel).condExtent, data, xAxis.dim);\n    axisHelper_1.unionAxisExtentFromData(prepareAxisRecord(axisRecordMap, yAxisModel).condExtent, data, yAxis.dim);\n  });\n}\n\nfunction calculateFilteredExtent(axisRecordMap, seriesRecords) {\n  util_1.each(seriesRecords, function (seriesRecord) {\n    var xAxisModel = seriesRecord.xAxisModel;\n    var yAxisModel = seriesRecord.yAxisModel;\n    var xAxis = xAxisModel.axis;\n    var yAxis = yAxisModel.axis;\n    var xAxisRecord = prepareAxisRecord(axisRecordMap, xAxisModel);\n    var yAxisRecord = prepareAxisRecord(axisRecordMap, yAxisModel);\n    xAxisRecord.rawExtentInfo = scaleRawExtentInfo_1.ensureScaleRawExtentInfo(xAxis.scale, xAxisModel, xAxisRecord.condExtent);\n    yAxisRecord.rawExtentInfo = scaleRawExtentInfo_1.ensureScaleRawExtentInfo(yAxis.scale, yAxisModel, yAxisRecord.condExtent);\n    xAxisRecord.rawExtentResult = xAxisRecord.rawExtentInfo.calculate();\n    yAxisRecord.rawExtentResult = yAxisRecord.rawExtentInfo.calculate();\n    var data = seriesRecord.seriesModel.getData();\n    var condDimMap = {};\n    var tarDimMap = {};\n    var condAxis;\n    var tarAxisRecord;\n\n    function addCondition(axis, axisRecord) {\n      var condExtent = axisRecord.condExtent;\n      var rawExtentResult = axisRecord.rawExtentResult;\n\n      if (axis.type === 'category' && (condExtent[0] < rawExtentResult.min || rawExtentResult.max < condExtent[1])) {\n        util_1.each(axisHelper_1.getDataDimensionsOnAxis(data, axis.dim), function (dataDim) {\n          if (!util_1.hasOwn(condDimMap, dataDim)) {\n            condDimMap[dataDim] = true;\n            condAxis = axis;\n          }\n        });\n      }\n    }\n\n    function addTarget(axis, axisRecord) {\n      var rawExtentResult = axisRecord.rawExtentResult;\n\n      if (axis.type !== 'category' && (!rawExtentResult.minFixed || !rawExtentResult.maxFixed)) {\n        util_1.each(axisHelper_1.getDataDimensionsOnAxis(data, axis.dim), function (dataDim) {\n          if (!util_1.hasOwn(condDimMap, dataDim) && !util_1.hasOwn(tarDimMap, dataDim)) {\n            tarDimMap[dataDim] = true;\n            tarAxisRecord = axisRecord;\n          }\n        });\n      }\n    }\n\n    addCondition(xAxis, xAxisRecord);\n    addCondition(yAxis, yAxisRecord);\n    addTarget(xAxis, xAxisRecord);\n    addTarget(yAxis, yAxisRecord);\n    var condDims = util_1.keys(condDimMap);\n    var tarDims = util_1.keys(tarDimMap);\n    var tarDimExtents = util_1.map(tarDims, function () {\n      return initExtent();\n    });\n    var condDimsLen = condDims.length;\n    var tarDimsLen = tarDims.length;\n\n    if (!condDimsLen || !tarDimsLen) {\n      return;\n    }\n\n    var singleCondDim = condDimsLen === 1 ? condDims[0] : null;\n    var singleTarDim = tarDimsLen === 1 ? tarDims[0] : null;\n    var dataLen = data.count();\n\n    if (singleCondDim && singleTarDim) {\n      for (var dataIdx = 0; dataIdx < dataLen; dataIdx++) {\n        var condVal = data.get(singleCondDim, dataIdx);\n\n        if (condAxis.scale.isInExtentRange(condVal)) {\n          unionExtent(tarDimExtents[0], data.get(singleTarDim, dataIdx));\n        }\n      }\n    } else {\n      for (var dataIdx = 0; dataIdx < dataLen; dataIdx++) {\n        for (var j = 0; j < condDimsLen; j++) {\n          var condVal = data.get(condDims[j], dataIdx);\n\n          if (condAxis.scale.isInExtentRange(condVal)) {\n            for (var k = 0; k < tarDimsLen; k++) {\n              unionExtent(tarDimExtents[k], data.get(tarDims[k], dataIdx));\n            }\n\n            break;\n          }\n        }\n      }\n    }\n\n    util_1.each(tarDimExtents, function (tarDimExtent, i) {\n      var dim = tarDims[i];\n      data.setApproximateExtent(tarDimExtent, dim);\n      var tarAxisExtent = tarAxisRecord.tarExtent = tarAxisRecord.tarExtent || initExtent();\n      unionExtent(tarAxisExtent, tarDimExtent[0]);\n      unionExtent(tarAxisExtent, tarDimExtent[1]);\n    });\n  });\n}\n\nfunction shrinkAxisExtent(axisRecordMap) {\n  axisRecordMap.each(function (axisRecord) {\n    var tarAxisExtent = axisRecord.tarExtent;\n\n    if (tarAxisExtent) {\n      var rawExtentResult = axisRecord.rawExtentResult;\n      var rawExtentInfo = axisRecord.rawExtentInfo;\n\n      if (!rawExtentResult.minFixed && tarAxisExtent[0] > rawExtentResult.min) {\n        rawExtentInfo.modifyDataMinMax('min', tarAxisExtent[0]);\n      }\n\n      if (!rawExtentResult.maxFixed && tarAxisExtent[1] < rawExtentResult.max) {\n        rawExtentInfo.modifyDataMinMax('max', tarAxisExtent[1]);\n      }\n    }\n  });\n}\n\nfunction prepareAxisRecord(axisRecordMap, axisModel) {\n  return axisRecordMap.get(axisModel.uid) || axisRecordMap.set(axisModel.uid, {\n    condExtent: initExtent()\n  });\n}\n\nfunction initExtent() {\n  return [Infinity, -Infinity];\n}\n\nfunction unionExtent(extent, val) {\n  val < extent[0] && (extent[0] = val);\n  val > extent[1] && (extent[1] = val);\n}","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/coord/cartesian/defaultAxisExtentFromData.js"],"names":["exports","__esModule","echarts","require","util_1","cartesianAxisHelper_1","axisHelper_1","scaleRawExtentInfo_1","registerProcessor","PRIORITY","PROCESSOR","FILTER","getTargetSeries","ecModel","seriesModelMap","createHashMap","eachSeries","seriesModel","isCartesian2DSeries","set","uid","overallReset","api","seriesRecords","axisRecordMap","prepareDataExtentOnAxis","calculateFilteredExtent","shrinkAxisExtent","axesModelMap","findAxisModels","xAxisModel","yAxisModel","xAxis","axis","yAxis","xRawExtentInfo","scale","rawExtentInfo","yRawExtentInfo","data","getData","frozen","push","unionAxisExtentFromData","prepareAxisRecord","condExtent","dim","each","seriesRecord","xAxisRecord","yAxisRecord","ensureScaleRawExtentInfo","rawExtentResult","calculate","condDimMap","tarDimMap","condAxis","tarAxisRecord","addCondition","axisRecord","type","min","max","getDataDimensionsOnAxis","dataDim","hasOwn","addTarget","minFixed","maxFixed","condDims","keys","tarDims","tarDimExtents","map","initExtent","condDimsLen","length","tarDimsLen","singleCondDim","singleTarDim","dataLen","count","dataIdx","condVal","get","isInExtentRange","unionExtent","j","k","tarDimExtent","i","setApproximateExtent","tarAxisExtent","tarExtent","modifyDataMinMax","axisModel","Infinity","extent","val"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar echarts = require(\"../../echarts\");\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar cartesianAxisHelper_1 = require(\"./cartesianAxisHelper\");\n\nvar axisHelper_1 = require(\"../axisHelper\");\n\nvar scaleRawExtentInfo_1 = require(\"../scaleRawExtentInfo\");\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.FILTER + 10, {\n  getTargetSeries: function (ecModel) {\n    var seriesModelMap = util_1.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      cartesianAxisHelper_1.isCartesian2DSeries(seriesModel) && seriesModelMap.set(seriesModel.uid, seriesModel);\n    });\n    return seriesModelMap;\n  },\n  overallReset: function (ecModel, api) {\n    var seriesRecords = [];\n    var axisRecordMap = util_1.createHashMap();\n    prepareDataExtentOnAxis(ecModel, axisRecordMap, seriesRecords);\n    calculateFilteredExtent(axisRecordMap, seriesRecords);\n    shrinkAxisExtent(axisRecordMap);\n  }\n});\n\nfunction prepareDataExtentOnAxis(ecModel, axisRecordMap, seriesRecords) {\n  ecModel.eachSeries(function (seriesModel) {\n    if (!cartesianAxisHelper_1.isCartesian2DSeries(seriesModel)) {\n      return;\n    }\n\n    var axesModelMap = cartesianAxisHelper_1.findAxisModels(seriesModel);\n    var xAxisModel = axesModelMap.xAxisModel;\n    var yAxisModel = axesModelMap.yAxisModel;\n    var xAxis = xAxisModel.axis;\n    var yAxis = yAxisModel.axis;\n    var xRawExtentInfo = xAxis.scale.rawExtentInfo;\n    var yRawExtentInfo = yAxis.scale.rawExtentInfo;\n    var data = seriesModel.getData();\n\n    if (xRawExtentInfo && xRawExtentInfo.frozen || yRawExtentInfo && yRawExtentInfo.frozen) {\n      return;\n    }\n\n    seriesRecords.push({\n      seriesModel: seriesModel,\n      xAxisModel: xAxisModel,\n      yAxisModel: yAxisModel\n    });\n    axisHelper_1.unionAxisExtentFromData(prepareAxisRecord(axisRecordMap, xAxisModel).condExtent, data, xAxis.dim);\n    axisHelper_1.unionAxisExtentFromData(prepareAxisRecord(axisRecordMap, yAxisModel).condExtent, data, yAxis.dim);\n  });\n}\n\nfunction calculateFilteredExtent(axisRecordMap, seriesRecords) {\n  util_1.each(seriesRecords, function (seriesRecord) {\n    var xAxisModel = seriesRecord.xAxisModel;\n    var yAxisModel = seriesRecord.yAxisModel;\n    var xAxis = xAxisModel.axis;\n    var yAxis = yAxisModel.axis;\n    var xAxisRecord = prepareAxisRecord(axisRecordMap, xAxisModel);\n    var yAxisRecord = prepareAxisRecord(axisRecordMap, yAxisModel);\n    xAxisRecord.rawExtentInfo = scaleRawExtentInfo_1.ensureScaleRawExtentInfo(xAxis.scale, xAxisModel, xAxisRecord.condExtent);\n    yAxisRecord.rawExtentInfo = scaleRawExtentInfo_1.ensureScaleRawExtentInfo(yAxis.scale, yAxisModel, yAxisRecord.condExtent);\n    xAxisRecord.rawExtentResult = xAxisRecord.rawExtentInfo.calculate();\n    yAxisRecord.rawExtentResult = yAxisRecord.rawExtentInfo.calculate();\n    var data = seriesRecord.seriesModel.getData();\n    var condDimMap = {};\n    var tarDimMap = {};\n    var condAxis;\n    var tarAxisRecord;\n\n    function addCondition(axis, axisRecord) {\n      var condExtent = axisRecord.condExtent;\n      var rawExtentResult = axisRecord.rawExtentResult;\n\n      if (axis.type === 'category' && (condExtent[0] < rawExtentResult.min || rawExtentResult.max < condExtent[1])) {\n        util_1.each(axisHelper_1.getDataDimensionsOnAxis(data, axis.dim), function (dataDim) {\n          if (!util_1.hasOwn(condDimMap, dataDim)) {\n            condDimMap[dataDim] = true;\n            condAxis = axis;\n          }\n        });\n      }\n    }\n\n    function addTarget(axis, axisRecord) {\n      var rawExtentResult = axisRecord.rawExtentResult;\n\n      if (axis.type !== 'category' && (!rawExtentResult.minFixed || !rawExtentResult.maxFixed)) {\n        util_1.each(axisHelper_1.getDataDimensionsOnAxis(data, axis.dim), function (dataDim) {\n          if (!util_1.hasOwn(condDimMap, dataDim) && !util_1.hasOwn(tarDimMap, dataDim)) {\n            tarDimMap[dataDim] = true;\n            tarAxisRecord = axisRecord;\n          }\n        });\n      }\n    }\n\n    addCondition(xAxis, xAxisRecord);\n    addCondition(yAxis, yAxisRecord);\n    addTarget(xAxis, xAxisRecord);\n    addTarget(yAxis, yAxisRecord);\n    var condDims = util_1.keys(condDimMap);\n    var tarDims = util_1.keys(tarDimMap);\n    var tarDimExtents = util_1.map(tarDims, function () {\n      return initExtent();\n    });\n    var condDimsLen = condDims.length;\n    var tarDimsLen = tarDims.length;\n\n    if (!condDimsLen || !tarDimsLen) {\n      return;\n    }\n\n    var singleCondDim = condDimsLen === 1 ? condDims[0] : null;\n    var singleTarDim = tarDimsLen === 1 ? tarDims[0] : null;\n    var dataLen = data.count();\n\n    if (singleCondDim && singleTarDim) {\n      for (var dataIdx = 0; dataIdx < dataLen; dataIdx++) {\n        var condVal = data.get(singleCondDim, dataIdx);\n\n        if (condAxis.scale.isInExtentRange(condVal)) {\n          unionExtent(tarDimExtents[0], data.get(singleTarDim, dataIdx));\n        }\n      }\n    } else {\n      for (var dataIdx = 0; dataIdx < dataLen; dataIdx++) {\n        for (var j = 0; j < condDimsLen; j++) {\n          var condVal = data.get(condDims[j], dataIdx);\n\n          if (condAxis.scale.isInExtentRange(condVal)) {\n            for (var k = 0; k < tarDimsLen; k++) {\n              unionExtent(tarDimExtents[k], data.get(tarDims[k], dataIdx));\n            }\n\n            break;\n          }\n        }\n      }\n    }\n\n    util_1.each(tarDimExtents, function (tarDimExtent, i) {\n      var dim = tarDims[i];\n      data.setApproximateExtent(tarDimExtent, dim);\n      var tarAxisExtent = tarAxisRecord.tarExtent = tarAxisRecord.tarExtent || initExtent();\n      unionExtent(tarAxisExtent, tarDimExtent[0]);\n      unionExtent(tarAxisExtent, tarDimExtent[1]);\n    });\n  });\n}\n\nfunction shrinkAxisExtent(axisRecordMap) {\n  axisRecordMap.each(function (axisRecord) {\n    var tarAxisExtent = axisRecord.tarExtent;\n\n    if (tarAxisExtent) {\n      var rawExtentResult = axisRecord.rawExtentResult;\n      var rawExtentInfo = axisRecord.rawExtentInfo;\n\n      if (!rawExtentResult.minFixed && tarAxisExtent[0] > rawExtentResult.min) {\n        rawExtentInfo.modifyDataMinMax('min', tarAxisExtent[0]);\n      }\n\n      if (!rawExtentResult.maxFixed && tarAxisExtent[1] < rawExtentResult.max) {\n        rawExtentInfo.modifyDataMinMax('max', tarAxisExtent[1]);\n      }\n    }\n  });\n}\n\nfunction prepareAxisRecord(axisRecordMap, axisModel) {\n  return axisRecordMap.get(axisModel.uid) || axisRecordMap.set(axisModel.uid, {\n    condExtent: initExtent()\n  });\n}\n\nfunction initExtent() {\n  return [Infinity, -Infinity];\n}\n\nfunction unionExtent(extent, val) {\n  val < extent[0] && (extent[0] = val);\n  val > extent[1] && (extent[1] = val);\n}"]},"metadata":{},"sourceType":"script"}