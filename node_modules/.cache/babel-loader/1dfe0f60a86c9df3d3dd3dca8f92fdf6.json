{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport { Animated, Dimensions, Easing, StyleSheet, TouchableWithoutFeedback, View, BackHandler } from 'react-native';\nimport Portal from '../portal';\nvar styles = StyleSheet.create({\n  wrap: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0)'\n  },\n  mask: {\n    backgroundColor: 'black',\n    opacity: 0.5\n  },\n  content: {\n    backgroundColor: 'white'\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  }\n});\nvar screen = Dimensions.get('window');\n\nvar RCModal = function (_React$Component) {\n  _inherits(RCModal, _React$Component);\n\n  function RCModal(props) {\n    _classCallCheck(this, RCModal);\n\n    var _this = _possibleConstructorReturn(this, (RCModal.__proto__ || Object.getPrototypeOf(RCModal)).call(this, props));\n\n    _this.onBackAndroid = function () {\n      var onRequestClose = _this.props.onRequestClose;\n\n      if (typeof onRequestClose === 'function') {\n        return onRequestClose();\n      } // the default is false for compatible the old version & not required in android\n\n\n      return false;\n    };\n\n    _this.animateMask = function (visible) {\n      _this.stopMaskAnim();\n\n      _this.state.opacity.setValue(_this.getOpacity(!visible));\n\n      _this.animMask = Animated.timing(_this.state.opacity, {\n        toValue: _this.getOpacity(visible),\n        duration: _this.props.animationDuration,\n        useNativeDriver: true\n      });\n\n      _this.animMask.start(function () {\n        _this.animMask = null;\n      });\n    };\n\n    _this.stopMaskAnim = function () {\n      if (_this.animMask) {\n        _this.animMask.stop();\n\n        _this.animMask = null;\n      }\n    };\n\n    _this.stopDialogAnim = function () {\n      if (_this.animDialog) {\n        _this.animDialog.stop();\n\n        _this.animDialog = null;\n      }\n    };\n\n    _this.animateDialog = function (visible) {\n      _this.stopDialogAnim();\n\n      _this.animateMask(visible);\n\n      var _this$props = _this.props,\n          animationType = _this$props.animationType,\n          animationDuration = _this$props.animationDuration;\n      animationDuration = animationDuration;\n\n      if (animationType !== 'none') {\n        if (animationType === 'slide-up' || animationType === 'slide-down') {\n          _this.state.position.setValue(_this.getPosition(!visible));\n\n          _this.animDialog = Animated.timing(_this.state.position, {\n            toValue: _this.getPosition(visible),\n            duration: animationDuration,\n            easing: visible ? Easing.elastic(0.8) : undefined,\n            useNativeDriver: true\n          });\n        } else if (animationType === 'fade') {\n          _this.animDialog = Animated.parallel([Animated.timing(_this.state.opacity, {\n            toValue: _this.getOpacity(visible),\n            duration: animationDuration,\n            easing: visible ? Easing.elastic(0.8) : undefined,\n            useNativeDriver: true\n          }), Animated.spring(_this.state.scale, {\n            toValue: _this.getScale(visible),\n            useNativeDriver: true\n          })]);\n        }\n\n        _this.animDialog.start(function () {\n          _this.animDialog = null;\n\n          if (!visible) {\n            _this.setState({\n              modalVisible: false\n            });\n\n            BackHandler.removeEventListener('hardwareBackPress', _this.onBackAndroid);\n          }\n\n          if (_this.props.onAnimationEnd) {\n            _this.props.onAnimationEnd(visible);\n          }\n        });\n      } else {\n        if (!visible) {\n          _this.setState({\n            modalVisible: false\n          });\n\n          BackHandler.removeEventListener('hardwareBackPress', _this.onBackAndroid);\n        }\n      }\n    };\n\n    _this.close = function () {\n      _this.animateDialog(false);\n    };\n\n    _this.onMaskClose = function () {\n      if (_this.props.maskClosable && _this.props.onClose) {\n        _this.props.onClose();\n\n        BackHandler.removeEventListener('hardwareBackPress', _this.onBackAndroid);\n      }\n    };\n\n    _this.getPosition = function (visible) {\n      if (visible) {\n        return 0;\n      }\n\n      return _this.props.animationType === 'slide-down' ? -screen.height : screen.height;\n    };\n\n    _this.getScale = function (visible) {\n      return visible ? 1 : 1.05;\n    };\n\n    _this.getOpacity = function (visible) {\n      return visible ? 1 : 0;\n    };\n\n    var visible = props.visible;\n    _this.state = {\n      position: new Animated.Value(_this.getPosition(visible)),\n      scale: new Animated.Value(_this.getScale(visible)),\n      opacity: new Animated.Value(_this.getOpacity(visible)),\n      modalVisible: visible\n    };\n    return _this;\n  }\n\n  _createClass(RCModal, [{\n    key: 'UNSAFE_componentWillReceiveProps',\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (this.shouldComponentUpdate(nextProps, null)) {\n        this.setState({\n          modalVisible: true\n        });\n      }\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      if (this.props.visible || this.props.visible !== nextProps.visible) {\n        return true;\n      }\n\n      if (nextState) {\n        if (nextState.modalVisible !== this.state.modalVisible) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (this.props.animateAppear && this.props.animationType !== 'none') {\n        BackHandler.addEventListener('hardwareBackPress', this.onBackAndroid);\n        this.componentDidUpdate({});\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var props = this.props;\n\n      if (prevProps.visible !== props.visible) {\n        this.animateDialog(props.visible);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      BackHandler.removeEventListener('hardwareBackPress', this.onBackAndroid);\n      this.stopDialogAnim();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var props = this.props;\n\n      if (!this.state.modalVisible) {\n        return null;\n      }\n\n      var animationStyleMap = {\n        none: {},\n        'slide-up': {\n          transform: [{\n            translateY: this.state.position\n          }]\n        },\n        'slide-down': {\n          transform: [{\n            translateY: this.state.position\n          }]\n        },\n        fade: {\n          transform: [{\n            scale: this.state.scale\n          }],\n          opacity: this.state.opacity\n        }\n      };\n      return React.createElement(Portal, null, React.createElement(View, {\n        style: [styles.wrap, props.wrapStyle]\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.onMaskClose\n      }, React.createElement(Animated.View, {\n        style: [styles.absolute, {\n          opacity: this.state.opacity\n        }]\n      }, React.createElement(View, {\n        style: [styles.absolute, props.maskStyle]\n      }))), React.createElement(Animated.View, {\n        style: [styles.content, props.style, animationStyleMap[props.animationType]]\n      }, this.props.children)));\n    }\n  }]);\n\n  return RCModal;\n}(React.Component);\n\nexport default RCModal;\nRCModal.defaultProps = {\n  wrapStyle: styles.wrap,\n  maskStyle: styles.mask,\n  animationType: 'slide-up',\n  animateAppear: false,\n  animationDuration: 300,\n  visible: false,\n  maskClosable: true,\n  onClose: function onClose() {},\n  onAnimationEnd: function onAnimationEnd(_visible) {}\n};","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@ant-design/react-native/es/modal/ModalView.js"],"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","Animated","Dimensions","Easing","StyleSheet","TouchableWithoutFeedback","View","BackHandler","Portal","styles","create","wrap","flex","backgroundColor","mask","opacity","content","absolute","position","top","bottom","left","right","screen","get","RCModal","_React$Component","props","_this","__proto__","Object","getPrototypeOf","call","onBackAndroid","onRequestClose","animateMask","visible","stopMaskAnim","state","setValue","getOpacity","animMask","timing","toValue","duration","animationDuration","useNativeDriver","start","stop","stopDialogAnim","animDialog","animateDialog","_this$props","animationType","getPosition","easing","elastic","undefined","parallel","spring","scale","getScale","setState","modalVisible","removeEventListener","onAnimationEnd","close","onMaskClose","maskClosable","onClose","height","Value","key","value","UNSAFE_componentWillReceiveProps","nextProps","shouldComponentUpdate","nextState","componentDidMount","animateAppear","addEventListener","componentDidUpdate","prevProps","componentWillUnmount","render","animationStyleMap","none","transform","translateY","fade","createElement","style","wrapStyle","onPress","maskStyle","children","Component","defaultProps","_visible"],"mappings":"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","sourcesContent":["import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport { Animated, Dimensions, Easing, StyleSheet, TouchableWithoutFeedback, View, BackHandler } from 'react-native';\nimport Portal from '../portal';\nvar styles = StyleSheet.create({\n    wrap: {\n        flex: 1,\n        backgroundColor: 'rgba(0,0,0,0)'\n    },\n    mask: {\n        backgroundColor: 'black',\n        opacity: 0.5\n    },\n    content: {\n        backgroundColor: 'white'\n    },\n    absolute: {\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0\n    }\n});\nvar screen = Dimensions.get('window');\n\nvar RCModal = function (_React$Component) {\n    _inherits(RCModal, _React$Component);\n\n    function RCModal(props) {\n        _classCallCheck(this, RCModal);\n\n        var _this = _possibleConstructorReturn(this, (RCModal.__proto__ || Object.getPrototypeOf(RCModal)).call(this, props));\n\n        _this.onBackAndroid = function () {\n            var onRequestClose = _this.props.onRequestClose;\n\n            if (typeof onRequestClose === 'function') {\n                return onRequestClose();\n            }\n            // the default is false for compatible the old version & not required in android\n            return false;\n        };\n        _this.animateMask = function (visible) {\n            _this.stopMaskAnim();\n            _this.state.opacity.setValue(_this.getOpacity(!visible));\n            _this.animMask = Animated.timing(_this.state.opacity, {\n                toValue: _this.getOpacity(visible),\n                duration: _this.props.animationDuration,\n                useNativeDriver: true\n            });\n            _this.animMask.start(function () {\n                _this.animMask = null;\n            });\n        };\n        _this.stopMaskAnim = function () {\n            if (_this.animMask) {\n                _this.animMask.stop();\n                _this.animMask = null;\n            }\n        };\n        _this.stopDialogAnim = function () {\n            if (_this.animDialog) {\n                _this.animDialog.stop();\n                _this.animDialog = null;\n            }\n        };\n        _this.animateDialog = function (visible) {\n            _this.stopDialogAnim();\n            _this.animateMask(visible);\n            var _this$props = _this.props,\n                animationType = _this$props.animationType,\n                animationDuration = _this$props.animationDuration;\n\n            animationDuration = animationDuration;\n            if (animationType !== 'none') {\n                if (animationType === 'slide-up' || animationType === 'slide-down') {\n                    _this.state.position.setValue(_this.getPosition(!visible));\n                    _this.animDialog = Animated.timing(_this.state.position, {\n                        toValue: _this.getPosition(visible),\n                        duration: animationDuration,\n                        easing: visible ? Easing.elastic(0.8) : undefined,\n                        useNativeDriver: true\n                    });\n                } else if (animationType === 'fade') {\n                    _this.animDialog = Animated.parallel([Animated.timing(_this.state.opacity, {\n                        toValue: _this.getOpacity(visible),\n                        duration: animationDuration,\n                        easing: visible ? Easing.elastic(0.8) : undefined,\n                        useNativeDriver: true\n                    }), Animated.spring(_this.state.scale, {\n                        toValue: _this.getScale(visible),\n                        useNativeDriver: true\n                    })]);\n                }\n                _this.animDialog.start(function () {\n                    _this.animDialog = null;\n                    if (!visible) {\n                        _this.setState({\n                            modalVisible: false\n                        });\n                        BackHandler.removeEventListener('hardwareBackPress', _this.onBackAndroid);\n                    }\n                    if (_this.props.onAnimationEnd) {\n                        _this.props.onAnimationEnd(visible);\n                    }\n                });\n            } else {\n                if (!visible) {\n                    _this.setState({\n                        modalVisible: false\n                    });\n                    BackHandler.removeEventListener('hardwareBackPress', _this.onBackAndroid);\n                }\n            }\n        };\n        _this.close = function () {\n            _this.animateDialog(false);\n        };\n        _this.onMaskClose = function () {\n            if (_this.props.maskClosable && _this.props.onClose) {\n                _this.props.onClose();\n                BackHandler.removeEventListener('hardwareBackPress', _this.onBackAndroid);\n            }\n        };\n        _this.getPosition = function (visible) {\n            if (visible) {\n                return 0;\n            }\n            return _this.props.animationType === 'slide-down' ? -screen.height : screen.height;\n        };\n        _this.getScale = function (visible) {\n            return visible ? 1 : 1.05;\n        };\n        _this.getOpacity = function (visible) {\n            return visible ? 1 : 0;\n        };\n        var visible = props.visible;\n\n        _this.state = {\n            position: new Animated.Value(_this.getPosition(visible)),\n            scale: new Animated.Value(_this.getScale(visible)),\n            opacity: new Animated.Value(_this.getOpacity(visible)),\n            modalVisible: visible\n        };\n        return _this;\n    }\n\n    _createClass(RCModal, [{\n        key: 'UNSAFE_componentWillReceiveProps',\n        value: function UNSAFE_componentWillReceiveProps(nextProps) {\n            if (this.shouldComponentUpdate(nextProps, null)) {\n                this.setState({\n                    modalVisible: true\n                });\n            }\n        }\n    }, {\n        key: 'shouldComponentUpdate',\n        value: function shouldComponentUpdate(nextProps, nextState) {\n            if (this.props.visible || this.props.visible !== nextProps.visible) {\n                return true;\n            }\n            if (nextState) {\n                if (nextState.modalVisible !== this.state.modalVisible) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    }, {\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            if (this.props.animateAppear && this.props.animationType !== 'none') {\n                BackHandler.addEventListener('hardwareBackPress', this.onBackAndroid);\n                this.componentDidUpdate({});\n            }\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate(prevProps) {\n            var props = this.props;\n\n            if (prevProps.visible !== props.visible) {\n                this.animateDialog(props.visible);\n            }\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            BackHandler.removeEventListener('hardwareBackPress', this.onBackAndroid);\n            this.stopDialogAnim();\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var props = this.props;\n\n            if (!this.state.modalVisible) {\n                return null;\n            }\n            var animationStyleMap = {\n                none: {},\n                'slide-up': { transform: [{ translateY: this.state.position }] },\n                'slide-down': { transform: [{ translateY: this.state.position }] },\n                fade: {\n                    transform: [{ scale: this.state.scale }],\n                    opacity: this.state.opacity\n                }\n            };\n            return React.createElement(\n                Portal,\n                null,\n                React.createElement(\n                    View,\n                    { style: [styles.wrap, props.wrapStyle] },\n                    React.createElement(\n                        TouchableWithoutFeedback,\n                        { onPress: this.onMaskClose },\n                        React.createElement(\n                            Animated.View,\n                            { style: [styles.absolute, { opacity: this.state.opacity }] },\n                            React.createElement(View, { style: [styles.absolute, props.maskStyle] })\n                        )\n                    ),\n                    React.createElement(\n                        Animated.View,\n                        { style: [styles.content, props.style, animationStyleMap[props.animationType]] },\n                        this.props.children\n                    )\n                )\n            );\n        }\n    }]);\n\n    return RCModal;\n}(React.Component);\n\nexport default RCModal;\n\nRCModal.defaultProps = {\n    wrapStyle: styles.wrap,\n    maskStyle: styles.mask,\n    animationType: 'slide-up',\n    animateAppear: false,\n    animationDuration: 300,\n    visible: false,\n    maskClosable: true,\n    onClose: function onClose() {},\n    onAnimationEnd: function onAnimationEnd(_visible) {}\n};"]},"metadata":{},"sourceType":"module"}