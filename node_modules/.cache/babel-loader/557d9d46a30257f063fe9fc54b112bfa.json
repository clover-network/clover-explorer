{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar BaseBarSeries_1 = require(\"./BaseBarSeries\");\n\nvar Series_1 = require(\"../../model/Series\");\n\nvar component_1 = require(\"../../util/component\");\n\nvar BarSeriesModel = function (_super) {\n  tslib_1.__extends(BarSeriesModel, _super);\n\n  function BarSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = BarSeriesModel.type;\n    return _this;\n  }\n\n  BarSeriesModel.prototype.getProgressive = function () {\n    return this.get('large') ? this.get('progressive') : false;\n  };\n\n  BarSeriesModel.prototype.getProgressiveThreshold = function () {\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  };\n\n  BarSeriesModel.prototype.brushSelector = function (dataIndex, data, selectors) {\n    return selectors.rect(data.getItemLayout(dataIndex));\n  };\n\n  BarSeriesModel.type = 'series.bar';\n  BarSeriesModel.dependencies = ['grid', 'polar'];\n  BarSeriesModel.defaultOption = component_1.inheritDefaultOption(BaseBarSeries_1[\"default\"].defaultOption, {\n    clip: true,\n    roundCap: false,\n    showBackground: false,\n    backgroundStyle: {\n      color: 'rgba(180, 180, 180, 0.2)',\n      borderColor: null,\n      borderWidth: 0,\n      borderType: 'solid',\n      borderRadius: 0,\n      shadowBlur: 0,\n      shadowColor: null,\n      shadowOffsetX: 0,\n      shadowOffsetY: 0,\n      opacity: 1\n    },\n    select: {\n      itemStyle: {\n        borderColor: '#212121'\n      }\n    },\n    realtimeSort: false\n  });\n  return BarSeriesModel;\n}(BaseBarSeries_1[\"default\"]);\n\nSeries_1[\"default\"].registerClass(BarSeriesModel);\nexports[\"default\"] = BarSeriesModel;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/chart/bar/BarSeries.js"],"names":["exports","__esModule","tslib_1","require","BaseBarSeries_1","Series_1","component_1","BarSeriesModel","_super","__extends","_this","apply","arguments","type","prototype","getProgressive","get","getProgressiveThreshold","progressiveThreshold","largeThreshold","brushSelector","dataIndex","data","selectors","rect","getItemLayout","dependencies","defaultOption","inheritDefaultOption","clip","roundCap","showBackground","backgroundStyle","color","borderColor","borderWidth","borderType","borderRadius","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","opacity","select","itemStyle","realtimeSort","registerClass"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar BaseBarSeries_1 = require(\"./BaseBarSeries\");\n\nvar Series_1 = require(\"../../model/Series\");\n\nvar component_1 = require(\"../../util/component\");\n\nvar BarSeriesModel = function (_super) {\n  tslib_1.__extends(BarSeriesModel, _super);\n\n  function BarSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = BarSeriesModel.type;\n    return _this;\n  }\n\n  BarSeriesModel.prototype.getProgressive = function () {\n    return this.get('large') ? this.get('progressive') : false;\n  };\n\n  BarSeriesModel.prototype.getProgressiveThreshold = function () {\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  };\n\n  BarSeriesModel.prototype.brushSelector = function (dataIndex, data, selectors) {\n    return selectors.rect(data.getItemLayout(dataIndex));\n  };\n\n  BarSeriesModel.type = 'series.bar';\n  BarSeriesModel.dependencies = ['grid', 'polar'];\n  BarSeriesModel.defaultOption = component_1.inheritDefaultOption(BaseBarSeries_1[\"default\"].defaultOption, {\n    clip: true,\n    roundCap: false,\n    showBackground: false,\n    backgroundStyle: {\n      color: 'rgba(180, 180, 180, 0.2)',\n      borderColor: null,\n      borderWidth: 0,\n      borderType: 'solid',\n      borderRadius: 0,\n      shadowBlur: 0,\n      shadowColor: null,\n      shadowOffsetX: 0,\n      shadowOffsetY: 0,\n      opacity: 1\n    },\n    select: {\n      itemStyle: {\n        borderColor: '#212121'\n      }\n    },\n    realtimeSort: false\n  });\n  return BarSeriesModel;\n}(BaseBarSeries_1[\"default\"]);\n\nSeries_1[\"default\"].registerClass(BarSeriesModel);\nexports[\"default\"] = BarSeriesModel;"]},"metadata":{},"sourceType":"script"}