{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { deepAssign } from '../utils';\nimport { Plot } from '../core/plot';\n/**\n * 给 G2Plot 提供非常简单的开放开发的机制。目的是能够让社区和业务上自己基于 G2Plot 开发自己的定制图表库。主要分成几类图表：\n * 1. 领域专业的图表，内部同学因为没有场景，不一定能做的完善。\n * 2. 定制业务的图表，不具备通用性\n * 3. 趣味性的可视化组件\n * 然后官方可以根据社区的情况，可以进行一些官方推荐和采纳。\n *\n * 如果使用？\n *\n * ```ts\n * import { P } from '@antv/g2plot';\n * import { GeoWorldMap, GeoWorldMapOptions } from 'g2plot-geo-world-map';\n *\n * const plot = new P('container', {\n *   geoJson: '',\n *   longitude: '',\n *   latitude: '',\n * }, GeoWorldMap, defaultOptions);\n *\n * plot.render();\n * ```\n */\n\nvar P =\n/** @class */\nfunction (_super) {\n  __extends(P, _super);\n  /**\n   * 相比普通图表增加 adaptor 参数。\n   * @param container\n   * @param options\n   * @param adaptor\n   * @param defaultOptions\n   */\n\n\n  function P(container, options, adaptor, defaultOptions) {\n    var _this = _super.call(this, container, deepAssign({}, defaultOptions, options)) || this;\n    /** 统一为 any plot */\n\n\n    _this.type = 'g2-plot';\n    _this.defaultOptions = defaultOptions;\n    _this.adaptor = adaptor;\n    return _this;\n  }\n  /**\n   * 实现父类方法，直接使用传入的\n   */\n\n\n  P.prototype.getDefaultOptions = function () {\n    return this.defaultOptions;\n  };\n  /**\n   * 实现父类方法，直接使用传入的\n   */\n\n\n  P.prototype.getSchemaAdaptor = function () {\n    return this.adaptor;\n  };\n\n  return P;\n}(Plot);\n\nexport { P };","map":{"version":3,"sources":["../../src/plugin/index.ts"],"names":[],"mappings":";AAAA,SAAS,UAAT,QAA2B,UAA3B;AACA,SAAS,IAAT,QAAkC,cAAlC;AAEA;;;;;;;;;;;;;;;;;;;;;AAqBG;;AACH,IAAA,CAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA8C,EAAA,SAAA,CAAA,CAAA,EAAA,MAAA,CAAA;AAU5C;;;;;;AAMG;;;AACH,WAAA,CAAA,CAAY,SAAZ,EAA6C,OAA7C,EAAyD,OAAzD,EAA8E,cAA9E,EAAyG;AAAzG,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,SAAN,EAAiB,UAAU,CAAC,EAAD,EAAK,cAAL,EAAqB,OAArB,CAA3B,KAAyD,IAD3D;AAhBA;;;AACgB,IAAA,KAAA,CAAA,IAAA,GAAO,SAAP;AAkBd,IAAA,KAAI,CAAC,cAAL,GAAsB,cAAtB;AACA,IAAA,KAAI,CAAC,OAAL,GAAe,OAAf;;AACD;AAED;;AAEG;;;AACO,EAAA,CAAA,CAAA,SAAA,CAAA,iBAAA,GAAV,YAAA;AACE,WAAO,KAAK,cAAZ;AACD,GAFS;AAIV;;AAEG;;;AACO,EAAA,CAAA,CAAA,SAAA,CAAA,gBAAA,GAAV,YAAA;AACE,WAAO,KAAK,OAAZ;AACD,GAFS;;AAGZ,SAAA,CAAA;AAAC,CArCD,CAA8C,IAA9C,CAAA","sourcesContent":["import { deepAssign } from '../utils';\nimport { Plot, PickOptions } from '../core/plot';\nimport { Adaptor } from '../core/adaptor';\n/**\n * 给 G2Plot 提供非常简单的开放开发的机制。目的是能够让社区和业务上自己基于 G2Plot 开发自己的定制图表库。主要分成几类图表：\n * 1. 领域专业的图表，内部同学因为没有场景，不一定能做的完善。\n * 2. 定制业务的图表，不具备通用性\n * 3. 趣味性的可视化组件\n * 然后官方可以根据社区的情况，可以进行一些官方推荐和采纳。\n *\n * 如果使用？\n *\n * ```ts\n * import { P } from '@antv/g2plot';\n * import { GeoWorldMap, GeoWorldMapOptions } from 'g2plot-geo-world-map';\n *\n * const plot = new P('container', {\n *   geoJson: '',\n *   longitude: '',\n *   latitude: '',\n * }, GeoWorldMap, defaultOptions);\n *\n * plot.render();\n * ```\n */\nexport class P<O extends PickOptions> extends Plot<O> {\n  /** 统一为 any plot */\n  public readonly type = 'g2-plot';\n\n  /** 外部传入的 defaultOptions */\n  private defaultOptions: Partial<O>;\n\n  /** 外部传入的 adaptor 函数 */\n  private adaptor: Adaptor<O>;\n\n  /**\n   * 相比普通图表增加 adaptor 参数。\n   * @param container\n   * @param options\n   * @param adaptor\n   * @param defaultOptions\n   */\n  constructor(container: string | HTMLElement, options: O, adaptor: Adaptor<O>, defaultOptions?: Partial<O>) {\n    super(container, deepAssign({}, defaultOptions, options));\n\n    this.defaultOptions = defaultOptions;\n    this.adaptor = adaptor;\n  }\n\n  /**\n   * 实现父类方法，直接使用传入的\n   */\n  protected getDefaultOptions() {\n    return this.defaultOptions;\n  }\n\n  /**\n   * 实现父类方法，直接使用传入的\n   */\n  protected getSchemaAdaptor(): Adaptor<O> {\n    return this.adaptor;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}