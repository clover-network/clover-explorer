{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar is_function_1 = require(\"./is-function\");\n\nvar is_match_1 = require(\"./is-match\");\n\nvar is_array_1 = require(\"./is-array\");\n\nvar is_plain_object_1 = require(\"./is-plain-object\");\n\nfunction find(arr, predicate) {\n  if (!is_array_1.default(arr)) return null;\n\n  var _predicate;\n\n  if (is_function_1.default(predicate)) {\n    _predicate = predicate;\n  }\n\n  if (is_plain_object_1.default(predicate)) {\n    _predicate = function (a) {\n      return is_match_1.default(a, predicate);\n    };\n  }\n\n  if (_predicate) {\n    for (var i = 0; i < arr.length; i += 1) {\n      if (_predicate(arr[i])) {\n        return arr[i];\n      }\n    }\n  }\n\n  return null;\n}\n\nexports.default = find;","map":{"version":3,"sources":["../src/find.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,IAAA,iBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AAKA,SAAS,IAAT,CAAiB,GAAjB,EAA2B,SAA3B,EAAuD;AACrD,MAAI,CAAC,UAAA,CAAA,OAAA,CAAQ,GAAR,CAAL,EAAmB,OAAO,IAAP;;AAEnB,MAAI,UAAJ;;AACA,MAAI,aAAA,CAAA,OAAA,CAAW,SAAX,CAAJ,EAA2B;AACzB,IAAA,UAAU,GAAG,SAAb;AACD;;AACD,MAAI,iBAAA,CAAA,OAAA,CAAc,SAAd,CAAJ,EAA8B;AAC5B,IAAA,UAAU,GAAG,UAAA,CAAA,EAAC;AAAI,aAAA,UAAA,CAAA,OAAA,CAAQ,CAAR,EAAA,SAAA,CAAA;AAAqB,KAAvC;AACD;;AACD,MAAI,UAAJ,EAAgB;AACd,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAAG,CAAC,MAAxB,EAAgC,CAAC,IAAI,CAArC,EAAwC;AACtC,UAAI,UAAU,CAAC,GAAG,CAAC,CAAD,CAAJ,CAAd,EAAwB;AACtB,eAAO,GAAG,CAAC,CAAD,CAAV;AACD;AACF;AACF;;AACD,SAAO,IAAP;AACD;;AAED,OAAA,CAAA,OAAA,GAAe,IAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar is_function_1 = require(\"./is-function\");\nvar is_match_1 = require(\"./is-match\");\nvar is_array_1 = require(\"./is-array\");\nvar is_plain_object_1 = require(\"./is-plain-object\");\nfunction find(arr, predicate) {\n    if (!is_array_1.default(arr))\n        return null;\n    var _predicate;\n    if (is_function_1.default(predicate)) {\n        _predicate = predicate;\n    }\n    if (is_plain_object_1.default(predicate)) {\n        _predicate = function (a) { return is_match_1.default(a, predicate); };\n    }\n    if (_predicate) {\n        for (var i = 0; i < arr.length; i += 1) {\n            if (_predicate(arr[i])) {\n                return arr[i];\n            }\n        }\n    }\n    return null;\n}\nexports.default = find;\n//# sourceMappingURL=find.js.map"]},"metadata":{},"sourceType":"script"}