{"ast":null,"code":"import React from 'react';\nimport { Text, TouchableHighlight, View } from 'react-native';\nimport Modal from '../modal/ModalView';\nimport PopupMixin from './PopupMixin';\n\nvar getModal = function getModal(props, visible, _ref) {\n  var getContent = _ref.getContent,\n      hide = _ref.hide,\n      onDismiss = _ref.onDismiss,\n      onOk = _ref.onOk;\n  var styles = props.styles,\n      title = props.title,\n      okText = props.okText,\n      dismissText = props.dismissText;\n  var titleEl = typeof title === 'string' ? React.createElement(Text, {\n    style: [styles.title]\n  }, title) : title;\n  var okEl = typeof okText === 'string' ? React.createElement(Text, {\n    style: [styles.actionText, styles.okText]\n  }, okText) : okText;\n  var dismissEl = typeof dismissText === 'string' ? React.createElement(Text, {\n    style: [styles.actionText, styles.dismissText]\n  }, dismissText) : dismissText;\n  return React.createElement(Modal, {\n    animationType: 'slide-up',\n    wrapStyle: styles.modal,\n    style: styles.container,\n    visible: visible,\n    onClose: hide\n  }, React.createElement(View, {\n    style: [styles.header]\n  }, React.createElement(TouchableHighlight, {\n    onPress: onDismiss,\n    style: [styles.headerItem],\n    activeOpacity: props.actionTextActiveOpacity,\n    underlayColor: props.actionTextUnderlayColor\n  }, dismissEl), React.createElement(View, {\n    style: [styles.headerItem]\n  }, titleEl), React.createElement(TouchableHighlight, {\n    onPress: onOk,\n    style: [styles.headerItem],\n    activeOpacity: props.actionTextActiveOpacity,\n    underlayColor: props.actionTextUnderlayColor\n  }, okEl)), getContent());\n};\n\nexport default PopupMixin(getModal, {\n  actionTextUnderlayColor: '#ddd',\n  actionTextActiveOpacity: 1,\n  triggerType: 'onPress',\n  styles: {},\n  WrapComponent: View\n});","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@ant-design/react-native/es/picker/Popup.js"],"names":["React","Text","TouchableHighlight","View","Modal","PopupMixin","getModal","props","visible","_ref","getContent","hide","onDismiss","onOk","styles","title","okText","dismissText","titleEl","createElement","style","okEl","actionText","dismissEl","animationType","wrapStyle","modal","container","onClose","header","onPress","headerItem","activeOpacity","actionTextActiveOpacity","underlayColor","actionTextUnderlayColor","triggerType","WrapComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, TouchableHighlight, View } from 'react-native';\nimport Modal from '../modal/ModalView';\nimport PopupMixin from './PopupMixin';\nvar getModal = function getModal(props, visible, _ref) {\n  var getContent = _ref.getContent,\n      hide = _ref.hide,\n      onDismiss = _ref.onDismiss,\n      onOk = _ref.onOk;\n  var styles = props.styles,\n      title = props.title,\n      okText = props.okText,\n      dismissText = props.dismissText;\n\n  var titleEl = typeof title === 'string' ? React.createElement(\n    Text,\n    { style: [styles.title] },\n    title\n  ) : title;\n  var okEl = typeof okText === 'string' ? React.createElement(\n    Text,\n    { style: [styles.actionText, styles.okText] },\n    okText\n  ) : okText;\n  var dismissEl = typeof dismissText === 'string' ? React.createElement(\n    Text,\n    { style: [styles.actionText, styles.dismissText] },\n    dismissText\n  ) : dismissText;\n  return React.createElement(\n    Modal,\n    { animationType: 'slide-up', wrapStyle: styles.modal, style: styles.container, visible: visible, onClose: hide },\n    React.createElement(\n      View,\n      { style: [styles.header] },\n      React.createElement(\n        TouchableHighlight,\n        { onPress: onDismiss, style: [styles.headerItem], activeOpacity: props.actionTextActiveOpacity, underlayColor: props.actionTextUnderlayColor },\n        dismissEl\n      ),\n      React.createElement(\n        View,\n        { style: [styles.headerItem] },\n        titleEl\n      ),\n      React.createElement(\n        TouchableHighlight,\n        { onPress: onOk, style: [styles.headerItem], activeOpacity: props.actionTextActiveOpacity, underlayColor: props.actionTextUnderlayColor },\n        okEl\n      )\n    ),\n    getContent()\n  );\n};\nexport default PopupMixin(getModal, {\n  actionTextUnderlayColor: '#ddd',\n  actionTextActiveOpacity: 1,\n  triggerType: 'onPress',\n  styles: {},\n  WrapComponent: View\n});"]},"metadata":{},"sourceType":"module"}