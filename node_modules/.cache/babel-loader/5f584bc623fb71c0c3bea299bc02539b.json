{"ast":null,"code":"import { deepMix, isString, each } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { getMappingValue } from './attr';\nimport { MarkerSymbols } from './marker';\n\nfunction setMarkerSymbol(marker) {\n  var symbol = marker.symbol;\n\n  if (isString(symbol) && MarkerSymbols[symbol]) {\n    marker.symbol = MarkerSymbols[symbol];\n  }\n}\n/**\n * @ignore\n * get the legend layout from direction\n * @param direction\n * @returns layout 'horizontal' | 'vertical'\n */\n\n\nexport function getLegendLayout(direction) {\n  return direction.startsWith(DIRECTION.LEFT) || direction.startsWith(DIRECTION.RIGHT) ? 'vertical' : 'horizontal';\n}\n/**\n * @ignore\n * get the legend items\n * @param view\n * @param geometry\n * @param attr\n * @param themeMarker\n * @param userMarker\n * @returns legend items\n */\n\nexport function getLegendItems(view, geometry, attr, themeMarker, userMarker) {\n  var scale = attr.getScale(attr.type);\n\n  if (scale.isCategory) {\n    var field_1 = scale.field;\n    var colorAttr_1 = geometry.getAttribute('color');\n    var shapeAttr_1 = geometry.getAttribute('shape');\n    var defaultColor_1 = view.getTheme().defaultColor;\n    var isInPolar_1 = geometry.coordinate.isPolar;\n    return scale.getTicks().map(function (tick) {\n      var _a;\n\n      var text = tick.text,\n          scaleValue = tick.value;\n      var name = text;\n      var value = scale.invert(scaleValue); // 通过过滤图例项的数据，来看是否 unchecked\n\n      var unchecked = view.filterFieldData(field_1, [(_a = {}, _a[field_1] = value, _a)]).length === 0;\n      each(view.views, function (subView) {\n        var _a;\n\n        if (!subView.filterFieldData(field_1, [(_a = {}, _a[field_1] = value, _a)]).length) {\n          unchecked = true;\n        }\n      }); // @ts-ignore\n\n      var color = getMappingValue(colorAttr_1, value, defaultColor_1);\n      var shape = getMappingValue(shapeAttr_1, value, 'point');\n      var marker = geometry.getShapeMarker(shape, {\n        color: color,\n        isInPolar: isInPolar_1\n      }); // the marker configure order should be ensure\n\n      marker = deepMix({}, themeMarker, marker, userMarker);\n      setMarkerSymbol(marker);\n      return {\n        id: value,\n        name: name,\n        value: value,\n        marker: marker,\n        unchecked: unchecked\n      };\n    });\n  }\n\n  return [];\n}\n/**\n * @ignore\n * custom legend 的 items 获取\n * @param themeMarker\n * @param userMarker\n * @param customItems\n */\n\nexport function getCustomLegendItems(themeMarker, userMarker, customItems) {\n  // 如果有自定义的 item，那么就直接使用，并合并主题的 marker 配置\n  return customItems.map(function (item) {\n    var marker = deepMix({}, themeMarker, userMarker, item.marker);\n    setMarkerSymbol(marker);\n    item.marker = marker;\n    return item;\n  });\n}","map":{"version":3,"sources":["../../src/util/legend.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix, isString, each } from '@antv/util';\nimport View from '../chart/view';\nimport { DIRECTION } from '../constant';\nimport { Attribute, Tick } from '../dependents';\nimport Geometry from '../geometry/base';\nimport { LegendItem } from '../interface';\nimport { getMappingValue } from './attr';\nimport { MarkerSymbols } from './marker';\n\nfunction setMarkerSymbol(marker) {\n  const symbol = marker.symbol;\n  if (isString(symbol) && MarkerSymbols[symbol]) {\n    marker.symbol = MarkerSymbols[symbol];\n  }\n}\n\n/**\n * @ignore\n * get the legend layout from direction\n * @param direction\n * @returns layout 'horizontal' | 'vertical'\n */\nexport function getLegendLayout(direction: DIRECTION): 'vertical' | 'horizontal' {\n  return direction.startsWith(DIRECTION.LEFT) || direction.startsWith(DIRECTION.RIGHT) ? 'vertical' : 'horizontal';\n}\n\n/**\n * @ignore\n * get the legend items\n * @param view\n * @param geometry\n * @param attr\n * @param themeMarker\n * @param userMarker\n * @returns legend items\n */\nexport function getLegendItems(\n  view: View,\n  geometry: Geometry,\n  attr: Attribute,\n  themeMarker: object,\n  userMarker\n): any[] {\n  const scale = attr.getScale(attr.type);\n  if (scale.isCategory) {\n    const field = scale.field;\n    const colorAttr = geometry.getAttribute('color');\n    const shapeAttr = geometry.getAttribute('shape');\n    const defaultColor = view.getTheme().defaultColor;\n    const isInPolar = geometry.coordinate.isPolar;\n\n    return scale.getTicks().map((tick: Tick) => {\n      const { text, value: scaleValue } = tick;\n      const name = text;\n      const value = scale.invert(scaleValue);\n\n      // 通过过滤图例项的数据，来看是否 unchecked\n      let unchecked = view.filterFieldData(field, [{ [field]: value }]).length === 0;\n      each(view.views, (subView) => {\n        if (!subView.filterFieldData(field, [{ [field]: value }]).length) {\n          unchecked = true;\n        }\n      });\n\n      // @ts-ignore\n      const color = getMappingValue(colorAttr, value, defaultColor);\n      const shape = getMappingValue(shapeAttr, value, 'point');\n      let marker = geometry.getShapeMarker(shape, {\n        color,\n        isInPolar,\n      });\n      // the marker configure order should be ensure\n      marker = deepMix({}, themeMarker, marker, userMarker);\n\n      setMarkerSymbol(marker);\n\n      return { id: value, name, value, marker, unchecked };\n    });\n  }\n  return [];\n}\n\n/**\n * @ignore\n * custom legend 的 items 获取\n * @param themeMarker\n * @param userMarker\n * @param customItems\n */\nexport function getCustomLegendItems(themeMarker: object, userMarker: object, customItems: LegendItem[]) {\n  // 如果有自定义的 item，那么就直接使用，并合并主题的 marker 配置\n  return customItems.map((item: LegendItem) => {\n    const marker = deepMix({}, themeMarker, userMarker, item.marker);\n    setMarkerSymbol(marker);\n\n    item.marker = marker;\n    return item;\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}