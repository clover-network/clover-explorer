{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nimport { each } from 'zrender/esm/core/util';\nimport Group from 'zrender/esm/graphic/Group';\nimport * as componentUtil from '../util/component';\nimport * as clazzUtil from '../util/clazz';\nimport * as modelUtil from '../util/model';\nimport { enterEmphasis, leaveEmphasis, getHighlightDigit } from '../util/states';\nimport { createTask } from '../stream/task';\nimport createRenderPlanner from '../chart/helper/createRenderPlanner';\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nvar ChartView = function () {\n  function ChartView() {\n    this.group = new Group();\n    this.uid = componentUtil.getUID('viewChart');\n    this.renderTask = createTask({\n      plan: renderTaskPlan,\n      reset: renderTaskReset\n    });\n    this.renderTask.context = {\n      view: this\n    };\n  }\n\n  ChartView.prototype.init = function (ecModel, api) {};\n\n  ChartView.prototype.render = function (seriesModel, ecModel, api, payload) {};\n\n  ChartView.prototype.highlight = function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  };\n\n  ChartView.prototype.downplay = function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  };\n\n  ChartView.prototype.remove = function (ecModel, api) {\n    this.group.removeAll();\n  };\n\n  ChartView.prototype.dispose = function (ecModel, api) {};\n\n  ChartView.prototype.updateView = function (seriesModel, ecModel, api, payload) {\n    this.render(seriesModel, ecModel, api, payload);\n  };\n\n  ChartView.prototype.updateLayout = function (seriesModel, ecModel, api, payload) {\n    this.render(seriesModel, ecModel, api, payload);\n  };\n\n  ChartView.prototype.updateVisual = function (seriesModel, ecModel, api, payload) {\n    this.render(seriesModel, ecModel, api, payload);\n  };\n\n  ChartView.markUpdateMethod = function (payload, methodName) {\n    inner(payload).updateMethod = methodName;\n  };\n\n  ChartView.protoInitialize = function () {\n    var proto = ChartView.prototype;\n    proto.type = 'chart';\n  }();\n\n  return ChartView;\n}();\n\n;\n\nfunction elSetState(el, state, highlightDigit) {\n  if (el) {\n    (state === 'emphasis' ? enterEmphasis : leaveEmphasis)(el, highlightDigit);\n  }\n}\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n  var highlightDigit = payload && payload.highlightKey != null ? getHighlightDigit(payload.highlightKey) : null;\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state, highlightDigit);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state, highlightDigit);\n    });\n  }\n}\n\nclazzUtil.enableClassExtend(ChartView, ['dispose']);\nclazzUtil.enableClassManagement(ChartView, {\n  registerWhenExtend: true\n});\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload;\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function (params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    forceFirstProgress: true,\n    progress: function (params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nexport default ChartView;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/esm/view/Chart.js"],"names":["each","Group","componentUtil","clazzUtil","modelUtil","enterEmphasis","leaveEmphasis","getHighlightDigit","createTask","createRenderPlanner","inner","makeInner","renderPlanner","ChartView","group","uid","getUID","renderTask","plan","renderTaskPlan","reset","renderTaskReset","context","view","prototype","init","ecModel","api","render","seriesModel","payload","highlight","toggleHighlight","getData","downplay","remove","removeAll","dispose","updateView","updateLayout","updateVisual","markUpdateMethod","methodName","updateMethod","protoInitialize","proto","type","elSetState","el","state","highlightDigit","data","dataIndex","queryDataIndex","highlightKey","normalizeToArray","dataIdx","getItemGraphicEl","eachItemGraphicEl","enableClassExtend","enableClassManagement","registerWhenExtend","model","progressiveRender","pipelineContext","progressMethodMap","incrementalPrepareRender","progress","params","incrementalRender","forceFirstProgress"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { each } from 'zrender/esm/core/util';\nimport Group from 'zrender/esm/graphic/Group';\nimport * as componentUtil from '../util/component';\nimport * as clazzUtil from '../util/clazz';\nimport * as modelUtil from '../util/model';\nimport { enterEmphasis, leaveEmphasis, getHighlightDigit } from '../util/states';\nimport { createTask } from '../stream/task';\nimport createRenderPlanner from '../chart/helper/createRenderPlanner';\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nvar ChartView = function () {\n  function ChartView() {\n    this.group = new Group();\n    this.uid = componentUtil.getUID('viewChart');\n    this.renderTask = createTask({\n      plan: renderTaskPlan,\n      reset: renderTaskReset\n    });\n    this.renderTask.context = {\n      view: this\n    };\n  }\n\n  ChartView.prototype.init = function (ecModel, api) {};\n\n  ChartView.prototype.render = function (seriesModel, ecModel, api, payload) {};\n\n  ChartView.prototype.highlight = function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  };\n\n  ChartView.prototype.downplay = function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  };\n\n  ChartView.prototype.remove = function (ecModel, api) {\n    this.group.removeAll();\n  };\n\n  ChartView.prototype.dispose = function (ecModel, api) {};\n\n  ChartView.prototype.updateView = function (seriesModel, ecModel, api, payload) {\n    this.render(seriesModel, ecModel, api, payload);\n  };\n\n  ChartView.prototype.updateLayout = function (seriesModel, ecModel, api, payload) {\n    this.render(seriesModel, ecModel, api, payload);\n  };\n\n  ChartView.prototype.updateVisual = function (seriesModel, ecModel, api, payload) {\n    this.render(seriesModel, ecModel, api, payload);\n  };\n\n  ChartView.markUpdateMethod = function (payload, methodName) {\n    inner(payload).updateMethod = methodName;\n  };\n\n  ChartView.protoInitialize = function () {\n    var proto = ChartView.prototype;\n    proto.type = 'chart';\n  }();\n\n  return ChartView;\n}();\n\n;\n\nfunction elSetState(el, state, highlightDigit) {\n  if (el) {\n    (state === 'emphasis' ? enterEmphasis : leaveEmphasis)(el, highlightDigit);\n  }\n}\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n  var highlightDigit = payload && payload.highlightKey != null ? getHighlightDigit(payload.highlightKey) : null;\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state, highlightDigit);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state, highlightDigit);\n    });\n  }\n}\n\nclazzUtil.enableClassExtend(ChartView, ['dispose']);\nclazzUtil.enableClassManagement(ChartView, {\n  registerWhenExtend: true\n});\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload;\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function (params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    forceFirstProgress: true,\n    progress: function (params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nexport default ChartView;"]},"metadata":{},"sourceType":"module"}