{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar BoundingRect_1 = require(\"../core/BoundingRect\");\n\nvar util_1 = require(\"../core/util\");\n\nvar LRU_1 = require(\"../core/LRU\");\n\nvar textWidthCache = {};\nexports.DEFAULT_FONT = '12px sans-serif';\n\nvar _ctx;\n\nvar _cachedFont;\n\nfunction defaultMeasureText(text, font) {\n  if (!_ctx) {\n    _ctx = util_1.createCanvas().getContext('2d');\n  }\n\n  if (_cachedFont !== font) {\n    _cachedFont = _ctx.font = font || exports.DEFAULT_FONT;\n  }\n\n  return _ctx.measureText(text);\n}\n\nvar methods = {\n  measureText: defaultMeasureText\n};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n\nexports.$override = $override;\n\nfunction getWidth(text, font) {\n  font = font || exports.DEFAULT_FONT;\n  var cacheOfFont = textWidthCache[font];\n\n  if (!cacheOfFont) {\n    cacheOfFont = textWidthCache[font] = new LRU_1[\"default\"](500);\n  }\n\n  var width = cacheOfFont.get(text);\n\n  if (width == null) {\n    width = methods.measureText(text, font).width;\n    cacheOfFont.put(text, width);\n  }\n\n  return width;\n}\n\nexports.getWidth = getWidth;\n\nfunction innerGetBoundingRect(text, font, textAlign, textBaseline) {\n  var width = getWidth(text, font);\n  var height = getLineHeight(font);\n  var x = adjustTextX(0, width, textAlign);\n  var y = adjustTextY(0, height, textBaseline);\n  var rect = new BoundingRect_1[\"default\"](x, y, width, height);\n  return rect;\n}\n\nexports.innerGetBoundingRect = innerGetBoundingRect;\n\nfunction getBoundingRect(text, font, textAlign, textBaseline) {\n  var textLines = ((text || '') + '').split('\\n');\n  var len = textLines.length;\n\n  if (len === 1) {\n    return innerGetBoundingRect(textLines[0], font, textAlign, textBaseline);\n  } else {\n    var uniondRect = new BoundingRect_1[\"default\"](0, 0, 0, 0);\n\n    for (var i = 0; i < textLines.length; i++) {\n      var rect = innerGetBoundingRect(textLines[i], font, textAlign, textBaseline);\n      i === 0 ? uniondRect.copy(rect) : uniondRect.union(rect);\n    }\n\n    return uniondRect;\n  }\n}\n\nexports.getBoundingRect = getBoundingRect;\n\nfunction adjustTextX(x, width, textAlign) {\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nexports.adjustTextX = adjustTextX;\n\nfunction adjustTextY(y, height, verticalAlign) {\n  if (verticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (verticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n\nexports.adjustTextY = adjustTextY;\n\nfunction getLineHeight(font) {\n  return getWidth('å›½', font);\n}\n\nexports.getLineHeight = getLineHeight;\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n}\n\nexports.measureText = measureText;\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nexports.parsePercent = parsePercent;\n\nfunction calculateTextPosition(out, opts, rect) {\n  var textPosition = opts.position || 'inside';\n  var distance = opts.distance != null ? opts.distance : 5;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var x = rect.x;\n  var y = rect.y;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  if (textPosition instanceof Array) {\n    x += parsePercent(textPosition[0], rect.width);\n    y += parsePercent(textPosition[1], rect.height);\n    textAlign = null;\n    textVerticalAlign = null;\n  } else {\n    switch (textPosition) {\n      case 'left':\n        x -= distance;\n        y += halfHeight;\n        textAlign = 'right';\n        textVerticalAlign = 'middle';\n        break;\n\n      case 'right':\n        x += distance + width;\n        y += halfHeight;\n        textVerticalAlign = 'middle';\n        break;\n\n      case 'top':\n        x += width / 2;\n        y -= distance;\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        break;\n\n      case 'bottom':\n        x += width / 2;\n        y += height + distance;\n        textAlign = 'center';\n        break;\n\n      case 'inside':\n        x += width / 2;\n        y += halfHeight;\n        textAlign = 'center';\n        textVerticalAlign = 'middle';\n        break;\n\n      case 'insideLeft':\n        x += distance;\n        y += halfHeight;\n        textVerticalAlign = 'middle';\n        break;\n\n      case 'insideRight':\n        x += width - distance;\n        y += halfHeight;\n        textAlign = 'right';\n        textVerticalAlign = 'middle';\n        break;\n\n      case 'insideTop':\n        x += width / 2;\n        y += distance;\n        textAlign = 'center';\n        break;\n\n      case 'insideBottom':\n        x += width / 2;\n        y += height - distance;\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        break;\n\n      case 'insideTopLeft':\n        x += distance;\n        y += distance;\n        break;\n\n      case 'insideTopRight':\n        x += width - distance;\n        y += distance;\n        textAlign = 'right';\n        break;\n\n      case 'insideBottomLeft':\n        x += distance;\n        y += height - distance;\n        textVerticalAlign = 'bottom';\n        break;\n\n      case 'insideBottomRight':\n        x += width - distance;\n        y += height - distance;\n        textAlign = 'right';\n        textVerticalAlign = 'bottom';\n        break;\n    }\n  }\n\n  out = out || {};\n  out.x = x;\n  out.y = y;\n  out.align = textAlign;\n  out.verticalAlign = textVerticalAlign;\n  return out;\n}\n\nexports.calculateTextPosition = calculateTextPosition;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/zrender/lib/contain/text.js"],"names":["exports","__esModule","BoundingRect_1","require","util_1","LRU_1","textWidthCache","DEFAULT_FONT","_ctx","_cachedFont","defaultMeasureText","text","font","createCanvas","getContext","measureText","methods","$override","name","fn","getWidth","cacheOfFont","width","get","put","innerGetBoundingRect","textAlign","textBaseline","height","getLineHeight","x","adjustTextX","y","adjustTextY","rect","getBoundingRect","textLines","split","len","length","uniondRect","i","copy","union","verticalAlign","parsePercent","value","maxValue","lastIndexOf","parseFloat","calculateTextPosition","out","opts","textPosition","position","distance","halfHeight","textVerticalAlign","Array","align"],"mappings":"AAAA;;AACAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;AACA,IAAIC,cAAc,GAAGC,OAAO,CAAC,sBAAD,CAA5B;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,cAAD,CAApB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,aAAD,CAAnB;;AACA,IAAIG,cAAc,GAAG,EAArB;AACAN,OAAO,CAACO,YAAR,GAAuB,iBAAvB;;AACA,IAAIC,IAAJ;;AACA,IAAIC,WAAJ;;AACA,SAASC,kBAAT,CAA4BC,IAA5B,EAAkCC,IAAlC,EAAwC;AACpC,MAAI,CAACJ,IAAL,EAAW;AACPA,IAAAA,IAAI,GAAGJ,MAAM,CAACS,YAAP,GAAsBC,UAAtB,CAAiC,IAAjC,CAAP;AACH;;AACD,MAAIL,WAAW,KAAKG,IAApB,EAA0B;AACtBH,IAAAA,WAAW,GAAGD,IAAI,CAACI,IAAL,GAAYA,IAAI,IAAIZ,OAAO,CAACO,YAA1C;AACH;;AACD,SAAOC,IAAI,CAACO,WAAL,CAAiBJ,IAAjB,CAAP;AACH;;AACD,IAAIK,OAAO,GAAG;AACVD,EAAAA,WAAW,EAAEL;AADH,CAAd;;AAGA,SAASO,SAAT,CAAmBC,IAAnB,EAAyBC,EAAzB,EAA6B;AACzBH,EAAAA,OAAO,CAACE,IAAD,CAAP,GAAgBC,EAAhB;AACH;;AACDnB,OAAO,CAACiB,SAAR,GAAoBA,SAApB;;AACA,SAASG,QAAT,CAAkBT,IAAlB,EAAwBC,IAAxB,EAA8B;AAC1BA,EAAAA,IAAI,GAAGA,IAAI,IAAIZ,OAAO,CAACO,YAAvB;AACA,MAAIc,WAAW,GAAGf,cAAc,CAACM,IAAD,CAAhC;;AACA,MAAI,CAACS,WAAL,EAAkB;AACdA,IAAAA,WAAW,GAAGf,cAAc,CAACM,IAAD,CAAd,GAAuB,IAAIP,KAAK,CAAC,SAAD,CAAT,CAAqB,GAArB,CAArC;AACH;;AACD,MAAIiB,KAAK,GAAGD,WAAW,CAACE,GAAZ,CAAgBZ,IAAhB,CAAZ;;AACA,MAAIW,KAAK,IAAI,IAAb,EAAmB;AACfA,IAAAA,KAAK,GAAGN,OAAO,CAACD,WAAR,CAAoBJ,IAApB,EAA0BC,IAA1B,EAAgCU,KAAxC;AACAD,IAAAA,WAAW,CAACG,GAAZ,CAAgBb,IAAhB,EAAsBW,KAAtB;AACH;;AACD,SAAOA,KAAP;AACH;;AACDtB,OAAO,CAACoB,QAAR,GAAmBA,QAAnB;;AACA,SAASK,oBAAT,CAA8Bd,IAA9B,EAAoCC,IAApC,EAA0Cc,SAA1C,EAAqDC,YAArD,EAAmE;AAC/D,MAAIL,KAAK,GAAGF,QAAQ,CAACT,IAAD,EAAOC,IAAP,CAApB;AACA,MAAIgB,MAAM,GAAGC,aAAa,CAACjB,IAAD,CAA1B;AACA,MAAIkB,CAAC,GAAGC,WAAW,CAAC,CAAD,EAAIT,KAAJ,EAAWI,SAAX,CAAnB;AACA,MAAIM,CAAC,GAAGC,WAAW,CAAC,CAAD,EAAIL,MAAJ,EAAYD,YAAZ,CAAnB;AACA,MAAIO,IAAI,GAAG,IAAIhC,cAAc,CAAC,SAAD,CAAlB,CAA8B4B,CAA9B,EAAiCE,CAAjC,EAAoCV,KAApC,EAA2CM,MAA3C,CAAX;AACA,SAAOM,IAAP;AACH;;AACDlC,OAAO,CAACyB,oBAAR,GAA+BA,oBAA/B;;AACA,SAASU,eAAT,CAAyBxB,IAAzB,EAA+BC,IAA/B,EAAqCc,SAArC,EAAgDC,YAAhD,EAA8D;AAC1D,MAAIS,SAAS,GAAG,CAAC,CAACzB,IAAI,IAAI,EAAT,IAAe,EAAhB,EAAoB0B,KAApB,CAA0B,IAA1B,CAAhB;AACA,MAAIC,GAAG,GAAGF,SAAS,CAACG,MAApB;;AACA,MAAID,GAAG,KAAK,CAAZ,EAAe;AACX,WAAOb,oBAAoB,CAACW,SAAS,CAAC,CAAD,CAAV,EAAexB,IAAf,EAAqBc,SAArB,EAAgCC,YAAhC,CAA3B;AACH,GAFD,MAGK;AACD,QAAIa,UAAU,GAAG,IAAItC,cAAc,CAAC,SAAD,CAAlB,CAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,EAAuC,CAAvC,CAAjB;;AACA,SAAK,IAAIuC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,SAAS,CAACG,MAA9B,EAAsCE,CAAC,EAAvC,EAA2C;AACvC,UAAIP,IAAI,GAAGT,oBAAoB,CAACW,SAAS,CAACK,CAAD,CAAV,EAAe7B,IAAf,EAAqBc,SAArB,EAAgCC,YAAhC,CAA/B;AACAc,MAAAA,CAAC,KAAK,CAAN,GAAUD,UAAU,CAACE,IAAX,CAAgBR,IAAhB,CAAV,GAAkCM,UAAU,CAACG,KAAX,CAAiBT,IAAjB,CAAlC;AACH;;AACD,WAAOM,UAAP;AACH;AACJ;;AACDxC,OAAO,CAACmC,eAAR,GAA0BA,eAA1B;;AACA,SAASJ,WAAT,CAAqBD,CAArB,EAAwBR,KAAxB,EAA+BI,SAA/B,EAA0C;AACtC,MAAIA,SAAS,KAAK,OAAlB,EAA2B;AACvBI,IAAAA,CAAC,IAAIR,KAAL;AACH,GAFD,MAGK,IAAII,SAAS,KAAK,QAAlB,EAA4B;AAC7BI,IAAAA,CAAC,IAAIR,KAAK,GAAG,CAAb;AACH;;AACD,SAAOQ,CAAP;AACH;;AACD9B,OAAO,CAAC+B,WAAR,GAAsBA,WAAtB;;AACA,SAASE,WAAT,CAAqBD,CAArB,EAAwBJ,MAAxB,EAAgCgB,aAAhC,EAA+C;AAC3C,MAAIA,aAAa,KAAK,QAAtB,EAAgC;AAC5BZ,IAAAA,CAAC,IAAIJ,MAAM,GAAG,CAAd;AACH,GAFD,MAGK,IAAIgB,aAAa,KAAK,QAAtB,EAAgC;AACjCZ,IAAAA,CAAC,IAAIJ,MAAL;AACH;;AACD,SAAOI,CAAP;AACH;;AACDhC,OAAO,CAACiC,WAAR,GAAsBA,WAAtB;;AACA,SAASJ,aAAT,CAAuBjB,IAAvB,EAA6B;AACzB,SAAOQ,QAAQ,CAAC,GAAD,EAAMR,IAAN,CAAf;AACH;;AACDZ,OAAO,CAAC6B,aAAR,GAAwBA,aAAxB;;AACA,SAASd,WAAT,CAAqBJ,IAArB,EAA2BC,IAA3B,EAAiC;AAC7B,SAAOI,OAAO,CAACD,WAAR,CAAoBJ,IAApB,EAA0BC,IAA1B,CAAP;AACH;;AACDZ,OAAO,CAACe,WAAR,GAAsBA,WAAtB;;AACA,SAAS8B,YAAT,CAAsBC,KAAtB,EAA6BC,QAA7B,EAAuC;AACnC,MAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;AAC3B,QAAIA,KAAK,CAACE,WAAN,CAAkB,GAAlB,KAA0B,CAA9B,EAAiC;AAC7B,aAAOC,UAAU,CAACH,KAAD,CAAV,GAAoB,GAApB,GAA0BC,QAAjC;AACH;;AACD,WAAOE,UAAU,CAACH,KAAD,CAAjB;AACH;;AACD,SAAOA,KAAP;AACH;;AACD9C,OAAO,CAAC6C,YAAR,GAAuBA,YAAvB;;AACA,SAASK,qBAAT,CAA+BC,GAA/B,EAAoCC,IAApC,EAA0ClB,IAA1C,EAAgD;AAC5C,MAAImB,YAAY,GAAGD,IAAI,CAACE,QAAL,IAAiB,QAApC;AACA,MAAIC,QAAQ,GAAGH,IAAI,CAACG,QAAL,IAAiB,IAAjB,GAAwBH,IAAI,CAACG,QAA7B,GAAwC,CAAvD;AACA,MAAI3B,MAAM,GAAGM,IAAI,CAACN,MAAlB;AACA,MAAIN,KAAK,GAAGY,IAAI,CAACZ,KAAjB;AACA,MAAIkC,UAAU,GAAG5B,MAAM,GAAG,CAA1B;AACA,MAAIE,CAAC,GAAGI,IAAI,CAACJ,CAAb;AACA,MAAIE,CAAC,GAAGE,IAAI,CAACF,CAAb;AACA,MAAIN,SAAS,GAAG,MAAhB;AACA,MAAI+B,iBAAiB,GAAG,KAAxB;;AACA,MAAIJ,YAAY,YAAYK,KAA5B,EAAmC;AAC/B5B,IAAAA,CAAC,IAAIe,YAAY,CAACQ,YAAY,CAAC,CAAD,CAAb,EAAkBnB,IAAI,CAACZ,KAAvB,CAAjB;AACAU,IAAAA,CAAC,IAAIa,YAAY,CAACQ,YAAY,CAAC,CAAD,CAAb,EAAkBnB,IAAI,CAACN,MAAvB,CAAjB;AACAF,IAAAA,SAAS,GAAG,IAAZ;AACA+B,IAAAA,iBAAiB,GAAG,IAApB;AACH,GALD,MAMK;AACD,YAAQJ,YAAR;AACI,WAAK,MAAL;AACIvB,QAAAA,CAAC,IAAIyB,QAAL;AACAvB,QAAAA,CAAC,IAAIwB,UAAL;AACA9B,QAAAA,SAAS,GAAG,OAAZ;AACA+B,QAAAA,iBAAiB,GAAG,QAApB;AACA;;AACJ,WAAK,OAAL;AACI3B,QAAAA,CAAC,IAAIyB,QAAQ,GAAGjC,KAAhB;AACAU,QAAAA,CAAC,IAAIwB,UAAL;AACAC,QAAAA,iBAAiB,GAAG,QAApB;AACA;;AACJ,WAAK,KAAL;AACI3B,QAAAA,CAAC,IAAIR,KAAK,GAAG,CAAb;AACAU,QAAAA,CAAC,IAAIuB,QAAL;AACA7B,QAAAA,SAAS,GAAG,QAAZ;AACA+B,QAAAA,iBAAiB,GAAG,QAApB;AACA;;AACJ,WAAK,QAAL;AACI3B,QAAAA,CAAC,IAAIR,KAAK,GAAG,CAAb;AACAU,QAAAA,CAAC,IAAIJ,MAAM,GAAG2B,QAAd;AACA7B,QAAAA,SAAS,GAAG,QAAZ;AACA;;AACJ,WAAK,QAAL;AACII,QAAAA,CAAC,IAAIR,KAAK,GAAG,CAAb;AACAU,QAAAA,CAAC,IAAIwB,UAAL;AACA9B,QAAAA,SAAS,GAAG,QAAZ;AACA+B,QAAAA,iBAAiB,GAAG,QAApB;AACA;;AACJ,WAAK,YAAL;AACI3B,QAAAA,CAAC,IAAIyB,QAAL;AACAvB,QAAAA,CAAC,IAAIwB,UAAL;AACAC,QAAAA,iBAAiB,GAAG,QAApB;AACA;;AACJ,WAAK,aAAL;AACI3B,QAAAA,CAAC,IAAIR,KAAK,GAAGiC,QAAb;AACAvB,QAAAA,CAAC,IAAIwB,UAAL;AACA9B,QAAAA,SAAS,GAAG,OAAZ;AACA+B,QAAAA,iBAAiB,GAAG,QAApB;AACA;;AACJ,WAAK,WAAL;AACI3B,QAAAA,CAAC,IAAIR,KAAK,GAAG,CAAb;AACAU,QAAAA,CAAC,IAAIuB,QAAL;AACA7B,QAAAA,SAAS,GAAG,QAAZ;AACA;;AACJ,WAAK,cAAL;AACII,QAAAA,CAAC,IAAIR,KAAK,GAAG,CAAb;AACAU,QAAAA,CAAC,IAAIJ,MAAM,GAAG2B,QAAd;AACA7B,QAAAA,SAAS,GAAG,QAAZ;AACA+B,QAAAA,iBAAiB,GAAG,QAApB;AACA;;AACJ,WAAK,eAAL;AACI3B,QAAAA,CAAC,IAAIyB,QAAL;AACAvB,QAAAA,CAAC,IAAIuB,QAAL;AACA;;AACJ,WAAK,gBAAL;AACIzB,QAAAA,CAAC,IAAIR,KAAK,GAAGiC,QAAb;AACAvB,QAAAA,CAAC,IAAIuB,QAAL;AACA7B,QAAAA,SAAS,GAAG,OAAZ;AACA;;AACJ,WAAK,kBAAL;AACII,QAAAA,CAAC,IAAIyB,QAAL;AACAvB,QAAAA,CAAC,IAAIJ,MAAM,GAAG2B,QAAd;AACAE,QAAAA,iBAAiB,GAAG,QAApB;AACA;;AACJ,WAAK,mBAAL;AACI3B,QAAAA,CAAC,IAAIR,KAAK,GAAGiC,QAAb;AACAvB,QAAAA,CAAC,IAAIJ,MAAM,GAAG2B,QAAd;AACA7B,QAAAA,SAAS,GAAG,OAAZ;AACA+B,QAAAA,iBAAiB,GAAG,QAApB;AACA;AAtER;AAwEH;;AACDN,EAAAA,GAAG,GAAGA,GAAG,IAAI,EAAb;AACAA,EAAAA,GAAG,CAACrB,CAAJ,GAAQA,CAAR;AACAqB,EAAAA,GAAG,CAACnB,CAAJ,GAAQA,CAAR;AACAmB,EAAAA,GAAG,CAACQ,KAAJ,GAAYjC,SAAZ;AACAyB,EAAAA,GAAG,CAACP,aAAJ,GAAoBa,iBAApB;AACA,SAAON,GAAP;AACH;;AACDnD,OAAO,CAACkD,qBAAR,GAAgCA,qBAAhC","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar BoundingRect_1 = require(\"../core/BoundingRect\");\nvar util_1 = require(\"../core/util\");\nvar LRU_1 = require(\"../core/LRU\");\nvar textWidthCache = {};\nexports.DEFAULT_FONT = '12px sans-serif';\nvar _ctx;\nvar _cachedFont;\nfunction defaultMeasureText(text, font) {\n    if (!_ctx) {\n        _ctx = util_1.createCanvas().getContext('2d');\n    }\n    if (_cachedFont !== font) {\n        _cachedFont = _ctx.font = font || exports.DEFAULT_FONT;\n    }\n    return _ctx.measureText(text);\n}\nvar methods = {\n    measureText: defaultMeasureText\n};\nfunction $override(name, fn) {\n    methods[name] = fn;\n}\nexports.$override = $override;\nfunction getWidth(text, font) {\n    font = font || exports.DEFAULT_FONT;\n    var cacheOfFont = textWidthCache[font];\n    if (!cacheOfFont) {\n        cacheOfFont = textWidthCache[font] = new LRU_1[\"default\"](500);\n    }\n    var width = cacheOfFont.get(text);\n    if (width == null) {\n        width = methods.measureText(text, font).width;\n        cacheOfFont.put(text, width);\n    }\n    return width;\n}\nexports.getWidth = getWidth;\nfunction innerGetBoundingRect(text, font, textAlign, textBaseline) {\n    var width = getWidth(text, font);\n    var height = getLineHeight(font);\n    var x = adjustTextX(0, width, textAlign);\n    var y = adjustTextY(0, height, textBaseline);\n    var rect = new BoundingRect_1[\"default\"](x, y, width, height);\n    return rect;\n}\nexports.innerGetBoundingRect = innerGetBoundingRect;\nfunction getBoundingRect(text, font, textAlign, textBaseline) {\n    var textLines = ((text || '') + '').split('\\n');\n    var len = textLines.length;\n    if (len === 1) {\n        return innerGetBoundingRect(textLines[0], font, textAlign, textBaseline);\n    }\n    else {\n        var uniondRect = new BoundingRect_1[\"default\"](0, 0, 0, 0);\n        for (var i = 0; i < textLines.length; i++) {\n            var rect = innerGetBoundingRect(textLines[i], font, textAlign, textBaseline);\n            i === 0 ? uniondRect.copy(rect) : uniondRect.union(rect);\n        }\n        return uniondRect;\n    }\n}\nexports.getBoundingRect = getBoundingRect;\nfunction adjustTextX(x, width, textAlign) {\n    if (textAlign === 'right') {\n        x -= width;\n    }\n    else if (textAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nexports.adjustTextX = adjustTextX;\nfunction adjustTextY(y, height, verticalAlign) {\n    if (verticalAlign === 'middle') {\n        y -= height / 2;\n    }\n    else if (verticalAlign === 'bottom') {\n        y -= height;\n    }\n    return y;\n}\nexports.adjustTextY = adjustTextY;\nfunction getLineHeight(font) {\n    return getWidth('å›½', font);\n}\nexports.getLineHeight = getLineHeight;\nfunction measureText(text, font) {\n    return methods.measureText(text, font);\n}\nexports.measureText = measureText;\nfunction parsePercent(value, maxValue) {\n    if (typeof value === 'string') {\n        if (value.lastIndexOf('%') >= 0) {\n            return parseFloat(value) / 100 * maxValue;\n        }\n        return parseFloat(value);\n    }\n    return value;\n}\nexports.parsePercent = parsePercent;\nfunction calculateTextPosition(out, opts, rect) {\n    var textPosition = opts.position || 'inside';\n    var distance = opts.distance != null ? opts.distance : 5;\n    var height = rect.height;\n    var width = rect.width;\n    var halfHeight = height / 2;\n    var x = rect.x;\n    var y = rect.y;\n    var textAlign = 'left';\n    var textVerticalAlign = 'top';\n    if (textPosition instanceof Array) {\n        x += parsePercent(textPosition[0], rect.width);\n        y += parsePercent(textPosition[1], rect.height);\n        textAlign = null;\n        textVerticalAlign = null;\n    }\n    else {\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - distance;\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - distance;\n                textAlign = 'right';\n                textVerticalAlign = 'bottom';\n                break;\n        }\n    }\n    out = out || {};\n    out.x = x;\n    out.y = y;\n    out.align = textAlign;\n    out.verticalAlign = textVerticalAlign;\n    return out;\n}\nexports.calculateTextPosition = calculateTextPosition;\n"]},"metadata":{},"sourceType":"script"}