{"ast":null,"code":"import { checkIndices } from '../util';\nimport BaseView from './base';\nexport default class MatrixSelectionView extends BaseView {\n  constructor(matrix, rowIndices, columnIndices) {\n    let indices = checkIndices(matrix, rowIndices, columnIndices);\n    super(matrix, indices.row.length, indices.column.length);\n    this.rowIndices = indices.row;\n    this.columnIndices = indices.column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rowIndices[rowIndex], this.columnIndices[columnIndex], value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rowIndices[rowIndex], this.columnIndices[columnIndex]);\n  }\n\n}","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/ml-matrix/src/views/selection.js"],"names":["checkIndices","BaseView","MatrixSelectionView","constructor","matrix","rowIndices","columnIndices","indices","row","length","column","set","rowIndex","columnIndex","value","get"],"mappings":"AAAA,SAASA,YAAT,QAA6B,SAA7B;AAEA,OAAOC,QAAP,MAAqB,QAArB;AAEA,eAAe,MAAMC,mBAAN,SAAkCD,QAAlC,CAA2C;AACxDE,EAAAA,WAAW,CAACC,MAAD,EAASC,UAAT,EAAqBC,aAArB,EAAoC;AAC7C,QAAIC,OAAO,GAAGP,YAAY,CAACI,MAAD,EAASC,UAAT,EAAqBC,aAArB,CAA1B;AACA,UAAMF,MAAN,EAAcG,OAAO,CAACC,GAAR,CAAYC,MAA1B,EAAkCF,OAAO,CAACG,MAAR,CAAeD,MAAjD;AACA,SAAKJ,UAAL,GAAkBE,OAAO,CAACC,GAA1B;AACA,SAAKF,aAAL,GAAqBC,OAAO,CAACG,MAA7B;AACD;;AAEDC,EAAAA,GAAG,CAACC,QAAD,EAAWC,WAAX,EAAwBC,KAAxB,EAA+B;AAChC,SAAKV,MAAL,CAAYO,GAAZ,CACE,KAAKN,UAAL,CAAgBO,QAAhB,CADF,EAEE,KAAKN,aAAL,CAAmBO,WAAnB,CAFF,EAGEC,KAHF;AAKA,WAAO,IAAP;AACD;;AAEDC,EAAAA,GAAG,CAACH,QAAD,EAAWC,WAAX,EAAwB;AACzB,WAAO,KAAKT,MAAL,CAAYW,GAAZ,CACL,KAAKV,UAAL,CAAgBO,QAAhB,CADK,EAEL,KAAKN,aAAL,CAAmBO,WAAnB,CAFK,CAAP;AAID;;AAtBuD","sourcesContent":["import { checkIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSelectionView extends BaseView {\n  constructor(matrix, rowIndices, columnIndices) {\n    let indices = checkIndices(matrix, rowIndices, columnIndices);\n    super(matrix, indices.row.length, indices.column.length);\n    this.rowIndices = indices.row;\n    this.columnIndices = indices.column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n      value,\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}