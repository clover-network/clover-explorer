{"ast":null,"code":"/**\n * 类似 lodash.flow 的方法\n * @param flows\n */\nexport function flow() {\n  var flows = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    flows[_i] = arguments[_i];\n  }\n\n  return function (param) {\n    return flows.reduce(function (result, f) {\n      return f(result);\n    }, param);\n  };\n}","map":{"version":3,"sources":["../../src/utils/flow.ts"],"names":[],"mappings":"AAEA;;;AAGG;AACH,OAAM,SAAU,IAAV,GAAc;AAAI,MAAA,KAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAA2B;AAA3B,IAAA,KAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACtB,SAAO,UAAC,KAAD,EAAS;AACd,WAAO,KAAK,CAAC,MAAN,CAAa,UAAC,MAAD,EAAY,CAAZ,EAA8B;AAChD,aAAO,CAAC,CAAC,MAAD,CAAR;AACD,KAFM,EAEJ,KAFI,CAAP;AAGD,GAJD;AAKD","sourcesContent":["type FlowFunction<P> = (param: P) => P;\n\n/**\n * 类似 lodash.flow 的方法\n * @param flows\n */\nexport function flow<P>(...flows: FlowFunction<P>[]): FlowFunction<P> {\n  return (param: P) => {\n    return flows.reduce((result: P, f: FlowFunction<P>) => {\n      return f(result);\n    }, param);\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}