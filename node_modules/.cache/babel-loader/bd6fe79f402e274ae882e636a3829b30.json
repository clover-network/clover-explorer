{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension;\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  util_1.each(dimensionInfoList, function (dimensionInfo, index) {\n    if (util_1.isString(dimensionInfo)) {\n      dimensionInfoList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      }\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  });\n\n  if (stackedDimInfo && !byIndex && !stackedByDimInfo) {\n    byIndex = true;\n  }\n\n  if (stackedDimInfo) {\n    stackResultDimension = '__\\0ecstackresult';\n    stackedOverDimension = '__\\0ecstackedover';\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim_1 = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex_1 = 0;\n    util_1.each(dimensionInfoList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim_1) {\n        stackedDimCoordIndex_1++;\n      }\n    });\n    dimensionInfoList.push({\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim_1,\n      coordDimIndex: stackedDimCoordIndex_1,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n    stackedDimCoordIndex_1++;\n    dimensionInfoList.push({\n      name: stackedOverDimension,\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex_1,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n\nexports.enableDataStack = enableDataStack;\n\nfunction isDimensionStacked(data, stackedDim) {\n  return !!stackedDim && stackedDim === data.getCalculationInfo('stackedDimension');\n}\n\nexports.isDimensionStacked = isDimensionStacked;\n\nfunction getStackedDimension(data, targetDim) {\n  return isDimensionStacked(data, targetDim) ? data.getCalculationInfo('stackResultDimension') : targetDim;\n}\n\nexports.getStackedDimension = getStackedDimension;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/data/helper/dataStackHelper.js"],"names":["exports","__esModule","util_1","require","enableDataStack","seriesModel","dimensionInfoList","opt","byIndex","stackedCoordDimension","mayStack","get","stackedByDimInfo","stackedDimInfo","stackResultDimension","stackedOverDimension","each","dimensionInfo","index","isString","name","isExtraCoord","ordinalMeta","type","coordDim","createInvertedIndices","stackedDimCoordDim_1","stackedDimType","stackedDimCoordIndex_1","push","coordDimIndex","isCalculationCoord","stackedDimension","stackedByDimension","isStackedByIndex","isDimensionStacked","data","stackedDim","getCalculationInfo","getStackedDimension","targetDim"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension;\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  util_1.each(dimensionInfoList, function (dimensionInfo, index) {\n    if (util_1.isString(dimensionInfo)) {\n      dimensionInfoList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      }\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  });\n\n  if (stackedDimInfo && !byIndex && !stackedByDimInfo) {\n    byIndex = true;\n  }\n\n  if (stackedDimInfo) {\n    stackResultDimension = '__\\0ecstackresult';\n    stackedOverDimension = '__\\0ecstackedover';\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim_1 = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex_1 = 0;\n    util_1.each(dimensionInfoList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim_1) {\n        stackedDimCoordIndex_1++;\n      }\n    });\n    dimensionInfoList.push({\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim_1,\n      coordDimIndex: stackedDimCoordIndex_1,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n    stackedDimCoordIndex_1++;\n    dimensionInfoList.push({\n      name: stackedOverDimension,\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex_1,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n\nexports.enableDataStack = enableDataStack;\n\nfunction isDimensionStacked(data, stackedDim) {\n  return !!stackedDim && stackedDim === data.getCalculationInfo('stackedDimension');\n}\n\nexports.isDimensionStacked = isDimensionStacked;\n\nfunction getStackedDimension(data, targetDim) {\n  return isDimensionStacked(data, targetDim) ? data.getCalculationInfo('stackResultDimension') : targetDim;\n}\n\nexports.getStackedDimension = getStackedDimension;"]},"metadata":{},"sourceType":"script"}