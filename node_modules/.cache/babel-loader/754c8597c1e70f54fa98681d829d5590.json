{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar format_1 = require(\"../../util/format\");\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar dataValueHelper_1 = require(\"../../data/helper/dataValueHelper\");\n\nvar number_1 = require(\"../../util/number\");\n\nvar TOOLTIP_NAME_TEXT_STYLE_CSS = 'font-size:12px;color:#6e7079';\nvar TOOLTIP_TEXT_STYLE_RICH = {\n  fontSize: 12,\n  fill: '#6e7079'\n};\nvar TOOLTIP_VALUE_TEXT_STYLE_CSS = 'font-size:14px;color:#464646;font-weight:900';\nvar TOOLTIP_VALUE_TEXT_STYLE_RICH = {\n  fontSize: 14,\n  fill: '#464646',\n  fontWeight: 900\n};\nvar TOOLTIP_LINE_HEIGHT_CSS = 'line-height:1';\nvar HTML_GAPS = [0, 10, 20, 30];\nvar RICH_TEXT_GAPS = ['', '\\n', '\\n\\n', '\\n\\n\\n'];\n\nfunction createTooltipMarkup(type, option) {\n  option.type = type;\n  return option;\n}\n\nexports.createTooltipMarkup = createTooltipMarkup;\n\nfunction getBuilder(fragment) {\n  return util_1.hasOwn(builderMap, fragment.type) && builderMap[fragment.type];\n}\n\nvar builderMap = {\n  section: {\n    planLayout: function (fragment) {\n      var subBlockLen = fragment.blocks.length;\n      var thisBlockHasInnerGap = subBlockLen > 1 || subBlockLen > 0 && !fragment.noHeader;\n      var thisGapLevelBetweenSubBlocks = 0;\n      util_1.each(fragment.blocks, function (subBlock) {\n        getBuilder(subBlock).planLayout(subBlock);\n        var subGapLevel = subBlock.__gapLevelBetweenSubBlocks;\n\n        if (subGapLevel >= thisGapLevelBetweenSubBlocks) {\n          thisGapLevelBetweenSubBlocks = subGapLevel + (thisBlockHasInnerGap && (!subGapLevel || subBlock.type === 'section' && !subBlock.noHeader) ? 1 : 0);\n        }\n      });\n      fragment.__gapLevelBetweenSubBlocks = thisGapLevelBetweenSubBlocks;\n    },\n    build: function (ctx, fragment, topMarginForOuterGap) {\n      var noHeader = fragment.noHeader;\n      var gaps = getGap(fragment);\n      var subMarkupText = buildSubBlocks(ctx, fragment, noHeader ? topMarginForOuterGap : gaps.html);\n\n      if (noHeader) {\n        return subMarkupText;\n      }\n\n      var displayableHeader = format_1.makeValueReadable(fragment.header, 'ordinal', ctx.useUTC);\n\n      if (ctx.renderMode === 'richText') {\n        return wrapInlineNameRichText(ctx, displayableHeader) + gaps.richText + subMarkupText;\n      } else {\n        return wrapBlockHTML(\"<div style=\\\"\" + TOOLTIP_NAME_TEXT_STYLE_CSS + \";\" + TOOLTIP_LINE_HEIGHT_CSS + \";\\\">\" + format_1.encodeHTML(displayableHeader) + '</div>' + subMarkupText, topMarginForOuterGap);\n      }\n    }\n  },\n  nameValue: {\n    planLayout: function (fragment) {\n      fragment.__gapLevelBetweenSubBlocks = 0;\n    },\n    build: function (ctx, fragment, topMarginForOuterGap) {\n      var renderMode = ctx.renderMode;\n      var noName = fragment.noName;\n      var noValue = fragment.noValue;\n      var noMarker = !fragment.markerType;\n      var name = fragment.name;\n      var value = fragment.value;\n      var useUTC = ctx.useUTC;\n\n      if (noName && noValue) {\n        return;\n      }\n\n      var markerStr = noMarker ? '' : ctx.markupStyleCreator.makeTooltipMarker(fragment.markerType, fragment.markerColor || '#333', renderMode);\n      var readableName = noName ? '' : format_1.makeValueReadable(name, 'ordinal', useUTC);\n      var valueTypeOption = fragment.valueType;\n      var readableValueList = noValue ? [] : util_1.isArray(value) ? util_1.map(value, function (val, idx) {\n        return format_1.makeValueReadable(val, util_1.isArray(valueTypeOption) ? valueTypeOption[idx] : valueTypeOption, useUTC);\n      }) : [format_1.makeValueReadable(value, util_1.isArray(valueTypeOption) ? valueTypeOption[0] : valueTypeOption, useUTC)];\n      var valueAlignRight = !noMarker || !noName;\n      var valueCloseToMarker = !noMarker && noName;\n      return renderMode === 'richText' ? (noMarker ? '' : markerStr) + (noName ? '' : wrapInlineNameRichText(ctx, readableName)) + (noValue ? '' : wrapInlineValueRichText(ctx, readableValueList, valueAlignRight, valueCloseToMarker)) : wrapBlockHTML((noMarker ? '' : markerStr) + (noName ? '' : wrapInlineNameHTML(readableName, !noMarker)) + (noValue ? '' : wrapInlineValueHTML(readableValueList, valueAlignRight, valueCloseToMarker)), topMarginForOuterGap);\n    }\n  }\n};\n\nfunction buildSubBlocks(ctx, fragment, topMarginForOuterGap) {\n  var subMarkupTextList = [];\n  var subBlocks = fragment.blocks || [];\n  util_1.assert(!subBlocks || util_1.isArray(subBlocks));\n  subBlocks = subBlocks || [];\n  var orderMode = ctx.orderMode;\n\n  if (fragment.sortBlocks && orderMode) {\n    subBlocks = subBlocks.slice();\n    var orderMap = {\n      valueAsc: 'asc',\n      valueDesc: 'desc'\n    };\n\n    if (util_1.hasOwn(orderMap, orderMode)) {\n      var comparator_1 = new dataValueHelper_1.SortOrderComparator(orderMap[orderMode], null);\n      subBlocks.sort(function (a, b) {\n        return comparator_1.evaluate(a.sortParam, b.sortParam);\n      });\n    } else if (orderMode === 'seriesDesc') {\n      subBlocks.reverse();\n    }\n  }\n\n  var gaps = getGap(fragment);\n  util_1.each(subBlocks, function (subBlock, idx) {\n    var subMarkupText = getBuilder(subBlock).build(ctx, subBlock, idx > 0 ? gaps.html : 0);\n    subMarkupText != null && subMarkupTextList.push(subMarkupText);\n  });\n\n  if (!subMarkupTextList.length) {\n    return;\n  }\n\n  return ctx.renderMode === 'richText' ? subMarkupTextList.join(gaps.richText) : wrapBlockHTML(subMarkupTextList.join(''), topMarginForOuterGap);\n}\n\nfunction buildTooltipMarkup(fragment, markupStyleCreator, renderMode, orderMode, useUTC) {\n  if (!fragment) {\n    return;\n  }\n\n  var builder = getBuilder(fragment);\n  builder.planLayout(fragment);\n  var ctx = {\n    useUTC: useUTC,\n    renderMode: renderMode,\n    orderMode: orderMode,\n    markupStyleCreator: markupStyleCreator\n  };\n  return builder.build(ctx, fragment, 0);\n}\n\nexports.buildTooltipMarkup = buildTooltipMarkup;\n\nfunction getGap(fragment) {\n  var gapLevelBetweenSubBlocks = fragment.__gapLevelBetweenSubBlocks;\n  return {\n    html: HTML_GAPS[gapLevelBetweenSubBlocks],\n    richText: RICH_TEXT_GAPS[gapLevelBetweenSubBlocks]\n  };\n}\n\nfunction wrapBlockHTML(encodedContent, topGap) {\n  var clearfix = '<div style=\"clear:both\"></div>';\n  var marginCSS = \"margin: \" + topGap + \"px 0 0\";\n  return \"<div style=\\\"\" + marginCSS + \";\" + TOOLTIP_LINE_HEIGHT_CSS + \";\\\">\" + encodedContent + clearfix + '</div>';\n}\n\nfunction wrapInlineNameHTML(name, leftHasMarker) {\n  var marginCss = leftHasMarker ? 'margin-left:2px' : '';\n  return \"<span style=\\\"\" + TOOLTIP_NAME_TEXT_STYLE_CSS + \";\" + marginCss + \"\\\">\" + format_1.encodeHTML(name) + '</span>';\n}\n\nfunction wrapInlineValueHTML(valueList, alignRight, valueCloseToMarker) {\n  var paddingStr = valueCloseToMarker ? '10px' : '20px';\n  var alignCSS = alignRight ? \"float:right;margin-left:\" + paddingStr : '';\n  return \"<span style=\\\"\" + alignCSS + \";\" + TOOLTIP_VALUE_TEXT_STYLE_CSS + \"\\\">\" + util_1.map(valueList, function (value) {\n    return format_1.encodeHTML(value);\n  }).join('&nbsp;&nbsp;') + '</span>';\n}\n\nfunction wrapInlineNameRichText(ctx, name) {\n  return ctx.markupStyleCreator.wrapRichTextStyle(name, TOOLTIP_TEXT_STYLE_RICH);\n}\n\nfunction wrapInlineValueRichText(ctx, valueList, alignRight, valueCloseToMarker) {\n  var styles = [TOOLTIP_VALUE_TEXT_STYLE_RICH];\n  var paddingLeft = valueCloseToMarker ? 10 : 20;\n  alignRight && styles.push({\n    padding: [0, 0, 0, paddingLeft],\n    align: 'right'\n  });\n  return ctx.markupStyleCreator.wrapRichTextStyle(valueList.join('  '), styles);\n}\n\nfunction retrieveVisualColorForTooltipMarker(series, dataIndex) {\n  var style = series.getData().getItemVisual(dataIndex, 'style');\n  var color = style[series.visualDrawType];\n  return format_1.convertToColorString(color);\n}\n\nexports.retrieveVisualColorForTooltipMarker = retrieveVisualColorForTooltipMarker;\n\nfunction getPaddingFromTooltipModel(model, renderMode) {\n  var padding = model.get('padding');\n  return padding != null ? padding : renderMode === 'richText' ? [8, 10] : 10;\n}\n\nexports.getPaddingFromTooltipModel = getPaddingFromTooltipModel;\n\nvar TooltipMarkupStyleCreator = function () {\n  function TooltipMarkupStyleCreator() {\n    this.richTextStyles = {};\n    this._nextStyleNameId = number_1.getRandomIdBase();\n  }\n\n  TooltipMarkupStyleCreator.prototype._generateStyleName = function () {\n    return '__EC_aUTo_' + this._nextStyleNameId++;\n  };\n\n  TooltipMarkupStyleCreator.prototype.makeTooltipMarker = function (markerType, colorStr, renderMode) {\n    var markerId = renderMode === 'richText' ? this._generateStyleName() : null;\n    var marker = format_1.getTooltipMarker({\n      color: colorStr,\n      type: markerType,\n      renderMode: renderMode,\n      markerId: markerId\n    });\n\n    if (util_1.isString(marker)) {\n      return marker;\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        util_1.assert(markerId);\n      }\n\n      this.richTextStyles[markerId] = marker.style;\n      return marker.content;\n    }\n  };\n\n  TooltipMarkupStyleCreator.prototype.wrapRichTextStyle = function (text, styles) {\n    var finalStl = {};\n\n    if (util_1.isArray(styles)) {\n      util_1.each(styles, function (stl) {\n        return util_1.extend(finalStl, stl);\n      });\n    } else {\n      util_1.extend(finalStl, styles);\n    }\n\n    var styleName = this._generateStyleName();\n\n    this.richTextStyles[styleName] = finalStl;\n    return \"{\" + styleName + \"|\" + text + \"}\";\n  };\n\n  return TooltipMarkupStyleCreator;\n}();\n\nexports.TooltipMarkupStyleCreator = TooltipMarkupStyleCreator;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/component/tooltip/tooltipMarkup.js"],"names":["exports","__esModule","format_1","require","util_1","dataValueHelper_1","number_1","TOOLTIP_NAME_TEXT_STYLE_CSS","TOOLTIP_TEXT_STYLE_RICH","fontSize","fill","TOOLTIP_VALUE_TEXT_STYLE_CSS","TOOLTIP_VALUE_TEXT_STYLE_RICH","fontWeight","TOOLTIP_LINE_HEIGHT_CSS","HTML_GAPS","RICH_TEXT_GAPS","createTooltipMarkup","type","option","getBuilder","fragment","hasOwn","builderMap","section","planLayout","subBlockLen","blocks","length","thisBlockHasInnerGap","noHeader","thisGapLevelBetweenSubBlocks","each","subBlock","subGapLevel","__gapLevelBetweenSubBlocks","build","ctx","topMarginForOuterGap","gaps","getGap","subMarkupText","buildSubBlocks","html","displayableHeader","makeValueReadable","header","useUTC","renderMode","wrapInlineNameRichText","richText","wrapBlockHTML","encodeHTML","nameValue","noName","noValue","noMarker","markerType","name","value","markerStr","markupStyleCreator","makeTooltipMarker","markerColor","readableName","valueTypeOption","valueType","readableValueList","isArray","map","val","idx","valueAlignRight","valueCloseToMarker","wrapInlineValueRichText","wrapInlineNameHTML","wrapInlineValueHTML","subMarkupTextList","subBlocks","assert","orderMode","sortBlocks","slice","orderMap","valueAsc","valueDesc","comparator_1","SortOrderComparator","sort","a","b","evaluate","sortParam","reverse","push","join","buildTooltipMarkup","builder","gapLevelBetweenSubBlocks","encodedContent","topGap","clearfix","marginCSS","leftHasMarker","marginCss","valueList","alignRight","paddingStr","alignCSS","wrapRichTextStyle","styles","paddingLeft","padding","align","retrieveVisualColorForTooltipMarker","series","dataIndex","style","getData","getItemVisual","color","visualDrawType","convertToColorString","getPaddingFromTooltipModel","model","get","TooltipMarkupStyleCreator","richTextStyles","_nextStyleNameId","getRandomIdBase","prototype","_generateStyleName","colorStr","markerId","marker","getTooltipMarker","isString","process","env","NODE_ENV","content","text","finalStl","stl","extend","styleName"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AAEA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,mBAAD,CAAtB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,mCAAD,CAA/B;;AAEA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,mBAAD,CAAtB;;AAEA,IAAII,2BAA2B,GAAG,8BAAlC;AACA,IAAIC,uBAAuB,GAAG;AAC5BC,EAAAA,QAAQ,EAAE,EADkB;AAE5BC,EAAAA,IAAI,EAAE;AAFsB,CAA9B;AAIA,IAAIC,4BAA4B,GAAG,8CAAnC;AACA,IAAIC,6BAA6B,GAAG;AAClCH,EAAAA,QAAQ,EAAE,EADwB;AAElCC,EAAAA,IAAI,EAAE,SAF4B;AAGlCG,EAAAA,UAAU,EAAE;AAHsB,CAApC;AAKA,IAAIC,uBAAuB,GAAG,eAA9B;AACA,IAAIC,SAAS,GAAG,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,CAAhB;AACA,IAAIC,cAAc,GAAG,CAAC,EAAD,EAAK,IAAL,EAAW,MAAX,EAAmB,QAAnB,CAArB;;AAEA,SAASC,mBAAT,CAA6BC,IAA7B,EAAmCC,MAAnC,EAA2C;AACzCA,EAAAA,MAAM,CAACD,IAAP,GAAcA,IAAd;AACA,SAAOC,MAAP;AACD;;AAEDnB,OAAO,CAACiB,mBAAR,GAA8BA,mBAA9B;;AAEA,SAASG,UAAT,CAAoBC,QAApB,EAA8B;AAC5B,SAAOjB,MAAM,CAACkB,MAAP,CAAcC,UAAd,EAA0BF,QAAQ,CAACH,IAAnC,KAA4CK,UAAU,CAACF,QAAQ,CAACH,IAAV,CAA7D;AACD;;AAED,IAAIK,UAAU,GAAG;AACfC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE,UAAUJ,QAAV,EAAoB;AAC9B,UAAIK,WAAW,GAAGL,QAAQ,CAACM,MAAT,CAAgBC,MAAlC;AACA,UAAIC,oBAAoB,GAAGH,WAAW,GAAG,CAAd,IAAmBA,WAAW,GAAG,CAAd,IAAmB,CAACL,QAAQ,CAACS,QAA3E;AACA,UAAIC,4BAA4B,GAAG,CAAnC;AACA3B,MAAAA,MAAM,CAAC4B,IAAP,CAAYX,QAAQ,CAACM,MAArB,EAA6B,UAAUM,QAAV,EAAoB;AAC/Cb,QAAAA,UAAU,CAACa,QAAD,CAAV,CAAqBR,UAArB,CAAgCQ,QAAhC;AACA,YAAIC,WAAW,GAAGD,QAAQ,CAACE,0BAA3B;;AAEA,YAAID,WAAW,IAAIH,4BAAnB,EAAiD;AAC/CA,UAAAA,4BAA4B,GAAGG,WAAW,IAAIL,oBAAoB,KAAK,CAACK,WAAD,IAAgBD,QAAQ,CAACf,IAAT,KAAkB,SAAlB,IAA+B,CAACe,QAAQ,CAACH,QAA9D,CAApB,GAA8F,CAA9F,GAAkG,CAAtG,CAA1C;AACD;AACF,OAPD;AAQAT,MAAAA,QAAQ,CAACc,0BAAT,GAAsCJ,4BAAtC;AACD,KAdM;AAePK,IAAAA,KAAK,EAAE,UAAUC,GAAV,EAAehB,QAAf,EAAyBiB,oBAAzB,EAA+C;AACpD,UAAIR,QAAQ,GAAGT,QAAQ,CAACS,QAAxB;AACA,UAAIS,IAAI,GAAGC,MAAM,CAACnB,QAAD,CAAjB;AACA,UAAIoB,aAAa,GAAGC,cAAc,CAACL,GAAD,EAAMhB,QAAN,EAAgBS,QAAQ,GAAGQ,oBAAH,GAA0BC,IAAI,CAACI,IAAvD,CAAlC;;AAEA,UAAIb,QAAJ,EAAc;AACZ,eAAOW,aAAP;AACD;;AAED,UAAIG,iBAAiB,GAAG1C,QAAQ,CAAC2C,iBAAT,CAA2BxB,QAAQ,CAACyB,MAApC,EAA4C,SAA5C,EAAuDT,GAAG,CAACU,MAA3D,CAAxB;;AAEA,UAAIV,GAAG,CAACW,UAAJ,KAAmB,UAAvB,EAAmC;AACjC,eAAOC,sBAAsB,CAACZ,GAAD,EAAMO,iBAAN,CAAtB,GAAiDL,IAAI,CAACW,QAAtD,GAAiET,aAAxE;AACD,OAFD,MAEO;AACL,eAAOU,aAAa,CAAC,kBAAkB5C,2BAAlB,GAAgD,GAAhD,GAAsDO,uBAAtD,GAAgF,MAAhF,GAAyFZ,QAAQ,CAACkD,UAAT,CAAoBR,iBAApB,CAAzF,GAAkI,QAAlI,GAA6IH,aAA9I,EAA6JH,oBAA7J,CAApB;AACD;AACF;AA/BM,GADM;AAkCfe,EAAAA,SAAS,EAAE;AACT5B,IAAAA,UAAU,EAAE,UAAUJ,QAAV,EAAoB;AAC9BA,MAAAA,QAAQ,CAACc,0BAAT,GAAsC,CAAtC;AACD,KAHQ;AAITC,IAAAA,KAAK,EAAE,UAAUC,GAAV,EAAehB,QAAf,EAAyBiB,oBAAzB,EAA+C;AACpD,UAAIU,UAAU,GAAGX,GAAG,CAACW,UAArB;AACA,UAAIM,MAAM,GAAGjC,QAAQ,CAACiC,MAAtB;AACA,UAAIC,OAAO,GAAGlC,QAAQ,CAACkC,OAAvB;AACA,UAAIC,QAAQ,GAAG,CAACnC,QAAQ,CAACoC,UAAzB;AACA,UAAIC,IAAI,GAAGrC,QAAQ,CAACqC,IAApB;AACA,UAAIC,KAAK,GAAGtC,QAAQ,CAACsC,KAArB;AACA,UAAIZ,MAAM,GAAGV,GAAG,CAACU,MAAjB;;AAEA,UAAIO,MAAM,IAAIC,OAAd,EAAuB;AACrB;AACD;;AAED,UAAIK,SAAS,GAAGJ,QAAQ,GAAG,EAAH,GAAQnB,GAAG,CAACwB,kBAAJ,CAAuBC,iBAAvB,CAAyCzC,QAAQ,CAACoC,UAAlD,EAA8DpC,QAAQ,CAAC0C,WAAT,IAAwB,MAAtF,EAA8Ff,UAA9F,CAAhC;AACA,UAAIgB,YAAY,GAAGV,MAAM,GAAG,EAAH,GAAQpD,QAAQ,CAAC2C,iBAAT,CAA2Ba,IAA3B,EAAiC,SAAjC,EAA4CX,MAA5C,CAAjC;AACA,UAAIkB,eAAe,GAAG5C,QAAQ,CAAC6C,SAA/B;AACA,UAAIC,iBAAiB,GAAGZ,OAAO,GAAG,EAAH,GAAQnD,MAAM,CAACgE,OAAP,CAAeT,KAAf,IAAwBvD,MAAM,CAACiE,GAAP,CAAWV,KAAX,EAAkB,UAAUW,GAAV,EAAeC,GAAf,EAAoB;AACnG,eAAOrE,QAAQ,CAAC2C,iBAAT,CAA2ByB,GAA3B,EAAgClE,MAAM,CAACgE,OAAP,CAAeH,eAAf,IAAkCA,eAAe,CAACM,GAAD,CAAjD,GAAyDN,eAAzF,EAA0GlB,MAA1G,CAAP;AACD,OAF8D,CAAxB,GAElC,CAAC7C,QAAQ,CAAC2C,iBAAT,CAA2Bc,KAA3B,EAAkCvD,MAAM,CAACgE,OAAP,CAAeH,eAAf,IAAkCA,eAAe,CAAC,CAAD,CAAjD,GAAuDA,eAAzF,EAA0GlB,MAA1G,CAAD,CAFL;AAGA,UAAIyB,eAAe,GAAG,CAAChB,QAAD,IAAa,CAACF,MAApC;AACA,UAAImB,kBAAkB,GAAG,CAACjB,QAAD,IAAaF,MAAtC;AACA,aAAON,UAAU,KAAK,UAAf,GAA4B,CAACQ,QAAQ,GAAG,EAAH,GAAQI,SAAjB,KAA+BN,MAAM,GAAG,EAAH,GAAQL,sBAAsB,CAACZ,GAAD,EAAM2B,YAAN,CAAnE,KAA2FT,OAAO,GAAG,EAAH,GAAQmB,uBAAuB,CAACrC,GAAD,EAAM8B,iBAAN,EAAyBK,eAAzB,EAA0CC,kBAA1C,CAAjI,CAA5B,GAA8NtB,aAAa,CAAC,CAACK,QAAQ,GAAG,EAAH,GAAQI,SAAjB,KAA+BN,MAAM,GAAG,EAAH,GAAQqB,kBAAkB,CAACX,YAAD,EAAe,CAACR,QAAhB,CAA/D,KAA6FD,OAAO,GAAG,EAAH,GAAQqB,mBAAmB,CAACT,iBAAD,EAAoBK,eAApB,EAAqCC,kBAArC,CAA/H,CAAD,EAA2LnC,oBAA3L,CAAlP;AACD;AA1BQ;AAlCI,CAAjB;;AAgEA,SAASI,cAAT,CAAwBL,GAAxB,EAA6BhB,QAA7B,EAAuCiB,oBAAvC,EAA6D;AAC3D,MAAIuC,iBAAiB,GAAG,EAAxB;AACA,MAAIC,SAAS,GAAGzD,QAAQ,CAACM,MAAT,IAAmB,EAAnC;AACAvB,EAAAA,MAAM,CAAC2E,MAAP,CAAc,CAACD,SAAD,IAAc1E,MAAM,CAACgE,OAAP,CAAeU,SAAf,CAA5B;AACAA,EAAAA,SAAS,GAAGA,SAAS,IAAI,EAAzB;AACA,MAAIE,SAAS,GAAG3C,GAAG,CAAC2C,SAApB;;AAEA,MAAI3D,QAAQ,CAAC4D,UAAT,IAAuBD,SAA3B,EAAsC;AACpCF,IAAAA,SAAS,GAAGA,SAAS,CAACI,KAAV,EAAZ;AACA,QAAIC,QAAQ,GAAG;AACbC,MAAAA,QAAQ,EAAE,KADG;AAEbC,MAAAA,SAAS,EAAE;AAFE,KAAf;;AAKA,QAAIjF,MAAM,CAACkB,MAAP,CAAc6D,QAAd,EAAwBH,SAAxB,CAAJ,EAAwC;AACtC,UAAIM,YAAY,GAAG,IAAIjF,iBAAiB,CAACkF,mBAAtB,CAA0CJ,QAAQ,CAACH,SAAD,CAAlD,EAA+D,IAA/D,CAAnB;AACAF,MAAAA,SAAS,CAACU,IAAV,CAAe,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC7B,eAAOJ,YAAY,CAACK,QAAb,CAAsBF,CAAC,CAACG,SAAxB,EAAmCF,CAAC,CAACE,SAArC,CAAP;AACD,OAFD;AAGD,KALD,MAKO,IAAIZ,SAAS,KAAK,YAAlB,EAAgC;AACrCF,MAAAA,SAAS,CAACe,OAAV;AACD;AACF;;AAED,MAAItD,IAAI,GAAGC,MAAM,CAACnB,QAAD,CAAjB;AACAjB,EAAAA,MAAM,CAAC4B,IAAP,CAAY8C,SAAZ,EAAuB,UAAU7C,QAAV,EAAoBsC,GAApB,EAAyB;AAC9C,QAAI9B,aAAa,GAAGrB,UAAU,CAACa,QAAD,CAAV,CAAqBG,KAArB,CAA2BC,GAA3B,EAAgCJ,QAAhC,EAA0CsC,GAAG,GAAG,CAAN,GAAUhC,IAAI,CAACI,IAAf,GAAsB,CAAhE,CAApB;AACAF,IAAAA,aAAa,IAAI,IAAjB,IAAyBoC,iBAAiB,CAACiB,IAAlB,CAAuBrD,aAAvB,CAAzB;AACD,GAHD;;AAKA,MAAI,CAACoC,iBAAiB,CAACjD,MAAvB,EAA+B;AAC7B;AACD;;AAED,SAAOS,GAAG,CAACW,UAAJ,KAAmB,UAAnB,GAAgC6B,iBAAiB,CAACkB,IAAlB,CAAuBxD,IAAI,CAACW,QAA5B,CAAhC,GAAwEC,aAAa,CAAC0B,iBAAiB,CAACkB,IAAlB,CAAuB,EAAvB,CAAD,EAA6BzD,oBAA7B,CAA5F;AACD;;AAED,SAAS0D,kBAAT,CAA4B3E,QAA5B,EAAsCwC,kBAAtC,EAA0Db,UAA1D,EAAsEgC,SAAtE,EAAiFjC,MAAjF,EAAyF;AACvF,MAAI,CAAC1B,QAAL,EAAe;AACb;AACD;;AAED,MAAI4E,OAAO,GAAG7E,UAAU,CAACC,QAAD,CAAxB;AACA4E,EAAAA,OAAO,CAACxE,UAAR,CAAmBJ,QAAnB;AACA,MAAIgB,GAAG,GAAG;AACRU,IAAAA,MAAM,EAAEA,MADA;AAERC,IAAAA,UAAU,EAAEA,UAFJ;AAGRgC,IAAAA,SAAS,EAAEA,SAHH;AAIRnB,IAAAA,kBAAkB,EAAEA;AAJZ,GAAV;AAMA,SAAOoC,OAAO,CAAC7D,KAAR,CAAcC,GAAd,EAAmBhB,QAAnB,EAA6B,CAA7B,CAAP;AACD;;AAEDrB,OAAO,CAACgG,kBAAR,GAA6BA,kBAA7B;;AAEA,SAASxD,MAAT,CAAgBnB,QAAhB,EAA0B;AACxB,MAAI6E,wBAAwB,GAAG7E,QAAQ,CAACc,0BAAxC;AACA,SAAO;AACLQ,IAAAA,IAAI,EAAE5B,SAAS,CAACmF,wBAAD,CADV;AAELhD,IAAAA,QAAQ,EAAElC,cAAc,CAACkF,wBAAD;AAFnB,GAAP;AAID;;AAED,SAAS/C,aAAT,CAAuBgD,cAAvB,EAAuCC,MAAvC,EAA+C;AAC7C,MAAIC,QAAQ,GAAG,gCAAf;AACA,MAAIC,SAAS,GAAG,aAAaF,MAAb,GAAsB,QAAtC;AACA,SAAO,kBAAkBE,SAAlB,GAA8B,GAA9B,GAAoCxF,uBAApC,GAA8D,MAA9D,GAAuEqF,cAAvE,GAAwFE,QAAxF,GAAmG,QAA1G;AACD;;AAED,SAAS1B,kBAAT,CAA4BjB,IAA5B,EAAkC6C,aAAlC,EAAiD;AAC/C,MAAIC,SAAS,GAAGD,aAAa,GAAG,iBAAH,GAAuB,EAApD;AACA,SAAO,mBAAmBhG,2BAAnB,GAAiD,GAAjD,GAAuDiG,SAAvD,GAAmE,KAAnE,GAA2EtG,QAAQ,CAACkD,UAAT,CAAoBM,IAApB,CAA3E,GAAuG,SAA9G;AACD;;AAED,SAASkB,mBAAT,CAA6B6B,SAA7B,EAAwCC,UAAxC,EAAoDjC,kBAApD,EAAwE;AACtE,MAAIkC,UAAU,GAAGlC,kBAAkB,GAAG,MAAH,GAAY,MAA/C;AACA,MAAImC,QAAQ,GAAGF,UAAU,GAAG,6BAA6BC,UAAhC,GAA6C,EAAtE;AACA,SAAO,mBAAmBC,QAAnB,GAA8B,GAA9B,GAAoCjG,4BAApC,GAAmE,KAAnE,GAA2EP,MAAM,CAACiE,GAAP,CAAWoC,SAAX,EAAsB,UAAU9C,KAAV,EAAiB;AACvH,WAAOzD,QAAQ,CAACkD,UAAT,CAAoBO,KAApB,CAAP;AACD,GAFiF,EAE/EoC,IAF+E,CAE1E,cAF0E,CAA3E,GAEmB,SAF1B;AAGD;;AAED,SAAS9C,sBAAT,CAAgCZ,GAAhC,EAAqCqB,IAArC,EAA2C;AACzC,SAAOrB,GAAG,CAACwB,kBAAJ,CAAuBgD,iBAAvB,CAAyCnD,IAAzC,EAA+ClD,uBAA/C,CAAP;AACD;;AAED,SAASkE,uBAAT,CAAiCrC,GAAjC,EAAsCoE,SAAtC,EAAiDC,UAAjD,EAA6DjC,kBAA7D,EAAiF;AAC/E,MAAIqC,MAAM,GAAG,CAAClG,6BAAD,CAAb;AACA,MAAImG,WAAW,GAAGtC,kBAAkB,GAAG,EAAH,GAAQ,EAA5C;AACAiC,EAAAA,UAAU,IAAII,MAAM,CAAChB,IAAP,CAAY;AACxBkB,IAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUD,WAAV,CADe;AAExBE,IAAAA,KAAK,EAAE;AAFiB,GAAZ,CAAd;AAIA,SAAO5E,GAAG,CAACwB,kBAAJ,CAAuBgD,iBAAvB,CAAyCJ,SAAS,CAACV,IAAV,CAAe,IAAf,CAAzC,EAA+De,MAA/D,CAAP;AACD;;AAED,SAASI,mCAAT,CAA6CC,MAA7C,EAAqDC,SAArD,EAAgE;AAC9D,MAAIC,KAAK,GAAGF,MAAM,CAACG,OAAP,GAAiBC,aAAjB,CAA+BH,SAA/B,EAA0C,OAA1C,CAAZ;AACA,MAAII,KAAK,GAAGH,KAAK,CAACF,MAAM,CAACM,cAAR,CAAjB;AACA,SAAOvH,QAAQ,CAACwH,oBAAT,CAA8BF,KAA9B,CAAP;AACD;;AAEDxH,OAAO,CAACkH,mCAAR,GAA8CA,mCAA9C;;AAEA,SAASS,0BAAT,CAAoCC,KAApC,EAA2C5E,UAA3C,EAAuD;AACrD,MAAIgE,OAAO,GAAGY,KAAK,CAACC,GAAN,CAAU,SAAV,CAAd;AACA,SAAOb,OAAO,IAAI,IAAX,GAAkBA,OAAlB,GAA4BhE,UAAU,KAAK,UAAf,GAA4B,CAAC,CAAD,EAAI,EAAJ,CAA5B,GAAsC,EAAzE;AACD;;AAEDhD,OAAO,CAAC2H,0BAAR,GAAqCA,0BAArC;;AAEA,IAAIG,yBAAyB,GAAG,YAAY;AAC1C,WAASA,yBAAT,GAAqC;AACnC,SAAKC,cAAL,GAAsB,EAAtB;AACA,SAAKC,gBAAL,GAAwB1H,QAAQ,CAAC2H,eAAT,EAAxB;AACD;;AAEDH,EAAAA,yBAAyB,CAACI,SAA1B,CAAoCC,kBAApC,GAAyD,YAAY;AACnE,WAAO,eAAe,KAAKH,gBAAL,EAAtB;AACD,GAFD;;AAIAF,EAAAA,yBAAyB,CAACI,SAA1B,CAAoCpE,iBAApC,GAAwD,UAAUL,UAAV,EAAsB2E,QAAtB,EAAgCpF,UAAhC,EAA4C;AAClG,QAAIqF,QAAQ,GAAGrF,UAAU,KAAK,UAAf,GAA4B,KAAKmF,kBAAL,EAA5B,GAAwD,IAAvE;AACA,QAAIG,MAAM,GAAGpI,QAAQ,CAACqI,gBAAT,CAA0B;AACrCf,MAAAA,KAAK,EAAEY,QAD8B;AAErClH,MAAAA,IAAI,EAAEuC,UAF+B;AAGrCT,MAAAA,UAAU,EAAEA,UAHyB;AAIrCqF,MAAAA,QAAQ,EAAEA;AAJ2B,KAA1B,CAAb;;AAOA,QAAIjI,MAAM,CAACoI,QAAP,CAAgBF,MAAhB,CAAJ,EAA6B;AAC3B,aAAOA,MAAP;AACD,KAFD,MAEO;AACL,UAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCvI,QAAAA,MAAM,CAAC2E,MAAP,CAAcsD,QAAd;AACD;;AAED,WAAKN,cAAL,CAAoBM,QAApB,IAAgCC,MAAM,CAACjB,KAAvC;AACA,aAAOiB,MAAM,CAACM,OAAd;AACD;AACF,GAnBD;;AAqBAd,EAAAA,yBAAyB,CAACI,SAA1B,CAAoCrB,iBAApC,GAAwD,UAAUgC,IAAV,EAAgB/B,MAAhB,EAAwB;AAC9E,QAAIgC,QAAQ,GAAG,EAAf;;AAEA,QAAI1I,MAAM,CAACgE,OAAP,CAAe0C,MAAf,CAAJ,EAA4B;AAC1B1G,MAAAA,MAAM,CAAC4B,IAAP,CAAY8E,MAAZ,EAAoB,UAAUiC,GAAV,EAAe;AACjC,eAAO3I,MAAM,CAAC4I,MAAP,CAAcF,QAAd,EAAwBC,GAAxB,CAAP;AACD,OAFD;AAGD,KAJD,MAIO;AACL3I,MAAAA,MAAM,CAAC4I,MAAP,CAAcF,QAAd,EAAwBhC,MAAxB;AACD;;AAED,QAAImC,SAAS,GAAG,KAAKd,kBAAL,EAAhB;;AAEA,SAAKJ,cAAL,CAAoBkB,SAApB,IAAiCH,QAAjC;AACA,WAAO,MAAMG,SAAN,GAAkB,GAAlB,GAAwBJ,IAAxB,GAA+B,GAAtC;AACD,GAfD;;AAiBA,SAAOf,yBAAP;AACD,CAjD+B,EAAhC;;AAmDA9H,OAAO,CAAC8H,yBAAR,GAAoCA,yBAApC","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar format_1 = require(\"../../util/format\");\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar dataValueHelper_1 = require(\"../../data/helper/dataValueHelper\");\n\nvar number_1 = require(\"../../util/number\");\n\nvar TOOLTIP_NAME_TEXT_STYLE_CSS = 'font-size:12px;color:#6e7079';\nvar TOOLTIP_TEXT_STYLE_RICH = {\n  fontSize: 12,\n  fill: '#6e7079'\n};\nvar TOOLTIP_VALUE_TEXT_STYLE_CSS = 'font-size:14px;color:#464646;font-weight:900';\nvar TOOLTIP_VALUE_TEXT_STYLE_RICH = {\n  fontSize: 14,\n  fill: '#464646',\n  fontWeight: 900\n};\nvar TOOLTIP_LINE_HEIGHT_CSS = 'line-height:1';\nvar HTML_GAPS = [0, 10, 20, 30];\nvar RICH_TEXT_GAPS = ['', '\\n', '\\n\\n', '\\n\\n\\n'];\n\nfunction createTooltipMarkup(type, option) {\n  option.type = type;\n  return option;\n}\n\nexports.createTooltipMarkup = createTooltipMarkup;\n\nfunction getBuilder(fragment) {\n  return util_1.hasOwn(builderMap, fragment.type) && builderMap[fragment.type];\n}\n\nvar builderMap = {\n  section: {\n    planLayout: function (fragment) {\n      var subBlockLen = fragment.blocks.length;\n      var thisBlockHasInnerGap = subBlockLen > 1 || subBlockLen > 0 && !fragment.noHeader;\n      var thisGapLevelBetweenSubBlocks = 0;\n      util_1.each(fragment.blocks, function (subBlock) {\n        getBuilder(subBlock).planLayout(subBlock);\n        var subGapLevel = subBlock.__gapLevelBetweenSubBlocks;\n\n        if (subGapLevel >= thisGapLevelBetweenSubBlocks) {\n          thisGapLevelBetweenSubBlocks = subGapLevel + (thisBlockHasInnerGap && (!subGapLevel || subBlock.type === 'section' && !subBlock.noHeader) ? 1 : 0);\n        }\n      });\n      fragment.__gapLevelBetweenSubBlocks = thisGapLevelBetweenSubBlocks;\n    },\n    build: function (ctx, fragment, topMarginForOuterGap) {\n      var noHeader = fragment.noHeader;\n      var gaps = getGap(fragment);\n      var subMarkupText = buildSubBlocks(ctx, fragment, noHeader ? topMarginForOuterGap : gaps.html);\n\n      if (noHeader) {\n        return subMarkupText;\n      }\n\n      var displayableHeader = format_1.makeValueReadable(fragment.header, 'ordinal', ctx.useUTC);\n\n      if (ctx.renderMode === 'richText') {\n        return wrapInlineNameRichText(ctx, displayableHeader) + gaps.richText + subMarkupText;\n      } else {\n        return wrapBlockHTML(\"<div style=\\\"\" + TOOLTIP_NAME_TEXT_STYLE_CSS + \";\" + TOOLTIP_LINE_HEIGHT_CSS + \";\\\">\" + format_1.encodeHTML(displayableHeader) + '</div>' + subMarkupText, topMarginForOuterGap);\n      }\n    }\n  },\n  nameValue: {\n    planLayout: function (fragment) {\n      fragment.__gapLevelBetweenSubBlocks = 0;\n    },\n    build: function (ctx, fragment, topMarginForOuterGap) {\n      var renderMode = ctx.renderMode;\n      var noName = fragment.noName;\n      var noValue = fragment.noValue;\n      var noMarker = !fragment.markerType;\n      var name = fragment.name;\n      var value = fragment.value;\n      var useUTC = ctx.useUTC;\n\n      if (noName && noValue) {\n        return;\n      }\n\n      var markerStr = noMarker ? '' : ctx.markupStyleCreator.makeTooltipMarker(fragment.markerType, fragment.markerColor || '#333', renderMode);\n      var readableName = noName ? '' : format_1.makeValueReadable(name, 'ordinal', useUTC);\n      var valueTypeOption = fragment.valueType;\n      var readableValueList = noValue ? [] : util_1.isArray(value) ? util_1.map(value, function (val, idx) {\n        return format_1.makeValueReadable(val, util_1.isArray(valueTypeOption) ? valueTypeOption[idx] : valueTypeOption, useUTC);\n      }) : [format_1.makeValueReadable(value, util_1.isArray(valueTypeOption) ? valueTypeOption[0] : valueTypeOption, useUTC)];\n      var valueAlignRight = !noMarker || !noName;\n      var valueCloseToMarker = !noMarker && noName;\n      return renderMode === 'richText' ? (noMarker ? '' : markerStr) + (noName ? '' : wrapInlineNameRichText(ctx, readableName)) + (noValue ? '' : wrapInlineValueRichText(ctx, readableValueList, valueAlignRight, valueCloseToMarker)) : wrapBlockHTML((noMarker ? '' : markerStr) + (noName ? '' : wrapInlineNameHTML(readableName, !noMarker)) + (noValue ? '' : wrapInlineValueHTML(readableValueList, valueAlignRight, valueCloseToMarker)), topMarginForOuterGap);\n    }\n  }\n};\n\nfunction buildSubBlocks(ctx, fragment, topMarginForOuterGap) {\n  var subMarkupTextList = [];\n  var subBlocks = fragment.blocks || [];\n  util_1.assert(!subBlocks || util_1.isArray(subBlocks));\n  subBlocks = subBlocks || [];\n  var orderMode = ctx.orderMode;\n\n  if (fragment.sortBlocks && orderMode) {\n    subBlocks = subBlocks.slice();\n    var orderMap = {\n      valueAsc: 'asc',\n      valueDesc: 'desc'\n    };\n\n    if (util_1.hasOwn(orderMap, orderMode)) {\n      var comparator_1 = new dataValueHelper_1.SortOrderComparator(orderMap[orderMode], null);\n      subBlocks.sort(function (a, b) {\n        return comparator_1.evaluate(a.sortParam, b.sortParam);\n      });\n    } else if (orderMode === 'seriesDesc') {\n      subBlocks.reverse();\n    }\n  }\n\n  var gaps = getGap(fragment);\n  util_1.each(subBlocks, function (subBlock, idx) {\n    var subMarkupText = getBuilder(subBlock).build(ctx, subBlock, idx > 0 ? gaps.html : 0);\n    subMarkupText != null && subMarkupTextList.push(subMarkupText);\n  });\n\n  if (!subMarkupTextList.length) {\n    return;\n  }\n\n  return ctx.renderMode === 'richText' ? subMarkupTextList.join(gaps.richText) : wrapBlockHTML(subMarkupTextList.join(''), topMarginForOuterGap);\n}\n\nfunction buildTooltipMarkup(fragment, markupStyleCreator, renderMode, orderMode, useUTC) {\n  if (!fragment) {\n    return;\n  }\n\n  var builder = getBuilder(fragment);\n  builder.planLayout(fragment);\n  var ctx = {\n    useUTC: useUTC,\n    renderMode: renderMode,\n    orderMode: orderMode,\n    markupStyleCreator: markupStyleCreator\n  };\n  return builder.build(ctx, fragment, 0);\n}\n\nexports.buildTooltipMarkup = buildTooltipMarkup;\n\nfunction getGap(fragment) {\n  var gapLevelBetweenSubBlocks = fragment.__gapLevelBetweenSubBlocks;\n  return {\n    html: HTML_GAPS[gapLevelBetweenSubBlocks],\n    richText: RICH_TEXT_GAPS[gapLevelBetweenSubBlocks]\n  };\n}\n\nfunction wrapBlockHTML(encodedContent, topGap) {\n  var clearfix = '<div style=\"clear:both\"></div>';\n  var marginCSS = \"margin: \" + topGap + \"px 0 0\";\n  return \"<div style=\\\"\" + marginCSS + \";\" + TOOLTIP_LINE_HEIGHT_CSS + \";\\\">\" + encodedContent + clearfix + '</div>';\n}\n\nfunction wrapInlineNameHTML(name, leftHasMarker) {\n  var marginCss = leftHasMarker ? 'margin-left:2px' : '';\n  return \"<span style=\\\"\" + TOOLTIP_NAME_TEXT_STYLE_CSS + \";\" + marginCss + \"\\\">\" + format_1.encodeHTML(name) + '</span>';\n}\n\nfunction wrapInlineValueHTML(valueList, alignRight, valueCloseToMarker) {\n  var paddingStr = valueCloseToMarker ? '10px' : '20px';\n  var alignCSS = alignRight ? \"float:right;margin-left:\" + paddingStr : '';\n  return \"<span style=\\\"\" + alignCSS + \";\" + TOOLTIP_VALUE_TEXT_STYLE_CSS + \"\\\">\" + util_1.map(valueList, function (value) {\n    return format_1.encodeHTML(value);\n  }).join('&nbsp;&nbsp;') + '</span>';\n}\n\nfunction wrapInlineNameRichText(ctx, name) {\n  return ctx.markupStyleCreator.wrapRichTextStyle(name, TOOLTIP_TEXT_STYLE_RICH);\n}\n\nfunction wrapInlineValueRichText(ctx, valueList, alignRight, valueCloseToMarker) {\n  var styles = [TOOLTIP_VALUE_TEXT_STYLE_RICH];\n  var paddingLeft = valueCloseToMarker ? 10 : 20;\n  alignRight && styles.push({\n    padding: [0, 0, 0, paddingLeft],\n    align: 'right'\n  });\n  return ctx.markupStyleCreator.wrapRichTextStyle(valueList.join('  '), styles);\n}\n\nfunction retrieveVisualColorForTooltipMarker(series, dataIndex) {\n  var style = series.getData().getItemVisual(dataIndex, 'style');\n  var color = style[series.visualDrawType];\n  return format_1.convertToColorString(color);\n}\n\nexports.retrieveVisualColorForTooltipMarker = retrieveVisualColorForTooltipMarker;\n\nfunction getPaddingFromTooltipModel(model, renderMode) {\n  var padding = model.get('padding');\n  return padding != null ? padding : renderMode === 'richText' ? [8, 10] : 10;\n}\n\nexports.getPaddingFromTooltipModel = getPaddingFromTooltipModel;\n\nvar TooltipMarkupStyleCreator = function () {\n  function TooltipMarkupStyleCreator() {\n    this.richTextStyles = {};\n    this._nextStyleNameId = number_1.getRandomIdBase();\n  }\n\n  TooltipMarkupStyleCreator.prototype._generateStyleName = function () {\n    return '__EC_aUTo_' + this._nextStyleNameId++;\n  };\n\n  TooltipMarkupStyleCreator.prototype.makeTooltipMarker = function (markerType, colorStr, renderMode) {\n    var markerId = renderMode === 'richText' ? this._generateStyleName() : null;\n    var marker = format_1.getTooltipMarker({\n      color: colorStr,\n      type: markerType,\n      renderMode: renderMode,\n      markerId: markerId\n    });\n\n    if (util_1.isString(marker)) {\n      return marker;\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        util_1.assert(markerId);\n      }\n\n      this.richTextStyles[markerId] = marker.style;\n      return marker.content;\n    }\n  };\n\n  TooltipMarkupStyleCreator.prototype.wrapRichTextStyle = function (text, styles) {\n    var finalStl = {};\n\n    if (util_1.isArray(styles)) {\n      util_1.each(styles, function (stl) {\n        return util_1.extend(finalStl, stl);\n      });\n    } else {\n      util_1.extend(finalStl, styles);\n    }\n\n    var styleName = this._generateStyleName();\n\n    this.richTextStyles[styleName] = finalStl;\n    return \"{\" + styleName + \"|\" + text + \"}\";\n  };\n\n  return TooltipMarkupStyleCreator;\n}();\n\nexports.TooltipMarkupStyleCreator = TooltipMarkupStyleCreator;"]},"metadata":{},"sourceType":"script"}