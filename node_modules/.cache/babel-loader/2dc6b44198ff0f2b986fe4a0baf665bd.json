{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar Series_1 = require(\"../../model/Series\");\n\nvar createListFromArray_1 = require(\"../helper/createListFromArray\");\n\nvar BaseBarSeriesModel = function (_super) {\n  tslib_1.__extends(BaseBarSeriesModel, _super);\n\n  function BaseBarSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = BaseBarSeriesModel.type;\n    return _this;\n  }\n\n  BaseBarSeriesModel.prototype.getInitialData = function (option, ecModel) {\n    return createListFromArray_1[\"default\"](this.getSource(), this, {\n      useEncodeDefaulter: true\n    });\n  };\n\n  BaseBarSeriesModel.prototype.getMarkerPosition = function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  };\n\n  BaseBarSeriesModel.type = 'series.__base_bar__';\n  BaseBarSeriesModel.defaultOption = {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    barMinHeight: 0,\n    barMinAngle: 0,\n    large: false,\n    largeThreshold: 400,\n    progressive: 3e3,\n    progressiveChunkMode: 'mod'\n  };\n  return BaseBarSeriesModel;\n}(Series_1[\"default\"]);\n\nSeries_1[\"default\"].registerClass(BaseBarSeriesModel);\nexports[\"default\"] = BaseBarSeriesModel;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/chart/bar/BaseBarSeries.js"],"names":["exports","__esModule","tslib_1","require","Series_1","createListFromArray_1","BaseBarSeriesModel","_super","__extends","_this","apply","arguments","type","prototype","getInitialData","option","ecModel","getSource","useEncodeDefaulter","getMarkerPosition","value","coordSys","coordinateSystem","pt","dataToPoint","clampData","data","getData","offset","getLayout","size","offsetIndex","getBaseAxis","isHorizontal","NaN","defaultOption","zlevel","z","legendHoverLink","barMinHeight","barMinAngle","large","largeThreshold","progressive","progressiveChunkMode","registerClass"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AAEA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,oBAAD,CAAtB;;AAEA,IAAIE,qBAAqB,GAAGF,OAAO,CAAC,+BAAD,CAAnC;;AAEA,IAAIG,kBAAkB,GAAG,UAAUC,MAAV,EAAkB;AACzCL,EAAAA,OAAO,CAACM,SAAR,CAAkBF,kBAAlB,EAAsCC,MAAtC;;AAEA,WAASD,kBAAT,GAA8B;AAC5B,QAAIG,KAAK,GAAGF,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACG,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;;AAEAF,IAAAA,KAAK,CAACG,IAAN,GAAaN,kBAAkB,CAACM,IAAhC;AACA,WAAOH,KAAP;AACD;;AAEDH,EAAAA,kBAAkB,CAACO,SAAnB,CAA6BC,cAA7B,GAA8C,UAAUC,MAAV,EAAkBC,OAAlB,EAA2B;AACvE,WAAOX,qBAAqB,CAAC,SAAD,CAArB,CAAiC,KAAKY,SAAL,EAAjC,EAAmD,IAAnD,EAAyD;AAC9DC,MAAAA,kBAAkB,EAAE;AAD0C,KAAzD,CAAP;AAGD,GAJD;;AAMAZ,EAAAA,kBAAkB,CAACO,SAAnB,CAA6BM,iBAA7B,GAAiD,UAAUC,KAAV,EAAiB;AAChE,QAAIC,QAAQ,GAAG,KAAKC,gBAApB;;AAEA,QAAID,QAAJ,EAAc;AACZ,UAAIE,EAAE,GAAGF,QAAQ,CAACG,WAAT,CAAqBH,QAAQ,CAACI,SAAT,CAAmBL,KAAnB,CAArB,CAAT;AACA,UAAIM,IAAI,GAAG,KAAKC,OAAL,EAAX;AACA,UAAIC,MAAM,GAAGF,IAAI,CAACG,SAAL,CAAe,QAAf,CAAb;AACA,UAAIC,IAAI,GAAGJ,IAAI,CAACG,SAAL,CAAe,MAAf,CAAX;AACA,UAAIE,WAAW,GAAGV,QAAQ,CAACW,WAAT,GAAuBC,YAAvB,KAAwC,CAAxC,GAA4C,CAA9D;AACAV,MAAAA,EAAE,CAACQ,WAAD,CAAF,IAAmBH,MAAM,GAAGE,IAAI,GAAG,CAAnC;AACA,aAAOP,EAAP;AACD;;AAED,WAAO,CAACW,GAAD,EAAMA,GAAN,CAAP;AACD,GAdD;;AAgBA5B,EAAAA,kBAAkB,CAACM,IAAnB,GAA0B,qBAA1B;AACAN,EAAAA,kBAAkB,CAAC6B,aAAnB,GAAmC;AACjCC,IAAAA,MAAM,EAAE,CADyB;AAEjCC,IAAAA,CAAC,EAAE,CAF8B;AAGjCf,IAAAA,gBAAgB,EAAE,aAHe;AAIjCgB,IAAAA,eAAe,EAAE,IAJgB;AAKjCC,IAAAA,YAAY,EAAE,CALmB;AAMjCC,IAAAA,WAAW,EAAE,CANoB;AAOjCC,IAAAA,KAAK,EAAE,KAP0B;AAQjCC,IAAAA,cAAc,EAAE,GARiB;AASjCC,IAAAA,WAAW,EAAE,GAToB;AAUjCC,IAAAA,oBAAoB,EAAE;AAVW,GAAnC;AAYA,SAAOtC,kBAAP;AACD,CA9CwB,CA8CvBF,QAAQ,CAAC,SAAD,CA9Ce,CAAzB;;AAgDAA,QAAQ,CAAC,SAAD,CAAR,CAAoByC,aAApB,CAAkCvC,kBAAlC;AACAN,OAAO,CAAC,SAAD,CAAP,GAAqBM,kBAArB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar Series_1 = require(\"../../model/Series\");\n\nvar createListFromArray_1 = require(\"../helper/createListFromArray\");\n\nvar BaseBarSeriesModel = function (_super) {\n  tslib_1.__extends(BaseBarSeriesModel, _super);\n\n  function BaseBarSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = BaseBarSeriesModel.type;\n    return _this;\n  }\n\n  BaseBarSeriesModel.prototype.getInitialData = function (option, ecModel) {\n    return createListFromArray_1[\"default\"](this.getSource(), this, {\n      useEncodeDefaulter: true\n    });\n  };\n\n  BaseBarSeriesModel.prototype.getMarkerPosition = function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  };\n\n  BaseBarSeriesModel.type = 'series.__base_bar__';\n  BaseBarSeriesModel.defaultOption = {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    barMinHeight: 0,\n    barMinAngle: 0,\n    large: false,\n    largeThreshold: 400,\n    progressive: 3e3,\n    progressiveChunkMode: 'mod'\n  };\n  return BaseBarSeriesModel;\n}(Series_1[\"default\"]);\n\nSeries_1[\"default\"].registerClass(BaseBarSeriesModel);\nexports[\"default\"] = BaseBarSeriesModel;"]},"metadata":{},"sourceType":"script"}