{"ast":null,"code":"import { __extends } from \"tslib\";\nimport Path from '../Path';\nvar PI = Math.PI;\nvar sin = Math.sin;\nvar cos = Math.cos;\n\nvar IsogonShape = function () {\n  function IsogonShape() {\n    this.x = 0;\n    this.y = 0;\n    this.r = 0;\n    this.n = 0;\n  }\n\n  return IsogonShape;\n}();\n\nvar Isogon = function (_super) {\n  __extends(Isogon, _super);\n\n  function Isogon(opts) {\n    return _super.call(this, opts) || this;\n  }\n\n  Isogon.prototype.getDefaultShape = function () {\n    return new IsogonShape();\n  };\n\n  Isogon.prototype.buildPath = function (ctx, shape) {\n    var n = shape.n;\n\n    if (!n || n < 2) {\n      return;\n    }\n\n    var x = shape.x;\n    var y = shape.y;\n    var r = shape.r;\n    var dStep = 2 * PI / n;\n    var deg = -PI / 2;\n    ctx.moveTo(x + r * cos(deg), y + r * sin(deg));\n\n    for (var i = 0, end = n - 1; i < end; i++) {\n      deg += dStep;\n      ctx.lineTo(x + r * cos(deg), y + r * sin(deg));\n    }\n\n    ctx.closePath();\n    return;\n  };\n\n  return Isogon;\n}(Path);\n\nIsogon.prototype.type = 'isogon';\nexport default Isogon;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/zrender/esm/graphic/shape/Isogon.js"],"names":["__extends","Path","PI","Math","sin","cos","IsogonShape","x","y","r","n","Isogon","_super","opts","call","prototype","getDefaultShape","buildPath","ctx","shape","dStep","deg","moveTo","i","end","lineTo","closePath","type"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,IAAIC,EAAE,GAAGC,IAAI,CAACD,EAAd;AACA,IAAIE,GAAG,GAAGD,IAAI,CAACC,GAAf;AACA,IAAIC,GAAG,GAAGF,IAAI,CAACE,GAAf;;AACA,IAAIC,WAAW,GAAI,YAAY;AAC3B,WAASA,WAAT,GAAuB;AACnB,SAAKC,CAAL,GAAS,CAAT;AACA,SAAKC,CAAL,GAAS,CAAT;AACA,SAAKC,CAAL,GAAS,CAAT;AACA,SAAKC,CAAL,GAAS,CAAT;AACH;;AACD,SAAOJ,WAAP;AACH,CARkB,EAAnB;;AASA,IAAIK,MAAM,GAAI,UAAUC,MAAV,EAAkB;AAC5BZ,EAAAA,SAAS,CAACW,MAAD,EAASC,MAAT,CAAT;;AACA,WAASD,MAAT,CAAgBE,IAAhB,EAAsB;AAClB,WAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,IAAlB,KAA2B,IAAlC;AACH;;AACDF,EAAAA,MAAM,CAACI,SAAP,CAAiBC,eAAjB,GAAmC,YAAY;AAC3C,WAAO,IAAIV,WAAJ,EAAP;AACH,GAFD;;AAGAK,EAAAA,MAAM,CAACI,SAAP,CAAiBE,SAAjB,GAA6B,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AAC/C,QAAIT,CAAC,GAAGS,KAAK,CAACT,CAAd;;AACA,QAAI,CAACA,CAAD,IAAMA,CAAC,GAAG,CAAd,EAAiB;AACb;AACH;;AACD,QAAIH,CAAC,GAAGY,KAAK,CAACZ,CAAd;AACA,QAAIC,CAAC,GAAGW,KAAK,CAACX,CAAd;AACA,QAAIC,CAAC,GAAGU,KAAK,CAACV,CAAd;AACA,QAAIW,KAAK,GAAG,IAAIlB,EAAJ,GAASQ,CAArB;AACA,QAAIW,GAAG,GAAG,CAACnB,EAAD,GAAM,CAAhB;AACAgB,IAAAA,GAAG,CAACI,MAAJ,CAAWf,CAAC,GAAGE,CAAC,GAAGJ,GAAG,CAACgB,GAAD,CAAtB,EAA6Bb,CAAC,GAAGC,CAAC,GAAGL,GAAG,CAACiB,GAAD,CAAxC;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGd,CAAC,GAAG,CAA1B,EAA6Ba,CAAC,GAAGC,GAAjC,EAAsCD,CAAC,EAAvC,EAA2C;AACvCF,MAAAA,GAAG,IAAID,KAAP;AACAF,MAAAA,GAAG,CAACO,MAAJ,CAAWlB,CAAC,GAAGE,CAAC,GAAGJ,GAAG,CAACgB,GAAD,CAAtB,EAA6Bb,CAAC,GAAGC,CAAC,GAAGL,GAAG,CAACiB,GAAD,CAAxC;AACH;;AACDH,IAAAA,GAAG,CAACQ,SAAJ;AACA;AACH,GAjBD;;AAkBA,SAAOf,MAAP;AACH,CA3Ba,CA2BZV,IA3BY,CAAd;;AA4BAU,MAAM,CAACI,SAAP,CAAiBY,IAAjB,GAAwB,QAAxB;AACA,eAAehB,MAAf","sourcesContent":["import { __extends } from \"tslib\";\nimport Path from '../Path';\nvar PI = Math.PI;\nvar sin = Math.sin;\nvar cos = Math.cos;\nvar IsogonShape = (function () {\n    function IsogonShape() {\n        this.x = 0;\n        this.y = 0;\n        this.r = 0;\n        this.n = 0;\n    }\n    return IsogonShape;\n}());\nvar Isogon = (function (_super) {\n    __extends(Isogon, _super);\n    function Isogon(opts) {\n        return _super.call(this, opts) || this;\n    }\n    Isogon.prototype.getDefaultShape = function () {\n        return new IsogonShape();\n    };\n    Isogon.prototype.buildPath = function (ctx, shape) {\n        var n = shape.n;\n        if (!n || n < 2) {\n            return;\n        }\n        var x = shape.x;\n        var y = shape.y;\n        var r = shape.r;\n        var dStep = 2 * PI / n;\n        var deg = -PI / 2;\n        ctx.moveTo(x + r * cos(deg), y + r * sin(deg));\n        for (var i = 0, end = n - 1; i < end; i++) {\n            deg += dStep;\n            ctx.lineTo(x + r * cos(deg), y + r * sin(deg));\n        }\n        ctx.closePath();\n        return;\n    };\n    return Isogon;\n}(Path));\nIsogon.prototype.type = 'isogon';\nexport default Isogon;\n"]},"metadata":{},"sourceType":"module"}