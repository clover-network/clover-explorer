{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar number_1 = require(\"../../util/number\");\n\nvar layout = require(\"../../util/layout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction pieLayout(seriesType, ecModel, api) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var viewRect = getViewRect(seriesModel, api);\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = number_1.parsePercent(viewRect.width, api.getWidth());\n    var height = number_1.parsePercent(viewRect.height, api.getHeight());\n    var size = Math.min(width, height);\n    var cx = number_1.parsePercent(center[0], width) + viewRect.x;\n    var cy = number_1.parsePercent(center[1], height) + viewRect.y;\n    var r0 = number_1.parsePercent(radius[0], size / 2);\n    var r = number_1.parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim);\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum');\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0;\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.setLayout({\n      viewRect: viewRect,\n      r: r\n    });\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      }\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? number_1.linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    });\n\n    if (restAngle < PI2 && validDataCount) {\n      if (restAngle <= 1e-3) {\n        var angle_1 = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout_1 = data.getItemLayout(idx);\n            layout_1.angle = angle_1;\n            layout_1.startAngle = startAngle + dir * idx * angle_1;\n            layout_1.endAngle = startAngle + dir * (idx + 1) * angle_1;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout_2 = data.getItemLayout(idx);\n            var angle = layout_2.angle === minAngle ? minAngle : value * unitRadian;\n            layout_2.startAngle = currentAngle;\n            layout_2.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n  });\n}\n\nexports[\"default\"] = pieLayout;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/chart/pie/pieLayout.js"],"names":["exports","__esModule","number_1","require","layout","zrUtil","PI2","Math","PI","RADIAN","getViewRect","seriesModel","api","getLayoutRect","getBoxLayoutParams","width","getWidth","height","getHeight","pieLayout","seriesType","ecModel","eachSeriesByType","data","getData","valueDim","mapDimension","viewRect","center","get","radius","isArray","parsePercent","size","min","cx","x","cy","y","r0","r","startAngle","minAngle","validDataCount","each","value","isNaN","sum","getSum","unitRadian","clockwise","roseType","stillShowZeroSum","extent","getDataExtent","restAngle","valueSumLargerThanMinAngle","currentAngle","dir","setLayout","idx","angle","setItemLayout","NaN","endAngle","linearMap","angle_1","layout_1","getItemLayout","layout_2"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar number_1 = require(\"../../util/number\");\n\nvar layout = require(\"../../util/layout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction pieLayout(seriesType, ecModel, api) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var viewRect = getViewRect(seriesModel, api);\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = number_1.parsePercent(viewRect.width, api.getWidth());\n    var height = number_1.parsePercent(viewRect.height, api.getHeight());\n    var size = Math.min(width, height);\n    var cx = number_1.parsePercent(center[0], width) + viewRect.x;\n    var cy = number_1.parsePercent(center[1], height) + viewRect.y;\n    var r0 = number_1.parsePercent(radius[0], size / 2);\n    var r = number_1.parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim);\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum');\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0;\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.setLayout({\n      viewRect: viewRect,\n      r: r\n    });\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      }\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? number_1.linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    });\n\n    if (restAngle < PI2 && validDataCount) {\n      if (restAngle <= 1e-3) {\n        var angle_1 = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout_1 = data.getItemLayout(idx);\n            layout_1.angle = angle_1;\n            layout_1.startAngle = startAngle + dir * idx * angle_1;\n            layout_1.endAngle = startAngle + dir * (idx + 1) * angle_1;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout_2 = data.getItemLayout(idx);\n            var angle = layout_2.angle === minAngle ? minAngle : value * unitRadian;\n            layout_2.startAngle = currentAngle;\n            layout_2.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n  });\n}\n\nexports[\"default\"] = pieLayout;"]},"metadata":{},"sourceType":"script"}