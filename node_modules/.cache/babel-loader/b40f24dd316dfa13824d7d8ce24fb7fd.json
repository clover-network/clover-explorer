{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDefaultCategoryScaleRange = exports.getName = exports.syncScale = exports.createScaleByField = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar util_1 = require(\"@antv/util\");\n\nvar dependents_1 = require(\"../dependents\");\n\nvar coordinate_1 = require(\"./coordinate\");\n\nvar dateRegex = /^(?:(?!0000)[0-9]{4}([-/.]+)(?:(?:0?[1-9]|1[0-2])\\1(?:0?[1-9]|1[0-9]|2[0-8])|(?:0?[13-9]|1[0-2])\\1(?:29|30)|(?:0?[13578]|1[02])\\1(?:31))|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)([-/.]+)0?2\\2(?:29))(\\s+([01]|([01][0-9]|2[0-3])):([0-9]|[0-5][0-9]):([0-9]|[0-5][0-9]))?$/;\n/**\n * 获取字段对应数据的类型\n * @param field 数据字段名\n * @param data 数据源\n * @returns default type 返回对应的数据类型\n */\n\nfunction getDefaultType(value) {\n  var type = 'linear';\n\n  if (dateRegex.test(value)) {\n    type = 'timeCat';\n  } else if (util_1.isString(value)) {\n    type = 'cat';\n  }\n\n  return type;\n}\n/**\n * @ignore\n * 为指定的 `field` 字段数据创建 scale\n * @param field 字段名\n * @param [data] 数据集，可为空\n * @param [scaleDef] 列定义，可为空\n * @returns scale 返回创建的 Scale 实例\n */\n\n\nfunction createScaleByField(field, data, scaleDef) {\n  var validData = data || [];\n\n  if (util_1.isNumber(field) || util_1.isNil(util_1.firstValue(validData, field)) && util_1.isEmpty(scaleDef)) {\n    var Identity = dependents_1.getScale('identity');\n    return new Identity({\n      field: field.toString(),\n      values: [field]\n    });\n  }\n\n  var values = util_1.valuesOfKey(validData, field); // 如果已经定义过这个度量\n\n  var type = util_1.get(scaleDef, 'type', getDefaultType(values[0]));\n  var ScaleCtor = dependents_1.getScale(type);\n  return new ScaleCtor(tslib_1.__assign({\n    field: field,\n    values: values\n  }, scaleDef));\n}\n\nexports.createScaleByField = createScaleByField;\n/**\n * @ignore\n * 同步 scale\n * @todo 是否可以通过 scale.update() 方法进行更新\n * @param scale 需要同步的 scale 实例\n * @param newScale 同步源 Scale\n */\n\nfunction syncScale(scale, newScale) {\n  if (scale.type !== 'identity' && newScale.type !== 'identity') {\n    var obj = {};\n\n    for (var k in newScale) {\n      if (Object.prototype.hasOwnProperty.call(newScale, k)) {\n        obj[k] = newScale[k];\n      }\n    }\n\n    scale.change(obj);\n  }\n}\n\nexports.syncScale = syncScale;\n/**\n * @ignore\n * get the scale name, if alias exist, return alias, or else field\n * @param scale\n * @returns the name of field\n */\n\nfunction getName(scale) {\n  return scale.alias || scale.field;\n}\n\nexports.getName = getName;\n/**\n * 根据 scale values 和 coordinate 获取分类默认 range\n * @param scale 需要获取的 scale 实例\n * @param coordinate coordinate 实例\n * @param theme theme\n */\n\nfunction getDefaultCategoryScaleRange(scale, coordinate, theme) {\n  var values = scale.values;\n  var count = values.length;\n  var range;\n\n  if (count === 1) {\n    range = [0.5, 1]; // 只有一个分类时,防止计算出现 [0.5,0.5] 的状态\n  } else {\n    var widthRatio = 1;\n    var offset = 0;\n\n    if (coordinate_1.isFullCircle(coordinate)) {\n      if (!coordinate.isTransposed) {\n        range = [0, 1 - 1 / count];\n      } else {\n        widthRatio = util_1.get(theme, 'widthRatio.multiplePie', 1 / 1.3);\n        offset = 1 / count * widthRatio;\n        range = [offset / 2, 1 - offset / 2];\n      }\n    } else {\n      offset = 1 / count / 2; // 两边留下分类空间的一半\n\n      range = [offset, 1 - offset]; // 坐标轴最前面和最后面留下空白防止绘制柱状图时\n    }\n  }\n\n  return range;\n}\n\nexports.getDefaultCategoryScaleRange = getDefaultCategoryScaleRange;","map":{"version":3,"sources":["../../src/util/scale.ts"],"names":[],"mappings":"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","sourcesContent":["import { firstValue, get, isEmpty, isNil, isNumber, isString, valuesOfKey } from '@antv/util';\nimport { getScale, Scale, Coordinate } from '../dependents';\nimport { LooseObject, ScaleOption, ViewCfg } from '../interface';\nimport { isFullCircle } from './coordinate';\n\nconst dateRegex = /^(?:(?!0000)[0-9]{4}([-/.]+)(?:(?:0?[1-9]|1[0-2])\\1(?:0?[1-9]|1[0-9]|2[0-8])|(?:0?[13-9]|1[0-2])\\1(?:29|30)|(?:0?[13578]|1[02])\\1(?:31))|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)([-/.]+)0?2\\2(?:29))(\\s+([01]|([01][0-9]|2[0-3])):([0-9]|[0-5][0-9]):([0-9]|[0-5][0-9]))?$/;\n\n/**\n * 获取字段对应数据的类型\n * @param field 数据字段名\n * @param data 数据源\n * @returns default type 返回对应的数据类型\n */\nfunction getDefaultType(value: any): string {\n  let type = 'linear';\n  if (dateRegex.test(value)) {\n    type = 'timeCat';\n  } else if (isString(value)) {\n    type = 'cat';\n  }\n  return type;\n}\n\n/**\n * @ignore\n * 为指定的 `field` 字段数据创建 scale\n * @param field 字段名\n * @param [data] 数据集，可为空\n * @param [scaleDef] 列定义，可为空\n * @returns scale 返回创建的 Scale 实例\n */\nexport function createScaleByField(field: string | number, data?: LooseObject[] | [], scaleDef?: ScaleOption): Scale {\n  const validData = data || [];\n\n  if (isNumber(field) || (isNil(firstValue(validData, field)) && isEmpty(scaleDef))) {\n    const Identity = getScale('identity');\n    return new Identity({\n      field: field.toString(),\n      values: [field],\n    });\n  }\n\n  const values = valuesOfKey(validData, field);\n\n  // 如果已经定义过这个度量\n  const type = get(scaleDef, 'type', getDefaultType(values[0]));\n  const ScaleCtor = getScale(type);\n  return new ScaleCtor({\n    field,\n    values,\n    ...scaleDef,\n  });\n}\n\n/**\n * @ignore\n * 同步 scale\n * @todo 是否可以通过 scale.update() 方法进行更新\n * @param scale 需要同步的 scale 实例\n * @param newScale 同步源 Scale\n */\nexport function syncScale(scale: Scale, newScale: Scale) {\n  if (scale.type !== 'identity' && newScale.type !== 'identity') {\n    const obj = {};\n    for (const k in newScale) {\n      if (Object.prototype.hasOwnProperty.call(newScale, k)) {\n        obj[k] = newScale[k];\n      }\n    }\n\n    scale.change(obj);\n  }\n}\n\n/**\n * @ignore\n * get the scale name, if alias exist, return alias, or else field\n * @param scale\n * @returns the name of field\n */\nexport function getName(scale: Scale): string {\n  return scale.alias || scale.field;\n}\n\n/**\n * 根据 scale values 和 coordinate 获取分类默认 range\n * @param scale 需要获取的 scale 实例\n * @param coordinate coordinate 实例\n * @param theme theme \n */\nexport function getDefaultCategoryScaleRange(scale: Scale, coordinate: Coordinate, theme: ViewCfg['theme']): Scale['range'] {\n  const { values } = scale;\n  const count = values.length;\n  let range;\n\n  if (count === 1) {\n    range = [0.5, 1]; // 只有一个分类时,防止计算出现 [0.5,0.5] 的状态\n  } else {\n    let widthRatio = 1;\n    let offset = 0;\n\n    if (isFullCircle(coordinate)) {\n      if (!coordinate.isTransposed) {\n        range = [0, 1 - 1 / count];\n      } else {\n        widthRatio = get(theme, 'widthRatio.multiplePie', 1 / 1.3);\n        offset = (1 / count) * widthRatio;\n        range = [offset / 2, 1 - offset / 2];\n      }\n    } else {\n      offset = 1 / count / 2; // 两边留下分类空间的一半\n      range = [offset, 1 - offset]; // 坐标轴最前面和最后面留下空白防止绘制柱状图时\n    }\n  }\n  return range;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}