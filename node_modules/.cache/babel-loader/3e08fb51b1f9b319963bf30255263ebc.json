{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"./axis\");\n\nrequire(\"../coord/cartesian/defaultAxisExtentFromData\");\n\nvar Component_1 = require(\"../view/Component\");\n\nvar GridModel_1 = require(\"../coord/cartesian/GridModel\");\n\nvar Component_2 = require(\"../model/Component\");\n\nvar GridView = function (_super) {\n  tslib_1.__extends(GridView, _super);\n\n  function GridView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'grid';\n    return _this;\n  }\n\n  GridView.prototype.render = function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  };\n\n  GridView.type = 'grid';\n  return GridView;\n}(Component_1[\"default\"]);\n\nComponent_1[\"default\"].registerClass(GridView);\nComponent_2[\"default\"].registerClass(GridModel_1[\"default\"]);\necharts.registerPreprocessor(function (option) {\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/component/gridSimple.js"],"names":["exports","__esModule","tslib_1","require","echarts","zrUtil","graphic","Component_1","GridModel_1","Component_2","GridView","_super","__extends","_this","apply","arguments","type","prototype","render","gridModel","ecModel","group","removeAll","get","add","Rect","shape","coordinateSystem","getRect","style","defaults","fill","getItemStyle","silent","z2","registerClass","registerPreprocessor","option","xAxis","yAxis","grid"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AAEA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAIC,OAAO,GAAGD,OAAO,CAAC,YAAD,CAArB;;AAEA,IAAIE,MAAM,GAAGF,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIG,OAAO,GAAGH,OAAO,CAAC,iBAAD,CAArB;;AAEAA,OAAO,CAAC,QAAD,CAAP;;AAEAA,OAAO,CAAC,8CAAD,CAAP;;AAEA,IAAII,WAAW,GAAGJ,OAAO,CAAC,mBAAD,CAAzB;;AAEA,IAAIK,WAAW,GAAGL,OAAO,CAAC,8BAAD,CAAzB;;AAEA,IAAIM,WAAW,GAAGN,OAAO,CAAC,oBAAD,CAAzB;;AAEA,IAAIO,QAAQ,GAAG,UAAUC,MAAV,EAAkB;AAC/BT,EAAAA,OAAO,CAACU,SAAR,CAAkBF,QAAlB,EAA4BC,MAA5B;;AAEA,WAASD,QAAT,GAAoB;AAClB,QAAIG,KAAK,GAAGF,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACG,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;;AAEAF,IAAAA,KAAK,CAACG,IAAN,GAAa,MAAb;AACA,WAAOH,KAAP;AACD;;AAEDH,EAAAA,QAAQ,CAACO,SAAT,CAAmBC,MAAnB,GAA4B,UAAUC,SAAV,EAAqBC,OAArB,EAA8B;AACxD,SAAKC,KAAL,CAAWC,SAAX;;AAEA,QAAIH,SAAS,CAACI,GAAV,CAAc,MAAd,CAAJ,EAA2B;AACzB,WAAKF,KAAL,CAAWG,GAAX,CAAe,IAAIlB,OAAO,CAACmB,IAAZ,CAAiB;AAC9BC,QAAAA,KAAK,EAAEP,SAAS,CAACQ,gBAAV,CAA2BC,OAA3B,EADuB;AAE9BC,QAAAA,KAAK,EAAExB,MAAM,CAACyB,QAAP,CAAgB;AACrBC,UAAAA,IAAI,EAAEZ,SAAS,CAACI,GAAV,CAAc,iBAAd;AADe,SAAhB,EAEJJ,SAAS,CAACa,YAAV,EAFI,CAFuB;AAK9BC,QAAAA,MAAM,EAAE,IALsB;AAM9BC,QAAAA,EAAE,EAAE,CAAC;AANyB,OAAjB,CAAf;AAQD;AACF,GAbD;;AAeAxB,EAAAA,QAAQ,CAACM,IAAT,GAAgB,MAAhB;AACA,SAAON,QAAP;AACD,CA3Bc,CA2BbH,WAAW,CAAC,SAAD,CA3BE,CAAf;;AA6BAA,WAAW,CAAC,SAAD,CAAX,CAAuB4B,aAAvB,CAAqCzB,QAArC;AACAD,WAAW,CAAC,SAAD,CAAX,CAAuB0B,aAAvB,CAAqC3B,WAAW,CAAC,SAAD,CAAhD;AACAJ,OAAO,CAACgC,oBAAR,CAA6B,UAAUC,MAAV,EAAkB;AAC7C,MAAIA,MAAM,CAACC,KAAP,IAAgBD,MAAM,CAACE,KAAvB,IAAgC,CAACF,MAAM,CAACG,IAA5C,EAAkD;AAChDH,IAAAA,MAAM,CAACG,IAAP,GAAc,EAAd;AACD;AACF,CAJD","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"./axis\");\n\nrequire(\"../coord/cartesian/defaultAxisExtentFromData\");\n\nvar Component_1 = require(\"../view/Component\");\n\nvar GridModel_1 = require(\"../coord/cartesian/GridModel\");\n\nvar Component_2 = require(\"../model/Component\");\n\nvar GridView = function (_super) {\n  tslib_1.__extends(GridView, _super);\n\n  function GridView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'grid';\n    return _this;\n  }\n\n  GridView.prototype.render = function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  };\n\n  GridView.type = 'grid';\n  return GridView;\n}(Component_1[\"default\"]);\n\nComponent_1[\"default\"].registerClass(GridView);\nComponent_2[\"default\"].registerClass(GridModel_1[\"default\"]);\necharts.registerPreprocessor(function (option) {\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});"]},"metadata":{},"sourceType":"script"}