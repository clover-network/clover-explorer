{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar is_array_1 = require(\"./is-array\");\n\nvar is_function_1 = require(\"./is-function\");\n\nvar group_by_1 = require(\"./group-by\");\n\nvar groupToMap = function (data, condition) {\n  if (!condition) {\n    return {\n      0: data\n    };\n  }\n\n  if (!is_function_1.default(condition)) {\n    var paramsCondition_1 = is_array_1.default(condition) ? condition : condition.replace(/\\s+/g, '').split('*');\n\n    condition = function (row) {\n      var unique = '_'; // 避免出现数字作为Key的情况，会进行按照数字的排序\n\n      for (var i = 0, l = paramsCondition_1.length; i < l; i++) {\n        unique += row[paramsCondition_1[i]] && row[paramsCondition_1[i]].toString();\n      }\n\n      return unique;\n    };\n  }\n\n  var groups = group_by_1.default(data, condition);\n  return groups;\n};\n\nexports.default = groupToMap;","map":{"version":3,"sources":["../src/group-to-map.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AAEA,IAAM,UAAU,GAAG,UAAU,IAAV,EAAgB,SAAhB,EAAyB;AAC1C,MAAI,CAAC,SAAL,EAAgB;AACd,WAAO;AACL,SAAG;AADE,KAAP;AAGD;;AACD,MAAI,CAAC,aAAA,CAAA,OAAA,CAAW,SAAX,CAAL,EAA4B;AAC1B,QAAM,iBAAe,GAAG,UAAA,CAAA,OAAA,CAAQ,SAAR,IAAqB,SAArB,GAAiC,SAAS,CAAC,OAAV,CAAkB,MAAlB,EAA0B,EAA1B,EAA8B,KAA9B,CAAoC,GAApC,CAAzD;;AACA,IAAA,SAAS,GAAG,UAAU,GAAV,EAAa;AACvB,UAAI,MAAM,GAAG,GAAb,CADuB,CACL;;AAClB,WAAK,IAAI,CAAC,GAAG,CAAR,EAAW,CAAC,GAAG,iBAAe,CAAC,MAApC,EAA4C,CAAC,GAAG,CAAhD,EAAmD,CAAC,EAApD,EAAwD;AACtD,QAAA,MAAM,IAAI,GAAG,CAAC,iBAAe,CAAC,CAAD,CAAhB,CAAH,IAA2B,GAAG,CAAC,iBAAe,CAAC,CAAD,CAAhB,CAAH,CAAwB,QAAxB,EAArC;AACD;;AACD,aAAO,MAAP;AACD,KAND;AAOD;;AACD,MAAM,MAAM,GAAG,UAAA,CAAA,OAAA,CAAQ,IAAR,EAAc,SAAd,CAAf;AACA,SAAO,MAAP;AACD,CAlBD;;AAoBA,OAAA,CAAA,OAAA,GAAe,UAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar is_array_1 = require(\"./is-array\");\nvar is_function_1 = require(\"./is-function\");\nvar group_by_1 = require(\"./group-by\");\nvar groupToMap = function (data, condition) {\n    if (!condition) {\n        return {\n            0: data,\n        };\n    }\n    if (!is_function_1.default(condition)) {\n        var paramsCondition_1 = is_array_1.default(condition) ? condition : condition.replace(/\\s+/g, '').split('*');\n        condition = function (row) {\n            var unique = '_'; // 避免出现数字作为Key的情况，会进行按照数字的排序\n            for (var i = 0, l = paramsCondition_1.length; i < l; i++) {\n                unique += row[paramsCondition_1[i]] && row[paramsCondition_1[i]].toString();\n            }\n            return unique;\n        };\n    }\n    var groups = group_by_1.default(data, condition);\n    return groups;\n};\nexports.default = groupToMap;\n//# sourceMappingURL=group-to-map.js.map"]},"metadata":{},"sourceType":"script"}