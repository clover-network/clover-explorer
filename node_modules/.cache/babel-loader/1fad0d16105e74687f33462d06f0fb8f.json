{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nimport { __extends } from \"tslib\";\nimport createListFromArray from '../helper/createListFromArray';\nimport SeriesModel from '../../model/Series';\n\nvar ScatterSeriesModel = function (_super) {\n  __extends(ScatterSeriesModel, _super);\n\n  function ScatterSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = ScatterSeriesModel.type;\n    _this.hasSymbolVisual = true;\n    return _this;\n  }\n\n  ScatterSeriesModel.prototype.getInitialData = function (option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      useEncodeDefaulter: true\n    });\n  };\n\n  ScatterSeriesModel.prototype.getProgressive = function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      return this.option.large ? 5e3 : this.get('progressive');\n    }\n\n    return progressive;\n  };\n\n  ScatterSeriesModel.prototype.getProgressiveThreshold = function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      return this.option.large ? 1e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  };\n\n  ScatterSeriesModel.prototype.brushSelector = function (dataIndex, data, selectors) {\n    return selectors.point(data.getItemLayout(dataIndex));\n  };\n\n  ScatterSeriesModel.type = 'series.scatter';\n  ScatterSeriesModel.dependencies = ['grid', 'polar', 'geo', 'singleAxis', 'calendar'];\n  ScatterSeriesModel.defaultOption = {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    symbolSize: 10,\n    large: false,\n    largeThreshold: 2000,\n    itemStyle: {\n      opacity: 0.8\n    },\n    emphasis: {\n      scale: true\n    },\n    clip: true,\n    select: {\n      itemStyle: {\n        borderColor: '#212121'\n      }\n    }\n  };\n  return ScatterSeriesModel;\n}(SeriesModel);\n\nSeriesModel.registerClass(ScatterSeriesModel);\nexport default ScatterSeriesModel;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/esm/chart/scatter/ScatterSeries.js"],"names":["__extends","createListFromArray","SeriesModel","ScatterSeriesModel","_super","_this","apply","arguments","type","hasSymbolVisual","prototype","getInitialData","option","ecModel","getSource","useEncodeDefaulter","getProgressive","progressive","large","get","getProgressiveThreshold","progressiveThreshold","brushSelector","dataIndex","data","selectors","point","getItemLayout","dependencies","defaultOption","coordinateSystem","zlevel","z","legendHoverLink","symbolSize","largeThreshold","itemStyle","opacity","emphasis","scale","clip","select","borderColor","registerClass"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\nimport createListFromArray from '../helper/createListFromArray';\nimport SeriesModel from '../../model/Series';\n\nvar ScatterSeriesModel = function (_super) {\n  __extends(ScatterSeriesModel, _super);\n\n  function ScatterSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = ScatterSeriesModel.type;\n    _this.hasSymbolVisual = true;\n    return _this;\n  }\n\n  ScatterSeriesModel.prototype.getInitialData = function (option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      useEncodeDefaulter: true\n    });\n  };\n\n  ScatterSeriesModel.prototype.getProgressive = function () {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      return this.option.large ? 5e3 : this.get('progressive');\n    }\n\n    return progressive;\n  };\n\n  ScatterSeriesModel.prototype.getProgressiveThreshold = function () {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      return this.option.large ? 1e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  };\n\n  ScatterSeriesModel.prototype.brushSelector = function (dataIndex, data, selectors) {\n    return selectors.point(data.getItemLayout(dataIndex));\n  };\n\n  ScatterSeriesModel.type = 'series.scatter';\n  ScatterSeriesModel.dependencies = ['grid', 'polar', 'geo', 'singleAxis', 'calendar'];\n  ScatterSeriesModel.defaultOption = {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    symbolSize: 10,\n    large: false,\n    largeThreshold: 2000,\n    itemStyle: {\n      opacity: 0.8\n    },\n    emphasis: {\n      scale: true\n    },\n    clip: true,\n    select: {\n      itemStyle: {\n        borderColor: '#212121'\n      }\n    }\n  };\n  return ScatterSeriesModel;\n}(SeriesModel);\n\nSeriesModel.registerClass(ScatterSeriesModel);\nexport default ScatterSeriesModel;"]},"metadata":{},"sourceType":"module"}