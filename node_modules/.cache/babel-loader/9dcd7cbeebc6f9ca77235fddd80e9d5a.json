{"ast":null,"code":"var _jsxFileName = \"/Users/wanglijie/wanglijie/clover-defi-wallet/src/pages/AssetsMDetails/index.tsx\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Text } from 'rebass';\nimport AppBody from '../AppBody';\nimport { AutoColumn } from '../../components/Column';\nimport { RowBetween } from '../../components/Row';\nimport CloseBtn from \"../../assets/images/closeBtn.svg\";\nimport { Line } from '@ant-design/charts';\nimport { ResponsivePie } from '@nivo/pie';\nconst BodyWrapper = styled(AutoColumn)`\n`;\nconst HeadContainer = styled(RowBetween)`\n  margin-top: 50px;\n  padding: 0 20px;\n  height: 44px;\n`;\nexport default class AssetsMDetail extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.goBack = () => {\n      this.props.history.goBack();\n    };\n  }\n\n  render() {\n    const pieData = [{\n      type: 'Total assets',\n      value: 80\n    }, {\n      type: 'Total liabilities',\n      value: 20\n    }];\n    const pieConfig = {\n      width: 250,\n      height: 250,\n      appendPadding: 10,\n      data: pieData,\n      angleField: 'value',\n      colorField: 'type',\n      color: ['#FF7D30', '#FF589D'],\n      radius: 1,\n      innerRadius: 0.85,\n      label: {\n        content: ''\n      },\n      legend: {\n        layout: 'horizontal',\n        position: 'bottom'\n      },\n      interactions: [{\n        type: 'element-selected'\n      }, {\n        type: 'element-active'\n      }],\n      statistic: {\n        title: false,\n        content: {\n          style: {\n            whiteSpace: 'pre-wrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis'\n          },\n          formatter: function formatter() {\n            return '<div style=\"height: 130px; width: 130px; border-radius: 50%; display: flex; flex-direction: column; justify-content: center; background-color: #ffffff; box-shadow: 0px 0px 10px 4px rgba(255, 125, 48, 0.15);\">' + '<div style=\"color: #333333; font-size: 15px;\">$234995.300</div>' + '<span style=\"color: #999999; font-size: 12px; font-weight: normal; margin-top: 5px;\">Net assets</span>' + '</div>';\n          }\n        }\n      }\n    };\n    const lineData = [{\n      \"name\": \"TotalAssets\",\n      \"year\": \"2020.08.01\",\n      \"gdp\": 400.00\n    }, {\n      \"name\": \"TotalAssets\",\n      \"year\": \"2020.08.10\",\n      \"gdp\": 700.00\n    }, {\n      \"name\": \"TotalAssets\",\n      \"year\": \"2020.08.20\",\n      \"gdp\": 450.00\n    }, {\n      \"name\": \"TotalAssets\",\n      \"year\": \"2020.09.01\",\n      \"gdp\": 790.00\n    }, {\n      \"name\": \"TotalAssets\",\n      \"year\": \"2020.09.10\",\n      \"gdp\": 600.00\n    }, {\n      \"name\": \"TotalAssets\",\n      \"year\": \"2020.09.20\",\n      \"gdp\": 500.00\n    }, {\n      \"name\": \"TotalAssets\",\n      \"year\": \"2020.10.01\",\n      \"gdp\": 600.00\n    }, {\n      \"name\": \"TotalAssets\",\n      \"year\": \"2020.10.10\",\n      \"gdp\": 800.00\n    }, {\n      \"name\": \"TotalAssets\",\n      \"year\": \"2020.10.20\",\n      \"gdp\": 990.00\n    }, {\n      \"name\": \"TotalAssets\",\n      \"year\": \"2020.11.01\",\n      \"gdp\": 750.00\n    }, {\n      \"name\": \"TotalAssets\",\n      \"year\": \"2020.11.10\",\n      \"gdp\": 800.00\n    }, {\n      \"name\": \"NetAssets\",\n      \"year\": \"2020.08.01\",\n      \"gdp\": 300.00\n    }, {\n      \"name\": \"NetAssets\",\n      \"year\": \"2020.08.10\",\n      \"gdp\": 600.00\n    }, {\n      \"name\": \"NetAssets\",\n      \"year\": \"2020.08.20\",\n      \"gdp\": 350.00\n    }, {\n      \"name\": \"NetAssets\",\n      \"year\": \"2020.09.01\",\n      \"gdp\": 690.00\n    }, {\n      \"name\": \"NetAssets\",\n      \"year\": \"2020.09.10\",\n      \"gdp\": 500.00\n    }, {\n      \"name\": \"NetAssets\",\n      \"year\": \"2020.09.20\",\n      \"gdp\": 400.00\n    }, {\n      \"name\": \"NetAssets\",\n      \"year\": \"2020.10.01\",\n      \"gdp\": 500.00\n    }, {\n      \"name\": \"NetAssets\",\n      \"year\": \"2020.10.10\",\n      \"gdp\": 700.00\n    }, {\n      \"name\": \"NetAssets\",\n      \"year\": \"2020.10.20\",\n      \"gdp\": 890.00\n    }, {\n      \"name\": \"NetAssets\",\n      \"year\": \"2020.11.01\",\n      \"gdp\": 650.00\n    }, {\n      \"name\": \"NetAssets\",\n      \"year\": \"2020.11.10\",\n      \"gdp\": 700.00\n    }, {\n      \"name\": \"Total liabilities\",\n      \"year\": \"2020.08.01\",\n      \"gdp\": 200.00\n    }, {\n      \"name\": \"Total liabilities\",\n      \"year\": \"2020.08.10\",\n      \"gdp\": 500.00\n    }, {\n      \"name\": \"Total liabilities\",\n      \"year\": \"2020.08.20\",\n      \"gdp\": 250.00\n    }, {\n      \"name\": \"Total liabilities\",\n      \"year\": \"2020.09.01\",\n      \"gdp\": 590.00\n    }, {\n      \"name\": \"Total liabilities\",\n      \"year\": \"2020.09.10\",\n      \"gdp\": 400.00\n    }, {\n      \"name\": \"Total liabilities\",\n      \"year\": \"2020.09.20\",\n      \"gdp\": 300.00\n    }, {\n      \"name\": \"Total liabilities\",\n      \"year\": \"2020.10.01\",\n      \"gdp\": 400.00\n    }, {\n      \"name\": \"Total liabilities\",\n      \"year\": \"2020.10.10\",\n      \"gdp\": 600.00\n    }, {\n      \"name\": \"Total liabilities\",\n      \"year\": \"2020.10.20\",\n      \"gdp\": 790.00\n    }, {\n      \"name\": \"Total liabilities\",\n      \"year\": \"2020.11.01\",\n      \"gdp\": 550.00\n    }, {\n      \"name\": \"Total liabilities\",\n      \"year\": \"2020.11.10\",\n      \"gdp\": 600.00\n    }];\n    const lineConfig = {\n      data: lineData,\n      xField: 'year',\n      yField: 'gdp',\n      seriesField: 'name',\n      yAxis: {\n        label: {\n          formatter: function formatter(v) {\n            return ''.concat((v / 1000000000).toFixed(1), ' B');\n          }\n        }\n      },\n      legend: {\n        position: 'top'\n      },\n      smooth: true,\n      animation: {\n        appear: {\n          animation: 'path-in',\n          duration: 5000\n        }\n      }\n    };\n    const newData = [{\n      \"id\": \"php\",\n      \"label\": \"php\",\n      \"value\": 283,\n      \"color\": \"hsl(303, 70%, 50%)\"\n    }, {\n      \"id\": \"scala\",\n      \"label\": \"scala\",\n      \"value\": 187,\n      \"color\": \"hsl(294, 70%, 50%)\"\n    }, {\n      \"id\": \"erlang\",\n      \"label\": \"erlang\",\n      \"value\": 569,\n      \"color\": \"hsl(177, 70%, 50%)\"\n    }, {\n      \"id\": \"css\",\n      \"label\": \"css\",\n      \"value\": 406,\n      \"color\": \"hsl(106, 70%, 50%)\"\n    }, {\n      \"id\": \"javascript\",\n      \"label\": \"javascript\",\n      \"value\": 320,\n      \"color\": \"hsl(65, 70%, 50%)\"\n    }];\n    return /*#__PURE__*/React.createElement(AppBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BodyWrapper, {\n      gap: 'md',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(HeadContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"23px\",\n      fontWeight: \"bold\",\n      color: \"#333333\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 25\n      }\n    }, \"Assets\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: CloseBtn,\n      alt: \"\",\n      width: \"15px\",\n      height: \"15px\",\n      onClick: this.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"18px\",\n      fontWeight: \"500\",\n      color: \"#333333\",\n      marginLeft: \"25px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }\n    }, \"Assets distribution\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }\n    }, \"qwe\"), /*#__PURE__*/React.createElement(ResponsivePie, {\n      data: newData,\n      margin: {\n        top: 40,\n        right: 80,\n        bottom: 80,\n        left: 80\n      },\n      startAngle: 1,\n      innerRadius: 0.85,\n      padAngle: 3,\n      cornerRadius: 45,\n      colors: {\n        scheme: 'nivo'\n      },\n      borderWidth: 1,\n      borderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.2]]\n      },\n      radialLabelsSkipAngle: 10,\n      radialLabelsTextColor: \"#333333\",\n      radialLabelsLinkColor: {\n        from: 'color'\n      },\n      sliceLabelsSkipAngle: 10,\n      sliceLabelsTextColor: \"#333333\",\n      defs: [{\n        id: 'dots',\n        type: 'patternDots',\n        background: 'inherit',\n        color: 'rgba(255, 255, 255, 0.3)',\n        size: 4,\n        padding: 1,\n        stagger: true\n      }, {\n        id: 'lines',\n        type: 'patternLines',\n        background: 'inherit',\n        color: 'rgba(255, 255, 255, 0.3)',\n        rotation: -45,\n        lineWidth: 6,\n        spacing: 10\n      }],\n      fill: [{\n        match: {\n          id: 'ruby'\n        },\n        id: 'dots'\n      }, {\n        match: {\n          id: 'c'\n        },\n        id: 'dots'\n      }, {\n        match: {\n          id: 'go'\n        },\n        id: 'dots'\n      }, {\n        match: {\n          id: 'python'\n        },\n        id: 'dots'\n      }, {\n        match: {\n          id: 'scala'\n        },\n        id: 'lines'\n      }, {\n        match: {\n          id: 'lisp'\n        },\n        id: 'lines'\n      }, {\n        match: {\n          id: 'elixir'\n        },\n        id: 'lines'\n      }, {\n        match: {\n          id: 'javascript'\n        },\n        id: 'lines'\n      }],\n      legends: [{\n        anchor: 'bottom',\n        direction: 'row',\n        justify: false,\n        translateX: 0,\n        translateY: 56,\n        itemsSpacing: 0,\n        itemWidth: 100,\n        itemHeight: 18,\n        itemTextColor: '#999',\n        itemDirection: 'left-to-right',\n        itemOpacity: 1,\n        symbolSize: 18,\n        symbolShape: 'circle',\n        effects: [{\n          on: 'hover',\n          style: {\n            itemTextColor: '#000'\n          }\n        }]\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"18px\",\n      fontWeight: \"500\",\n      color: \"#333333\",\n      marginLeft: \"25px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 21\n      }\n    }, \"Assets trend\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Line, Object.assign({}, lineConfig, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 25\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/src/pages/AssetsMDetails/index.tsx"],"names":["React","Component","styled","Text","AppBody","AutoColumn","RowBetween","Line","ResponsivePie","BodyWrapper","HeadContainer","AssetsMDetail","goBack","props","history","render","pieData","type","value","pieConfig","width","height","appendPadding","data","angleField","colorField","color","radius","innerRadius","label","content","legend","layout","position","interactions","statistic","title","style","whiteSpace","overflow","textOverflow","formatter","lineData","lineConfig","xField","yField","seriesField","yAxis","v","concat","toFixed","smooth","animation","appear","duration","newData","CloseBtn","top","right","bottom","left","scheme","from","modifiers","id","background","size","padding","stagger","rotation","lineWidth","spacing","match","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemTextColor","itemDirection","itemOpacity","symbolSize","symbolShape","effects","on"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport styled from 'styled-components'\nimport { Text } from 'rebass'\nimport AppBody from '../AppBody'\nimport Column, { AutoColumn, ColumnCenter } from '../../components/Column'\nimport Row, {RowBetween, RowEnd} from '../../components/Row'\nimport CloseBtn from '../../assets/images/closeBtn.svg'\nimport { Pie, Line } from '@ant-design/charts';\nimport { ResponsivePie } from '@nivo/pie';\n\nconst BodyWrapper = styled(AutoColumn)`\n`;\n\nconst HeadContainer = styled(RowBetween)`\n  margin-top: 50px;\n  padding: 0 20px;\n  height: 44px;\n`;\n\nexport default class AssetsMDetail extends Component<any, any> {\n\n    goBack = () => {\n        this.props.history.goBack();\n    }\n    render() {\n        const pieData = [\n            {\n                type: 'Total assets',\n                value: 80,\n            },\n            {\n                type: 'Total liabilities',\n                value: 20,\n            },\n        ];\n        const pieConfig = {\n            width: 250,\n            height: 250,\n            appendPadding: 10,\n            data: pieData,\n            angleField: 'value',\n            colorField: 'type',\n            color: ['#FF7D30', '#FF589D'],\n            radius: 1,\n            innerRadius: 0.85,\n            label: {\n                content: '',\n            },\n            legend: {\n                layout: 'horizontal' as 'horizontal',\n                position: 'bottom' as 'bottom'\n            },\n            interactions: [{ type: 'element-selected' }, { type: 'element-active' }],\n            statistic: {\n                title: false as false,\n                content: {\n                    style: {\n                        whiteSpace: 'pre-wrap',\n                        overflow: 'hidden',\n                        textOverflow: 'ellipsis',\n                    },\n                    formatter: function formatter() {\n                        return '<div style=\"height: 130px; width: 130px; border-radius: 50%; display: flex; flex-direction: column; justify-content: center; background-color: #ffffff; box-shadow: 0px 0px 10px 4px rgba(255, 125, 48, 0.15);\">' +\n                            '<div style=\"color: #333333; font-size: 15px;\">$234995.300</div>' +\n                            '<span style=\"color: #999999; font-size: 12px; font-weight: normal; margin-top: 5px;\">Net assets</span>' +\n                            '</div>';\n                    },\n                },\n            },\n        };\n\n        const lineData = [\n            {\n                \"name\": \"TotalAssets\",\n                \"year\": \"2020.08.01\",\n                \"gdp\": 400.00\n            },\n            {\n                \"name\": \"TotalAssets\",\n                \"year\": \"2020.08.10\",\n                \"gdp\": 700.00\n            },\n            {\n                \"name\": \"TotalAssets\",\n                \"year\": \"2020.08.20\",\n                \"gdp\": 450.00\n            },\n            {\n                \"name\": \"TotalAssets\",\n                \"year\": \"2020.09.01\",\n                \"gdp\": 790.00\n            },\n            {\n                \"name\": \"TotalAssets\",\n                \"year\": \"2020.09.10\",\n                \"gdp\": 600.00\n            },\n            {\n                \"name\": \"TotalAssets\",\n                \"year\": \"2020.09.20\",\n                \"gdp\": 500.00\n            },\n            {\n                \"name\": \"TotalAssets\",\n                \"year\": \"2020.10.01\",\n                \"gdp\": 600.00\n            },\n            {\n                \"name\": \"TotalAssets\",\n                \"year\": \"2020.10.10\",\n                \"gdp\": 800.00\n            },\n            {\n                \"name\": \"TotalAssets\",\n                \"year\": \"2020.10.20\",\n                \"gdp\": 990.00\n            },\n            {\n                \"name\": \"TotalAssets\",\n                \"year\": \"2020.11.01\",\n                \"gdp\": 750.00\n            },\n            {\n                \"name\": \"TotalAssets\",\n                \"year\": \"2020.11.10\",\n                \"gdp\": 800.00\n            },\n            {\n                \"name\": \"NetAssets\",\n                \"year\": \"2020.08.01\",\n                \"gdp\": 300.00\n            },\n            {\n                \"name\": \"NetAssets\",\n                \"year\": \"2020.08.10\",\n                \"gdp\": 600.00\n            },\n            {\n                \"name\": \"NetAssets\",\n                \"year\": \"2020.08.20\",\n                \"gdp\": 350.00\n            },\n            {\n                \"name\": \"NetAssets\",\n                \"year\": \"2020.09.01\",\n                \"gdp\": 690.00\n            },\n            {\n                \"name\": \"NetAssets\",\n                \"year\": \"2020.09.10\",\n                \"gdp\": 500.00\n            },\n            {\n                \"name\": \"NetAssets\",\n                \"year\": \"2020.09.20\",\n                \"gdp\": 400.00\n            },\n            {\n                \"name\": \"NetAssets\",\n                \"year\": \"2020.10.01\",\n                \"gdp\": 500.00\n            },\n            {\n                \"name\": \"NetAssets\",\n                \"year\": \"2020.10.10\",\n                \"gdp\": 700.00\n            },\n            {\n                \"name\": \"NetAssets\",\n                \"year\": \"2020.10.20\",\n                \"gdp\": 890.00\n            },\n            {\n                \"name\": \"NetAssets\",\n                \"year\": \"2020.11.01\",\n                \"gdp\": 650.00\n            },\n            {\n                \"name\": \"NetAssets\",\n                \"year\": \"2020.11.10\",\n                \"gdp\": 700.00\n            },\n            {\n                \"name\": \"Total liabilities\",\n                \"year\": \"2020.08.01\",\n                \"gdp\": 200.00\n            },\n            {\n                \"name\": \"Total liabilities\",\n                \"year\": \"2020.08.10\",\n                \"gdp\": 500.00\n            },\n            {\n                \"name\": \"Total liabilities\",\n                \"year\": \"2020.08.20\",\n                \"gdp\": 250.00\n            },\n            {\n                \"name\": \"Total liabilities\",\n                \"year\": \"2020.09.01\",\n                \"gdp\": 590.00\n            },\n            {\n                \"name\": \"Total liabilities\",\n                \"year\": \"2020.09.10\",\n                \"gdp\": 400.00\n            },\n            {\n                \"name\": \"Total liabilities\",\n                \"year\": \"2020.09.20\",\n                \"gdp\": 300.00\n            },\n            {\n                \"name\": \"Total liabilities\",\n                \"year\": \"2020.10.01\",\n                \"gdp\": 400.00\n            },\n            {\n                \"name\": \"Total liabilities\",\n                \"year\": \"2020.10.10\",\n                \"gdp\": 600.00\n            },\n            {\n                \"name\": \"Total liabilities\",\n                \"year\": \"2020.10.20\",\n                \"gdp\": 790.00\n            },\n            {\n                \"name\": \"Total liabilities\",\n                \"year\": \"2020.11.01\",\n                \"gdp\": 550.00\n            },\n            {\n                \"name\": \"Total liabilities\",\n                \"year\": \"2020.11.10\",\n                \"gdp\": 600.00\n            },\n        ];\n        const lineConfig = {\n            data: lineData,\n            xField: 'year',\n            yField: 'gdp',\n            seriesField: 'name',\n            yAxis: {\n                label: {\n                    formatter: function formatter(v: any) {\n                        return ''.concat((v / 1000000000).toFixed(1), ' B');\n                    },\n                },\n            },\n            legend: { position: 'top' as 'top' },\n            smooth: true,\n            animation: {\n                appear: {\n                    animation: 'path-in',\n                    duration: 5000,\n                },\n            },\n        };\n\n        const newData = [\n            {\n                \"id\": \"php\",\n                \"label\": \"php\",\n                \"value\": 283,\n                \"color\": \"hsl(303, 70%, 50%)\"\n            },\n            {\n                \"id\": \"scala\",\n                \"label\": \"scala\",\n                \"value\": 187,\n                \"color\": \"hsl(294, 70%, 50%)\"\n            },\n            {\n                \"id\": \"erlang\",\n                \"label\": \"erlang\",\n                \"value\": 569,\n                \"color\": \"hsl(177, 70%, 50%)\"\n            },\n            {\n                \"id\": \"css\",\n                \"label\": \"css\",\n                \"value\": 406,\n                \"color\": \"hsl(106, 70%, 50%)\"\n            },\n            {\n                \"id\": \"javascript\",\n                \"label\": \"javascript\",\n                \"value\": 320,\n                \"color\": \"hsl(65, 70%, 50%)\"\n            }\n        ];\n\n        return (\n            <AppBody>\n                <BodyWrapper gap={'md'}>\n                    <HeadContainer>\n                        <Text fontSize='23px' fontWeight='bold' color='#333333'>Assets</Text>\n                        <img src={CloseBtn} alt=\"\" width='15px' height='15px' onClick={this.goBack} />\n                    </HeadContainer>\n                    <Text fontSize='18px' fontWeight='500' color='#333333' marginLeft='25px'>Assets distribution</Text>\n                    {/*<div>*/}\n                    {/*    <Pie {...pieConfig} />*/}\n                    {/*</div>*/}\n                    <div>\n                        qwe\n                    </div>\n                    <ResponsivePie\n                        data={newData}\n                        margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\n                        startAngle={1}\n                        innerRadius={0.85}\n                        padAngle={3}\n                        cornerRadius={45}\n                        colors={{ scheme: 'nivo' }}\n                        borderWidth={1}\n                        borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\n                        radialLabelsSkipAngle={10}\n                        radialLabelsTextColor=\"#333333\"\n                        radialLabelsLinkColor={{ from: 'color' }}\n                        sliceLabelsSkipAngle={10}\n                        sliceLabelsTextColor=\"#333333\"\n                        defs={[\n                            {\n                                id: 'dots',\n                                type: 'patternDots',\n                                background: 'inherit',\n                                color: 'rgba(255, 255, 255, 0.3)',\n                                size: 4,\n                                padding: 1,\n                                stagger: true\n                            },\n                            {\n                                id: 'lines',\n                                type: 'patternLines',\n                                background: 'inherit',\n                                color: 'rgba(255, 255, 255, 0.3)',\n                                rotation: -45,\n                                lineWidth: 6,\n                                spacing: 10\n                            }\n                        ]}\n                        fill={[\n                            {\n                                match: {\n                                    id: 'ruby'\n                                },\n                                id: 'dots'\n                            },\n                            {\n                                match: {\n                                    id: 'c'\n                                },\n                                id: 'dots'\n                            },\n                            {\n                                match: {\n                                    id: 'go'\n                                },\n                                id: 'dots'\n                            },\n                            {\n                                match: {\n                                    id: 'python'\n                                },\n                                id: 'dots'\n                            },\n                            {\n                                match: {\n                                    id: 'scala'\n                                },\n                                id: 'lines'\n                            },\n                            {\n                                match: {\n                                    id: 'lisp'\n                                },\n                                id: 'lines'\n                            },\n                            {\n                                match: {\n                                    id: 'elixir'\n                                },\n                                id: 'lines'\n                            },\n                            {\n                                match: {\n                                    id: 'javascript'\n                                },\n                                id: 'lines'\n                            }\n                        ]}\n                        legends={[\n                            {\n                                anchor: 'bottom',\n                                direction: 'row',\n                                justify: false,\n                                translateX: 0,\n                                translateY: 56,\n                                itemsSpacing: 0,\n                                itemWidth: 100,\n                                itemHeight: 18,\n                                itemTextColor: '#999',\n                                itemDirection: 'left-to-right',\n                                itemOpacity: 1,\n                                symbolSize: 18,\n                                symbolShape: 'circle',\n                                effects: [\n                                    {\n                                        on: 'hover',\n                                        style: {\n                                            itemTextColor: '#000'\n                                        }\n                                    }\n                                ]\n                            }\n                        ]}\n                    />\n                    <Text fontSize='18px' fontWeight='500' color='#333333' marginLeft='25px'>Assets trend</Text>\n\n                    <div>\n                        <Line {...lineConfig} />\n                    </div>\n\n                </BodyWrapper>\n            </AppBody>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}