{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseRadius = exports.parseStyle = exports.parsePattern = exports.parseRadialGradient = exports.parseLineGradient = void 0;\n\nvar util_1 = require(\"./util\");\n\nvar regexTags = /[MLHVQTCSAZ]([^MLHVQTCSAZ]*)/gi;\nvar regexDot = /[^\\s\\,]+/gi;\nvar regexLG = /^l\\s*\\(\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\nvar regexRG = /^r\\s*\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\nvar regexPR = /^p\\s*\\(\\s*([axyn])\\s*\\)\\s*(.*)/i;\nvar regexColorStop = /[\\d.]+:(#[^\\s]+|[^\\)]+\\))/gi;\n\nfunction addStop(steps, gradient) {\n  var arr = steps.match(regexColorStop);\n  util_1.each(arr, function (item) {\n    var itemArr = item.split(':');\n    gradient.addColorStop(itemArr[0], itemArr[1]);\n  });\n}\n/**\n * 将边和填充设置的颜色转换成线性渐变对象\n * @param {CanvasRenderingContext2D} context canvas 上下文\n * @param {IElement}                 element  图形元素\n * @param {string}                   gradientStr   颜色\n * @returns {any} 渐变对象\n */\n\n\nfunction parseLineGradient(context, element, gradientStr) {\n  var arr = regexLG.exec(gradientStr);\n  var angle = parseFloat(arr[1]) % 360 * (Math.PI / 180);\n  var steps = arr[2];\n  var box = element.getBBox();\n  var start;\n  var end;\n\n  if (angle >= 0 && angle < 1 / 2 * Math.PI) {\n    start = {\n      x: box.minX,\n      y: box.minY\n    };\n    end = {\n      x: box.maxX,\n      y: box.maxY\n    };\n  } else if (1 / 2 * Math.PI <= angle && angle < Math.PI) {\n    start = {\n      x: box.maxX,\n      y: box.minY\n    };\n    end = {\n      x: box.minX,\n      y: box.maxY\n    };\n  } else if (Math.PI <= angle && angle < 3 / 2 * Math.PI) {\n    start = {\n      x: box.maxX,\n      y: box.maxY\n    };\n    end = {\n      x: box.minX,\n      y: box.minY\n    };\n  } else {\n    start = {\n      x: box.minX,\n      y: box.maxY\n    };\n    end = {\n      x: box.maxX,\n      y: box.minY\n    };\n  }\n\n  var tanTheta = Math.tan(angle);\n  var tanTheta2 = tanTheta * tanTheta;\n  var x = (end.x - start.x + tanTheta * (end.y - start.y)) / (tanTheta2 + 1) + start.x;\n  var y = tanTheta * (end.x - start.x + tanTheta * (end.y - start.y)) / (tanTheta2 + 1) + start.y;\n  var gradient = context.createLinearGradient(start.x, start.y, x, y);\n  addStop(steps, gradient);\n  return gradient;\n}\n\nexports.parseLineGradient = parseLineGradient;\n/**\n * 将边和填充设置的颜色转换成圆形渐变对象\n * @param {CanvasRenderingContext2D} context canvas 上下文\n * @param {IElement}                 element  图形元素\n * @param {string}                   gradientStr   颜色\n * @returns {any} 渐变对象\n */\n\nfunction parseRadialGradient(context, element, gradientStr) {\n  var arr = regexRG.exec(gradientStr);\n  var fx = parseFloat(arr[1]);\n  var fy = parseFloat(arr[2]);\n  var fr = parseFloat(arr[3]);\n  var steps = arr[4]; // 环半径为0时，默认无渐变，取渐变序列的最后一个颜色\n\n  if (fr === 0) {\n    var colors = steps.match(regexColorStop);\n    return colors[colors.length - 1].split(':')[1];\n  }\n\n  var box = element.getBBox();\n  var width = box.maxX - box.minX;\n  var height = box.maxY - box.minY;\n  var r = Math.sqrt(width * width + height * height) / 2;\n  var gradient = context.createRadialGradient(box.minX + width * fx, box.minY + height * fy, 0, box.minX + width / 2, box.minY + height / 2, fr * r);\n  addStop(steps, gradient);\n  return gradient;\n}\n\nexports.parseRadialGradient = parseRadialGradient;\n/**\n * 边和填充设置的颜色转换成 pattern\n * @param {CanvasRenderingContext2D} context canvas 上下文\n * @param {IElement}                 element  图形元素\n * @param {string}                   patternStr   生成 pattern 的字符串\n */\n\nfunction parsePattern(context, element, patternStr) {\n  // 在转换过程中进行了缓存\n  if (element.get('patternSource') && element.get('patternSource') === patternStr) {\n    return element.get('pattern');\n  }\n\n  var pattern;\n  var img;\n  var arr = regexPR.exec(patternStr);\n  var repeat = arr[1];\n  var source = arr[2]; // Function to be called when pattern loads\n\n  function onload() {\n    // Create pattern\n    pattern = context.createPattern(img, repeat);\n    element.set('pattern', pattern); // be a cache\n\n    element.set('patternSource', patternStr);\n  }\n\n  switch (repeat) {\n    case 'a':\n      repeat = 'repeat';\n      break;\n\n    case 'x':\n      repeat = 'repeat-x';\n      break;\n\n    case 'y':\n      repeat = 'repeat-y';\n      break;\n\n    case 'n':\n      repeat = 'no-repeat';\n      break;\n\n    default:\n      repeat = 'no-repeat';\n  }\n\n  img = new Image(); // If source URL is not a data URL\n\n  if (!source.match(/^data:/i)) {\n    // Set crossOrigin for this image\n    img.crossOrigin = 'Anonymous';\n  }\n\n  img.src = source;\n\n  if (img.complete) {\n    onload();\n  } else {\n    img.onload = onload; // Fix onload() bug in IE9\n\n    img.src = img.src;\n  }\n\n  return pattern;\n}\n\nexports.parsePattern = parsePattern;\n\nfunction parseStyle(context, element, color) {\n  if (util_1.isString(color)) {\n    if (color[1] === '(' || color[2] === '(') {\n      if (color[0] === 'l') {\n        // regexLG.test(color)\n        return parseLineGradient(context, element, color);\n      }\n\n      if (color[0] === 'r') {\n        // regexRG.test(color)\n        return parseRadialGradient(context, element, color);\n      }\n\n      if (color[0] === 'p') {\n        // regexPR.test(color)\n        return parsePattern(context, element, color);\n      }\n    }\n\n    return color;\n  }\n}\n\nexports.parseStyle = parseStyle;\n\nfunction parseRadius(radius) {\n  var r1 = 0;\n  var r2 = 0;\n  var r3 = 0;\n  var r4 = 0;\n\n  if (util_1.isArray(radius)) {\n    if (radius.length === 1) {\n      r1 = r2 = r3 = r4 = radius[0];\n    } else if (radius.length === 2) {\n      r1 = r3 = radius[0];\n      r2 = r4 = radius[1];\n    } else if (radius.length === 3) {\n      r1 = radius[0];\n      r2 = r4 = radius[1];\n      r3 = radius[2];\n    } else {\n      r1 = radius[0];\n      r2 = radius[1];\n      r3 = radius[2];\n      r4 = radius[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = radius;\n  }\n\n  return [r1, r2, r3, r4];\n}\n\nexports.parseRadius = parseRadius;","map":{"version":3,"sources":["../../src/util/parse.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseRadius = exports.parseStyle = exports.parsePattern = exports.parseRadialGradient = exports.parseLineGradient = void 0;\nvar util_1 = require(\"./util\");\nvar regexTags = /[MLHVQTCSAZ]([^MLHVQTCSAZ]*)/gi;\nvar regexDot = /[^\\s\\,]+/gi;\nvar regexLG = /^l\\s*\\(\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\nvar regexRG = /^r\\s*\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\nvar regexPR = /^p\\s*\\(\\s*([axyn])\\s*\\)\\s*(.*)/i;\nvar regexColorStop = /[\\d.]+:(#[^\\s]+|[^\\)]+\\))/gi;\nfunction addStop(steps, gradient) {\n    var arr = steps.match(regexColorStop);\n    util_1.each(arr, function (item) {\n        var itemArr = item.split(':');\n        gradient.addColorStop(itemArr[0], itemArr[1]);\n    });\n}\n/**\n * 将边和填充设置的颜色转换成线性渐变对象\n * @param {CanvasRenderingContext2D} context canvas 上下文\n * @param {IElement}                 element  图形元素\n * @param {string}                   gradientStr   颜色\n * @returns {any} 渐变对象\n */\nfunction parseLineGradient(context, element, gradientStr) {\n    var arr = regexLG.exec(gradientStr);\n    var angle = (parseFloat(arr[1]) % 360) * (Math.PI / 180);\n    var steps = arr[2];\n    var box = element.getBBox();\n    var start;\n    var end;\n    if (angle >= 0 && angle < (1 / 2) * Math.PI) {\n        start = {\n            x: box.minX,\n            y: box.minY,\n        };\n        end = {\n            x: box.maxX,\n            y: box.maxY,\n        };\n    }\n    else if ((1 / 2) * Math.PI <= angle && angle < Math.PI) {\n        start = {\n            x: box.maxX,\n            y: box.minY,\n        };\n        end = {\n            x: box.minX,\n            y: box.maxY,\n        };\n    }\n    else if (Math.PI <= angle && angle < (3 / 2) * Math.PI) {\n        start = {\n            x: box.maxX,\n            y: box.maxY,\n        };\n        end = {\n            x: box.minX,\n            y: box.minY,\n        };\n    }\n    else {\n        start = {\n            x: box.minX,\n            y: box.maxY,\n        };\n        end = {\n            x: box.maxX,\n            y: box.minY,\n        };\n    }\n    var tanTheta = Math.tan(angle);\n    var tanTheta2 = tanTheta * tanTheta;\n    var x = (end.x - start.x + tanTheta * (end.y - start.y)) / (tanTheta2 + 1) + start.x;\n    var y = (tanTheta * (end.x - start.x + tanTheta * (end.y - start.y))) / (tanTheta2 + 1) + start.y;\n    var gradient = context.createLinearGradient(start.x, start.y, x, y);\n    addStop(steps, gradient);\n    return gradient;\n}\nexports.parseLineGradient = parseLineGradient;\n/**\n * 将边和填充设置的颜色转换成圆形渐变对象\n * @param {CanvasRenderingContext2D} context canvas 上下文\n * @param {IElement}                 element  图形元素\n * @param {string}                   gradientStr   颜色\n * @returns {any} 渐变对象\n */\nfunction parseRadialGradient(context, element, gradientStr) {\n    var arr = regexRG.exec(gradientStr);\n    var fx = parseFloat(arr[1]);\n    var fy = parseFloat(arr[2]);\n    var fr = parseFloat(arr[3]);\n    var steps = arr[4];\n    // 环半径为0时，默认无渐变，取渐变序列的最后一个颜色\n    if (fr === 0) {\n        var colors = steps.match(regexColorStop);\n        return colors[colors.length - 1].split(':')[1];\n    }\n    var box = element.getBBox();\n    var width = box.maxX - box.minX;\n    var height = box.maxY - box.minY;\n    var r = Math.sqrt(width * width + height * height) / 2;\n    var gradient = context.createRadialGradient(box.minX + width * fx, box.minY + height * fy, 0, box.minX + width / 2, box.minY + height / 2, fr * r);\n    addStop(steps, gradient);\n    return gradient;\n}\nexports.parseRadialGradient = parseRadialGradient;\n/**\n * 边和填充设置的颜色转换成 pattern\n * @param {CanvasRenderingContext2D} context canvas 上下文\n * @param {IElement}                 element  图形元素\n * @param {string}                   patternStr   生成 pattern 的字符串\n */\nfunction parsePattern(context, element, patternStr) {\n    // 在转换过程中进行了缓存\n    if (element.get('patternSource') && element.get('patternSource') === patternStr) {\n        return element.get('pattern');\n    }\n    var pattern;\n    var img;\n    var arr = regexPR.exec(patternStr);\n    var repeat = arr[1];\n    var source = arr[2];\n    // Function to be called when pattern loads\n    function onload() {\n        // Create pattern\n        pattern = context.createPattern(img, repeat);\n        element.set('pattern', pattern); // be a cache\n        element.set('patternSource', patternStr);\n    }\n    switch (repeat) {\n        case 'a':\n            repeat = 'repeat';\n            break;\n        case 'x':\n            repeat = 'repeat-x';\n            break;\n        case 'y':\n            repeat = 'repeat-y';\n            break;\n        case 'n':\n            repeat = 'no-repeat';\n            break;\n        default:\n            repeat = 'no-repeat';\n    }\n    img = new Image();\n    // If source URL is not a data URL\n    if (!source.match(/^data:/i)) {\n        // Set crossOrigin for this image\n        img.crossOrigin = 'Anonymous';\n    }\n    img.src = source;\n    if (img.complete) {\n        onload();\n    }\n    else {\n        img.onload = onload;\n        // Fix onload() bug in IE9\n        img.src = img.src;\n    }\n    return pattern;\n}\nexports.parsePattern = parsePattern;\nfunction parseStyle(context, element, color) {\n    if (util_1.isString(color)) {\n        if (color[1] === '(' || color[2] === '(') {\n            if (color[0] === 'l') {\n                // regexLG.test(color)\n                return parseLineGradient(context, element, color);\n            }\n            if (color[0] === 'r') {\n                // regexRG.test(color)\n                return parseRadialGradient(context, element, color);\n            }\n            if (color[0] === 'p') {\n                // regexPR.test(color)\n                return parsePattern(context, element, color);\n            }\n        }\n        return color;\n    }\n}\nexports.parseStyle = parseStyle;\nfunction parseRadius(radius) {\n    var r1 = 0;\n    var r2 = 0;\n    var r3 = 0;\n    var r4 = 0;\n    if (util_1.isArray(radius)) {\n        if (radius.length === 1) {\n            r1 = r2 = r3 = r4 = radius[0];\n        }\n        else if (radius.length === 2) {\n            r1 = r3 = radius[0];\n            r2 = r4 = radius[1];\n        }\n        else if (radius.length === 3) {\n            r1 = radius[0];\n            r2 = r4 = radius[1];\n            r3 = radius[2];\n        }\n        else {\n            r1 = radius[0];\n            r2 = radius[1];\n            r3 = radius[2];\n            r4 = radius[3];\n        }\n    }\n    else {\n        r1 = r2 = r3 = r4 = radius;\n    }\n    return [r1, r2, r3, r4];\n}\nexports.parseRadius = parseRadius;\n//# sourceMappingURL=parse.js.map"]},"metadata":{},"sourceType":"script"}