{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport { Text, TextInput, TouchableWithoutFeedback, View } from 'react-native';\nimport Icon from '../icon';\nimport { WithTheme } from '../style';\nimport TextareaItemStyles from './style/index';\n\nfunction fixControlledValue(value) {\n  if (typeof value === 'undefined' || value === null) {\n    return '';\n  }\n\n  return value;\n}\n\nvar TextAreaItem = function (_React$Component) {\n  _inherits(TextAreaItem, _React$Component);\n\n  function TextAreaItem(props) {\n    _classCallCheck(this, TextAreaItem);\n\n    var _this = _possibleConstructorReturn(this, (TextAreaItem.__proto__ || Object.getPrototypeOf(TextAreaItem)).call(this, props));\n\n    _this.onChange = function (event) {\n      var text = event.nativeEvent.text;\n      var onChange = _this.props.onChange;\n\n      _this.setState({\n        inputCount: text.length\n      });\n\n      if (onChange) {\n        onChange(text);\n      }\n    };\n\n    _this.onContentSizeChange = function (theme) {\n      return function (event) {\n        var height = void 0;\n        var _this$props = _this.props,\n            autoHeight = _this$props.autoHeight,\n            onContentSizeChange = _this$props.onContentSizeChange;\n        var rows = _this.props.rows;\n\n        if (autoHeight) {\n          height = event.nativeEvent.contentSize.height;\n        } else if (rows > 1) {\n          height = 6 * rows * 4;\n        } else {\n          height = theme.list_item_height;\n        }\n\n        _this.setState({\n          height: height\n        });\n\n        if (onContentSizeChange) {\n          onContentSizeChange(event);\n        }\n      };\n    };\n\n    _this.getHeight = function (theme) {\n      var rows = _this.props.rows;\n\n      if (_this.state.height) {\n        return _this.state.height;\n      }\n\n      return rows !== undefined && rows > 1 ? 6 * rows * 4 : theme.list_item_height;\n    };\n\n    _this.state = {\n      inputCount: fixControlledValue(props.value || props.defaultValue).length\n    };\n    return _this;\n  }\n\n  _createClass(TextAreaItem, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _a = this.props,\n          rows = _a.rows,\n          error = _a.error,\n          clear = _a.clear,\n          count = _a.count,\n          autoHeight = _a.autoHeight,\n          last = _a.last,\n          onErrorClick = _a.onErrorClick,\n          styles = _a.styles,\n          style = _a.style,\n          restProps = __rest(_a, [\"rows\", \"error\", \"clear\", \"count\", \"autoHeight\", \"last\", \"onErrorClick\", \"styles\", \"style\"]);\n\n      var value = restProps.value,\n          defaultValue = restProps.defaultValue;\n      var inputCount = this.state.inputCount;\n      return React.createElement(WithTheme, {\n        themeStyles: TextareaItemStyles,\n        styles: styles\n      }, function (s, theme) {\n        var valueProps = void 0;\n\n        if ('value' in _this2.props) {\n          valueProps = {\n            value: fixControlledValue(value)\n          };\n        } else {\n          valueProps = {\n            defaultValue: defaultValue\n          };\n        }\n\n        var containerStyle = {\n          borderBottomWidth: last ? 0 : theme.border_width_sm\n        };\n        var textareaStyle = {\n          color: error ? '#f50' : theme.color_text_base,\n          paddingRight: error ? 2 * theme.h_spacing_lg : 0\n        };\n        var maxLength = count > 0 ? count : undefined;\n        return React.createElement(View, {\n          style: [s.container, containerStyle, {\n            position: 'relative'\n          }]\n        }, React.createElement(TextInput, _extends({\n          clearButtonMode: clear ? 'while-editing' : 'never',\n          underlineColorAndroid: 'transparent',\n          style: [s.input, textareaStyle, {\n            height: Math.max(45, _this2.getHeight(theme))\n          }, style]\n        }, restProps, valueProps, {\n          onChange: function onChange(event) {\n            return _this2.onChange(event);\n          },\n          onContentSizeChange: _this2.onContentSizeChange(theme),\n          multiline: rows > 1 || autoHeight,\n          numberOfLines: rows,\n          maxLength: maxLength,\n          ref: function ref(_ref) {\n            return _this2.textAreaRef = _ref;\n          }\n        })), error ? React.createElement(TouchableWithoutFeedback, {\n          onPress: onErrorClick\n        }, React.createElement(View, {\n          style: [s.errorIcon]\n        }, React.createElement(Icon, {\n          name: 'info-circle',\n          style: {\n            color: theme.brand_error\n          }\n        }))) : null, rows > 1 && count > 0 ? React.createElement(View, {\n          style: [s.count]\n        }, React.createElement(Text, {\n          style: s.countText\n        }, inputCount, ' / ', count)) : null);\n      });\n    }\n  }]);\n\n  return TextAreaItem;\n}(React.Component);\n\nexport default TextAreaItem;\nTextAreaItem.defaultProps = {\n  onChange: function onChange() {},\n  onFocus: function onFocus() {},\n  onBlur: function onBlur() {},\n  onErrorClick: function onErrorClick() {},\n  clear: true,\n  error: false,\n  editable: true,\n  rows: 1,\n  count: 0,\n  keyboardType: 'default',\n  autoHeight: false,\n  last: false\n};","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@ant-design/react-native/es/textarea-item/index.js"],"names":["_extends","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","Text","TextInput","TouchableWithoutFeedback","View","Icon","WithTheme","TextareaItemStyles","fixControlledValue","value","TextAreaItem","_React$Component","props","_this","__proto__","getPrototypeOf","onChange","event","text","nativeEvent","setState","inputCount","onContentSizeChange","theme","height","_this$props","autoHeight","rows","contentSize","list_item_height","getHeight","state","undefined","defaultValue","key","render","_this2","_a","error","clear","count","last","onErrorClick","styles","style","restProps","createElement","themeStyles","valueProps","containerStyle","borderBottomWidth","border_width_sm","textareaStyle","color","color_text_base","paddingRight","h_spacing_lg","maxLength","container","position","clearButtonMode","underlineColorAndroid","input","Math","max","multiline","numberOfLines","ref","_ref","textAreaRef","onPress","errorIcon","name","brand_error","countText","Component","defaultProps","onFocus","onBlur","editable","keyboardType"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nvar __rest = this && this.__rest || function (s, e) {\n    var t = {};\n    for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    }if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n};\nimport React from 'react';\nimport { Text, TextInput, TouchableWithoutFeedback, View } from 'react-native';\nimport Icon from '../icon';\nimport { WithTheme } from '../style';\nimport TextareaItemStyles from './style/index';\nfunction fixControlledValue(value) {\n    if (typeof value === 'undefined' || value === null) {\n        return '';\n    }\n    return value;\n}\n\nvar TextAreaItem = function (_React$Component) {\n    _inherits(TextAreaItem, _React$Component);\n\n    function TextAreaItem(props) {\n        _classCallCheck(this, TextAreaItem);\n\n        var _this = _possibleConstructorReturn(this, (TextAreaItem.__proto__ || Object.getPrototypeOf(TextAreaItem)).call(this, props));\n\n        _this.onChange = function (event) {\n            var text = event.nativeEvent.text;\n            var onChange = _this.props.onChange;\n\n            _this.setState({\n                inputCount: text.length\n            });\n            if (onChange) {\n                onChange(text);\n            }\n        };\n        _this.onContentSizeChange = function (theme) {\n            return function (event) {\n                var height = void 0;\n                var _this$props = _this.props,\n                    autoHeight = _this$props.autoHeight,\n                    onContentSizeChange = _this$props.onContentSizeChange;\n\n                var rows = _this.props.rows;\n                if (autoHeight) {\n                    height = event.nativeEvent.contentSize.height;\n                } else if (rows > 1) {\n                    height = 6 * rows * 4;\n                } else {\n                    height = theme.list_item_height;\n                }\n                _this.setState({\n                    height: height\n                });\n                if (onContentSizeChange) {\n                    onContentSizeChange(event);\n                }\n            };\n        };\n        _this.getHeight = function (theme) {\n            var rows = _this.props.rows;\n\n            if (_this.state.height) {\n                return _this.state.height;\n            }\n            return rows !== undefined && rows > 1 ? 6 * rows * 4 : theme.list_item_height;\n        };\n        _this.state = {\n            inputCount: fixControlledValue(props.value || props.defaultValue).length\n        };\n        return _this;\n    }\n\n    _createClass(TextAreaItem, [{\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var _a = this.props,\n                rows = _a.rows,\n                error = _a.error,\n                clear = _a.clear,\n                count = _a.count,\n                autoHeight = _a.autoHeight,\n                last = _a.last,\n                onErrorClick = _a.onErrorClick,\n                styles = _a.styles,\n                style = _a.style,\n                restProps = __rest(_a, [\"rows\", \"error\", \"clear\", \"count\", \"autoHeight\", \"last\", \"onErrorClick\", \"styles\", \"style\"]);var value = restProps.value,\n                defaultValue = restProps.defaultValue;\n            var inputCount = this.state.inputCount;\n\n            return React.createElement(\n                WithTheme,\n                { themeStyles: TextareaItemStyles, styles: styles },\n                function (s, theme) {\n                    var valueProps = void 0;\n                    if ('value' in _this2.props) {\n                        valueProps = {\n                            value: fixControlledValue(value)\n                        };\n                    } else {\n                        valueProps = {\n                            defaultValue: defaultValue\n                        };\n                    }\n                    var containerStyle = {\n                        borderBottomWidth: last ? 0 : theme.border_width_sm\n                    };\n                    var textareaStyle = {\n                        color: error ? '#f50' : theme.color_text_base,\n                        paddingRight: error ? 2 * theme.h_spacing_lg : 0\n                    };\n                    var maxLength = count > 0 ? count : undefined;\n                    return React.createElement(\n                        View,\n                        { style: [s.container, containerStyle, { position: 'relative' }] },\n                        React.createElement(TextInput, _extends({ clearButtonMode: clear ? 'while-editing' : 'never', underlineColorAndroid: 'transparent', style: [s.input, textareaStyle, { height: Math.max(45, _this2.getHeight(theme)) }, style] }, restProps, valueProps, { onChange: function onChange(event) {\n                                return _this2.onChange(event);\n                            }, onContentSizeChange: _this2.onContentSizeChange(theme), multiline: rows > 1 || autoHeight, numberOfLines: rows, maxLength: maxLength, ref: function ref(_ref) {\n                                return _this2.textAreaRef = _ref;\n                            } })),\n                        error ? React.createElement(\n                            TouchableWithoutFeedback,\n                            { onPress: onErrorClick },\n                            React.createElement(\n                                View,\n                                { style: [s.errorIcon] },\n                                React.createElement(Icon, { name: 'info-circle', style: {\n                                        color: theme.brand_error\n                                    } })\n                            )\n                        ) : null,\n                        rows > 1 && count > 0 ? React.createElement(\n                            View,\n                            { style: [s.count] },\n                            React.createElement(\n                                Text,\n                                { style: s.countText },\n                                inputCount,\n                                ' / ',\n                                count\n                            )\n                        ) : null\n                    );\n                }\n            );\n        }\n    }]);\n\n    return TextAreaItem;\n}(React.Component);\n\nexport default TextAreaItem;\n\nTextAreaItem.defaultProps = {\n    onChange: function onChange() {},\n    onFocus: function onFocus() {},\n    onBlur: function onBlur() {},\n    onErrorClick: function onErrorClick() {},\n\n    clear: true,\n    error: false,\n    editable: true,\n    rows: 1,\n    count: 0,\n    keyboardType: 'default',\n    autoHeight: false,\n    last: false\n};"]},"metadata":{},"sourceType":"module"}