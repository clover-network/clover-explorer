{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar WeakMap_1 = require(\"zrender/lib/core/WeakMap\");\n\nvar LRU_1 = require(\"zrender/lib/core/LRU\");\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar number_1 = require(\"./number\");\n\nvar symbol_1 = require(\"./symbol\");\n\nvar graphic_1 = require(\"zrender/lib/canvas/graphic\");\n\nvar decalMap = new WeakMap_1[\"default\"]();\nvar decalCache = new LRU_1[\"default\"](100);\nvar decalKeys = ['symbol', 'symbolSize', 'symbolKeepAspect', 'color', 'backgroundColor', 'dashArrayX', 'dashArrayY', 'dashLineOffset', 'maxTileWidth', 'maxTileHeight'];\n\nfunction createOrUpdatePatternFromDecal(decalObject, api) {\n  if (decalObject === 'none') {\n    return null;\n  }\n\n  var dpr = api.getDevicePixelRatio();\n  var zr = api.getZr();\n  var isSVG = zr.painter.type === 'svg';\n\n  if (decalObject.dirty) {\n    decalMap[\"delete\"](decalObject);\n  }\n\n  var oldPattern = decalMap.get(decalObject);\n\n  if (oldPattern) {\n    return oldPattern;\n  }\n\n  var decalOpt = util_1.defaults(decalObject, {\n    symbol: 'rect',\n    symbolSize: 1,\n    symbolKeepAspect: true,\n    color: 'rgba(0, 0, 0, 0.2)',\n    backgroundColor: null,\n    dashArrayX: 5,\n    dashArrayY: 5,\n    dashLineOffset: 0,\n    rotation: 0,\n    maxTileWidth: 512,\n    maxTileHeight: 512\n  });\n\n  if (decalOpt.backgroundColor === 'none') {\n    decalOpt.backgroundColor = null;\n  }\n\n  var pattern = {\n    repeat: 'repeat'\n  };\n  setPatternnSource(pattern);\n  pattern.rotation = decalOpt.rotation;\n  pattern.scaleX = pattern.scaleY = isSVG ? 1 : 1 / dpr;\n  decalMap.set(decalObject, pattern);\n  decalObject.dirty = false;\n  return pattern;\n\n  function setPatternnSource(pattern) {\n    var keys = [dpr];\n    var isValidKey = true;\n\n    for (var i = 0; i < decalKeys.length; ++i) {\n      var value = decalOpt[decalKeys[i]];\n      var valueType = typeof value;\n\n      if (value != null && !util_1.isArray(value) && valueType !== 'string' && valueType !== 'number' && valueType !== 'boolean') {\n        isValidKey = false;\n        break;\n      }\n\n      keys.push(value);\n    }\n\n    var cacheKey;\n\n    if (isValidKey) {\n      cacheKey = keys.join(',') + (isSVG ? '-svg' : '');\n      var cache = decalCache.get(cacheKey);\n\n      if (cache) {\n        isSVG ? pattern.svgElement = cache : pattern.image = cache;\n      }\n    }\n\n    var dashArrayX = normalizeDashArrayX(decalOpt.dashArrayX);\n    var dashArrayY = normalizeDashArrayY(decalOpt.dashArrayY);\n    var symbolArray = normalizeSymbolArray(decalOpt.symbol);\n    var lineBlockLengthsX = getLineBlockLengthX(dashArrayX);\n    var lineBlockLengthY = getLineBlockLengthY(dashArrayY);\n    var canvas = !isSVG && util_1.createCanvas();\n    var svgRoot = isSVG && zr.painter.createSVGElement('g');\n    var pSize = getPatternSize();\n    var ctx;\n\n    if (canvas) {\n      canvas.width = pSize.width * dpr;\n      canvas.height = pSize.height * dpr;\n      ctx = canvas.getContext('2d');\n    }\n\n    brushDecal();\n\n    if (isValidKey) {\n      decalCache.put(cacheKey, canvas || svgRoot);\n    }\n\n    pattern.image = canvas;\n    pattern.svgElement = svgRoot;\n    pattern.svgWidth = pSize.width;\n    pattern.svgHeight = pSize.height;\n\n    function getPatternSize() {\n      var width = 1;\n\n      for (var i = 0, xlen = lineBlockLengthsX.length; i < xlen; ++i) {\n        width = number_1.getLeastCommonMultiple(width, lineBlockLengthsX[i]);\n      }\n\n      var symbolRepeats = 1;\n\n      for (var i = 0, xlen = symbolArray.length; i < xlen; ++i) {\n        symbolRepeats = number_1.getLeastCommonMultiple(symbolRepeats, symbolArray[i].length);\n      }\n\n      width *= symbolRepeats;\n      var height = lineBlockLengthY * lineBlockLengthsX.length * symbolArray.length;\n\n      if (process.env.NODE_ENV !== 'production') {\n        var warn = function (attrName) {\n          console.warn(\"Calculated decal size is greater than \" + attrName + \" due to decal option settings so \" + attrName + \" is used for the decal size. Please consider changing the decal option to make a smaller decal or set \" + attrName + \" to be larger to avoid incontinuity.\");\n        };\n\n        if (width > decalOpt.maxTileWidth) {\n          warn('maxTileWidth');\n        }\n\n        if (height > decalOpt.maxTileHeight) {\n          warn('maxTileHeight');\n        }\n      }\n\n      return {\n        width: Math.max(1, Math.min(width, decalOpt.maxTileWidth)),\n        height: Math.max(1, Math.min(height, decalOpt.maxTileHeight))\n      };\n    }\n\n    function brushDecal() {\n      if (ctx) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        if (decalOpt.backgroundColor) {\n          ctx.fillStyle = decalOpt.backgroundColor;\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n        }\n      }\n\n      var ySum = 0;\n\n      for (var i = 0; i < dashArrayY.length; ++i) {\n        ySum += dashArrayY[i];\n      }\n\n      if (ySum <= 0) {\n        return;\n      }\n\n      var y = -lineBlockLengthY;\n      var yId = 0;\n      var yIdTotal = 0;\n      var xId0 = 0;\n\n      while (y < pSize.height) {\n        if (yId % 2 === 0) {\n          var symbolYId = yIdTotal / 2 % symbolArray.length;\n          var x = 0;\n          var xId1 = 0;\n          var xId1Total = 0;\n\n          while (x < pSize.width * 2) {\n            var xSum = 0;\n\n            for (var i = 0; i < dashArrayX[xId0].length; ++i) {\n              xSum += dashArrayX[xId0][i];\n            }\n\n            if (xSum <= 0) {\n              break;\n            }\n\n            if (xId1 % 2 === 0) {\n              var size = (1 - decalOpt.symbolSize) * 0.5;\n              var left = x + dashArrayX[xId0][xId1] * size;\n              var top_1 = y + dashArrayY[yId] * size;\n              var width = dashArrayX[xId0][xId1] * decalOpt.symbolSize;\n              var height = dashArrayY[yId] * decalOpt.symbolSize;\n              var symbolXId = xId1Total / 2 % symbolArray[symbolYId].length;\n              brushSymbol(left, top_1, width, height, symbolArray[symbolYId][symbolXId]);\n            }\n\n            x += dashArrayX[xId0][xId1];\n            ++xId1Total;\n            ++xId1;\n\n            if (xId1 === dashArrayX[xId0].length) {\n              xId1 = 0;\n            }\n          }\n\n          ++xId0;\n\n          if (xId0 === dashArrayX.length) {\n            xId0 = 0;\n          }\n        }\n\n        y += dashArrayY[yId];\n        ++yIdTotal;\n        ++yId;\n\n        if (yId === dashArrayY.length) {\n          yId = 0;\n        }\n      }\n\n      function brushSymbol(x, y, width, height, symbolType) {\n        var scale = isSVG ? 1 : dpr;\n        var symbol = symbol_1.createSymbol(symbolType, x * scale, y * scale, width * scale, height * scale, decalOpt.color, decalOpt.symbolKeepAspect);\n\n        if (isSVG) {\n          svgRoot.appendChild(zr.painter.paintOne(symbol));\n        } else {\n          graphic_1.brushSingle(ctx, symbol);\n        }\n      }\n    }\n  }\n}\n\nexports.createOrUpdatePatternFromDecal = createOrUpdatePatternFromDecal;\n\nfunction normalizeSymbolArray(symbol) {\n  if (!symbol || symbol.length === 0) {\n    return [['rect']];\n  }\n\n  if (typeof symbol === 'string') {\n    return [[symbol]];\n  }\n\n  var isAllString = true;\n\n  for (var i = 0; i < symbol.length; ++i) {\n    if (typeof symbol[i] !== 'string') {\n      isAllString = false;\n      break;\n    }\n  }\n\n  if (isAllString) {\n    return normalizeSymbolArray([symbol]);\n  }\n\n  var result = [];\n\n  for (var i = 0; i < symbol.length; ++i) {\n    if (typeof symbol[i] === 'string') {\n      result.push([symbol[i]]);\n    } else {\n      result.push(symbol[i]);\n    }\n  }\n\n  return result;\n}\n\nfunction normalizeDashArrayX(dash) {\n  if (!dash || dash.length === 0) {\n    return [[0, 0]];\n  }\n\n  if (typeof dash === 'number') {\n    var dashValue = Math.ceil(dash);\n    return [[dashValue, dashValue]];\n  }\n\n  var isAllNumber = true;\n\n  for (var i = 0; i < dash.length; ++i) {\n    if (typeof dash[i] !== 'number') {\n      isAllNumber = false;\n      break;\n    }\n  }\n\n  if (isAllNumber) {\n    return normalizeDashArrayX([dash]);\n  }\n\n  var result = [];\n\n  for (var i = 0; i < dash.length; ++i) {\n    if (typeof dash[i] === 'number') {\n      var dashValue = Math.ceil(dash[i]);\n      result.push([dashValue, dashValue]);\n    } else {\n      var dashValue = util_1.map(dash[i], function (n) {\n        return Math.ceil(n);\n      });\n\n      if (dashValue.length % 2 === 1) {\n        result.push(dashValue.concat(dashValue));\n      } else {\n        result.push(dashValue);\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction normalizeDashArrayY(dash) {\n  if (!dash || typeof dash === 'object' && dash.length === 0) {\n    return [0, 0];\n  }\n\n  if (typeof dash === 'number') {\n    var dashValue_1 = Math.ceil(dash);\n    return [dashValue_1, dashValue_1];\n  }\n\n  var dashValue = util_1.map(dash, function (n) {\n    return Math.ceil(n);\n  });\n  return dash.length % 2 ? dashValue.concat(dashValue) : dashValue;\n}\n\nfunction getLineBlockLengthX(dash) {\n  return util_1.map(dash, function (line) {\n    return getLineBlockLengthY(line);\n  });\n}\n\nfunction getLineBlockLengthY(dash) {\n  var blockLength = 0;\n\n  for (var i = 0; i < dash.length; ++i) {\n    blockLength += dash[i];\n  }\n\n  if (dash.length % 2 === 1) {\n    return blockLength * 2;\n  }\n\n  return blockLength;\n}","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/util/decal.js"],"names":["exports","__esModule","WeakMap_1","require","LRU_1","util_1","number_1","symbol_1","graphic_1","decalMap","decalCache","decalKeys","createOrUpdatePatternFromDecal","decalObject","api","dpr","getDevicePixelRatio","zr","getZr","isSVG","painter","type","dirty","oldPattern","get","decalOpt","defaults","symbol","symbolSize","symbolKeepAspect","color","backgroundColor","dashArrayX","dashArrayY","dashLineOffset","rotation","maxTileWidth","maxTileHeight","pattern","repeat","setPatternnSource","scaleX","scaleY","set","keys","isValidKey","i","length","value","valueType","isArray","push","cacheKey","join","cache","svgElement","image","normalizeDashArrayX","normalizeDashArrayY","symbolArray","normalizeSymbolArray","lineBlockLengthsX","getLineBlockLengthX","lineBlockLengthY","getLineBlockLengthY","canvas","createCanvas","svgRoot","createSVGElement","pSize","getPatternSize","ctx","width","height","getContext","brushDecal","put","svgWidth","svgHeight","xlen","getLeastCommonMultiple","symbolRepeats","process","env","NODE_ENV","warn","attrName","console","Math","max","min","clearRect","fillStyle","fillRect","ySum","y","yId","yIdTotal","xId0","symbolYId","x","xId1","xId1Total","xSum","size","left","top_1","symbolXId","brushSymbol","symbolType","scale","createSymbol","appendChild","paintOne","brushSingle","isAllString","result","dash","dashValue","ceil","isAllNumber","map","n","concat","dashValue_1","line","blockLength"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar WeakMap_1 = require(\"zrender/lib/core/WeakMap\");\n\nvar LRU_1 = require(\"zrender/lib/core/LRU\");\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar number_1 = require(\"./number\");\n\nvar symbol_1 = require(\"./symbol\");\n\nvar graphic_1 = require(\"zrender/lib/canvas/graphic\");\n\nvar decalMap = new WeakMap_1[\"default\"]();\nvar decalCache = new LRU_1[\"default\"](100);\nvar decalKeys = ['symbol', 'symbolSize', 'symbolKeepAspect', 'color', 'backgroundColor', 'dashArrayX', 'dashArrayY', 'dashLineOffset', 'maxTileWidth', 'maxTileHeight'];\n\nfunction createOrUpdatePatternFromDecal(decalObject, api) {\n  if (decalObject === 'none') {\n    return null;\n  }\n\n  var dpr = api.getDevicePixelRatio();\n  var zr = api.getZr();\n  var isSVG = zr.painter.type === 'svg';\n\n  if (decalObject.dirty) {\n    decalMap[\"delete\"](decalObject);\n  }\n\n  var oldPattern = decalMap.get(decalObject);\n\n  if (oldPattern) {\n    return oldPattern;\n  }\n\n  var decalOpt = util_1.defaults(decalObject, {\n    symbol: 'rect',\n    symbolSize: 1,\n    symbolKeepAspect: true,\n    color: 'rgba(0, 0, 0, 0.2)',\n    backgroundColor: null,\n    dashArrayX: 5,\n    dashArrayY: 5,\n    dashLineOffset: 0,\n    rotation: 0,\n    maxTileWidth: 512,\n    maxTileHeight: 512\n  });\n\n  if (decalOpt.backgroundColor === 'none') {\n    decalOpt.backgroundColor = null;\n  }\n\n  var pattern = {\n    repeat: 'repeat'\n  };\n  setPatternnSource(pattern);\n  pattern.rotation = decalOpt.rotation;\n  pattern.scaleX = pattern.scaleY = isSVG ? 1 : 1 / dpr;\n  decalMap.set(decalObject, pattern);\n  decalObject.dirty = false;\n  return pattern;\n\n  function setPatternnSource(pattern) {\n    var keys = [dpr];\n    var isValidKey = true;\n\n    for (var i = 0; i < decalKeys.length; ++i) {\n      var value = decalOpt[decalKeys[i]];\n      var valueType = typeof value;\n\n      if (value != null && !util_1.isArray(value) && valueType !== 'string' && valueType !== 'number' && valueType !== 'boolean') {\n        isValidKey = false;\n        break;\n      }\n\n      keys.push(value);\n    }\n\n    var cacheKey;\n\n    if (isValidKey) {\n      cacheKey = keys.join(',') + (isSVG ? '-svg' : '');\n      var cache = decalCache.get(cacheKey);\n\n      if (cache) {\n        isSVG ? pattern.svgElement = cache : pattern.image = cache;\n      }\n    }\n\n    var dashArrayX = normalizeDashArrayX(decalOpt.dashArrayX);\n    var dashArrayY = normalizeDashArrayY(decalOpt.dashArrayY);\n    var symbolArray = normalizeSymbolArray(decalOpt.symbol);\n    var lineBlockLengthsX = getLineBlockLengthX(dashArrayX);\n    var lineBlockLengthY = getLineBlockLengthY(dashArrayY);\n    var canvas = !isSVG && util_1.createCanvas();\n    var svgRoot = isSVG && zr.painter.createSVGElement('g');\n    var pSize = getPatternSize();\n    var ctx;\n\n    if (canvas) {\n      canvas.width = pSize.width * dpr;\n      canvas.height = pSize.height * dpr;\n      ctx = canvas.getContext('2d');\n    }\n\n    brushDecal();\n\n    if (isValidKey) {\n      decalCache.put(cacheKey, canvas || svgRoot);\n    }\n\n    pattern.image = canvas;\n    pattern.svgElement = svgRoot;\n    pattern.svgWidth = pSize.width;\n    pattern.svgHeight = pSize.height;\n\n    function getPatternSize() {\n      var width = 1;\n\n      for (var i = 0, xlen = lineBlockLengthsX.length; i < xlen; ++i) {\n        width = number_1.getLeastCommonMultiple(width, lineBlockLengthsX[i]);\n      }\n\n      var symbolRepeats = 1;\n\n      for (var i = 0, xlen = symbolArray.length; i < xlen; ++i) {\n        symbolRepeats = number_1.getLeastCommonMultiple(symbolRepeats, symbolArray[i].length);\n      }\n\n      width *= symbolRepeats;\n      var height = lineBlockLengthY * lineBlockLengthsX.length * symbolArray.length;\n\n      if (process.env.NODE_ENV !== 'production') {\n        var warn = function (attrName) {\n          console.warn(\"Calculated decal size is greater than \" + attrName + \" due to decal option settings so \" + attrName + \" is used for the decal size. Please consider changing the decal option to make a smaller decal or set \" + attrName + \" to be larger to avoid incontinuity.\");\n        };\n\n        if (width > decalOpt.maxTileWidth) {\n          warn('maxTileWidth');\n        }\n\n        if (height > decalOpt.maxTileHeight) {\n          warn('maxTileHeight');\n        }\n      }\n\n      return {\n        width: Math.max(1, Math.min(width, decalOpt.maxTileWidth)),\n        height: Math.max(1, Math.min(height, decalOpt.maxTileHeight))\n      };\n    }\n\n    function brushDecal() {\n      if (ctx) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        if (decalOpt.backgroundColor) {\n          ctx.fillStyle = decalOpt.backgroundColor;\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n        }\n      }\n\n      var ySum = 0;\n\n      for (var i = 0; i < dashArrayY.length; ++i) {\n        ySum += dashArrayY[i];\n      }\n\n      if (ySum <= 0) {\n        return;\n      }\n\n      var y = -lineBlockLengthY;\n      var yId = 0;\n      var yIdTotal = 0;\n      var xId0 = 0;\n\n      while (y < pSize.height) {\n        if (yId % 2 === 0) {\n          var symbolYId = yIdTotal / 2 % symbolArray.length;\n          var x = 0;\n          var xId1 = 0;\n          var xId1Total = 0;\n\n          while (x < pSize.width * 2) {\n            var xSum = 0;\n\n            for (var i = 0; i < dashArrayX[xId0].length; ++i) {\n              xSum += dashArrayX[xId0][i];\n            }\n\n            if (xSum <= 0) {\n              break;\n            }\n\n            if (xId1 % 2 === 0) {\n              var size = (1 - decalOpt.symbolSize) * 0.5;\n              var left = x + dashArrayX[xId0][xId1] * size;\n              var top_1 = y + dashArrayY[yId] * size;\n              var width = dashArrayX[xId0][xId1] * decalOpt.symbolSize;\n              var height = dashArrayY[yId] * decalOpt.symbolSize;\n              var symbolXId = xId1Total / 2 % symbolArray[symbolYId].length;\n              brushSymbol(left, top_1, width, height, symbolArray[symbolYId][symbolXId]);\n            }\n\n            x += dashArrayX[xId0][xId1];\n            ++xId1Total;\n            ++xId1;\n\n            if (xId1 === dashArrayX[xId0].length) {\n              xId1 = 0;\n            }\n          }\n\n          ++xId0;\n\n          if (xId0 === dashArrayX.length) {\n            xId0 = 0;\n          }\n        }\n\n        y += dashArrayY[yId];\n        ++yIdTotal;\n        ++yId;\n\n        if (yId === dashArrayY.length) {\n          yId = 0;\n        }\n      }\n\n      function brushSymbol(x, y, width, height, symbolType) {\n        var scale = isSVG ? 1 : dpr;\n        var symbol = symbol_1.createSymbol(symbolType, x * scale, y * scale, width * scale, height * scale, decalOpt.color, decalOpt.symbolKeepAspect);\n\n        if (isSVG) {\n          svgRoot.appendChild(zr.painter.paintOne(symbol));\n        } else {\n          graphic_1.brushSingle(ctx, symbol);\n        }\n      }\n    }\n  }\n}\n\nexports.createOrUpdatePatternFromDecal = createOrUpdatePatternFromDecal;\n\nfunction normalizeSymbolArray(symbol) {\n  if (!symbol || symbol.length === 0) {\n    return [['rect']];\n  }\n\n  if (typeof symbol === 'string') {\n    return [[symbol]];\n  }\n\n  var isAllString = true;\n\n  for (var i = 0; i < symbol.length; ++i) {\n    if (typeof symbol[i] !== 'string') {\n      isAllString = false;\n      break;\n    }\n  }\n\n  if (isAllString) {\n    return normalizeSymbolArray([symbol]);\n  }\n\n  var result = [];\n\n  for (var i = 0; i < symbol.length; ++i) {\n    if (typeof symbol[i] === 'string') {\n      result.push([symbol[i]]);\n    } else {\n      result.push(symbol[i]);\n    }\n  }\n\n  return result;\n}\n\nfunction normalizeDashArrayX(dash) {\n  if (!dash || dash.length === 0) {\n    return [[0, 0]];\n  }\n\n  if (typeof dash === 'number') {\n    var dashValue = Math.ceil(dash);\n    return [[dashValue, dashValue]];\n  }\n\n  var isAllNumber = true;\n\n  for (var i = 0; i < dash.length; ++i) {\n    if (typeof dash[i] !== 'number') {\n      isAllNumber = false;\n      break;\n    }\n  }\n\n  if (isAllNumber) {\n    return normalizeDashArrayX([dash]);\n  }\n\n  var result = [];\n\n  for (var i = 0; i < dash.length; ++i) {\n    if (typeof dash[i] === 'number') {\n      var dashValue = Math.ceil(dash[i]);\n      result.push([dashValue, dashValue]);\n    } else {\n      var dashValue = util_1.map(dash[i], function (n) {\n        return Math.ceil(n);\n      });\n\n      if (dashValue.length % 2 === 1) {\n        result.push(dashValue.concat(dashValue));\n      } else {\n        result.push(dashValue);\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction normalizeDashArrayY(dash) {\n  if (!dash || typeof dash === 'object' && dash.length === 0) {\n    return [0, 0];\n  }\n\n  if (typeof dash === 'number') {\n    var dashValue_1 = Math.ceil(dash);\n    return [dashValue_1, dashValue_1];\n  }\n\n  var dashValue = util_1.map(dash, function (n) {\n    return Math.ceil(n);\n  });\n  return dash.length % 2 ? dashValue.concat(dashValue) : dashValue;\n}\n\nfunction getLineBlockLengthX(dash) {\n  return util_1.map(dash, function (line) {\n    return getLineBlockLengthY(line);\n  });\n}\n\nfunction getLineBlockLengthY(dash) {\n  var blockLength = 0;\n\n  for (var i = 0; i < dash.length; ++i) {\n    blockLength += dash[i];\n  }\n\n  if (dash.length % 2 === 1) {\n    return blockLength * 2;\n  }\n\n  return blockLength;\n}"]},"metadata":{},"sourceType":"script"}