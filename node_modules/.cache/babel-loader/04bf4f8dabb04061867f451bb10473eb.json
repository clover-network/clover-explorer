{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List_1 = require(\"../../data/List\");\n\nvar createDimensions_1 = require(\"../../data/helper/createDimensions\");\n\nvar dimensionHelper_1 = require(\"../../data/helper/dimensionHelper\");\n\nvar model_1 = require(\"../../util/model\");\n\nvar CoordinateSystem_1 = require(\"../../CoordinateSystem\");\n\nvar referHelper_1 = require(\"../../model/referHelper\");\n\nvar Source_1 = require(\"../../data/Source\");\n\nvar dataStackHelper_1 = require(\"../../data/helper/dataStackHelper\");\n\nvar sourceHelper_1 = require(\"../../data/helper/sourceHelper\");\n\nvar types_1 = require(\"../../util/types\");\n\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source_1.isSourceInstance(source)) {\n    source = Source_1.createSourceFromSeriesDataOption(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem_1[\"default\"].get(coordSysName);\n  var coordSysInfo = referHelper_1.getCoordSysInfoBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysInfo && coordSysInfo.coordSysDims) {\n    coordSysDimDefs = zrUtil.map(coordSysInfo.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysInfo.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = dimensionHelper_1.getDimensionTypeByAxis(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var useEncodeDefaulter = opt.useEncodeDefaulter;\n  var dimInfoList = createDimensions_1[\"default\"](source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord,\n    encodeDefaulter: zrUtil.isFunction(useEncodeDefaulter) ? useEncodeDefaulter : useEncodeDefaulter ? zrUtil.curry(sourceHelper_1.makeSeriesEncodeForAxisCoordSys, coordSysDimDefs, seriesModel) : null\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysInfo && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysInfo.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = dataStackHelper_1.enableDataStack(seriesModel, dimInfoList);\n  var list = new List_1[\"default\"](dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === types_1.SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(model_1.getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nexports[\"default\"] = createListFromArray;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/chart/helper/createListFromArray.js"],"names":["exports","__esModule","zrUtil","require","List_1","createDimensions_1","dimensionHelper_1","model_1","CoordinateSystem_1","referHelper_1","Source_1","dataStackHelper_1","sourceHelper_1","types_1","createListFromArray","source","seriesModel","opt","isSourceInstance","createSourceFromSeriesDataOption","coordSysName","get","registeredCoordSys","coordSysInfo","getCoordSysInfoBySeries","coordSysDimDefs","coordSysDims","map","dim","dimInfo","name","axisModel","axisMap","axisType","type","getDimensionTypeByAxis","getDimensionsInfo","dimensions","slice","useEncodeDefaulter","dimInfoList","coordDimensions","generateCoord","encodeDefaulter","isFunction","curry","makeSeriesEncodeForAxisCoordSys","firstCategoryDimIndex","hasNameEncode","each","dimIndex","coordDim","categoryAxisModel","categoryAxisMap","ordinalMeta","getOrdinalMeta","otherDims","itemName","stackCalculationInfo","enableDataStack","list","setCalculationInfo","dimValueGetter","isNeedCompleteOrdinalData","itemOpt","dimName","dataIndex","defaultDimValueGetter","hasItemOption","initData","sourceFormat","SOURCE_FORMAT_ORIGINAL","sampleItem","firstDataNotNull","data","isArray","getDataItemValue","i","length"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List_1 = require(\"../../data/List\");\n\nvar createDimensions_1 = require(\"../../data/helper/createDimensions\");\n\nvar dimensionHelper_1 = require(\"../../data/helper/dimensionHelper\");\n\nvar model_1 = require(\"../../util/model\");\n\nvar CoordinateSystem_1 = require(\"../../CoordinateSystem\");\n\nvar referHelper_1 = require(\"../../model/referHelper\");\n\nvar Source_1 = require(\"../../data/Source\");\n\nvar dataStackHelper_1 = require(\"../../data/helper/dataStackHelper\");\n\nvar sourceHelper_1 = require(\"../../data/helper/sourceHelper\");\n\nvar types_1 = require(\"../../util/types\");\n\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source_1.isSourceInstance(source)) {\n    source = Source_1.createSourceFromSeriesDataOption(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem_1[\"default\"].get(coordSysName);\n  var coordSysInfo = referHelper_1.getCoordSysInfoBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysInfo && coordSysInfo.coordSysDims) {\n    coordSysDimDefs = zrUtil.map(coordSysInfo.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysInfo.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = dimensionHelper_1.getDimensionTypeByAxis(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var useEncodeDefaulter = opt.useEncodeDefaulter;\n  var dimInfoList = createDimensions_1[\"default\"](source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord,\n    encodeDefaulter: zrUtil.isFunction(useEncodeDefaulter) ? useEncodeDefaulter : useEncodeDefaulter ? zrUtil.curry(sourceHelper_1.makeSeriesEncodeForAxisCoordSys, coordSysDimDefs, seriesModel) : null\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysInfo && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysInfo.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = dataStackHelper_1.enableDataStack(seriesModel, dimInfoList);\n  var list = new List_1[\"default\"](dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === types_1.SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(model_1.getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nexports[\"default\"] = createListFromArray;"]},"metadata":{},"sourceType":"script"}