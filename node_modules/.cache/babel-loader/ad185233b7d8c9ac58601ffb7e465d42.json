{"ast":null,"code":"import React from 'react';\nimport { ActionSheetIOS, Platform, Share } from 'react-native';\nimport Portal from '../portal';\nimport ActionSheetAndroidContainer from './AndroidContainer';\nvar instance = void 0;\nexport default {\n  showActionSheetWithOptions: function showActionSheetWithOptions(config, callback) {\n    if (Platform.OS === 'ios') {\n      ActionSheetIOS.showActionSheetWithOptions(config, callback);\n      return;\n    }\n\n    var key = Portal.add(React.createElement(ActionSheetAndroidContainer, {\n      visible: true,\n      ref: function ref(_ref) {\n        return instance = _ref;\n      },\n      onAnimationEnd: function onAnimationEnd(visible) {\n        if (!visible) {\n          Portal.remove(key);\n        }\n      },\n      config: config,\n      callback: callback\n    }));\n  },\n  showShareActionSheetWithOptions: function showShareActionSheetWithOptions(config, failureCallback, successCallback) {\n    var content = {};\n    var options = {};\n    content.message = config.message;\n\n    if (config.title) {\n      content.title = config.title;\n      options.dialogTitle = config.title;\n    }\n\n    if (config.url) {\n      content.url = config.url;\n    }\n\n    if (config.excludedActivityTypes) {\n      options.excludedActivityTypes = config.excludedActivityTypes;\n    }\n\n    if (config.tintColor) {\n      options.tintColor = config.tintColor;\n    } // promise is not called in Android\n    // https://github.com/facebook/react-native/blob/master/Libraries/Share/Share.js#L80\n\n\n    Share.share(content, options).then(function (result) {\n      if (result.action === Share.sharedAction) {\n        // completed successCallback(completed, method)\n        if (successCallback) {\n          successCallback(true, result.activityType);\n        }\n      } else if (result.action === Share.dismissedAction) {\n        if (successCallback) {\n          successCallback(false);\n        }\n      }\n    })['catch'](function (error) {\n      if (failureCallback) {\n        failureCallback(error);\n      }\n    });\n  },\n  close: function close() {\n    if (instance) {\n      instance.close();\n    }\n  }\n};","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@ant-design/react-native/es/action-sheet/index.js"],"names":["React","ActionSheetIOS","Platform","Share","Portal","ActionSheetAndroidContainer","instance","showActionSheetWithOptions","config","callback","OS","key","add","createElement","visible","ref","_ref","onAnimationEnd","remove","showShareActionSheetWithOptions","failureCallback","successCallback","content","options","message","title","dialogTitle","url","excludedActivityTypes","tintColor","share","then","result","action","sharedAction","activityType","dismissedAction","error","close"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ActionSheetIOS, Platform, Share } from 'react-native';\nimport Portal from '../portal';\nimport ActionSheetAndroidContainer from './AndroidContainer';\nvar instance = void 0;\nexport default {\n    showActionSheetWithOptions: function showActionSheetWithOptions(config, callback) {\n        if (Platform.OS === 'ios') {\n            ActionSheetIOS.showActionSheetWithOptions(config, callback);\n            return;\n        }\n        var key = Portal.add(React.createElement(ActionSheetAndroidContainer, { visible: true, ref: function ref(_ref) {\n                return instance = _ref;\n            }, onAnimationEnd: function onAnimationEnd(visible) {\n                if (!visible) {\n                    Portal.remove(key);\n                }\n            }, config: config, callback: callback }));\n    },\n    showShareActionSheetWithOptions: function showShareActionSheetWithOptions(config, failureCallback, successCallback) {\n        var content = {};\n        var options = {};\n        content.message = config.message;\n        if (config.title) {\n            content.title = config.title;\n            options.dialogTitle = config.title;\n        }\n        if (config.url) {\n            content.url = config.url;\n        }\n        if (config.excludedActivityTypes) {\n            options.excludedActivityTypes = config.excludedActivityTypes;\n        }\n        if (config.tintColor) {\n            options.tintColor = config.tintColor;\n        }\n        // promise is not called in Android\n        // https://github.com/facebook/react-native/blob/master/Libraries/Share/Share.js#L80\n        Share.share(content, options).then(function (result) {\n            if (result.action === Share.sharedAction) {\n                // completed successCallback(completed, method)\n                if (successCallback) {\n                    successCallback(true, result.activityType);\n                }\n            } else if (result.action === Share.dismissedAction) {\n                if (successCallback) {\n                    successCallback(false);\n                }\n            }\n        })['catch'](function (error) {\n            if (failureCallback) {\n                failureCallback(error);\n            }\n        });\n    },\n    close: function close() {\n        if (instance) {\n            instance.close();\n        }\n    }\n};"]},"metadata":{},"sourceType":"module"}