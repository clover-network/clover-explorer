{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nimport Layout from '../../layout';\nimport LayoutWorker from '../../layout/worker/layout.worker';\nimport { LAYOUT_MESSAGE } from '../../layout/worker/layoutConst';\nimport { isNaN } from '../../util/base'; // eslint-disable-next-line @typescript-eslint/no-implied-eval\n\nvar mockRaf = function mockRaf(cb) {\n  return setTimeout(cb, 16);\n};\n\nvar mockCaf = function mockCaf(reqId) {\n  return clearTimeout(reqId);\n};\n\nvar helper = {\n  // pollyfill\n  requestAnimationFrame: function requestAnimationFrame(callback) {\n    var fn = window.requestAnimationFrame || window.webkitRequestAnimationFrame || mockRaf;\n    return fn(callback);\n  },\n  cancelAnimationFrame: function cancelAnimationFrame(requestId) {\n    var fn = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || mockCaf;\n    return fn(requestId);\n  }\n};\n\nvar LayoutController =\n/** @class */\nfunction () {\n  function LayoutController(graph) {\n    this.graph = graph;\n    this.layoutCfg = graph.get('layout') || {};\n    this.layoutType = this.layoutCfg.type;\n    this.worker = null;\n    this.workerData = {};\n    this.initLayout();\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  LayoutController.prototype.initLayout = function () {// no data before rendering\n  }; // get layout worker and create one if not exists\n\n\n  LayoutController.prototype.getWorker = function () {\n    if (this.worker) {\n      return this.worker;\n    }\n\n    if (typeof Worker === 'undefined') {\n      // 如果当前浏览器不支持 web worker，则不使用 web worker\n      console.warn('Web worker is not supported in current browser.');\n      this.worker = null;\n    } else {\n      this.worker = new LayoutWorker();\n    }\n\n    return this.worker;\n  }; // stop layout worker\n\n\n  LayoutController.prototype.stopWorker = function () {\n    var workerData = this.workerData;\n\n    if (!this.worker) {\n      return;\n    }\n\n    this.worker.terminate();\n    this.worker = null; // 重新开始新的布局之前，先取消之前布局的requestAnimationFrame。\n\n    if (workerData.requestId) {\n      helper.cancelAnimationFrame(workerData.requestId);\n      workerData.requestId = null;\n    }\n\n    if (workerData.requestId2) {\n      helper.cancelAnimationFrame(workerData.requestId2);\n      workerData.requestId2 = null;\n    }\n  };\n\n  LayoutController.prototype.getLayoutType = function () {\n    return this.layoutCfg.type;\n  };\n  /**\n   * @param {function} success callback\n   * @return {boolean} 是否使用web worker布局\n   */\n\n\n  LayoutController.prototype.layout = function (success) {\n    var graph = this.graph;\n    this.data = this.setDataFromGraph();\n    var nodes = this.data.nodes;\n\n    if (!nodes) {\n      return false;\n    }\n\n    var width = graph.get('width');\n    var height = graph.get('height');\n    var layoutCfg = {};\n    Object.assign(layoutCfg, {\n      width: width,\n      height: height,\n      center: [width / 2, height / 2]\n    }, this.layoutCfg);\n    this.layoutCfg = layoutCfg;\n    var hasLayoutType = !!this.layoutType;\n    var layoutMethod = this.layoutMethod;\n\n    if (layoutMethod) {\n      layoutMethod.destroy();\n    }\n\n    graph.emit('beforelayout');\n    var allHavePos = this.initPositions(layoutCfg.center, nodes);\n    this.stopWorker();\n\n    if (layoutCfg.workerEnabled && this.layoutWithWorker(this.data, success)) {\n      // 如果启用布局web worker并且浏览器支持web worker，用web worker布局。否则回退到不用web worker布局。\n      return true;\n    }\n\n    if (this.layoutType === 'force' || this.layoutType === 'g6force') {\n      var onTick_1 = layoutCfg.onTick;\n\n      var tick = function tick() {\n        if (onTick_1) {\n          onTick_1();\n        }\n\n        graph.refreshPositions();\n      };\n\n      layoutCfg.tick = tick;\n      var onLayoutEnd_1 = layoutCfg.onLayoutEnd;\n\n      layoutCfg.onLayoutEnd = function () {\n        if (onLayoutEnd_1) {\n          onLayoutEnd_1();\n        }\n\n        graph.emit('afterlayout');\n      };\n    } else if (this.layoutType === 'comboForce') {\n      layoutCfg.comboTrees = graph.get('comboTrees');\n    }\n\n    var enableTick = false;\n\n    if (this.layoutType !== undefined) {\n      try {\n        layoutMethod = new Layout[this.layoutType](layoutCfg);\n      } catch (e) {\n        console.warn(\"The layout method: \" + this.layoutType + \" does not exist! Please specify it first.\");\n        return false;\n      } // 是否需要迭代的方式完成布局。这里是来自布局对象的实例属性，是由布局的定义者在布局类定义的。\n\n\n      enableTick = layoutMethod.enableTick;\n\n      if (enableTick) {\n        var onTick_2 = layoutCfg.onTick,\n            onLayoutEnd_2 = layoutCfg.onLayoutEnd;\n\n        var tick = function tick() {\n          if (onTick_2) {\n            onTick_2();\n          }\n\n          graph.refreshPositions();\n        };\n\n        layoutMethod.tick = tick;\n\n        var onLayoutEndNew = function onLayoutEndNew() {\n          if (onLayoutEnd_2) {\n            onLayoutEnd_2();\n          }\n\n          graph.emit('afterlayout');\n        };\n\n        layoutMethod.onLayoutEnd = onLayoutEndNew;\n      }\n\n      layoutMethod.init(this.data); // 若存在节点没有位置信息，且没有设置 layout，在 initPositions 中 random 给出了所有节点的位置，不需要再次执行 random 布局\n      // 所有节点都有位置信息，且指定了 layout，则执行布局（代表不是第一次进行布局）\n\n      if (hasLayoutType) {\n        layoutMethod.execute();\n      }\n\n      this.layoutMethod = layoutMethod;\n    }\n\n    if ((hasLayoutType || !allHavePos) && this.layoutType !== 'force' && !enableTick) {\n      graph.emit('afterlayout');\n      this.refreshLayout();\n    }\n\n    return false;\n  };\n  /**\n   * layout with web worker\n   * @param {object} data graph data\n   * @param {function} success callback function\n   * @return {boolean} 是否支持web worker\n   */\n\n\n  LayoutController.prototype.layoutWithWorker = function (data, success) {\n    var _this = this;\n\n    var nodes = data.nodes,\n        edges = data.edges;\n\n    var _a = this,\n        layoutCfg = _a.layoutCfg,\n        graph = _a.graph;\n\n    var worker = this.getWorker(); // 每次worker message event handler调用之间的共享数据，会被修改。\n\n    var workerData = this.workerData;\n\n    if (!worker) {\n      return false;\n    }\n\n    workerData.requestId = null;\n    workerData.requestId2 = null;\n    workerData.currentTick = null;\n    workerData.currentTickData = null; // NOTE: postMessage的message参数里面不能包含函数，否则postMessage会报错，\n    // 例如：'function could not be cloned'。\n    // 详情参考：https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\n    // 所以这里需要把过滤layoutCfg里的函数字段过滤掉。\n\n    var filteredLayoutCfg = filterObject(layoutCfg, function (value) {\n      return typeof value !== 'function';\n    });\n    worker.postMessage({\n      type: LAYOUT_MESSAGE.RUN,\n      nodes: nodes,\n      edges: edges,\n      layoutCfg: filteredLayoutCfg\n    });\n\n    worker.onmessage = function (event) {\n      _this.handleWorkerMessage(event, data, success);\n    };\n\n    return true;\n  }; // success callback will be called when updating graph positions for the first time.\n\n\n  LayoutController.prototype.handleWorkerMessage = function (event, data, success) {\n    var _a = this,\n        graph = _a.graph,\n        workerData = _a.workerData,\n        layoutCfg = _a.layoutCfg;\n\n    var eventData = event.data;\n    var type = eventData.type;\n\n    var onTick = function onTick() {\n      if (layoutCfg.onTick) {\n        layoutCfg.onTick();\n      }\n    };\n\n    var onLayoutEnd = function onLayoutEnd() {\n      if (layoutCfg.onLayoutEnd) {\n        layoutCfg.onLayoutEnd();\n      }\n\n      graph.emit('afterlayout');\n    };\n\n    switch (type) {\n      case LAYOUT_MESSAGE.TICK:\n        workerData.currentTick = eventData.currentTick;\n        workerData.currentTickData = eventData;\n\n        if (!workerData.requestId) {\n          workerData.requestId = helper.requestAnimationFrame(function requestId() {\n            updateLayoutPosition(data, eventData);\n            graph.refreshPositions();\n            onTick();\n\n            if (eventData.currentTick === 1 && success) {\n              success();\n            }\n\n            if (eventData.currentTick === eventData.totalTicks) {\n              // 如果是最后一次tick\n              onLayoutEnd();\n            } else if (workerData.currentTick === eventData.totalTicks) {\n              // 注意这里workerData.currentTick可能已经不再是前面赋值时候的值了，\n              // 因为在requestAnimationFrame等待时间里，可能产生新的tick。\n              // 如果当前tick不是最后一次tick，并且所有的tick消息都已发出来了，那么需要用最后一次tick的数据再刷新一次。\n              workerData.requestId2 = helper.requestAnimationFrame(function requestId2() {\n                updateLayoutPosition(data, workerData.currentTickData);\n                graph.refreshPositions();\n                workerData.requestId2 = null;\n                onTick();\n                onLayoutEnd();\n              });\n            }\n\n            workerData.requestId = null;\n          });\n        }\n\n        break;\n\n      case LAYOUT_MESSAGE.END:\n        // 如果没有tick消息（非力导布局）\n        if (workerData.currentTick == null) {\n          updateLayoutPosition(data, eventData);\n          this.refreshLayout(); // 非力导布局，没有tick消息，只有end消息，所以需要执行一次回调。\n\n          if (success) {\n            success();\n          }\n\n          graph.emit('afterlayout');\n        }\n\n        break;\n\n      case LAYOUT_MESSAGE.ERROR:\n        break;\n\n      default:\n        break;\n    }\n  }; // 绘制\n\n\n  LayoutController.prototype.refreshLayout = function () {\n    var graph = this.graph;\n\n    if (graph.get('animate')) {\n      graph.positionsAnimate();\n    } else {\n      graph.refreshPositions();\n    }\n  }; // 更新布局参数\n\n\n  LayoutController.prototype.updateLayoutCfg = function (cfg) {\n    var _a = this,\n        graph = _a.graph,\n        layoutMethod = _a.layoutMethod;\n\n    this.layoutType = cfg.type;\n\n    if (!layoutMethod) {\n      console.warn('You did not assign any layout type and the graph has no previous layout method!');\n      return;\n    }\n\n    this.data = this.setDataFromGraph();\n    this.stopWorker();\n\n    if (cfg.workerEnabled && this.layoutWithWorker(this.data, null)) {\n      // 如果启用布局web worker并且浏览器支持web worker，用web worker布局。否则回退到不用web worker布局。\n      return;\n    }\n\n    layoutMethod.init(this.data);\n    layoutMethod.updateCfg(cfg);\n    graph.emit('beforelayout');\n    layoutMethod.execute();\n\n    if (this.layoutType !== 'force' && !layoutMethod.enableTick) {\n      graph.emit('afterlayout');\n    }\n\n    this.refreshLayout();\n  }; // 更换布局\n\n\n  LayoutController.prototype.changeLayout = function (layoutType) {\n    var _a = this,\n        graph = _a.graph,\n        layoutMethod = _a.layoutMethod;\n\n    this.layoutType = layoutType;\n    this.layoutCfg = graph.get('layout') || {};\n    this.layoutCfg.type = layoutType;\n\n    if (layoutMethod) {\n      layoutMethod.destroy();\n    }\n\n    this.layout();\n  }; // 更换数据\n\n\n  LayoutController.prototype.changeData = function () {\n    var layoutMethod = this.layoutMethod;\n\n    if (layoutMethod) {\n      layoutMethod.destroy();\n    }\n\n    this.layout();\n  }; // 销毁布局，不能使用 this.destroy，因为 controller 还需要被使用，只是把布局算法销毁\n\n\n  LayoutController.prototype.destroyLayout = function () {\n    var _a = this,\n        layoutMethod = _a.layoutMethod,\n        graph = _a.graph;\n\n    if (layoutMethod) {\n      layoutMethod.destroy();\n    }\n\n    graph.set('layout', undefined);\n    this.layoutCfg = undefined;\n    this.layoutType = undefined;\n    this.layoutMethod = undefined;\n  }; // 从 this.graph 获取数据\n\n\n  LayoutController.prototype.setDataFromGraph = function () {\n    var nodes = [];\n    var edges = [];\n    var combos = [];\n    var nodeItems = this.graph.getNodes();\n    var edgeItems = this.graph.getEdges();\n    var comboItems = this.graph.getCombos();\n    nodeItems.forEach(function (nodeItem) {\n      if (!nodeItem.isVisible()) return;\n      var model = nodeItem.getModel();\n      nodes.push(model);\n    });\n    edgeItems.forEach(function (edgeItem) {\n      if (edgeItem.destroyed || !edgeItem.isVisible()) return;\n      var model = edgeItem.getModel();\n      if (!model.isComboEdge) edges.push(model);\n    });\n    comboItems.forEach(function (comboItem) {\n      if (comboItem.destroyed || !comboItem.isVisible()) return;\n      var model = comboItem.getModel();\n      combos.push(model);\n    });\n    var data = {\n      nodes: nodes,\n      edges: edges,\n      combos: combos\n    };\n    return data;\n  }; // 重新布局\n\n\n  LayoutController.prototype.relayout = function (reloadData) {\n    var _a = this,\n        graph = _a.graph,\n        layoutMethod = _a.layoutMethod,\n        layoutCfg = _a.layoutCfg;\n\n    if (reloadData) {\n      this.data = this.setDataFromGraph();\n      var nodes = this.data.nodes;\n\n      if (!nodes) {\n        return false;\n      }\n\n      this.initPositions(layoutCfg.center, nodes);\n      layoutMethod.init(this.data);\n    }\n\n    if (this.layoutType === 'force') {\n      layoutMethod.ticking = false;\n      layoutMethod.forceSimulation.stop();\n    }\n\n    graph.emit('beforelayout');\n    layoutMethod.execute(reloadData);\n\n    if (this.layoutType !== 'force' && !layoutMethod.enableTick) {\n      graph.emit('afterlayout');\n    }\n\n    this.refreshLayout();\n  }; // 控制布局动画\n  // eslint-disable-next-line class-methods-use-this\n\n\n  LayoutController.prototype.layoutAnimate = function () {}; // // 根据 type 创建 Layout 实例\n  // private _getLayout() {\n  // }\n  // 将当前节点的平均中心移动到原点\n\n\n  LayoutController.prototype.moveToZero = function () {\n    var graph = this.graph;\n    var data = graph.get('data');\n    var nodes = data.nodes;\n\n    if (nodes[0].x === undefined || nodes[0].x === null || isNaN(nodes[0].x)) {\n      return;\n    }\n\n    var meanCenter = [0, 0];\n    nodes.forEach(function (node) {\n      meanCenter[0] += node.x;\n      meanCenter[1] += node.y;\n    });\n    meanCenter[0] /= nodes.length;\n    meanCenter[1] /= nodes.length;\n    nodes.forEach(function (node) {\n      node.x -= meanCenter[0];\n      node.y -= meanCenter[1];\n    });\n  }; // 初始化节点到 center 附近\n\n\n  LayoutController.prototype.initPositions = function (center, nodes) {\n    var graph = this.graph;\n\n    if (!nodes) {\n      return false;\n    }\n\n    var allHavePos = true;\n    var width = graph.get('width') * 0.85;\n    var height = graph.get('height') * 0.85;\n    var nodeNum = nodes.length;\n    var horiNum = Math.ceil(Math.sqrt(nodeNum) * (width / height));\n    var vertiNum = Math.ceil(nodeNum / horiNum);\n    var horiGap = width / (horiNum - 1);\n    var vertiGap = height / (vertiNum - 1);\n    if (!isFinite(horiGap) || !horiGap) horiGap = 0;\n    if (!isFinite(vertiGap) || !horiGap) vertiGap = 0;\n    var beginX = center[0] - width / 2;\n    var beginY = center[1] - height / 2;\n    nodes.forEach(function (node, i) {\n      if (isNaN(node.x)) {\n        allHavePos = false;\n        node.x = i % horiNum * horiGap + beginX;\n      }\n\n      if (isNaN(node.y)) {\n        allHavePos = false;\n        node.y = Math.floor(i / horiNum) * vertiGap + beginY;\n      }\n    });\n    return allHavePos;\n  };\n\n  LayoutController.prototype.destroy = function () {\n    var layoutMethod = this.layoutMethod;\n    this.graph = null;\n\n    if (layoutMethod) {\n      layoutMethod.destroy();\n    }\n\n    var worker = this.worker;\n\n    if (worker) {\n      worker.terminate();\n      this.worker = null;\n    }\n\n    this.destroyed = true;\n  };\n\n  return LayoutController;\n}();\n\nexport default LayoutController;\n\nfunction updateLayoutPosition(data, layoutData) {\n  var nodes = data.nodes;\n  var layoutNodes = layoutData.nodes;\n  nodes.forEach(function (node, i) {\n    node.x = layoutNodes[i].x;\n    node.y = layoutNodes[i].y;\n  });\n}\n\nfunction filterObject(collection, callback) {\n  var result = {};\n\n  if (collection && _typeof(collection) === 'object') {\n    Object.keys(collection).forEach(function (key) {\n      if (collection.hasOwnProperty(key) && callback(collection[key])) {\n        result[key] = collection[key];\n      }\n    });\n    return result;\n  }\n\n  return collection;\n}","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@antv/g6/es/graph/controller/layout.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","Layout","LayoutWorker","LAYOUT_MESSAGE","isNaN","mockRaf","cb","setTimeout","mockCaf","reqId","clearTimeout","helper","requestAnimationFrame","callback","fn","window","webkitRequestAnimationFrame","cancelAnimationFrame","requestId","webkitCancelAnimationFrame","LayoutController","graph","layoutCfg","get","layoutType","type","worker","workerData","initLayout","getWorker","Worker","console","warn","stopWorker","terminate","requestId2","getLayoutType","layout","success","data","setDataFromGraph","nodes","width","height","Object","assign","center","hasLayoutType","layoutMethod","destroy","emit","allHavePos","initPositions","workerEnabled","layoutWithWorker","onTick_1","onTick","tick","refreshPositions","onLayoutEnd_1","onLayoutEnd","comboTrees","enableTick","undefined","e","onTick_2","onLayoutEnd_2","onLayoutEndNew","init","execute","refreshLayout","_this","edges","_a","currentTick","currentTickData","filteredLayoutCfg","filterObject","value","postMessage","RUN","onmessage","event","handleWorkerMessage","eventData","TICK","updateLayoutPosition","totalTicks","END","ERROR","positionsAnimate","updateLayoutCfg","cfg","updateCfg","changeLayout","changeData","destroyLayout","set","combos","nodeItems","getNodes","edgeItems","getEdges","comboItems","getCombos","forEach","nodeItem","isVisible","model","getModel","push","edgeItem","destroyed","isComboEdge","comboItem","relayout","reloadData","ticking","forceSimulation","stop","layoutAnimate","moveToZero","x","meanCenter","node","y","length","nodeNum","horiNum","Math","ceil","sqrt","vertiNum","horiGap","vertiGap","isFinite","beginX","beginY","i","floor","layoutData","layoutNodes","collection","result","keys","key","hasOwnProperty"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport Layout from '../../layout';\nimport LayoutWorker from '../../layout/worker/layout.worker';\nimport { LAYOUT_MESSAGE } from '../../layout/worker/layoutConst';\nimport { isNaN } from '../../util/base'; // eslint-disable-next-line @typescript-eslint/no-implied-eval\n\nvar mockRaf = function mockRaf(cb) {\n  return setTimeout(cb, 16);\n};\n\nvar mockCaf = function mockCaf(reqId) {\n  return clearTimeout(reqId);\n};\n\nvar helper = {\n  // pollyfill\n  requestAnimationFrame: function requestAnimationFrame(callback) {\n    var fn = window.requestAnimationFrame || window.webkitRequestAnimationFrame || mockRaf;\n    return fn(callback);\n  },\n  cancelAnimationFrame: function cancelAnimationFrame(requestId) {\n    var fn = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || mockCaf;\n    return fn(requestId);\n  }\n};\n\nvar LayoutController =\n/** @class */\nfunction () {\n  function LayoutController(graph) {\n    this.graph = graph;\n    this.layoutCfg = graph.get('layout') || {};\n    this.layoutType = this.layoutCfg.type;\n    this.worker = null;\n    this.workerData = {};\n    this.initLayout();\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  LayoutController.prototype.initLayout = function () {// no data before rendering\n  }; // get layout worker and create one if not exists\n\n\n  LayoutController.prototype.getWorker = function () {\n    if (this.worker) {\n      return this.worker;\n    }\n\n    if (typeof Worker === 'undefined') {\n      // 如果当前浏览器不支持 web worker，则不使用 web worker\n      console.warn('Web worker is not supported in current browser.');\n      this.worker = null;\n    } else {\n      this.worker = new LayoutWorker();\n    }\n\n    return this.worker;\n  }; // stop layout worker\n\n\n  LayoutController.prototype.stopWorker = function () {\n    var workerData = this.workerData;\n\n    if (!this.worker) {\n      return;\n    }\n\n    this.worker.terminate();\n    this.worker = null; // 重新开始新的布局之前，先取消之前布局的requestAnimationFrame。\n\n    if (workerData.requestId) {\n      helper.cancelAnimationFrame(workerData.requestId);\n      workerData.requestId = null;\n    }\n\n    if (workerData.requestId2) {\n      helper.cancelAnimationFrame(workerData.requestId2);\n      workerData.requestId2 = null;\n    }\n  };\n\n  LayoutController.prototype.getLayoutType = function () {\n    return this.layoutCfg.type;\n  };\n  /**\n   * @param {function} success callback\n   * @return {boolean} 是否使用web worker布局\n   */\n\n\n  LayoutController.prototype.layout = function (success) {\n    var graph = this.graph;\n    this.data = this.setDataFromGraph();\n    var nodes = this.data.nodes;\n\n    if (!nodes) {\n      return false;\n    }\n\n    var width = graph.get('width');\n    var height = graph.get('height');\n    var layoutCfg = {};\n    Object.assign(layoutCfg, {\n      width: width,\n      height: height,\n      center: [width / 2, height / 2]\n    }, this.layoutCfg);\n    this.layoutCfg = layoutCfg;\n    var hasLayoutType = !!this.layoutType;\n    var layoutMethod = this.layoutMethod;\n\n    if (layoutMethod) {\n      layoutMethod.destroy();\n    }\n\n    graph.emit('beforelayout');\n    var allHavePos = this.initPositions(layoutCfg.center, nodes);\n    this.stopWorker();\n\n    if (layoutCfg.workerEnabled && this.layoutWithWorker(this.data, success)) {\n      // 如果启用布局web worker并且浏览器支持web worker，用web worker布局。否则回退到不用web worker布局。\n      return true;\n    }\n\n    if (this.layoutType === 'force' || this.layoutType === 'g6force') {\n      var onTick_1 = layoutCfg.onTick;\n\n      var tick = function tick() {\n        if (onTick_1) {\n          onTick_1();\n        }\n\n        graph.refreshPositions();\n      };\n\n      layoutCfg.tick = tick;\n      var onLayoutEnd_1 = layoutCfg.onLayoutEnd;\n\n      layoutCfg.onLayoutEnd = function () {\n        if (onLayoutEnd_1) {\n          onLayoutEnd_1();\n        }\n\n        graph.emit('afterlayout');\n      };\n    } else if (this.layoutType === 'comboForce') {\n      layoutCfg.comboTrees = graph.get('comboTrees');\n    }\n\n    var enableTick = false;\n\n    if (this.layoutType !== undefined) {\n      try {\n        layoutMethod = new Layout[this.layoutType](layoutCfg);\n      } catch (e) {\n        console.warn(\"The layout method: \" + this.layoutType + \" does not exist! Please specify it first.\");\n        return false;\n      } // 是否需要迭代的方式完成布局。这里是来自布局对象的实例属性，是由布局的定义者在布局类定义的。\n\n\n      enableTick = layoutMethod.enableTick;\n\n      if (enableTick) {\n        var onTick_2 = layoutCfg.onTick,\n            onLayoutEnd_2 = layoutCfg.onLayoutEnd;\n\n        var tick = function tick() {\n          if (onTick_2) {\n            onTick_2();\n          }\n\n          graph.refreshPositions();\n        };\n\n        layoutMethod.tick = tick;\n\n        var onLayoutEndNew = function onLayoutEndNew() {\n          if (onLayoutEnd_2) {\n            onLayoutEnd_2();\n          }\n\n          graph.emit('afterlayout');\n        };\n\n        layoutMethod.onLayoutEnd = onLayoutEndNew;\n      }\n\n      layoutMethod.init(this.data); // 若存在节点没有位置信息，且没有设置 layout，在 initPositions 中 random 给出了所有节点的位置，不需要再次执行 random 布局\n      // 所有节点都有位置信息，且指定了 layout，则执行布局（代表不是第一次进行布局）\n\n      if (hasLayoutType) {\n        layoutMethod.execute();\n      }\n\n      this.layoutMethod = layoutMethod;\n    }\n\n    if ((hasLayoutType || !allHavePos) && this.layoutType !== 'force' && !enableTick) {\n      graph.emit('afterlayout');\n      this.refreshLayout();\n    }\n\n    return false;\n  };\n  /**\n   * layout with web worker\n   * @param {object} data graph data\n   * @param {function} success callback function\n   * @return {boolean} 是否支持web worker\n   */\n\n\n  LayoutController.prototype.layoutWithWorker = function (data, success) {\n    var _this = this;\n\n    var nodes = data.nodes,\n        edges = data.edges;\n\n    var _a = this,\n        layoutCfg = _a.layoutCfg,\n        graph = _a.graph;\n\n    var worker = this.getWorker(); // 每次worker message event handler调用之间的共享数据，会被修改。\n\n    var workerData = this.workerData;\n\n    if (!worker) {\n      return false;\n    }\n\n    workerData.requestId = null;\n    workerData.requestId2 = null;\n    workerData.currentTick = null;\n    workerData.currentTickData = null; // NOTE: postMessage的message参数里面不能包含函数，否则postMessage会报错，\n    // 例如：'function could not be cloned'。\n    // 详情参考：https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\n    // 所以这里需要把过滤layoutCfg里的函数字段过滤掉。\n\n    var filteredLayoutCfg = filterObject(layoutCfg, function (value) {\n      return typeof value !== 'function';\n    });\n    worker.postMessage({\n      type: LAYOUT_MESSAGE.RUN,\n      nodes: nodes,\n      edges: edges,\n      layoutCfg: filteredLayoutCfg\n    });\n\n    worker.onmessage = function (event) {\n      _this.handleWorkerMessage(event, data, success);\n    };\n\n    return true;\n  }; // success callback will be called when updating graph positions for the first time.\n\n\n  LayoutController.prototype.handleWorkerMessage = function (event, data, success) {\n    var _a = this,\n        graph = _a.graph,\n        workerData = _a.workerData,\n        layoutCfg = _a.layoutCfg;\n\n    var eventData = event.data;\n    var type = eventData.type;\n\n    var onTick = function onTick() {\n      if (layoutCfg.onTick) {\n        layoutCfg.onTick();\n      }\n    };\n\n    var onLayoutEnd = function onLayoutEnd() {\n      if (layoutCfg.onLayoutEnd) {\n        layoutCfg.onLayoutEnd();\n      }\n\n      graph.emit('afterlayout');\n    };\n\n    switch (type) {\n      case LAYOUT_MESSAGE.TICK:\n        workerData.currentTick = eventData.currentTick;\n        workerData.currentTickData = eventData;\n\n        if (!workerData.requestId) {\n          workerData.requestId = helper.requestAnimationFrame(function requestId() {\n            updateLayoutPosition(data, eventData);\n            graph.refreshPositions();\n            onTick();\n\n            if (eventData.currentTick === 1 && success) {\n              success();\n            }\n\n            if (eventData.currentTick === eventData.totalTicks) {\n              // 如果是最后一次tick\n              onLayoutEnd();\n            } else if (workerData.currentTick === eventData.totalTicks) {\n              // 注意这里workerData.currentTick可能已经不再是前面赋值时候的值了，\n              // 因为在requestAnimationFrame等待时间里，可能产生新的tick。\n              // 如果当前tick不是最后一次tick，并且所有的tick消息都已发出来了，那么需要用最后一次tick的数据再刷新一次。\n              workerData.requestId2 = helper.requestAnimationFrame(function requestId2() {\n                updateLayoutPosition(data, workerData.currentTickData);\n                graph.refreshPositions();\n                workerData.requestId2 = null;\n                onTick();\n                onLayoutEnd();\n              });\n            }\n\n            workerData.requestId = null;\n          });\n        }\n\n        break;\n\n      case LAYOUT_MESSAGE.END:\n        // 如果没有tick消息（非力导布局）\n        if (workerData.currentTick == null) {\n          updateLayoutPosition(data, eventData);\n          this.refreshLayout(); // 非力导布局，没有tick消息，只有end消息，所以需要执行一次回调。\n\n          if (success) {\n            success();\n          }\n\n          graph.emit('afterlayout');\n        }\n\n        break;\n\n      case LAYOUT_MESSAGE.ERROR:\n        break;\n\n      default:\n        break;\n    }\n  }; // 绘制\n\n\n  LayoutController.prototype.refreshLayout = function () {\n    var graph = this.graph;\n\n    if (graph.get('animate')) {\n      graph.positionsAnimate();\n    } else {\n      graph.refreshPositions();\n    }\n  }; // 更新布局参数\n\n\n  LayoutController.prototype.updateLayoutCfg = function (cfg) {\n    var _a = this,\n        graph = _a.graph,\n        layoutMethod = _a.layoutMethod;\n\n    this.layoutType = cfg.type;\n\n    if (!layoutMethod) {\n      console.warn('You did not assign any layout type and the graph has no previous layout method!');\n      return;\n    }\n\n    this.data = this.setDataFromGraph();\n    this.stopWorker();\n\n    if (cfg.workerEnabled && this.layoutWithWorker(this.data, null)) {\n      // 如果启用布局web worker并且浏览器支持web worker，用web worker布局。否则回退到不用web worker布局。\n      return;\n    }\n\n    layoutMethod.init(this.data);\n    layoutMethod.updateCfg(cfg);\n    graph.emit('beforelayout');\n    layoutMethod.execute();\n\n    if (this.layoutType !== 'force' && !layoutMethod.enableTick) {\n      graph.emit('afterlayout');\n    }\n\n    this.refreshLayout();\n  }; // 更换布局\n\n\n  LayoutController.prototype.changeLayout = function (layoutType) {\n    var _a = this,\n        graph = _a.graph,\n        layoutMethod = _a.layoutMethod;\n\n    this.layoutType = layoutType;\n    this.layoutCfg = graph.get('layout') || {};\n    this.layoutCfg.type = layoutType;\n\n    if (layoutMethod) {\n      layoutMethod.destroy();\n    }\n\n    this.layout();\n  }; // 更换数据\n\n\n  LayoutController.prototype.changeData = function () {\n    var layoutMethod = this.layoutMethod;\n\n    if (layoutMethod) {\n      layoutMethod.destroy();\n    }\n\n    this.layout();\n  }; // 销毁布局，不能使用 this.destroy，因为 controller 还需要被使用，只是把布局算法销毁\n\n\n  LayoutController.prototype.destroyLayout = function () {\n    var _a = this,\n        layoutMethod = _a.layoutMethod,\n        graph = _a.graph;\n\n    if (layoutMethod) {\n      layoutMethod.destroy();\n    }\n\n    graph.set('layout', undefined);\n    this.layoutCfg = undefined;\n    this.layoutType = undefined;\n    this.layoutMethod = undefined;\n  }; // 从 this.graph 获取数据\n\n\n  LayoutController.prototype.setDataFromGraph = function () {\n    var nodes = [];\n    var edges = [];\n    var combos = [];\n    var nodeItems = this.graph.getNodes();\n    var edgeItems = this.graph.getEdges();\n    var comboItems = this.graph.getCombos();\n    nodeItems.forEach(function (nodeItem) {\n      if (!nodeItem.isVisible()) return;\n      var model = nodeItem.getModel();\n      nodes.push(model);\n    });\n    edgeItems.forEach(function (edgeItem) {\n      if (edgeItem.destroyed || !edgeItem.isVisible()) return;\n      var model = edgeItem.getModel();\n      if (!model.isComboEdge) edges.push(model);\n    });\n    comboItems.forEach(function (comboItem) {\n      if (comboItem.destroyed || !comboItem.isVisible()) return;\n      var model = comboItem.getModel();\n      combos.push(model);\n    });\n    var data = {\n      nodes: nodes,\n      edges: edges,\n      combos: combos\n    };\n    return data;\n  }; // 重新布局\n\n\n  LayoutController.prototype.relayout = function (reloadData) {\n    var _a = this,\n        graph = _a.graph,\n        layoutMethod = _a.layoutMethod,\n        layoutCfg = _a.layoutCfg;\n\n    if (reloadData) {\n      this.data = this.setDataFromGraph();\n      var nodes = this.data.nodes;\n\n      if (!nodes) {\n        return false;\n      }\n\n      this.initPositions(layoutCfg.center, nodes);\n      layoutMethod.init(this.data);\n    }\n\n    if (this.layoutType === 'force') {\n      layoutMethod.ticking = false;\n      layoutMethod.forceSimulation.stop();\n    }\n\n    graph.emit('beforelayout');\n    layoutMethod.execute(reloadData);\n\n    if (this.layoutType !== 'force' && !layoutMethod.enableTick) {\n      graph.emit('afterlayout');\n    }\n\n    this.refreshLayout();\n  }; // 控制布局动画\n  // eslint-disable-next-line class-methods-use-this\n\n\n  LayoutController.prototype.layoutAnimate = function () {}; // // 根据 type 创建 Layout 实例\n  // private _getLayout() {\n  // }\n  // 将当前节点的平均中心移动到原点\n\n\n  LayoutController.prototype.moveToZero = function () {\n    var graph = this.graph;\n    var data = graph.get('data');\n    var nodes = data.nodes;\n\n    if (nodes[0].x === undefined || nodes[0].x === null || isNaN(nodes[0].x)) {\n      return;\n    }\n\n    var meanCenter = [0, 0];\n    nodes.forEach(function (node) {\n      meanCenter[0] += node.x;\n      meanCenter[1] += node.y;\n    });\n    meanCenter[0] /= nodes.length;\n    meanCenter[1] /= nodes.length;\n    nodes.forEach(function (node) {\n      node.x -= meanCenter[0];\n      node.y -= meanCenter[1];\n    });\n  }; // 初始化节点到 center 附近\n\n\n  LayoutController.prototype.initPositions = function (center, nodes) {\n    var graph = this.graph;\n\n    if (!nodes) {\n      return false;\n    }\n\n    var allHavePos = true;\n    var width = graph.get('width') * 0.85;\n    var height = graph.get('height') * 0.85;\n    var nodeNum = nodes.length;\n    var horiNum = Math.ceil(Math.sqrt(nodeNum) * (width / height));\n    var vertiNum = Math.ceil(nodeNum / horiNum);\n    var horiGap = width / (horiNum - 1);\n    var vertiGap = height / (vertiNum - 1);\n    if (!isFinite(horiGap) || !horiGap) horiGap = 0;\n    if (!isFinite(vertiGap) || !horiGap) vertiGap = 0;\n    var beginX = center[0] - width / 2;\n    var beginY = center[1] - height / 2;\n    nodes.forEach(function (node, i) {\n      if (isNaN(node.x)) {\n        allHavePos = false;\n        node.x = i % horiNum * horiGap + beginX;\n      }\n\n      if (isNaN(node.y)) {\n        allHavePos = false;\n        node.y = Math.floor(i / horiNum) * vertiGap + beginY;\n      }\n    });\n    return allHavePos;\n  };\n\n  LayoutController.prototype.destroy = function () {\n    var layoutMethod = this.layoutMethod;\n    this.graph = null;\n\n    if (layoutMethod) {\n      layoutMethod.destroy();\n    }\n\n    var worker = this.worker;\n\n    if (worker) {\n      worker.terminate();\n      this.worker = null;\n    }\n\n    this.destroyed = true;\n  };\n\n  return LayoutController;\n}();\n\nexport default LayoutController;\n\nfunction updateLayoutPosition(data, layoutData) {\n  var nodes = data.nodes;\n  var layoutNodes = layoutData.nodes;\n  nodes.forEach(function (node, i) {\n    node.x = layoutNodes[i].x;\n    node.y = layoutNodes[i].y;\n  });\n}\n\nfunction filterObject(collection, callback) {\n  var result = {};\n\n  if (collection && _typeof(collection) === 'object') {\n    Object.keys(collection).forEach(function (key) {\n      if (collection.hasOwnProperty(key) && callback(collection[key])) {\n        result[key] = collection[key];\n      }\n    });\n    return result;\n  }\n\n  return collection;\n}"]},"metadata":{},"sourceType":"module"}