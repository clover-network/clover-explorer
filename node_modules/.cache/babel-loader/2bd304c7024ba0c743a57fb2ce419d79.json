{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { getTooltipMapping } from '../../utils/tooltip';\nimport { deepAssign } from '../../utils';\nimport { geometry } from './base';\n/**\n * point 辅助点的配置处理\n * @param params\n */\n\nexport function point(params) {\n  var options = params.options;\n  var point = options.point,\n      xField = options.xField,\n      yField = options.yField,\n      seriesField = options.seriesField,\n      sizeField = options.sizeField,\n      shapeField = options.shapeField,\n      tooltip = options.tooltip;\n\n  var _a = getTooltipMapping(tooltip, [xField, yField, seriesField, sizeField, shapeField]),\n      fields = _a.fields,\n      formatter = _a.formatter;\n\n  return point ? geometry(deepAssign({}, params, {\n    options: {\n      type: 'point',\n      colorField: seriesField,\n      shapeField: shapeField,\n      tooltipFields: fields,\n      mapping: __assign({\n        tooltip: formatter\n      }, point)\n    }\n  })) : params;\n}","map":{"version":3,"sources":["../../../src/adaptor/geometries/point.ts"],"names":[],"mappings":";AACA,SAAS,iBAAT,QAAkC,qBAAlC;AACA,SAAS,UAAT,QAA2B,aAA3B;AACA,SAAS,QAAT,QAA0D,QAA1D;AAiBA;;;AAGG;;AACH,OAAM,SAAU,KAAV,CAAgD,MAAhD,EAAiE;AAC7D,MAAA,OAAO,GAAK,MAAM,CAAX,OAAP;AACA,MAAA,KAAK,GAAkE,OAAO,CAAzE,KAAL;AAAA,MAAO,MAAM,GAA0D,OAAO,CAAjE,MAAb;AAAA,MAAe,MAAM,GAAkD,OAAO,CAAzD,MAArB;AAAA,MAAuB,WAAW,GAAqC,OAAO,CAA5C,WAAlC;AAAA,MAAoC,SAAS,GAA0B,OAAO,CAAjC,SAA7C;AAAA,MAA+C,UAAU,GAAc,OAAO,CAArB,UAAzD;AAAA,MAA2D,OAAO,GAAK,OAAO,CAAZ,OAAlE;;AAEF,MAAA,EAAA,GAAwB,iBAAiB,CAAC,OAAD,EAAU,CAAC,MAAD,EAAS,MAAT,EAAiB,WAAjB,EAA8B,SAA9B,EAAyC,UAAzC,CAAV,CAAzC;AAAA,MAAE,MAAM,GAAA,EAAA,CAAA,MAAR;AAAA,MAAU,SAAS,GAAA,EAAA,CAAA,SAAnB;;AAEN,SAAO,KAAK,GACR,QAAQ,CACN,UAAU,CAAC,EAAD,EAAK,MAAL,EAAa;AACrB,IAAA,OAAO,EAAE;AACP,MAAA,IAAI,EAAE,OADC;AAEP,MAAA,UAAU,EAAE,WAFL;AAGP,MAAA,UAAU,EAAE,UAHL;AAIP,MAAA,aAAa,EAAE,MAJR;AAKP,MAAA,OAAO,EAAA,QAAA,CAAA;AACL,QAAA,OAAO,EAAE;AADJ,OAAA,EAEF,KAFE;AALA;AADY,GAAb,CADJ,CADA,GAeR,MAfJ;AAgBD","sourcesContent":["import { Params } from '../../core/adaptor';\nimport { getTooltipMapping } from '../../utils/tooltip';\nimport { deepAssign } from '../../utils';\nimport { geometry, MappingOptions, GeometryOptions } from './base';\n\nexport interface PointGeometryOptions extends GeometryOptions {\n  /** x 轴字段 */\n  readonly xField?: string;\n  /** y 轴字段 */\n  readonly yField?: string;\n  /** 分组字段 */\n  readonly seriesField?: string;\n  /** size 映射字段 */\n  readonly sizeField?: string;\n  /** shape 的映射字段 */\n  readonly shapeField?: string;\n  /** point 图形映射规则 */\n  readonly point?: MappingOptions;\n}\n\n/**\n * point 辅助点的配置处理\n * @param params\n */\nexport function point<O extends PointGeometryOptions>(params: Params<O>): Params<O> {\n  const { options } = params;\n  const { point, xField, yField, seriesField, sizeField, shapeField, tooltip } = options;\n\n  const { fields, formatter } = getTooltipMapping(tooltip, [xField, yField, seriesField, sizeField, shapeField]);\n\n  return point\n    ? geometry(\n        deepAssign({}, params, {\n          options: {\n            type: 'point',\n            colorField: seriesField,\n            shapeField: shapeField,\n            tooltipFields: fields,\n            mapping: {\n              tooltip: formatter,\n              ...point,\n            },\n          },\n        })\n      )\n    : params;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}