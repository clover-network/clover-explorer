{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Util } from '@antv/g2';\nimport { Action } from '@antv/g2/lib/interaction';\nimport { getDelegationObject } from '@antv/g2/lib/interaction/action/util';\nimport { isEqual } from '@antv/util';\nimport { transform } from '../../../utils/matrix';\n/**\n * 饼图 图例激活 action\n */\n\nvar PieLegendAction =\n/** @class */\nfunction (_super) {\n  __extends(PieLegendAction, _super);\n\n  function PieLegendAction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * 获取激活的图形元素\n   */\n\n\n  PieLegendAction.prototype.getActiveElements = function () {\n    var delegateObject = getDelegationObject(this.context);\n\n    if (delegateObject) {\n      var view = this.context.view;\n      var component = delegateObject.component,\n          item_1 = delegateObject.item;\n      var field_1 = component.get('field');\n\n      if (field_1) {\n        var elements = view.geometries[0].elements;\n        return elements.filter(function (ele) {\n          return ele.getModel().data[field_1] === item_1.value;\n        });\n      }\n    }\n\n    return [];\n  };\n  /**\n   * 获取激活的标签\n   */\n\n\n  PieLegendAction.prototype.getActiveElementLabels = function () {\n    var view = this.context.view;\n    var elements = this.getActiveElements();\n    var labels = view.geometries[0].labelsContainer.getChildren();\n    return labels.filter(function (label) {\n      return elements.find(function (ele) {\n        return isEqual(ele.getData(), label.get('data'));\n      });\n    });\n  };\n\n  PieLegendAction.prototype.transfrom = function (offset) {\n    if (offset === void 0) {\n      offset = 7.5;\n    }\n\n    var elements = this.getActiveElements();\n    var elementLabels = this.getActiveElementLabels();\n    elements.forEach(function (element, idx) {\n      var labelShape = elementLabels[idx];\n      var coordinate = element.geometry.coordinate;\n\n      if (coordinate.isPolar && coordinate.isTransposed) {\n        var _a = Util.getAngle(element.getModel(), coordinate),\n            startAngle = _a.startAngle,\n            endAngle = _a.endAngle;\n\n        var middleAngle = (startAngle + endAngle) / 2;\n        var r = offset;\n        var x = r * Math.cos(middleAngle);\n        var y = r * Math.sin(middleAngle);\n        element.shape.setMatrix(transform([['t', x, y]]));\n        labelShape.setMatrix(transform([['t', x, y]]));\n      }\n    });\n  };\n\n  PieLegendAction.prototype.active = function () {\n    this.transfrom();\n  };\n  /**\n   * 激活态还原\n   */\n\n\n  PieLegendAction.prototype.reset = function () {\n    this.transfrom(0);\n  };\n\n  return PieLegendAction;\n}(Action);\n\nexport { PieLegendAction };","map":{"version":3,"sources":["../../../../src/plots/pie/interactions/pie-legend-action.ts"],"names":[],"mappings":"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","sourcesContent":["import { IElement, IGroup } from '@antv/g-base';\nimport { Util } from '@antv/g2';\nimport Element from '@antv/g2/lib/geometry/element';\nimport { Action } from '@antv/g2/lib/interaction';\nimport { getDelegationObject } from '@antv/g2/lib/interaction/action/util';\nimport { isEqual } from '@antv/util';\nimport { transform } from '../../../utils/matrix';\n\n/**\n * 饼图 图例激活 action\n */\nexport class PieLegendAction extends Action {\n  /**\n   * 获取激活的图形元素\n   */\n  private getActiveElements(): Element[] {\n    const delegateObject = getDelegationObject(this.context);\n    if (delegateObject) {\n      const view = this.context.view;\n      const { component, item } = delegateObject;\n      const field = component.get('field');\n      if (field) {\n        const elements = view.geometries[0].elements;\n        return elements.filter((ele) => ele.getModel().data[field] === item.value);\n      }\n    }\n    return [];\n  }\n\n  /**\n   * 获取激活的标签\n   */\n  private getActiveElementLabels(): (IElement | IGroup)[] {\n    const view = this.context.view;\n    const elements = this.getActiveElements();\n    const labels = view.geometries[0].labelsContainer.getChildren();\n    return labels.filter((label) => elements.find((ele) => isEqual(ele.getData(), label.get('data'))));\n  }\n\n  protected transfrom(offset: number = 7.5) {\n    const elements = this.getActiveElements();\n    const elementLabels = this.getActiveElementLabels();\n    elements.forEach((element, idx) => {\n      const labelShape = elementLabels[idx];\n      const coordinate = element.geometry.coordinate;\n      if (coordinate.isPolar && coordinate.isTransposed) {\n        const { startAngle, endAngle } = Util.getAngle(element.getModel(), coordinate);\n        const middleAngle = (startAngle + endAngle) / 2;\n        const r = offset;\n        const x = r * Math.cos(middleAngle);\n        const y = r * Math.sin(middleAngle);\n        element.shape.setMatrix(transform([['t', x, y]]));\n        labelShape.setMatrix(transform([['t', x, y]]));\n      }\n    });\n  }\n\n  public active() {\n    this.transfrom();\n  }\n\n  /**\n   * 激活态还原\n   */\n  public reset() {\n    this.transfrom(0);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}