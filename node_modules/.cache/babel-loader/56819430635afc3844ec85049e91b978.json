{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { registerComponentController } from '@antv/g2';\nimport { getTooltipItems } from '@antv/g2/lib/util/tooltip';\nimport TooltipController from '@antv/g2/lib/chart/controller/tooltip';\nimport { Action } from '@antv/g2/lib/interaction';\nimport { isNil } from '@antv/util';\n\nvar RadarTooltipController =\n/** @class */\nfunction (_super) {\n  __extends(RadarTooltipController, _super);\n\n  function RadarTooltipController() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(RadarTooltipController.prototype, \"name\", {\n    get: function () {\n      return 'radar-tooltip';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  RadarTooltipController.prototype.getTooltipItems = function (point) {\n    var _a = this.getTooltipCfg(),\n        shared = _a.shared,\n        cfgTitle = _a.title;\n\n    var hintItems = _super.prototype.getTooltipItems.call(this, point);\n\n    if (hintItems.length > 0) {\n      var geometry_1 = this.view.geometries[0];\n      var dataArray = geometry_1.dataArray;\n      var title_1 = hintItems[0].name;\n      var result_1 = [];\n      dataArray.forEach(function (mappingData) {\n        mappingData.forEach(function (d) {\n          var items = getTooltipItems(d, geometry_1);\n          var item = items[0];\n\n          if (!shared && item && item.name === title_1) {\n            var displayTitle = isNil(cfgTitle) ? title_1 : cfgTitle;\n            result_1.push(__assign(__assign({}, item), {\n              name: item.title,\n              title: displayTitle\n            }));\n          } else if (shared && item) {\n            var displayTitle = isNil(cfgTitle) ? item.name || title_1 : cfgTitle;\n            result_1.push(__assign(__assign({}, item), {\n              name: item.title,\n              title: displayTitle\n            }));\n          }\n        });\n      });\n      return result_1;\n    }\n\n    return [];\n  };\n\n  return RadarTooltipController;\n}(TooltipController);\n\nexport { RadarTooltipController };\nregisterComponentController('radar-tooltip', RadarTooltipController);\n/**\n * 雷达图 tooltip 激活 action\n */\n\nvar RadarTooltipAction =\n/** @class */\nfunction (_super) {\n  __extends(RadarTooltipAction, _super);\n\n  function RadarTooltipAction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  RadarTooltipAction.prototype.init = function () {\n    var view = this.context.view;\n    view.removeInteraction('tooltip');\n  };\n\n  RadarTooltipAction.prototype.show = function () {\n    var event = this.context.event;\n    var controller = this.getTooltipController();\n    controller.showTooltip({\n      x: event.x,\n      y: event.y\n    });\n  };\n\n  RadarTooltipAction.prototype.hide = function () {\n    var controller = this.getTooltipController();\n    controller.hideTooltip();\n  };\n\n  RadarTooltipAction.prototype.getTooltipController = function () {\n    var view = this.context.view;\n    return view.getController('radar-tooltip');\n  };\n\n  return RadarTooltipAction;\n}(Action);\n\nexport { RadarTooltipAction };","map":{"version":3,"sources":["../../../../src/plots/radar/interactions/radar-tooltip-action.ts"],"names":[],"mappings":"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","sourcesContent":["import { registerComponentController } from '@antv/g2';\nimport { getTooltipItems } from '@antv/g2/lib/util/tooltip';\nimport TooltipController from '@antv/g2/lib/chart/controller/tooltip';\nimport { Action } from '@antv/g2/lib/interaction';\nimport { isNil } from '@antv/util';\nimport { Point } from '../../../types';\n\nexport class RadarTooltipController extends TooltipController {\n  public get name(): string {\n    return 'radar-tooltip';\n  }\n\n  public getTooltipItems(point: Point) {\n    const { shared, title: cfgTitle } = this.getTooltipCfg();\n    const hintItems = super.getTooltipItems(point);\n\n    if (hintItems.length > 0) {\n      const geometry = this.view.geometries[0];\n      const dataArray = geometry.dataArray;\n      const title = hintItems[0].name;\n      const result = [];\n      dataArray.forEach((mappingData) => {\n        mappingData.forEach((d) => {\n          const items = getTooltipItems(d, geometry);\n          const item = items[0];\n          if (!shared && item && item.name === title) {\n            const displayTitle = isNil(cfgTitle) ? title : cfgTitle;\n            result.push({ ...item, name: item.title, title: displayTitle });\n          } else if (shared && item) {\n            const displayTitle = isNil(cfgTitle) ? item.name || title : cfgTitle;\n            result.push({ ...item, name: item.title, title: displayTitle });\n          }\n        });\n      });\n\n      return result;\n    }\n    return [];\n  }\n}\nregisterComponentController('radar-tooltip', RadarTooltipController);\n\n/**\n * 雷达图 tooltip 激活 action\n */\nexport class RadarTooltipAction extends Action {\n  init() {\n    const { view } = this.context;\n    view.removeInteraction('tooltip');\n  }\n\n  public show() {\n    const { event } = this.context;\n    const controller = this.getTooltipController();\n    controller.showTooltip({ x: event.x, y: event.y });\n  }\n\n  public hide() {\n    const controller = this.getTooltipController();\n    controller.hideTooltip();\n  }\n\n  private getTooltipController() {\n    const { view } = this.context;\n    return view.getController('radar-tooltip') as TooltipController;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}