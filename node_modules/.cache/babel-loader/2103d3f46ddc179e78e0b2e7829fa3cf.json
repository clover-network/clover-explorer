{"ast":null,"code":"var _jsxFileName = \"/Users/wanglijie/wanglijie/clover-defi-wallet/src/pages/AssetsMDetailsWeb/index.tsx\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Text } from 'rebass';\nimport AppBody from '../AppBody';\nimport { AutoColumn } from '../../components/Column';\nimport { ResponsiveContainer, PieChart, Pie, Cell, AreaChart, Area, BarChart, Bar, LabelList, XAxis, ReferenceLine, Tooltip, Legend } from 'recharts';\nconst BodyWrapper = styled.div`\n  width: 100%;\n`;\nconst BodyContent = styled(AutoColumn)`\n  width: 1280px;\n  margin: 0 auto;\n`;\nconst PieChartWrapper = styled.div`\n  height: 470px;\n  width: 1100px;\n  display: flex;\n  //justify-content: left;\n  //position: relative;\n  //background: red;\n  margin: 0 auto;\n  background: url('../../assets/images/pie_chart_back.png') no-repeat 0 0;\n`;\nconst LineChartWrapper = styled.div`\n  margin: 0 30px;\n  height: 250px;\n  background: linear-gradient(180deg,#FFFFFF 0%, #FFF6FA 50%, #FFFFFF 100%);\n  border-radius: 15px;\n`;\nconst BarChartWrapper = styled.div`\n  position: relative;\n  margin: 20px 30px;\n  height: 220px;\n  background: linear-gradient(180deg, #FFFFFF 0%, #EFFBFF 50%, #FFFFFF 100%);\n  border-radius: 15px;\n`;\nexport default class AssetsMDetailsWeb extends Component {\n  render() {\n    const pieData = [{\n      id: \"Total assets\",\n      name: \"Total assets\",\n      value: 75,\n      color: \"#FF7D30\"\n    }, {\n      id: \"Total liabilities\",\n      name: \"Total liabilities\",\n      value: 25,\n      color: \"#FF589D\"\n    }];\n    const pieInnerStyles = {\n      root: {\n        fontFamily: \"consolas, sans-serif\",\n        textAlign: \"center\",\n        position: \"relative\",\n        width: 600,\n        height: 600\n      },\n      overlay: {\n        height: 252,\n        width: 252,\n        borderRadius: '50%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        backgroundColor: '#ffffff',\n        boxShadow: '0px 5px 10px 2px rgba(255, 125, 48, 0.15)',\n        position: \"absolute\",\n        top: '50%',\n        marginTop: '-71px',\n        right: '50%',\n        marginRight: '-55px',\n        bottom: 0,\n        alignItems: \"center\"\n      },\n      number: {\n        color: \"#333333\",\n        fontSize: \"28px\",\n        fontWeight: 'bold'\n      },\n      text: {\n        color: \"#999999\",\n        fontSize: \"20px\",\n        fontWeight: \"normal\"\n      }\n    };\n\n    const renderActiveTooltipPie = props => {\n      const {\n        payload\n      } = props;\n      return payload[0] ? /*#__PURE__*/React.createElement(\"div\", {\n        key: payload[0].name,\n        style: {\n          color: '#999999',\n          fontSize: '11px',\n          backgroundColor: '#ffffff',\n          borderRadius: '5px',\n          padding: '3px 10px',\n          boxShadow: '0px 0px 10px 2px rgba(0, 0, 0, 0.15)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          display: 'inline-block',\n          marginRight: '5px',\n          width: '8px',\n          height: '8px',\n          borderRadius: '4px',\n          background: payload[0].payload.color\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }\n      }), payload[0].name, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: '#333333',\n          marginLeft: '5px',\n          fontSize: '13px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }, \"$\", payload[0].value)) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 26\n        }\n      });\n    };\n\n    const renderLegendPie = props => {\n      const {\n        payload\n      } = props;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginRight: '150px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      }, payload.map((entry, index) => /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          display: 'inline-block',\n          marginRight: '10px',\n          width: '16px',\n          height: '16px',\n          borderRadius: '8px',\n          background: entry.color\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: '#666666',\n          fontSize: '20px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 33\n        }\n      }, entry.value))));\n    };\n\n    const lineData = [{\n      \"name\": \"2020.07.20\",\n      \"Total liabilities\": 100,\n      \"NetAssets\": 200,\n      \"TotalAssets\": 300\n    }, {\n      \"name\": \"2020.08\",\n      \"Total liabilities\": 200,\n      \"NetAssets\": 300,\n      \"TotalAssets\": 400\n    }, {\n      \"name\": \"2020.08.10\",\n      \"Total liabilities\": 300,\n      \"NetAssets\": 400,\n      \"TotalAssets\": 500\n    }, {\n      \"name\": \"2020.08.20\",\n      \"Total liabilities\": 200,\n      \"NetAssets\": 300,\n      \"TotalAssets\": 400\n    }, {\n      \"name\": \"2020.09\",\n      \"Total liabilities\": 100,\n      \"NetAssets\": 200,\n      \"TotalAssets\": 300\n    }, {\n      \"name\": \"2020.09.10\",\n      \"Total liabilities\": 300,\n      \"NetAssets\": 400,\n      \"TotalAssets\": 500\n    }, {\n      \"name\": \"2020.09.20\",\n      \"Total liabilities\": 400,\n      \"NetAssets\": 500,\n      \"TotalAssets\": 600\n    }, {\n      \"name\": \"2020.10\",\n      \"Total liabilities\": 200,\n      \"NetAssets\": 300,\n      \"TotalAssets\": 400\n    }, {\n      \"name\": \"2020.10.10\",\n      \"Total liabilities\": 400,\n      \"NetAssets\": 500,\n      \"TotalAssets\": 600\n    }, {\n      \"name\": \"2020.10.20\",\n      \"Total liabilities\": 500,\n      \"NetAssets\": 600,\n      \"TotalAssets\": 700\n    }, {\n      \"name\": \"2020.11\",\n      \"Total liabilities\": 800,\n      \"NetAssets\": 700,\n      \"TotalAssets\": 900\n    }, {\n      \"name\": \"2020.11.10\",\n      \"Total liabilities\": 400,\n      \"NetAssets\": 500,\n      \"TotalAssets\": 600\n    }];\n\n    const renderActiveTooltipLine = props => {\n      const {\n        payload\n      } = props;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          background: 'white',\n          padding: '9px 12px',\n          opacity: '0.92',\n          width: '130px',\n          height: '140px',\n          borderRadius: '10px',\n          boxShadow: '0px 0px 5px 2px rgba(0, 0, 0, 0.05)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }\n      }, payload.map(point => /*#__PURE__*/React.createElement(\"div\", {\n        key: point.name,\n        style: {\n          color: '#999999',\n          padding: '3px 0',\n          fontSize: '11px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          display: 'inline-block',\n          marginRight: '5px',\n          width: '8px',\n          height: '8px',\n          borderRadius: '4px',\n          background: point.stroke\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 33\n        }\n      }), point.name), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: '#333333',\n          marginLeft: '13px',\n          fontSize: '13px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 29\n        }\n      }, \"$\", point.value))));\n    };\n\n    const barInnerStyles = {\n      overlay: {\n        width: 115,\n        height: 30,\n        display: 'flex',\n        flexDirection: 'row',\n        position: \"absolute\",\n        top: 0,\n        right: 0\n      },\n      span: {\n        width: '3px',\n        height: '100%',\n        backgroundColor: '#FF7D30',\n        marginRight: '5px'\n      },\n      divWrapper: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      number: {\n        color: \"#333333\",\n        fontSize: \"13px\"\n      },\n      text: {\n        color: \"#999999\",\n        textAlign: 'center',\n        fontSize: \"10px\",\n        lineHeight: '14px'\n      }\n    };\n    const barData = [{\n      name: 'CLV',\n      earnings: 25.03,\n      color: '#FF7D30'\n    }, {\n      name: 'cETH',\n      earnings: 20.03,\n      color: '#FF71C5'\n    }, {\n      name: 'ACA',\n      earnings: 15.03,\n      color: '#406AFE'\n    }, {\n      name: 'aUSD',\n      earnings: 10.03,\n      color: '#F6883B'\n    }, {\n      name: 'bUSD',\n      earnings: -10.03,\n      color: '#FF71C5'\n    }, {\n      name: 'cUSD',\n      earnings: -15.03,\n      color: '#FF7D30'\n    }];\n\n    const BarLabel = props => {\n      const {\n        x,\n        y,\n        width,\n        height,\n        value\n      } = props;\n      return /*#__PURE__*/React.createElement(\"text\", {\n        x: x + width / 2,\n        y: value > 0 ? y - 15 : y + 15,\n        fill: \"#666666\",\n        fontSize: 11,\n        textAnchor: \"middle\",\n        dominantBaseline: \"middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 17\n        }\n      }, value > 0 ? `+$${value}` : `-$${value * -1}`);\n    };\n\n    return /*#__PURE__*/React.createElement(AppBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BodyWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BodyContent, {\n      gap: 'md',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"30px\",\n      fontWeight: \"bold\",\n      color: \"#333333\",\n      marginLeft: \"25px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 25\n      }\n    }, \"Assets distribution\"), /*#__PURE__*/React.createElement(PieChartWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      width: \"100%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(PieChart, {\n      width: 380,\n      height: 380,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Pie, {\n      data: pieData,\n      cx: \"50%\",\n      cy: \"50%\",\n      innerRadius: \"72%\",\n      outerRadius: \"80%\",\n      dataKey: \"value\",\n      paddingAngle: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 37\n      }\n    }, pieData.map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n      key: `cell-${index}`,\n      fill: entry.color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 75\n      }\n    }))), /*#__PURE__*/React.createElement(Tooltip, {\n      content: renderActiveTooltipPie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      align: 'right',\n      verticalAlign: 'middle',\n      layout: 'vertical',\n      content: renderLegendPie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"30px\",\n      fontWeight: \"bold\",\n      color: \"#333333\",\n      marginLeft: \"25px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 25\n      }\n    }, \"Assets trend\"), /*#__PURE__*/React.createElement(LineChartWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      width: \"100%\",\n      aspect: 4.0 / 3.0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(AreaChart, {\n      style: {\n        width: '315px'\n      },\n      data: lineData,\n      margin: {\n        top: 10,\n        right: 0,\n        left: 0,\n        bottom: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"defs\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"linearGradient\", {\n      id: \"colorLiabilities\",\n      x1: \"0\",\n      y1: \"0\",\n      x2: \"0\",\n      y2: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"stop\", {\n      offset: \"5%\",\n      stopColor: \"#406AFE\",\n      stopOpacity: 0.3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"stop\", {\n      offset: \"100%\",\n      stopColor: \"#ffffff\",\n      stopOpacity: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n      id: \"colorNetAssets\",\n      x1: \"0\",\n      y1: \"0\",\n      x2: \"0\",\n      y2: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"stop\", {\n      offset: \"5%\",\n      stopColor: \"#FF71C5\",\n      stopOpacity: 0.3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"stop\", {\n      offset: \"100%\",\n      stopColor: \"#ffffff\",\n      stopOpacity: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n      id: \"colorTotalAssets\",\n      x1: \"0\",\n      y1: \"0\",\n      x2: \"0\",\n      y2: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"stop\", {\n      offset: \"5%\",\n      stopColor: \"#FF7D30\",\n      stopOpacity: 0.3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"stop\", {\n      offset: \"100%\",\n      stopColor: \"#ffffff\",\n      stopOpacity: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"name\",\n      axisLine: false,\n      tickLine: false,\n      ticks: [\"2020.08\", \"2020.09\", \"2020.10\", \"2020.11\"],\n      tick: {\n        fill: '#666666',\n        fontSize: 11\n      },\n      interval: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      cursor: {\n        stroke: '#eeeeee',\n        strokeWidth: 1,\n        type: 'dashed'\n      },\n      content: renderActiveTooltipLine,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Area, {\n      activeDot: {\n        stroke: '#FF7D30',\n        fill: '#ffffff',\n        strokeWidth: 2,\n        r: 4\n      },\n      type: \"monotone\",\n      dataKey: \"TotalAssets\",\n      stroke: \"#FF7D30\",\n      strokeWidth: 2,\n      fillOpacity: 1,\n      fill: \"url(#colorTotalAssets)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Area, {\n      activeDot: {\n        stroke: '#FF71C5',\n        fill: '#ffffff',\n        strokeWidth: 2,\n        r: 4\n      },\n      type: \"monotone\",\n      dataKey: \"NetAssets\",\n      stroke: \"#FF71C5\",\n      strokeWidth: 2,\n      fillOpacity: 1,\n      fill: \"url(#colorNetAssets)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Area, {\n      activeDot: {\n        stroke: '#406AFE',\n        fill: '#ffffff',\n        strokeWidth: 2,\n        r: 4\n      },\n      type: \"monotone\",\n      dataKey: \"Total liabilities\",\n      stroke: \"#406AFE\",\n      strokeWidth: 2,\n      fillOpacity: 1,\n      fill: \"url(#colorLiabilities)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"30px\",\n      fontWeight: \"bold\",\n      color: \"#333333\",\n      marginLeft: \"25px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 25\n      }\n    }, \"Profit and loss of assets\"), /*#__PURE__*/React.createElement(BarChartWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      width: \"100%\",\n      aspect: 4.0 / 3.0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(BarChart, {\n      data: barData,\n      margin: {\n        top: 60,\n        right: 20,\n        left: 20,\n        bottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(XAxis, {\n      dx: -12,\n      dataKey: \"name\",\n      axisLine: false,\n      tickLine: false,\n      tick: {\n        fill: '#666666',\n        fontSize: 11,\n        padding: '10px'\n      },\n      interval: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(ReferenceLine, {\n      y: 0,\n      stroke: \"rgba(64, 106, 254, 0.12)\",\n      strokeWidth: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"earnings\",\n      fill: \"#8884d8\",\n      radius: [5, 5, 0, 0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(LabelList, {\n      dataKey: \"earnings\",\n      position: \"top\",\n      content: /*#__PURE__*/React.createElement(BarLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 54\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 41\n      }\n    }), barData.map(entry => /*#__PURE__*/React.createElement(Cell, {\n      fill: entry.color,\n      width: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 49\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      style: barInnerStyles.overlay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: barInnerStyles.span,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: barInnerStyles.divWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: barInnerStyles.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 37\n      }\n    }, \"Earnings today\"), /*#__PURE__*/React.createElement(\"span\", {\n      style: barInnerStyles.number,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 37\n      }\n    }, \"$1254576.03\")))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/src/pages/AssetsMDetailsWeb/index.tsx"],"names":["React","Component","styled","Text","AppBody","AutoColumn","ResponsiveContainer","PieChart","Pie","Cell","AreaChart","Area","BarChart","Bar","LabelList","XAxis","ReferenceLine","Tooltip","Legend","BodyWrapper","div","BodyContent","PieChartWrapper","LineChartWrapper","BarChartWrapper","AssetsMDetailsWeb","render","pieData","id","name","value","color","pieInnerStyles","root","fontFamily","textAlign","position","width","height","overlay","borderRadius","display","flexDirection","justifyContent","backgroundColor","boxShadow","top","marginTop","right","marginRight","bottom","alignItems","number","fontSize","fontWeight","text","renderActiveTooltipPie","props","payload","padding","background","marginLeft","renderLegendPie","map","entry","index","marginBottom","lineData","renderActiveTooltipLine","opacity","point","stroke","barInnerStyles","span","divWrapper","lineHeight","barData","earnings","BarLabel","x","y","left","fill","strokeWidth","type","r"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport styled from 'styled-components'\nimport { Text } from 'rebass'\nimport AppBody from '../AppBody'\nimport Column, { AutoColumn, ColumnCenter } from '../../components/Column'\nimport Row, {RowBetween, RowEnd} from '../../components/Row'\nimport { ResponsiveContainer, PieChart, Pie, Cell, AreaChart, Area, BarChart, Bar, LabelList, XAxis, ReferenceLine, Tooltip, Legend } from 'recharts';\n\nconst BodyWrapper = styled.div`\n  width: 100%;\n`;\n\nconst BodyContent = styled(AutoColumn)`\n  width: 1280px;\n  margin: 0 auto;\n`;\n\nconst PieChartWrapper = styled.div`\n  height: 470px;\n  width: 1100px;\n  display: flex;\n  //justify-content: left;\n  //position: relative;\n  //background: red;\n  margin: 0 auto;\n  background: url('../../assets/images/pie_chart_back.png') no-repeat 0 0;\n`;\n\nconst LineChartWrapper = styled.div`\n  margin: 0 30px;\n  height: 250px;\n  background: linear-gradient(180deg,#FFFFFF 0%, #FFF6FA 50%, #FFFFFF 100%);\n  border-radius: 15px;\n`;\n\nconst BarChartWrapper = styled.div`\n  position: relative;\n  margin: 20px 30px;\n  height: 220px;\n  background: linear-gradient(180deg, #FFFFFF 0%, #EFFBFF 50%, #FFFFFF 100%);\n  border-radius: 15px;\n`;\n\nexport default class AssetsMDetailsWeb extends Component<any, any> {\n    render() {\n        const pieData = [\n            {\n                id: \"Total assets\",\n                name: \"Total assets\",\n                value: 75,\n                color: \"#FF7D30\"\n            },\n            {\n                id: \"Total liabilities\",\n                name: \"Total liabilities\",\n                value: 25,\n                color: \"#FF589D\"\n            },\n        ];\n        const pieInnerStyles = {\n            root: {\n                fontFamily: \"consolas, sans-serif\",\n                textAlign: \"center\",\n                position: \"relative\",\n                width: 600,\n                height: 600,\n            },\n            overlay: {\n                height: 252,\n                width: 252,\n                borderRadius: '50%',\n                display: 'flex',\n                flexDirection: 'column' as 'column',\n                justifyContent: 'center' as 'center',\n                backgroundColor: '#ffffff',\n                boxShadow: '0px 5px 10px 2px rgba(255, 125, 48, 0.15)',\n                position: \"absolute\" as \"absolute\",\n                top: '50%',\n                marginTop: '-71px',\n                right: '50%',\n                marginRight: '-55px',\n                bottom: 0,\n                alignItems: \"center\" as \"center\",\n            },\n            number: {\n                color: \"#333333\",\n                fontSize: \"28px\",\n                fontWeight: 'bold' as 'bold'\n            },\n            text: {\n                color: \"#999999\",\n                fontSize: \"20px\",\n                fontWeight: \"normal\" as \"normal\"\n            }\n        };\n        const renderActiveTooltipPie = (props: any) => {\n            const { payload } = props;\n            return (\n                payload[0]? <div\n                    key={payload[0].name}\n                    style={{\n                        color: '#999999',\n                        fontSize: '11px',\n                        backgroundColor: '#ffffff',\n                        borderRadius: '5px',\n                        padding: '3px 10px',\n                        boxShadow: '0px 0px 10px 2px rgba(0, 0, 0, 0.15)',\n                    }}\n                >\n                        <span style={{\n                            display: 'inline-block',\n                            marginRight: '5px',\n                            width: '8px',\n                            height: '8px',\n                            borderRadius: '4px',\n                            background: payload[0].payload.color\n                        }}></span>\n                    {payload[0].name}\n                    <span style={{color: '#333333', marginLeft: '5px', fontSize: '13px'}}>${payload[0].value}</span>\n                </div> : <div></div>\n            );\n        };\n        const renderLegendPie = (props: any) => {\n            const { payload } = props;\n            return (\n                <div style={{marginRight: '150px'}}>\n                    {\n                        payload.map((entry: any, index: number) => (\n                            <div style={{marginBottom: '20px'}}>\n                                <span style={{\n                                    display: 'inline-block',\n                                    marginRight: '10px',\n                                    width: '16px',\n                                    height: '16px',\n                                    borderRadius: '8px',\n                                    background: entry.color\n                                }}></span>\n                                <span style={{color: '#666666', fontSize: '20px'}}>{entry.value}</span>\n                            </div>\n                        ))\n                    }\n                </div>\n            );\n        }\n\n        const lineData = [\n            {\n                \"name\": \"2020.07.20\",\n                \"Total liabilities\": 100,\n                \"NetAssets\": 200,\n                \"TotalAssets\": 300\n            },\n            {\n                \"name\": \"2020.08\",\n                \"Total liabilities\": 200,\n                \"NetAssets\": 300,\n                \"TotalAssets\": 400\n            },\n            {\n                \"name\": \"2020.08.10\",\n                \"Total liabilities\": 300,\n                \"NetAssets\": 400,\n                \"TotalAssets\": 500\n            },\n            {\n                \"name\": \"2020.08.20\",\n                \"Total liabilities\": 200,\n                \"NetAssets\": 300,\n                \"TotalAssets\": 400\n            },\n            {\n                \"name\": \"2020.09\",\n                \"Total liabilities\": 100,\n                \"NetAssets\": 200,\n                \"TotalAssets\": 300\n            },\n            {\n                \"name\": \"2020.09.10\",\n                \"Total liabilities\": 300,\n                \"NetAssets\": 400,\n                \"TotalAssets\": 500\n            },\n            {\n                \"name\": \"2020.09.20\",\n                \"Total liabilities\": 400,\n                \"NetAssets\": 500,\n                \"TotalAssets\": 600\n            },\n            {\n                \"name\": \"2020.10\",\n                \"Total liabilities\": 200,\n                \"NetAssets\": 300,\n                \"TotalAssets\": 400\n            },\n            {\n                \"name\": \"2020.10.10\",\n                \"Total liabilities\": 400,\n                \"NetAssets\": 500,\n                \"TotalAssets\": 600\n            },\n            {\n                \"name\": \"2020.10.20\",\n                \"Total liabilities\": 500,\n                \"NetAssets\": 600,\n                \"TotalAssets\": 700\n            },\n            {\n                \"name\": \"2020.11\",\n                \"Total liabilities\": 800,\n                \"NetAssets\": 700,\n                \"TotalAssets\": 900\n            },\n            {\n                \"name\": \"2020.11.10\",\n                \"Total liabilities\": 400,\n                \"NetAssets\": 500,\n                \"TotalAssets\": 600\n            }\n        ]\n        const renderActiveTooltipLine = (props: any) => {\n            const { payload } = props;\n            return (\n                <div\n                    style={{\n                        background: 'white',\n                        padding: '9px 12px',\n                        opacity: '0.92',\n                        width: '130px',\n                        height: '140px',\n                        borderRadius: '10px',\n                        boxShadow: '0px 0px 5px 2px rgba(0, 0, 0, 0.05)',\n                    }}\n                >\n                    {payload.map((point: any) => (\n                        <div\n                            key={point.name}\n                            style={{\n                                color: '#999999',\n                                padding: '3px 0',\n                                fontSize: '11px'\n                            }}\n                        >\n                            <div>\n                                <span style={{\n                                    display: 'inline-block',\n                                    marginRight: '5px',\n                                    width: '8px',\n                                    height: '8px',\n                                    borderRadius: '4px',\n                                    background: point.stroke\n                                }}></span>\n                                {point.name}\n                            </div>\n                            <span style={{color: '#333333', marginLeft: '13px', fontSize: '13px'}}>${point.value}</span>\n                        </div>\n                    ))}\n                </div>\n            );\n        };\n\n        const barInnerStyles = {\n            overlay: {\n                width: 115,\n                height: 30,\n                display: 'flex',\n                flexDirection: 'row' as 'row',\n                position: \"absolute\" as \"absolute\",\n                top: 0,\n                right: 0,\n            },\n            span: {\n                width: '3px',\n                height: '100%',\n                backgroundColor: '#FF7D30',\n                marginRight: '5px'\n            },\n            divWrapper: {\n                display: 'flex',\n                flexDirection: 'column' as 'column',\n            },\n            number: {\n                color: \"#333333\",\n                fontSize: \"13px\",\n            },\n            text: {\n                color: \"#999999\",\n                textAlign: 'center' as 'center',\n                fontSize: \"10px\",\n                lineHeight: '14px',\n            }\n        };\n        const barData = [\n            {\n                name: 'CLV', earnings: 25.03, color: '#FF7D30'\n            },\n            {\n                name: 'cETH', earnings: 20.03, color: '#FF71C5'\n            },\n            {\n                name: 'ACA', earnings: 15.03, color: '#406AFE'\n            },\n            {\n                name: 'aUSD', earnings: 10.03, color: '#F6883B'\n            },\n            {\n                name: 'bUSD', earnings: -10.03, color: '#FF71C5'\n            },\n            {\n                name: 'cUSD', earnings: -15.03, color: '#FF7D30'\n            }\n        ];\n        const BarLabel =(props: any) =>{\n            const { x, y, width, height, value } = props;\n            return (\n                <text x={x + width / 2} y={value > 0 ? y - 15 : y + 15} fill=\"#666666\" fontSize={11} textAnchor=\"middle\" dominantBaseline=\"middle\">\n                    {value > 0 ? `+$${value}` : `-$${value * -1}`}\n                </text>\n            )\n        }\n\n        return (\n            <AppBody>\n                <BodyWrapper>\n                    <BodyContent gap={'md'}>\n                        <Text fontSize='30px' fontWeight='bold' color='#333333' marginLeft='25px'>Assets distribution</Text>\n                        <PieChartWrapper>\n                            <ResponsiveContainer width='100%'>\n                                <PieChart width={380} height={380}>\n                                    {/*<Pie*/}\n                                    {/*    data={pieData}*/}\n                                    {/*    startAngle={90}*/}\n                                    {/*    endAngle={-270}*/}\n                                    {/*    cornerRadius={10}*/}\n                                    {/*    dataKey=\"value\"*/}\n                                    {/*    // cx={350}*/}\n                                    {/*    cx=\"50%\"*/}\n                                    {/*    cy=\"50%\"*/}\n                                    {/*    innerRadius=\"72%\"*/}\n                                    {/*    outerRadius=\"80%\"*/}\n                                    {/*    paddingAngle={3}*/}\n                                    {/*>*/}\n                                    {/*    {*/}\n                                    {/*        pieData.map((entry, index) => <Cell key={`cell-${index}`} fill={entry.color} />)*/}\n                                    {/*    }*/}\n                                    {/*</Pie>*/}\n                                    <Pie\n                                        data={pieData}\n                                        cx=\"50%\"\n                                        cy=\"50%\"\n                                        innerRadius=\"72%\"\n                                        outerRadius=\"80%\"\n                                        dataKey=\"value\"\n                                        paddingAngle={3}\n                                    >\n                                        {\n                                            pieData.map((entry, index) => <Cell key={`cell-${index}`} fill={entry.color} />)\n                                        }\n                                    </Pie>\n                                    <Tooltip content={renderActiveTooltipPie} />\n                                    <Legend align={'right'} verticalAlign={'middle'} layout={'vertical'} content={renderLegendPie} />\n                                </PieChart>\n                            </ResponsiveContainer>\n                            {/*<div style={pieInnerStyles.overlay}>*/}\n                            {/*    <span style={pieInnerStyles.number}>$234995.300</span>*/}\n                            {/*    <span style={pieInnerStyles.text}>Net assets</span>*/}\n                            {/*</div>*/}\n                        </PieChartWrapper>\n\n                        <Text fontSize='30px' fontWeight='bold' color='#333333' marginLeft='25px'>Assets trend</Text>\n                        <LineChartWrapper>\n                            <ResponsiveContainer width='100%' aspect={4.0/3.0}>\n                                <AreaChart style={{width: '315px'}} data={lineData}\n                                           margin={{ top: 10, right: 0, left: 0, bottom: 0 }}>\n                                    <defs>\n                                        <linearGradient id=\"colorLiabilities\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                            <stop offset=\"5%\" stopColor=\"#406AFE\" stopOpacity={0.3}/>\n                                            <stop offset=\"100%\" stopColor=\"#ffffff\" stopOpacity={0}/>\n                                        </linearGradient>\n                                        <linearGradient id=\"colorNetAssets\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                            <stop offset=\"5%\" stopColor=\"#FF71C5\" stopOpacity={0.3}/>\n                                            <stop offset=\"100%\" stopColor=\"#ffffff\" stopOpacity={0}/>\n                                        </linearGradient>\n                                        <linearGradient id=\"colorTotalAssets\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                            <stop offset=\"5%\" stopColor=\"#FF7D30\" stopOpacity={0.3}/>\n                                            <stop offset=\"100%\" stopColor=\"#ffffff\" stopOpacity={0}/>\n                                        </linearGradient>\n                                    </defs>\n                                    <XAxis dataKey=\"name\" axisLine={false} tickLine={false} ticks={[\"2020.08\", \"2020.09\", \"2020.10\", \"2020.11\"]} tick={{fill: '#666666', fontSize: 11}} interval={0} />\n                                    <Tooltip cursor={{ stroke: '#eeeeee', strokeWidth: 1, type: 'dashed' }} content={renderActiveTooltipLine} />\n                                    <Area activeDot={{ stroke: '#FF7D30', fill: '#ffffff', strokeWidth: 2, r: 4 }} type=\"monotone\" dataKey=\"TotalAssets\" stroke=\"#FF7D30\" strokeWidth={2} fillOpacity={1} fill=\"url(#colorTotalAssets)\" />\n                                    <Area activeDot={{ stroke: '#FF71C5', fill: '#ffffff', strokeWidth: 2, r: 4 }} type=\"monotone\" dataKey=\"NetAssets\" stroke=\"#FF71C5\" strokeWidth={2} fillOpacity={1} fill=\"url(#colorNetAssets)\" />\n                                    <Area activeDot={{ stroke: '#406AFE', fill: '#ffffff', strokeWidth: 2, r: 4 }} type=\"monotone\" dataKey=\"Total liabilities\" stroke=\"#406AFE\" strokeWidth={2} fillOpacity={1} fill=\"url(#colorLiabilities)\" />\n                                </AreaChart>\n                            </ResponsiveContainer>\n                        </LineChartWrapper>\n\n                        <Text fontSize='30px' fontWeight='bold' color='#333333' marginLeft='25px'>Profit and loss of assets</Text>\n                        <BarChartWrapper>\n                            <ResponsiveContainer width='100%' aspect={4.0/3.0}>\n                                <BarChart\n                                    data={barData}\n                                    margin={{\n                                        top: 60, right: 20, left: 20, bottom: 20,\n                                    }}\n                                >\n                                    <XAxis dx={-12} dataKey=\"name\" axisLine={false} tickLine={false} tick={{fill: '#666666', fontSize: 11, padding: '10px'}} interval={0} />\n                                    <ReferenceLine y={0} stroke=\"rgba(64, 106, 254, 0.12)\" strokeWidth={1} />\n                                    <Bar dataKey=\"earnings\" fill=\"#8884d8\" radius={[5, 5, 0, 0]}>\n                                        <LabelList\n                                            dataKey=\"earnings\"\n                                            position=\"top\"\n                                            content={<BarLabel />}\n                                        />\n                                        {\n                                            barData.map((entry) => (\n                                                <Cell fill={entry.color} width={16} />\n                                            ))\n                                        }\n                                    </Bar>\n                                </BarChart>\n                            </ResponsiveContainer>\n                            <div style={barInnerStyles.overlay}>\n                                <span style={barInnerStyles.span}></span>\n                                <div style={barInnerStyles.divWrapper}>\n                                    <span style={barInnerStyles.text}>Earnings today</span>\n                                    <span style={barInnerStyles.number}>$1254576.03</span>\n                                </div>\n                            </div>\n                        </BarChartWrapper>\n                    </BodyContent>\n                </BodyWrapper>\n            </AppBody>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}