{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar model_1 = require(\"../util/model\");\n\nvar CoordSysInfo = function () {\n  function CoordSysInfo(coordSysName) {\n    this.coordSysDims = [];\n    this.axisMap = util_1.createHashMap();\n    this.categoryAxisMap = util_1.createHashMap();\n    this.coordSysName = coordSysName;\n  }\n\n  return CoordSysInfo;\n}();\n\nfunction getCoordSysInfoBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = new CoordSysInfo(coordSysName);\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nexports.getCoordSysInfoBySeries = getCoordSysInfoBySeries;\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis', model_1.SINGLE_REFERRING).models[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis', model_1.SINGLE_REFERRING).models[0];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!xAxisModel) {\n        throw new Error('xAxis \"' + util_1.retrieve(seriesModel.get('xAxisIndex'), seriesModel.get('xAxisId'), 0) + '\" not found');\n      }\n\n      if (!yAxisModel) {\n        throw new Error('yAxis \"' + util_1.retrieve(seriesModel.get('xAxisIndex'), seriesModel.get('yAxisId'), 0) + '\" not found');\n      }\n    }\n\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex == null && (result.firstCategoryDimIndex = 1);\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis', model_1.SINGLE_REFERRING).models[0];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!singleAxisModel) {\n        throw new Error('singleAxis should be specified.');\n      }\n    }\n\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar', model_1.SINGLE_REFERRING).models[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!angleAxisModel) {\n        throw new Error('angleAxis option not found');\n      }\n\n      if (!radiusAxisModel) {\n        throw new Error('radiusAxis option not found');\n      }\n    }\n\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex == null && (result.firstCategoryDimIndex = 1);\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    util_1.each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel)) {\n        categoryAxisMap.set(axisDim, axisModel);\n\n        if (result.firstCategoryDimIndex == null) {\n          result.firstCategoryDimIndex = index;\n        }\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/model/referHelper.js"],"names":["exports","__esModule","util_1","require","model_1","CoordSysInfo","coordSysName","coordSysDims","axisMap","createHashMap","categoryAxisMap","getCoordSysInfoBySeries","seriesModel","get","result","fetch","fetchers","cartesian2d","xAxisModel","getReferringComponents","SINGLE_REFERRING","models","yAxisModel","process","env","NODE_ENV","Error","retrieve","set","isCategory","firstCategoryDimIndex","singleAxis","singleAxisModel","polar","polarModel","radiusAxisModel","findAxisModel","angleAxisModel","geo","parallel","ecModel","parallelModel","getComponent","dimensions","slice","each","parallelAxisIndex","axisIndex","index","axisModel","axisDim"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar model_1 = require(\"../util/model\");\n\nvar CoordSysInfo = function () {\n  function CoordSysInfo(coordSysName) {\n    this.coordSysDims = [];\n    this.axisMap = util_1.createHashMap();\n    this.categoryAxisMap = util_1.createHashMap();\n    this.coordSysName = coordSysName;\n  }\n\n  return CoordSysInfo;\n}();\n\nfunction getCoordSysInfoBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = new CoordSysInfo(coordSysName);\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nexports.getCoordSysInfoBySeries = getCoordSysInfoBySeries;\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis', model_1.SINGLE_REFERRING).models[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis', model_1.SINGLE_REFERRING).models[0];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!xAxisModel) {\n        throw new Error('xAxis \"' + util_1.retrieve(seriesModel.get('xAxisIndex'), seriesModel.get('xAxisId'), 0) + '\" not found');\n      }\n\n      if (!yAxisModel) {\n        throw new Error('yAxis \"' + util_1.retrieve(seriesModel.get('xAxisIndex'), seriesModel.get('yAxisId'), 0) + '\" not found');\n      }\n    }\n\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex == null && (result.firstCategoryDimIndex = 1);\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis', model_1.SINGLE_REFERRING).models[0];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!singleAxisModel) {\n        throw new Error('singleAxis should be specified.');\n      }\n    }\n\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar', model_1.SINGLE_REFERRING).models[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!angleAxisModel) {\n        throw new Error('angleAxis option not found');\n      }\n\n      if (!radiusAxisModel) {\n        throw new Error('radiusAxis option not found');\n      }\n    }\n\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex == null && (result.firstCategoryDimIndex = 1);\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    util_1.each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel)) {\n        categoryAxisMap.set(axisDim, axisModel);\n\n        if (result.firstCategoryDimIndex == null) {\n          result.firstCategoryDimIndex = index;\n        }\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}"]},"metadata":{},"sourceType":"script"}