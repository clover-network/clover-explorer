{"ast":null,"code":"import { checkRange } from '../util';\nimport BaseView from './base';\nexport default class MatrixSubView extends BaseView {\n  constructor(matrix, startRow, endRow, startColumn, endColumn) {\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\n    super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\n    this.startRow = startRow;\n    this.startColumn = startColumn;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.startRow + rowIndex, this.startColumn + columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.startRow + rowIndex, this.startColumn + columnIndex);\n  }\n\n}","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/ml-matrix/src/views/sub.js"],"names":["checkRange","BaseView","MatrixSubView","constructor","matrix","startRow","endRow","startColumn","endColumn","set","rowIndex","columnIndex","value","get"],"mappings":"AAAA,SAASA,UAAT,QAA2B,SAA3B;AAEA,OAAOC,QAAP,MAAqB,QAArB;AAEA,eAAe,MAAMC,aAAN,SAA4BD,QAA5B,CAAqC;AAClDE,EAAAA,WAAW,CAACC,MAAD,EAASC,QAAT,EAAmBC,MAAnB,EAA2BC,WAA3B,EAAwCC,SAAxC,EAAmD;AAC5DR,IAAAA,UAAU,CAACI,MAAD,EAASC,QAAT,EAAmBC,MAAnB,EAA2BC,WAA3B,EAAwCC,SAAxC,CAAV;AACA,UAAMJ,MAAN,EAAcE,MAAM,GAAGD,QAAT,GAAoB,CAAlC,EAAqCG,SAAS,GAAGD,WAAZ,GAA0B,CAA/D;AACA,SAAKF,QAAL,GAAgBA,QAAhB;AACA,SAAKE,WAAL,GAAmBA,WAAnB;AACD;;AAEDE,EAAAA,GAAG,CAACC,QAAD,EAAWC,WAAX,EAAwBC,KAAxB,EAA+B;AAChC,SAAKR,MAAL,CAAYK,GAAZ,CACE,KAAKJ,QAAL,GAAgBK,QADlB,EAEE,KAAKH,WAAL,GAAmBI,WAFrB,EAGEC,KAHF;AAKA,WAAO,IAAP;AACD;;AAEDC,EAAAA,GAAG,CAACH,QAAD,EAAWC,WAAX,EAAwB;AACzB,WAAO,KAAKP,MAAL,CAAYS,GAAZ,CACL,KAAKR,QAAL,GAAgBK,QADX,EAEL,KAAKH,WAAL,GAAmBI,WAFd,CAAP;AAID;;AAtBiD","sourcesContent":["import { checkRange } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSubView extends BaseView {\n  constructor(matrix, startRow, endRow, startColumn, endColumn) {\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\n    super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\n    this.startRow = startRow;\n    this.startColumn = startColumn;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex,\n      value,\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex,\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}