{"ast":null,"code":"import { each, isString } from '@antv/util';\n/**\n * 获取总计值\n * @param data\n * @param field\n */\n\nexport function getTotalValue(data, field) {\n  var total = null;\n  each(data, function (item) {\n    if (typeof item[field] === 'number') {\n      total += item[field];\n    }\n  });\n  return total;\n}\n/**\n * pie label offset adaptor\n */\n\nexport function adaptOffset(type, offset) {\n  var defaultOffset;\n\n  switch (type) {\n    case 'inner':\n      defaultOffset = '-30%';\n\n      if (isString(offset) && offset.endsWith('%')) {\n        return parseFloat(offset) * 0.01 > 0 ? defaultOffset : offset;\n      }\n\n      return offset < 0 ? offset : defaultOffset;\n\n    case 'outer':\n      defaultOffset = 12;\n\n      if (isString(offset) && offset.endsWith('%')) {\n        return parseFloat(offset) * 0.01 < 0 ? defaultOffset : offset;\n      }\n\n      return offset > 0 ? offset : defaultOffset;\n\n    default:\n      return offset;\n  }\n}","map":{"version":3,"sources":["../../../../src/plots/pie/utils/index.ts"],"names":[],"mappings":"AACA,SAAS,IAAT,EAAe,QAAf,QAA+B,YAA/B;AAEA;;;;AAIG;;AACH,OAAM,SAAU,aAAV,CAAwB,IAAxB,EAAoC,KAApC,EAAiD;AACrD,MAAI,KAAK,GAAG,IAAZ;AACA,EAAA,IAAI,CAAC,IAAD,EAAO,UAAC,IAAD,EAAK;AACd,QAAI,OAAO,IAAI,CAAC,KAAD,CAAX,KAAuB,QAA3B,EAAqC;AACnC,MAAA,KAAK,IAAI,IAAI,CAAC,KAAD,CAAb;AACD;AACF,GAJG,CAAJ;AAKA,SAAO,KAAP;AACD;AAED;;AAEG;;AACH,OAAM,SAAU,WAAV,CAAsB,IAAtB,EAAoC,MAApC,EAA4D;AAChE,MAAI,aAAJ;;AACA,UAAQ,IAAR;AACE,SAAK,OAAL;AACE,MAAA,aAAa,GAAG,MAAhB;;AACA,UAAI,QAAQ,CAAC,MAAD,CAAR,IAAoB,MAAM,CAAC,QAAP,CAAgB,GAAhB,CAAxB,EAA8C;AAC5C,eAAO,UAAU,CAAC,MAAD,CAAV,GAAqB,IAArB,GAA4B,CAA5B,GAAgC,aAAhC,GAAgD,MAAvD;AACD;;AACD,aAAO,MAAM,GAAG,CAAT,GAAa,MAAb,GAAsB,aAA7B;;AACF,SAAK,OAAL;AACE,MAAA,aAAa,GAAG,EAAhB;;AACA,UAAI,QAAQ,CAAC,MAAD,CAAR,IAAoB,MAAM,CAAC,QAAP,CAAgB,GAAhB,CAAxB,EAA8C;AAC5C,eAAO,UAAU,CAAC,MAAD,CAAV,GAAqB,IAArB,GAA4B,CAA5B,GAAgC,aAAhC,GAAgD,MAAvD;AACD;;AACD,aAAO,MAAM,GAAG,CAAT,GAAa,MAAb,GAAsB,aAA7B;;AACF;AACE,aAAO,MAAP;AAdJ;AAgBD","sourcesContent":["import { Data } from '@antv/g2/lib/interface';\nimport { each, isString } from '@antv/util';\n\n/**\n * 获取总计值\n * @param data\n * @param field\n */\nexport function getTotalValue(data: Data, field: string) {\n  let total = null;\n  each(data, (item) => {\n    if (typeof item[field] === 'number') {\n      total += item[field];\n    }\n  });\n  return total;\n}\n\n/**\n * pie label offset adaptor\n */\nexport function adaptOffset(type: string, offset?: string | number): string | number {\n  let defaultOffset;\n  switch (type) {\n    case 'inner':\n      defaultOffset = '-30%';\n      if (isString(offset) && offset.endsWith('%')) {\n        return parseFloat(offset) * 0.01 > 0 ? defaultOffset : offset;\n      }\n      return offset < 0 ? offset : defaultOffset;\n    case 'outer':\n      defaultOffset = 12;\n      if (isString(offset) && offset.endsWith('%')) {\n        return parseFloat(offset) * 0.01 < 0 ? defaultOffset : offset;\n      }\n      return offset > 0 ? offset : defaultOffset;\n    default:\n      return offset;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}