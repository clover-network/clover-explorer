{"ast":null,"code":"import { determination } from \"./utils/determination\";\nimport { interpose } from \"./utils/interpose\";\nimport { ols } from \"./utils/ols\";\nimport { visitPoints } from \"./utils/points\";\nexport default function () {\n  let x = d => d[0],\n      y = d => d[1],\n      domain;\n\n  function exponential(data) {\n    let n = 0,\n        Y = 0,\n        YL = 0,\n        XY = 0,\n        XYL = 0,\n        X2Y = 0,\n        xmin = domain ? +domain[0] : Infinity,\n        xmax = domain ? +domain[1] : -Infinity;\n    visitPoints(data, x, y, (dx, dy) => {\n      const ly = Math.log(dy),\n            xy = dx * dy;\n      ++n;\n      Y += (dy - Y) / n;\n      XY += (xy - XY) / n;\n      X2Y += (dx * xy - X2Y) / n;\n      YL += (dy * ly - YL) / n;\n      XYL += (xy * ly - XYL) / n;\n\n      if (!domain) {\n        if (dx < xmin) xmin = dx;\n        if (dx > xmax) xmax = dx;\n      }\n    });\n    let [a, b] = ols(XY / Y, YL / Y, XYL / Y, X2Y / Y);\n    a = Math.exp(a);\n\n    const fn = x => a * Math.exp(b * x),\n          out = interpose(xmin, xmax, fn);\n\n    out.a = a;\n    out.b = b;\n    out.predict = fn;\n    out.rSquared = determination(data, x, y, Y, fn);\n    return out;\n  }\n\n  exponential.domain = function (arr) {\n    return arguments.length ? (domain = arr, exponential) : domain;\n  };\n\n  exponential.x = function (fn) {\n    return arguments.length ? (x = fn, exponential) : x;\n  };\n\n  exponential.y = function (fn) {\n    return arguments.length ? (y = fn, exponential) : y;\n  };\n\n  return exponential;\n}","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/d3-regression/src/exponential.js"],"names":["determination","interpose","ols","visitPoints","x","d","y","domain","exponential","data","n","Y","YL","XY","XYL","X2Y","xmin","Infinity","xmax","dx","dy","ly","Math","log","xy","a","b","exp","fn","out","predict","rSquared","arr","arguments","length"],"mappings":"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","sourcesContent":["import { determination } from \"./utils/determination\";\nimport { interpose } from \"./utils/interpose\";\nimport { ols } from \"./utils/ols\";\nimport { visitPoints } from \"./utils/points\";\n\nexport default function() {\n  let x = d => d[0],\n      y = d => d[1],\n      domain;\n   \n  function exponential(data){\n    let n = 0,\n        Y = 0,\n        YL = 0,\n        XY = 0,\n        XYL = 0,\n        X2Y = 0,\n        xmin = domain ? +domain[0] : Infinity,\n        xmax = domain ? +domain[1] : -Infinity;\n\n    visitPoints(data, x, y, (dx, dy) => {\n      const ly = Math.log(dy), xy = dx * dy;\n      ++n;\n      Y += (dy - Y) / n;\n      XY += (xy - XY) / n;\n      X2Y += (dx * xy - X2Y) / n;\n      YL += (dy * ly - YL) / n;\n      XYL += (xy * ly - XYL) / n;\n      \n      if (!domain){\n        if (dx < xmin) xmin = dx;\n        if (dx > xmax) xmax = dx;\n      }\n    });\n    \n    let [a, b] = ols(XY / Y, YL / Y, XYL / Y, X2Y / Y);\n    a = Math.exp(a);\n    const fn = x => a * Math.exp(b * x),\n          out = interpose(xmin, xmax, fn);\n    \n    out.a = a;\n    out.b = b;\n    out.predict = fn;\n    out.rSquared = determination(data, x, y, Y, fn);\n    \n    return out;  \n  }\n\n  exponential.domain = function(arr){\n    return arguments.length ? (domain = arr, exponential) : domain;\n  }  \n  \n  exponential.x = function(fn){\n    return arguments.length ? (x = fn, exponential) : x;\n  }\n\n  exponential.y = function(fn){\n    return arguments.length ? (y = fn, exponential) : y;\n  }\n  \n  return exponential;\n}"]},"metadata":{},"sourceType":"module"}