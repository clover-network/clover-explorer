{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar number_1 = require(\"../../util/number\");\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar log_1 = require(\"../../util/log\");\n\nfunction parseDataValue(value, opt) {\n  var dimType = opt && opt.type;\n\n  if (dimType === 'ordinal') {\n    var ordinalMeta = opt && opt.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' && typeof value !== 'number' && value != null && value !== '-') {\n    value = +number_1.parseDate(value);\n  }\n\n  return value == null || value === '' ? NaN : +value;\n}\n\nexports.parseDataValue = parseDataValue;\n;\nvar valueParserMap = util_1.createHashMap({\n  'number': function (val) {\n    return parseFloat(val);\n  },\n  'time': function (val) {\n    return +number_1.parseDate(val);\n  },\n  'trim': function (val) {\n    return typeof val === 'string' ? util_1.trim(val) : val;\n  }\n});\n\nfunction getRawValueParser(type) {\n  return valueParserMap.get(type);\n}\n\nexports.getRawValueParser = getRawValueParser;\nvar ORDER_COMPARISON_OP_MAP = {\n  lt: function (lval, rval) {\n    return lval < rval;\n  },\n  lte: function (lval, rval) {\n    return lval <= rval;\n  },\n  gt: function (lval, rval) {\n    return lval > rval;\n  },\n  gte: function (lval, rval) {\n    return lval >= rval;\n  }\n};\n\nvar FilterOrderComparator = function () {\n  function FilterOrderComparator(op, rval) {\n    if (typeof rval !== 'number') {\n      var errMsg = '';\n\n      if (process.env.NODE_ENV !== 'production') {\n        errMsg = 'rvalue of \"<\", \">\", \"<=\", \">=\" can only be number in filter.';\n      }\n\n      log_1.throwError(errMsg);\n    }\n\n    this._opFn = ORDER_COMPARISON_OP_MAP[op];\n    this._rvalFloat = number_1.numericToNumber(rval);\n  }\n\n  FilterOrderComparator.prototype.evaluate = function (lval) {\n    return typeof lval === 'number' ? this._opFn(lval, this._rvalFloat) : this._opFn(number_1.numericToNumber(lval), this._rvalFloat);\n  };\n\n  return FilterOrderComparator;\n}();\n\nvar SortOrderComparator = function () {\n  function SortOrderComparator(order, incomparable) {\n    var isDesc = order === 'desc';\n    this._resultLT = isDesc ? 1 : -1;\n\n    if (incomparable == null) {\n      incomparable = isDesc ? 'min' : 'max';\n    }\n\n    this._incomparable = incomparable === 'min' ? -Infinity : Infinity;\n  }\n\n  SortOrderComparator.prototype.evaluate = function (lval, rval) {\n    var lvalTypeof = typeof lval;\n    var rvalTypeof = typeof rval;\n    var lvalFloat = lvalTypeof === 'number' ? lval : number_1.numericToNumber(lval);\n    var rvalFloat = rvalTypeof === 'number' ? rval : number_1.numericToNumber(rval);\n    var lvalNotNumeric = isNaN(lvalFloat);\n    var rvalNotNumeric = isNaN(rvalFloat);\n\n    if (lvalNotNumeric) {\n      lvalFloat = this._incomparable;\n    }\n\n    if (rvalNotNumeric) {\n      rvalFloat = this._incomparable;\n    }\n\n    if (lvalNotNumeric && rvalNotNumeric) {\n      var lvalIsStr = lvalTypeof === 'string';\n      var rvalIsStr = rvalTypeof === 'string';\n\n      if (lvalIsStr) {\n        lvalFloat = rvalIsStr ? lval : 0;\n      }\n\n      if (rvalIsStr) {\n        rvalFloat = lvalIsStr ? rval : 0;\n      }\n    }\n\n    return lvalFloat < rvalFloat ? this._resultLT : lvalFloat > rvalFloat ? -this._resultLT : 0;\n  };\n\n  return SortOrderComparator;\n}();\n\nexports.SortOrderComparator = SortOrderComparator;\n\nvar FilterEqualityComparator = function () {\n  function FilterEqualityComparator(isEq, rval) {\n    this._rval = rval;\n    this._isEQ = isEq;\n    this._rvalTypeof = typeof rval;\n    this._rvalFloat = number_1.numericToNumber(rval);\n  }\n\n  FilterEqualityComparator.prototype.evaluate = function (lval) {\n    var eqResult = lval === this._rval;\n\n    if (!eqResult) {\n      var lvalTypeof = typeof lval;\n\n      if (lvalTypeof !== this._rvalTypeof && (lvalTypeof === 'number' || this._rvalTypeof === 'number')) {\n        eqResult = number_1.numericToNumber(lval) === this._rvalFloat;\n      }\n    }\n\n    return this._isEQ ? eqResult : !eqResult;\n  };\n\n  return FilterEqualityComparator;\n}();\n\nfunction createFilterComparator(op, rval) {\n  return op === 'eq' || op === 'ne' ? new FilterEqualityComparator(op === 'eq', rval) : util_1.hasOwn(ORDER_COMPARISON_OP_MAP, op) ? new FilterOrderComparator(op, rval) : null;\n}\n\nexports.createFilterComparator = createFilterComparator;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/data/helper/dataValueHelper.js"],"names":["exports","__esModule","number_1","require","util_1","log_1","parseDataValue","value","opt","dimType","type","ordinalMeta","parseAndCollect","parseDate","NaN","valueParserMap","createHashMap","val","parseFloat","trim","getRawValueParser","get","ORDER_COMPARISON_OP_MAP","lt","lval","rval","lte","gt","gte","FilterOrderComparator","op","errMsg","process","env","NODE_ENV","throwError","_opFn","_rvalFloat","numericToNumber","prototype","evaluate","SortOrderComparator","order","incomparable","isDesc","_resultLT","_incomparable","Infinity","lvalTypeof","rvalTypeof","lvalFloat","rvalFloat","lvalNotNumeric","isNaN","rvalNotNumeric","lvalIsStr","rvalIsStr","FilterEqualityComparator","isEq","_rval","_isEQ","_rvalTypeof","eqResult","createFilterComparator","hasOwn"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar number_1 = require(\"../../util/number\");\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar log_1 = require(\"../../util/log\");\n\nfunction parseDataValue(value, opt) {\n  var dimType = opt && opt.type;\n\n  if (dimType === 'ordinal') {\n    var ordinalMeta = opt && opt.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' && typeof value !== 'number' && value != null && value !== '-') {\n    value = +number_1.parseDate(value);\n  }\n\n  return value == null || value === '' ? NaN : +value;\n}\n\nexports.parseDataValue = parseDataValue;\n;\nvar valueParserMap = util_1.createHashMap({\n  'number': function (val) {\n    return parseFloat(val);\n  },\n  'time': function (val) {\n    return +number_1.parseDate(val);\n  },\n  'trim': function (val) {\n    return typeof val === 'string' ? util_1.trim(val) : val;\n  }\n});\n\nfunction getRawValueParser(type) {\n  return valueParserMap.get(type);\n}\n\nexports.getRawValueParser = getRawValueParser;\nvar ORDER_COMPARISON_OP_MAP = {\n  lt: function (lval, rval) {\n    return lval < rval;\n  },\n  lte: function (lval, rval) {\n    return lval <= rval;\n  },\n  gt: function (lval, rval) {\n    return lval > rval;\n  },\n  gte: function (lval, rval) {\n    return lval >= rval;\n  }\n};\n\nvar FilterOrderComparator = function () {\n  function FilterOrderComparator(op, rval) {\n    if (typeof rval !== 'number') {\n      var errMsg = '';\n\n      if (process.env.NODE_ENV !== 'production') {\n        errMsg = 'rvalue of \"<\", \">\", \"<=\", \">=\" can only be number in filter.';\n      }\n\n      log_1.throwError(errMsg);\n    }\n\n    this._opFn = ORDER_COMPARISON_OP_MAP[op];\n    this._rvalFloat = number_1.numericToNumber(rval);\n  }\n\n  FilterOrderComparator.prototype.evaluate = function (lval) {\n    return typeof lval === 'number' ? this._opFn(lval, this._rvalFloat) : this._opFn(number_1.numericToNumber(lval), this._rvalFloat);\n  };\n\n  return FilterOrderComparator;\n}();\n\nvar SortOrderComparator = function () {\n  function SortOrderComparator(order, incomparable) {\n    var isDesc = order === 'desc';\n    this._resultLT = isDesc ? 1 : -1;\n\n    if (incomparable == null) {\n      incomparable = isDesc ? 'min' : 'max';\n    }\n\n    this._incomparable = incomparable === 'min' ? -Infinity : Infinity;\n  }\n\n  SortOrderComparator.prototype.evaluate = function (lval, rval) {\n    var lvalTypeof = typeof lval;\n    var rvalTypeof = typeof rval;\n    var lvalFloat = lvalTypeof === 'number' ? lval : number_1.numericToNumber(lval);\n    var rvalFloat = rvalTypeof === 'number' ? rval : number_1.numericToNumber(rval);\n    var lvalNotNumeric = isNaN(lvalFloat);\n    var rvalNotNumeric = isNaN(rvalFloat);\n\n    if (lvalNotNumeric) {\n      lvalFloat = this._incomparable;\n    }\n\n    if (rvalNotNumeric) {\n      rvalFloat = this._incomparable;\n    }\n\n    if (lvalNotNumeric && rvalNotNumeric) {\n      var lvalIsStr = lvalTypeof === 'string';\n      var rvalIsStr = rvalTypeof === 'string';\n\n      if (lvalIsStr) {\n        lvalFloat = rvalIsStr ? lval : 0;\n      }\n\n      if (rvalIsStr) {\n        rvalFloat = lvalIsStr ? rval : 0;\n      }\n    }\n\n    return lvalFloat < rvalFloat ? this._resultLT : lvalFloat > rvalFloat ? -this._resultLT : 0;\n  };\n\n  return SortOrderComparator;\n}();\n\nexports.SortOrderComparator = SortOrderComparator;\n\nvar FilterEqualityComparator = function () {\n  function FilterEqualityComparator(isEq, rval) {\n    this._rval = rval;\n    this._isEQ = isEq;\n    this._rvalTypeof = typeof rval;\n    this._rvalFloat = number_1.numericToNumber(rval);\n  }\n\n  FilterEqualityComparator.prototype.evaluate = function (lval) {\n    var eqResult = lval === this._rval;\n\n    if (!eqResult) {\n      var lvalTypeof = typeof lval;\n\n      if (lvalTypeof !== this._rvalTypeof && (lvalTypeof === 'number' || this._rvalTypeof === 'number')) {\n        eqResult = number_1.numericToNumber(lval) === this._rvalFloat;\n      }\n    }\n\n    return this._isEQ ? eqResult : !eqResult;\n  };\n\n  return FilterEqualityComparator;\n}();\n\nfunction createFilterComparator(op, rval) {\n  return op === 'eq' || op === 'ne' ? new FilterEqualityComparator(op === 'eq', rval) : util_1.hasOwn(ORDER_COMPARISON_OP_MAP, op) ? new FilterOrderComparator(op, rval) : null;\n}\n\nexports.createFilterComparator = createFilterComparator;"]},"metadata":{},"sourceType":"script"}