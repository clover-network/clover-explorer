{"ast":null,"code":"import isArray from '@antv/util/lib/is-array';\nimport isNil from '@antv/util/lib/is-nil';\nimport isNumber from '@antv/util/lib/is-number';\nimport isString from '@antv/util/lib/is-string';\nimport { G6GraphEvent } from '../interface/behavior';\n/**\n * turn padding into [top, right, bottom, right]\n * @param  {Number|Array} padding input padding\n * @return {array} output\n */\n\nexport var formatPadding = function formatPadding(padding) {\n  var top = 0;\n  var left = 0;\n  var right = 0;\n  var bottom = 0;\n\n  if (isNumber(padding)) {\n    top = left = right = bottom = padding;\n  } else if (isString(padding)) {\n    var intPadding = parseInt(padding, 10);\n    top = left = right = bottom = intPadding;\n  } else if (isArray(padding)) {\n    top = padding[0];\n    right = !isNil(padding[1]) ? padding[1] : padding[0];\n    bottom = !isNil(padding[2]) ? padding[2] : padding[0];\n    left = !isNil(padding[3]) ? padding[3] : right;\n  }\n\n  return [top, right, bottom, left];\n};\n/**\n * clone event\n * @param e\n */\n\nexport var cloneEvent = function cloneEvent(e) {\n  var event = new G6GraphEvent(e.type, e);\n  event.clientX = e.clientX;\n  event.clientY = e.clientY;\n  event.x = e.x;\n  event.y = e.y;\n  event.target = e.target;\n  event.currentTarget = e.currentTarget;\n  event.bubbles = true;\n  event.item = e.item;\n  return event;\n};\n/**\n * 判断 viewport 是否改变，通过和单位矩阵对比\n * @param matrix Viewport 的 Matrix\n */\n\nexport var isViewportChanged = function isViewportChanged(matrix) {\n  // matrix 为 null， 则说明没有变化\n  if (!matrix) {\n    return false;\n  }\n\n  var MATRIX_LEN = 9;\n  var ORIGIN_MATRIX = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n  for (var i = 0; i < MATRIX_LEN; i++) {\n    if (matrix[i] !== ORIGIN_MATRIX[i]) {\n      return true;\n    }\n  }\n\n  return false;\n};\nexport var isNaN = function isNaN(input) {\n  return Number.isNaN(Number(input));\n};\n/**\n * 计算一组 Item 的 BBox\n * @param items 选中的一组Item，可以是 node 或 combo\n */\n\nexport var calculationItemsBBox = function calculationItemsBBox(items) {\n  var minx = Infinity;\n  var maxx = -Infinity;\n  var miny = Infinity;\n  var maxy = -Infinity; // 获取已节点的所有最大最小x y值\n\n  for (var i = 0; i < items.length; i++) {\n    var element = items[i];\n    var bbox = element.getBBox();\n    var minX = bbox.minX,\n        minY = bbox.minY,\n        maxX = bbox.maxX,\n        maxY = bbox.maxY;\n\n    if (minX < minx) {\n      minx = minX;\n    }\n\n    if (minY < miny) {\n      miny = minY;\n    }\n\n    if (maxX > maxx) {\n      maxx = maxX;\n    }\n\n    if (maxY > maxy) {\n      maxy = maxY;\n    }\n  }\n\n  var x = Math.floor(minx);\n  var y = Math.floor(miny);\n  var width = Math.ceil(maxx) - Math.floor(minx);\n  var height = Math.ceil(maxy) - Math.floor(miny);\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    minX: minx,\n    minY: miny,\n    maxX: maxx,\n    maxY: maxy\n  };\n};\n/**\n * 若 edges 中存在两端点相同的边，使用 quadratic 边并自动计算 curveOffset 使它们不相互重叠\n * @param edges 边数据集合\n * @param offsetDiff 相邻两边的 offset 之差\n */\n\nexport var processParallelEdges = function processParallelEdges(edges, offsetDiff) {\n  if (offsetDiff === void 0) {\n    offsetDiff = 15;\n  }\n\n  var len = edges.length;\n  var cod = offsetDiff * 2;\n  var loopPosition = ['top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left', 'top-left'];\n  var edgeMap = {};\n  var tags = [];\n  var reverses = {};\n\n  for (var i = 0; i < len; i++) {\n    var edge = edges[i];\n    var source = edge.source,\n        target = edge.target;\n    var sourceTarget = source + \"-\" + target;\n    if (tags[i]) continue;\n\n    if (!edgeMap[sourceTarget]) {\n      edgeMap[sourceTarget] = [];\n    }\n\n    tags[i] = true;\n    edgeMap[sourceTarget].push(edge);\n\n    for (var j = 0; j < len; j++) {\n      if (i === j) continue;\n      var sedge = edges[j];\n      var src = sedge.source;\n      var dst = sedge.target; // 两个节点之间共同的边\n      // 第一条的source = 第二条的target\n      // 第一条的target = 第二条的source\n\n      if (!tags[j]) {\n        if (source === dst && target === src) {\n          edgeMap[sourceTarget].push(sedge);\n          tags[j] = true;\n          reverses[src + \"|\" + dst + \"|\" + (edgeMap[sourceTarget].length - 1)] = true;\n        } else if (source === src && target === dst) {\n          edgeMap[sourceTarget].push(sedge);\n          tags[j] = true;\n        }\n      }\n    }\n  }\n\n  for (var key in edgeMap) {\n    var arcEdges = edgeMap[key];\n    var length_1 = arcEdges.length;\n\n    for (var k = 0; k < length_1; k++) {\n      var current = arcEdges[k];\n\n      if (current.source === current.target) {\n        current.type = 'loop'; // 超过8条自环边，则需要重新处理\n\n        current.loopCfg = {\n          position: loopPosition[k % 8],\n          dist: Math.floor(k / 8) * 20 + 50\n        };\n        continue;\n      }\n\n      current.type = 'quadratic';\n      var sign = (k % 2 === 0 ? 1 : -1) * (reverses[current.source + \"|\" + current.target + \"|\" + k] ? -1 : 1);\n\n      if (length_1 % 2 === 1) {\n        current.curveOffset = sign * Math.ceil(k / 2) * cod;\n      } else {\n        current.curveOffset = sign * (Math.floor(k / 2) * cod + offsetDiff);\n      }\n    }\n  }\n\n  return edges;\n};","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@antv/g6/es/util/base.js"],"names":["isArray","isNil","isNumber","isString","G6GraphEvent","formatPadding","padding","top","left","right","bottom","intPadding","parseInt","cloneEvent","e","event","type","clientX","clientY","x","y","target","currentTarget","bubbles","item","isViewportChanged","matrix","MATRIX_LEN","ORIGIN_MATRIX","i","isNaN","input","Number","calculationItemsBBox","items","minx","Infinity","maxx","miny","maxy","length","element","bbox","getBBox","minX","minY","maxX","maxY","Math","floor","width","ceil","height","processParallelEdges","edges","offsetDiff","len","cod","loopPosition","edgeMap","tags","reverses","edge","source","sourceTarget","push","j","sedge","src","dst","key","arcEdges","length_1","k","current","loopCfg","position","dist","sign","curveOffset"],"mappings":"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","sourcesContent":["import isArray from '@antv/util/lib/is-array';\nimport isNil from '@antv/util/lib/is-nil';\nimport isNumber from '@antv/util/lib/is-number';\nimport isString from '@antv/util/lib/is-string';\nimport { G6GraphEvent } from '../interface/behavior';\n/**\n * turn padding into [top, right, bottom, right]\n * @param  {Number|Array} padding input padding\n * @return {array} output\n */\n\nexport var formatPadding = function formatPadding(padding) {\n  var top = 0;\n  var left = 0;\n  var right = 0;\n  var bottom = 0;\n\n  if (isNumber(padding)) {\n    top = left = right = bottom = padding;\n  } else if (isString(padding)) {\n    var intPadding = parseInt(padding, 10);\n    top = left = right = bottom = intPadding;\n  } else if (isArray(padding)) {\n    top = padding[0];\n    right = !isNil(padding[1]) ? padding[1] : padding[0];\n    bottom = !isNil(padding[2]) ? padding[2] : padding[0];\n    left = !isNil(padding[3]) ? padding[3] : right;\n  }\n\n  return [top, right, bottom, left];\n};\n/**\n * clone event\n * @param e\n */\n\nexport var cloneEvent = function cloneEvent(e) {\n  var event = new G6GraphEvent(e.type, e);\n  event.clientX = e.clientX;\n  event.clientY = e.clientY;\n  event.x = e.x;\n  event.y = e.y;\n  event.target = e.target;\n  event.currentTarget = e.currentTarget;\n  event.bubbles = true;\n  event.item = e.item;\n  return event;\n};\n/**\n * 判断 viewport 是否改变，通过和单位矩阵对比\n * @param matrix Viewport 的 Matrix\n */\n\nexport var isViewportChanged = function isViewportChanged(matrix) {\n  // matrix 为 null， 则说明没有变化\n  if (!matrix) {\n    return false;\n  }\n\n  var MATRIX_LEN = 9;\n  var ORIGIN_MATRIX = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n  for (var i = 0; i < MATRIX_LEN; i++) {\n    if (matrix[i] !== ORIGIN_MATRIX[i]) {\n      return true;\n    }\n  }\n\n  return false;\n};\nexport var isNaN = function isNaN(input) {\n  return Number.isNaN(Number(input));\n};\n/**\n * 计算一组 Item 的 BBox\n * @param items 选中的一组Item，可以是 node 或 combo\n */\n\nexport var calculationItemsBBox = function calculationItemsBBox(items) {\n  var minx = Infinity;\n  var maxx = -Infinity;\n  var miny = Infinity;\n  var maxy = -Infinity; // 获取已节点的所有最大最小x y值\n\n  for (var i = 0; i < items.length; i++) {\n    var element = items[i];\n    var bbox = element.getBBox();\n    var minX = bbox.minX,\n        minY = bbox.minY,\n        maxX = bbox.maxX,\n        maxY = bbox.maxY;\n\n    if (minX < minx) {\n      minx = minX;\n    }\n\n    if (minY < miny) {\n      miny = minY;\n    }\n\n    if (maxX > maxx) {\n      maxx = maxX;\n    }\n\n    if (maxY > maxy) {\n      maxy = maxY;\n    }\n  }\n\n  var x = Math.floor(minx);\n  var y = Math.floor(miny);\n  var width = Math.ceil(maxx) - Math.floor(minx);\n  var height = Math.ceil(maxy) - Math.floor(miny);\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    minX: minx,\n    minY: miny,\n    maxX: maxx,\n    maxY: maxy\n  };\n};\n/**\n * 若 edges 中存在两端点相同的边，使用 quadratic 边并自动计算 curveOffset 使它们不相互重叠\n * @param edges 边数据集合\n * @param offsetDiff 相邻两边的 offset 之差\n */\n\nexport var processParallelEdges = function processParallelEdges(edges, offsetDiff) {\n  if (offsetDiff === void 0) {\n    offsetDiff = 15;\n  }\n\n  var len = edges.length;\n  var cod = offsetDiff * 2;\n  var loopPosition = ['top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left', 'top-left'];\n  var edgeMap = {};\n  var tags = [];\n  var reverses = {};\n\n  for (var i = 0; i < len; i++) {\n    var edge = edges[i];\n    var source = edge.source,\n        target = edge.target;\n    var sourceTarget = source + \"-\" + target;\n    if (tags[i]) continue;\n\n    if (!edgeMap[sourceTarget]) {\n      edgeMap[sourceTarget] = [];\n    }\n\n    tags[i] = true;\n    edgeMap[sourceTarget].push(edge);\n\n    for (var j = 0; j < len; j++) {\n      if (i === j) continue;\n      var sedge = edges[j];\n      var src = sedge.source;\n      var dst = sedge.target; // 两个节点之间共同的边\n      // 第一条的source = 第二条的target\n      // 第一条的target = 第二条的source\n\n      if (!tags[j]) {\n        if (source === dst && target === src) {\n          edgeMap[sourceTarget].push(sedge);\n          tags[j] = true;\n          reverses[src + \"|\" + dst + \"|\" + (edgeMap[sourceTarget].length - 1)] = true;\n        } else if (source === src && target === dst) {\n          edgeMap[sourceTarget].push(sedge);\n          tags[j] = true;\n        }\n      }\n    }\n  }\n\n  for (var key in edgeMap) {\n    var arcEdges = edgeMap[key];\n    var length_1 = arcEdges.length;\n\n    for (var k = 0; k < length_1; k++) {\n      var current = arcEdges[k];\n\n      if (current.source === current.target) {\n        current.type = 'loop'; // 超过8条自环边，则需要重新处理\n\n        current.loopCfg = {\n          position: loopPosition[k % 8],\n          dist: Math.floor(k / 8) * 20 + 50\n        };\n        continue;\n      }\n\n      current.type = 'quadratic';\n      var sign = (k % 2 === 0 ? 1 : -1) * (reverses[current.source + \"|\" + current.target + \"|\" + k] ? -1 : 1);\n\n      if (length_1 % 2 === 1) {\n        current.curveOffset = sign * Math.ceil(k / 2) * cod;\n      } else {\n        current.curveOffset = sign * (Math.floor(k / 2) * cod + offsetDiff);\n      }\n    }\n  }\n\n  return edges;\n};"]},"metadata":{},"sourceType":"module"}