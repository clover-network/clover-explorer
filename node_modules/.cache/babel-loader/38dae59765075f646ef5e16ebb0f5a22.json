{"ast":null,"code":"var _jsxFileName = \"/Users/wanglijie/wanglijie/clover-defi-wallet/src/pages/AssetsMDetails/index.tsx\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Text } from 'rebass';\nimport AppBody from '../AppBody';\nimport { AutoColumn } from '../../components/Column';\nimport { RowBetween } from '../../components/Row';\nimport CloseBtn from \"../../assets/images/closeBtn.svg\"; // import { ResponsivePie } from '@nivo/pie';\n// import { ResponsiveLine } from '@nivo/line';\n// import { ResponsiveBar } from \"@nivo/bar\";\n// import { getOrdinalColorScale } from '@nivo/colors';\n\nimport { PieChart, Pie, Cell } from 'recharts';\nconst BodyWrapper = styled(AutoColumn)`\n`;\nconst HeadContainer = styled(RowBetween)`\n  margin-top: 50px;\n  padding: 0 20px;\n  height: 44px;\n`;\nconst LineChartWrapper = styled.div`\n  margin: 0 30px;\n  height: 250px;\n  background: linear-gradient(180deg,#FFFFFF 0%, #FFF6FA 50%, #FFFFFF 100%);\n  border-radius: 15px;\n`;\nconst BarChartWrapper = styled.div`\n  position: relative;\n  margin: 20px 30px;\n  height: 220px;\n  background: linear-gradient(180deg, #FFFFFF 0%, #EFFBFF 50%, #FFFFFF 100%);\n  border-radius: 15px;\n`;\nexport default class AssetsMDetail extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.goBack = () => {\n      this.props.history.goBack();\n    };\n  }\n\n  render() {\n    const pieData = [{\n      \"id\": \"Total assets\",\n      \"label\": \"Total assets\",\n      \"value\": 75,\n      \"color\": \"#FF7D30\"\n    }, {\n      \"id\": \"Total liabilities\",\n      \"label\": \"Total liabilities\",\n      \"value\": 25,\n      \"color\": \"#FF589D\"\n    }];\n    const pieInnerStyles = {\n      root: {\n        fontFamily: \"consolas, sans-serif\",\n        textAlign: \"center\",\n        position: \"relative\",\n        width: 600,\n        height: 600\n      },\n      overlay: {\n        height: 110,\n        width: 110,\n        borderRadius: '50%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        backgroundColor: '#ffffff',\n        boxShadow: '0px 5px 10px 2px rgba(255, 125, 48, 0.15)',\n        position: \"absolute\",\n        top: 200,\n        right: 133,\n        bottom: 0,\n        alignItems: \"center\"\n      },\n      number: {\n        color: \"#333333\",\n        fontSize: \"15px\",\n        fontWeight: 'bold'\n      },\n      text: {\n        color: \"#999999\",\n        fontSize: \"12px\",\n        fontWeight: \"normal\"\n      }\n    };\n    const lineData = [{\n      \"id\": \"Total liabilities\",\n      \"color\": \"#406AFE\",\n      \"data\": [{\n        \"x\": \"2020.07.20\",\n        \"y\": 50.00\n      }, {\n        \"x\": \"2020.08\",\n        \"y\": 100.00\n      }, {\n        \"x\": \"2020.08.10\",\n        \"y\": 400.00\n      }, {\n        \"x\": \"2020.08.20\",\n        \"y\": 150.00\n      }, {\n        \"x\": \"2020.09\",\n        \"y\": 490.00\n      }, {\n        \"x\": \"2020.09.10\",\n        \"y\": 300.00\n      }, {\n        \"x\": \"2020.09.20\",\n        \"y\": 200.00\n      }, {\n        \"x\": \"2020.10\",\n        \"y\": 300.00\n      }, {\n        \"x\": \"2020.10.10\",\n        \"y\": 500.00\n      }, {\n        \"x\": \"2020.10.20\",\n        \"y\": 890.00\n      }, {\n        \"x\": \"2020.11\",\n        \"y\": 450.00\n      }, {\n        \"x\": \"2020.11.10\",\n        \"y\": 500.00\n      }]\n    }, {\n      \"id\": \"NetAssets\",\n      \"color\": \"#FF71C5\",\n      \"data\": [{\n        \"x\": \"2020.07.20\",\n        \"y\": 100.00\n      }, {\n        \"x\": \"2020.08\",\n        \"y\": 200.00\n      }, {\n        \"x\": \"2020.08.10\",\n        \"y\": 500.00\n      }, {\n        \"x\": \"2020.08.20\",\n        \"y\": 350.00\n      }, {\n        \"x\": \"2020.09\",\n        \"y\": 590.00\n      }, {\n        \"x\": \"2020.09.10\",\n        \"y\": 400.00\n      }, {\n        \"x\": \"2020.09.20\",\n        \"y\": 300.00\n      }, {\n        \"x\": \"2020.10\",\n        \"y\": 400.00\n      }, {\n        \"x\": \"2020.10.10\",\n        \"y\": 600.00\n      }, {\n        \"x\": \"2020.10.20\",\n        \"y\": 790.00\n      }, {\n        \"x\": \"2020.11\",\n        \"y\": 550.00\n      }, {\n        \"x\": \"2020.11.10\",\n        \"y\": 600.00\n      }]\n    }, {\n      \"id\": \"TotalAssets\",\n      \"color\": \"#F6883B\",\n      \"data\": [{\n        \"x\": \"2020.07.20\",\n        \"y\": 200.00\n      }, {\n        \"x\": \"2020.08\",\n        \"y\": 300.00\n      }, {\n        \"x\": \"2020.08.10\",\n        \"y\": 600.00\n      }, {\n        \"x\": \"2020.08.20\",\n        \"y\": 450.00\n      }, {\n        \"x\": \"2020.09\",\n        \"y\": 790.00\n      }, {\n        \"x\": \"2020.09.10\",\n        \"y\": 600.00\n      }, {\n        \"x\": \"2020.09.20\",\n        \"y\": 500.00\n      }, {\n        \"x\": \"2020.10\",\n        \"y\": 600.00\n      }, {\n        \"x\": \"2020.10.10\",\n        \"y\": 800.00\n      }, {\n        \"x\": \"2020.10.20\",\n        \"y\": 990.00\n      }, {\n        \"x\": \"2020.11\",\n        \"y\": 750.00\n      }, {\n        \"x\": \"2020.11.10\",\n        \"y\": 800.00\n      }]\n    }];\n    const barData = [{\n      currency: 'CLV',\n      earnings: 25.03,\n      color: '#FF7D30'\n    }, {\n      currency: 'cETH',\n      earnings: 20.00,\n      color: '#FF71C5'\n    }, {\n      currency: 'ACA',\n      earnings: 15.00,\n      color: '#406AFE'\n    }, {\n      currency: 'aUSD',\n      earnings: 10.00,\n      color: '#F6883B'\n    }, {\n      currency: 'bUSD',\n      earnings: -10.00,\n      color: '#FF71C5'\n    }, {\n      currency: 'cUSD',\n      earnings: -15.00,\n      color: '#FF7D30'\n    }];\n\n    const BarComponent = props => {\n      return /*#__PURE__*/React.createElement(\"g\", {\n        transform: `translate(${props.x},${props.y})`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"rect\", {\n        width: props.width,\n        height: props.height,\n        fill: props.color,\n        rx: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"text\", {\n        x: props.width + 5,\n        y: props.data.value > 0 ? -17 : props.height + 17,\n        textAnchor: \"end\",\n        dominantBaseline: \"central\",\n        fill: \"#666666\",\n        style: {\n          fontWeight: 400,\n          fontSize: 13\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }\n      }, props.data.value > 0 ? `+$${props.data.value}` : `-$${props.data.value * -1}`));\n    };\n\n    const barInnerStyles = {\n      overlay: {\n        width: 115,\n        height: 30,\n        display: 'flex',\n        flexDirection: 'row',\n        position: \"absolute\",\n        top: 0,\n        right: 0\n      },\n      span: {\n        width: '3px',\n        height: '100%',\n        backgroundColor: '#FF7D30',\n        marginRight: '5px'\n      },\n      divWrapper: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      number: {\n        color: \"#333333\",\n        fontSize: \"13px\"\n      },\n      text: {\n        color: \"#999999\",\n        textAlign: 'center',\n        fontSize: \"10px\",\n        lineHeight: '14px'\n      }\n    };\n    const data = [{\n      name: 'Group A',\n      value: 400\n    }, {\n      name: 'Group B',\n      value: 300\n    }, {\n      name: 'Group C',\n      value: 300\n    }, {\n      name: 'Group D',\n      value: 200\n    }];\n    const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n    const renderPieChart = /*#__PURE__*/React.createElement(PieChart, {\n      width: 250,\n      height: 250,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Pie, {\n      data: data // cx={120}\n      // cy={200}\n      ,\n      innerRadius: 80,\n      outerRadius: 100,\n      fill: \"#8884d8\",\n      paddingAngle: 5,\n      cornerRadius: 5,\n      dataKey: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }\n    }, data.map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n      key: `cell-${index}`,\n      fill: COLORS[index % COLORS.length],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 52\n      }\n    }))));\n    return /*#__PURE__*/React.createElement(AppBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BodyWrapper, {\n      gap: 'md',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(HeadContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"23px\",\n      fontWeight: \"bold\",\n      color: \"#333333\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 25\n      }\n    }, \"Assets\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: CloseBtn,\n      alt: \"\",\n      width: \"15px\",\n      height: \"15px\",\n      onClick: this.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"18px\",\n      fontWeight: \"bold\",\n      color: \"#333333\",\n      marginLeft: \"25px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 21\n      }\n    }, \"Assets distribution\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 300\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 21\n      }\n    }, renderPieChart)));\n  }\n\n}","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/src/pages/AssetsMDetails/index.tsx"],"names":["React","Component","styled","Text","AppBody","AutoColumn","RowBetween","PieChart","Pie","Cell","BodyWrapper","HeadContainer","LineChartWrapper","div","BarChartWrapper","AssetsMDetail","goBack","props","history","render","pieData","pieInnerStyles","root","fontFamily","textAlign","position","width","height","overlay","borderRadius","display","flexDirection","justifyContent","backgroundColor","boxShadow","top","right","bottom","alignItems","number","color","fontSize","fontWeight","text","lineData","barData","currency","earnings","BarComponent","x","y","data","value","barInnerStyles","span","marginRight","divWrapper","lineHeight","name","COLORS","renderPieChart","map","entry","index","length","CloseBtn"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport styled from 'styled-components'\nimport { Text } from 'rebass'\nimport AppBody from '../AppBody'\nimport Column, { AutoColumn, ColumnCenter } from '../../components/Column'\nimport Row, {RowBetween, RowEnd} from '../../components/Row'\nimport CloseBtn from '../../assets/images/closeBtn.svg'\n// import { ResponsivePie } from '@nivo/pie';\n// import { ResponsiveLine } from '@nivo/line';\n// import { ResponsiveBar } from \"@nivo/bar\";\n// import { getOrdinalColorScale } from '@nivo/colors';\nimport { LineChart, Line, PieChart, Pie, Cell } from 'recharts';\n\nconst BodyWrapper = styled(AutoColumn)`\n`;\n\nconst HeadContainer = styled(RowBetween)`\n  margin-top: 50px;\n  padding: 0 20px;\n  height: 44px;\n`;\n\nconst LineChartWrapper = styled.div`\n  margin: 0 30px;\n  height: 250px;\n  background: linear-gradient(180deg,#FFFFFF 0%, #FFF6FA 50%, #FFFFFF 100%);\n  border-radius: 15px;\n`;\n\nconst BarChartWrapper = styled.div`\n  position: relative;\n  margin: 20px 30px;\n  height: 220px;\n  background: linear-gradient(180deg, #FFFFFF 0%, #EFFBFF 50%, #FFFFFF 100%);\n  border-radius: 15px;\n`;\n\nexport default class AssetsMDetail extends Component<any, any> {\n\n    goBack = () => {\n        this.props.history.goBack();\n    }\n    render() {\n        const pieData = [\n            {\n                \"id\": \"Total assets\",\n                \"label\": \"Total assets\",\n                \"value\": 75,\n                \"color\": \"#FF7D30\"\n            },\n            {\n                \"id\": \"Total liabilities\",\n                \"label\": \"Total liabilities\",\n                \"value\": 25,\n                \"color\": \"#FF589D\"\n            },\n        ];\n\n        const pieInnerStyles = {\n            root: {\n                fontFamily: \"consolas, sans-serif\",\n                textAlign: \"center\",\n                position: \"relative\",\n                width: 600,\n                height: 600,\n            },\n            overlay: {\n                height: 110,\n                width: 110,\n                borderRadius: '50%',\n                display: 'flex',\n                flexDirection: 'column' as 'column',\n                justifyContent: 'center' as 'center',\n                backgroundColor: '#ffffff',\n                boxShadow: '0px 5px 10px 2px rgba(255, 125, 48, 0.15)',\n                position: \"absolute\" as \"absolute\",\n                top: 200,\n                right: 133,\n                bottom: 0,\n                alignItems: \"center\" as \"center\",\n            },\n            number: {\n                color: \"#333333\",\n                fontSize: \"15px\",\n                fontWeight: 'bold' as 'bold'\n            },\n            text: {\n                color: \"#999999\",\n                fontSize: \"12px\",\n                fontWeight: \"normal\" as \"normal\"\n            }\n        };\n\n        const lineData = [\n            {\n                \"id\": \"Total liabilities\",\n                \"color\": \"#406AFE\",\n                \"data\": [\n                    {\n                        \"x\": \"2020.07.20\",\n                        \"y\": 50.00\n                    },\n                    {\n                        \"x\": \"2020.08\",\n                        \"y\": 100.00\n                    },\n                    {\n                        \"x\": \"2020.08.10\",\n                        \"y\": 400.00\n                    },\n                    {\n                        \"x\": \"2020.08.20\",\n                        \"y\": 150.00\n                    },\n                    {\n                        \"x\": \"2020.09\",\n                        \"y\": 490.00\n                    },\n                    {\n                        \"x\": \"2020.09.10\",\n                        \"y\": 300.00\n                    },\n                    {\n                        \"x\": \"2020.09.20\",\n                        \"y\": 200.00\n                    },\n                    {\n                        \"x\": \"2020.10\",\n                        \"y\": 300.00\n                    },\n                    {\n                        \"x\": \"2020.10.10\",\n                        \"y\": 500.00\n                    },\n                    {\n                        \"x\": \"2020.10.20\",\n                        \"y\": 890.00\n                    },\n                    {\n                        \"x\": \"2020.11\",\n                        \"y\": 450.00\n                    },\n                    {\n                        \"x\": \"2020.11.10\",\n                        \"y\": 500.00\n                    },\n                ]\n            },\n            {\n                \"id\": \"NetAssets\",\n                \"color\": \"#FF71C5\",\n                \"data\": [\n                    {\n                        \"x\": \"2020.07.20\",\n                        \"y\": 100.00\n                    },\n                    {\n                        \"x\": \"2020.08\",\n                        \"y\": 200.00\n                    },\n                    {\n                        \"x\": \"2020.08.10\",\n                        \"y\": 500.00\n                    },\n                    {\n                        \"x\": \"2020.08.20\",\n                        \"y\": 350.00\n                    },\n                    {\n                        \"x\": \"2020.09\",\n                        \"y\": 590.00\n                    },\n                    {\n                        \"x\": \"2020.09.10\",\n                        \"y\": 400.00\n                    },\n                    {\n                        \"x\": \"2020.09.20\",\n                        \"y\": 300.00\n                    },\n                    {\n                        \"x\": \"2020.10\",\n                        \"y\": 400.00\n                    },\n                    {\n                        \"x\": \"2020.10.10\",\n                        \"y\": 600.00\n                    },\n                    {\n                        \"x\": \"2020.10.20\",\n                        \"y\": 790.00\n                    },\n                    {\n                        \"x\": \"2020.11\",\n                        \"y\": 550.00\n                    },\n                    {\n                        \"x\": \"2020.11.10\",\n                        \"y\": 600.00\n                    },\n                ]\n            },\n            {\n                \"id\": \"TotalAssets\",\n                \"color\": \"#F6883B\",\n                \"data\": [\n                    {\n                        \"x\": \"2020.07.20\",\n                        \"y\": 200.00\n                    },\n                    {\n                        \"x\": \"2020.08\",\n                        \"y\": 300.00\n                    },\n                    {\n                        \"x\": \"2020.08.10\",\n                        \"y\": 600.00\n                    },\n                    {\n                        \"x\": \"2020.08.20\",\n                        \"y\": 450.00\n                    },\n                    {\n                        \"x\": \"2020.09\",\n                        \"y\": 790.00\n                    },\n                    {\n                        \"x\": \"2020.09.10\",\n                        \"y\": 600.00\n                    },\n                    {\n                        \"x\": \"2020.09.20\",\n                        \"y\": 500.00\n                    },\n                    {\n                        \"x\": \"2020.10\",\n                        \"y\": 600.00\n                    },\n                    {\n                        \"x\": \"2020.10.10\",\n                        \"y\": 800.00\n                    },\n                    {\n                        \"x\": \"2020.10.20\",\n                        \"y\": 990.00\n                    },\n                    {\n                        \"x\": \"2020.11\",\n                        \"y\": 750.00\n                    },\n                    {\n                        \"x\": \"2020.11.10\",\n                        \"y\": 800.00\n                    },\n                ]\n            },\n        ];\n\n        const barData = [\n            { currency: 'CLV', earnings: 25.03, color: '#FF7D30' },\n            { currency: 'cETH', earnings: 20.00, color: '#FF71C5' },\n            { currency: 'ACA', earnings: 15.00, color: '#406AFE' },\n            { currency: 'aUSD', earnings: 10.00, color: '#F6883B' },\n            { currency: 'bUSD', earnings: -10.00, color: '#FF71C5' },\n            { currency: 'cUSD', earnings: -15.00, color: '#FF7D30' }\n        ];\n\n        const BarComponent = (props: any) => {\n            return (\n                <g transform={`translate(${props.x},${props.y})`}>\n                    <rect\n                        width={props.width}\n                        height={props.height}\n                        fill={props.color}\n                        rx={1}\n                    />\n                    <text\n                        x={props.width + 5}\n                        y={props.data.value > 0 ? -17 : props.height + 17}\n                        textAnchor=\"end\"\n                        dominantBaseline=\"central\"\n                        fill='#666666'\n                        style={{\n                            fontWeight: 400,\n                            fontSize: 13,\n                        }}\n                    >\n                        {props.data.value > 0 ? `+$${props.data.value}` : `-$${props.data.value * -1}`}\n                    </text>\n                </g>\n            )\n        }\n\n        const barInnerStyles = {\n            overlay: {\n                width: 115,\n                height: 30,\n                display: 'flex',\n                flexDirection: 'row' as 'row',\n                position: \"absolute\" as \"absolute\",\n                top: 0,\n                right: 0,\n            },\n            span: {\n                width: '3px',\n                height: '100%',\n                backgroundColor: '#FF7D30',\n                marginRight: '5px'\n            },\n            divWrapper: {\n                display: 'flex',\n                flexDirection: 'column' as 'column',\n            },\n            number: {\n                color: \"#333333\",\n                fontSize: \"13px\",\n            },\n            text: {\n                color: \"#999999\",\n                textAlign: 'center' as 'center',\n                fontSize: \"10px\",\n                lineHeight: '14px',\n            }\n        };\n\n        const data = [\n            { name: 'Group A', value: 400 },\n            { name: 'Group B', value: 300 },\n            { name: 'Group C', value: 300 },\n            { name: 'Group D', value: 200 },\n        ];\n        const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\n        const renderPieChart = (\n            <PieChart width={250} height={250}>\n                <Pie\n                    data={data}\n                    // cx={120}\n                    // cy={200}\n                    innerRadius={80}\n                    outerRadius={100}\n                    fill=\"#8884d8\"\n                    paddingAngle={5}\n                    cornerRadius={5}\n                    dataKey=\"value\"\n                >\n                    {\n                        data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                    }\n                </Pie>\n            </PieChart>\n        );\n        return (\n            <AppBody>\n                <BodyWrapper gap={'md'}>\n                    <HeadContainer>\n                        <Text fontSize='23px' fontWeight='bold' color='#333333'>Assets</Text>\n                        <img src={CloseBtn} alt=\"\" width='15px' height='15px' onClick={this.goBack} />\n                    </HeadContainer>\n                    <Text fontSize='18px' fontWeight='bold' color='#333333' marginLeft='25px'>Assets distribution</Text>\n                    <div style={{height: 300}}>\n                        {renderPieChart}\n                    </div>\n                    {/*<div style={{height: 250}}>*/}\n                    {/*    <ResponsivePie*/}\n                    {/*        data={pieData}*/}\n                    {/*        margin={{ top: 20, right: 0, bottom: 50, left: 0 }}*/}\n                    {/*        startAngle={1}*/}\n                    {/*        innerRadius={0.88}*/}\n                    {/*        padAngle={3}*/}\n                    {/*        cornerRadius={5}*/}\n                    {/*        colors={['#FF7D30', '#FF589D']}*/}\n                    {/*        borderWidth={1}*/}\n                    {/*        borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}*/}\n                    {/*        radialLabelsSkipAngle={10}*/}\n                    {/*        radialLabelsTextColor=\"#333333\"*/}\n                    {/*        radialLabelsLinkColor={{ from: 'color' }}*/}\n                    {/*        sliceLabelsSkipAngle={10}*/}\n                    {/*        sliceLabelsTextColor=\"#333333\"*/}\n                    {/*        enableRadialLabels={false}*/}\n                    {/*        enableSliceLabels={false}*/}\n                    {/*        tooltip={function(e){*/}\n                    {/*            var t=e.datum;*/}\n                    {/*            return <div*/}\n                    {/*                key={t.id}*/}\n                    {/*                style={{*/}\n                    {/*                    color: '#999999',*/}\n                    {/*                    fontSize: '11px',*/}\n                    {/*                    backgroundColor: '#ffffff',*/}\n                    {/*                    borderRadius: '5px',*/}\n                    {/*                    padding: '3px 10px',*/}\n                    {/*                    boxShadow: '0px 0px 10px 2px rgba(0, 0, 0, 0.15)',*/}\n                    {/*                }}*/}\n                    {/*            >*/}\n                    {/*                <span style={{*/}\n                    {/*                    display: 'inline-block',*/}\n                    {/*                    marginRight: '5px',*/}\n                    {/*                    width: '8px',*/}\n                    {/*                    height: '8px',*/}\n                    {/*                    borderRadius: '4px',*/}\n                    {/*                    background: t.color*/}\n                    {/*                }}></span>*/}\n                    {/*                {t.id}*/}\n                    {/*                <span style={{color: '#333333', marginLeft: '5px', fontSize: '13px'}}>${t.value}</span>*/}\n                    {/*            </div>*/}\n                    {/*        }}*/}\n                    {/*        legends={[*/}\n                    {/*            {*/}\n                    {/*                anchor: 'bottom',*/}\n                    {/*                direction: 'row',*/}\n                    {/*                justify: false,*/}\n                    {/*                translateX: 0,*/}\n                    {/*                translateY: 40,*/}\n                    {/*                itemsSpacing: 20,*/}\n                    {/*                itemWidth: 100,*/}\n                    {/*                itemHeight: 18,*/}\n                    {/*                itemTextColor: '#999',*/}\n                    {/*                itemDirection: 'left-to-right',*/}\n                    {/*                itemOpacity: 1,*/}\n                    {/*                symbolSize: 8,*/}\n                    {/*                symbolShape: 'circle',*/}\n                    {/*                effects: [*/}\n                    {/*                    {*/}\n                    {/*                        on: 'hover',*/}\n                    {/*                        style: {*/}\n                    {/*                            itemTextColor: '#000',*/}\n                    {/*                        }*/}\n                    {/*                    }*/}\n                    {/*                ]*/}\n                    {/*            }*/}\n                    {/*        ]}*/}\n                    {/*        theme={{*/}\n                    {/*            legends: {*/}\n                    {/*                text: {*/}\n                    {/*                    color: '#666666'*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }}*/}\n                    {/*    />*/}\n                    {/*    <div style={pieInnerStyles.overlay}>*/}\n                    {/*        <span style={pieInnerStyles.number}>$234995.300</span>*/}\n                    {/*        <span style={pieInnerStyles.text}>Net assets</span>*/}\n                    {/*    </div>*/}\n                    {/*</div>*/}\n\n                    {/*<Text fontSize='18px' fontWeight='bold' color='#333333' marginLeft='25px'>Assets trend</Text>*/}\n                    {/*<LineChartWrapper>*/}\n                    {/*    <ResponsiveLine*/}\n                    {/*        data={lineData}*/}\n                    {/*        margin={{ top: 30, right: 0, bottom: 50, left: 0 }}*/}\n                    {/*        xScale={{ type: 'point' }}*/}\n                    {/*        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}*/}\n                    {/*        yFormat=\" >-.2f\"*/}\n                    {/*        axisTop={null}*/}\n                    {/*        axisRight={null}*/}\n                    {/*        axisLeft={null}*/}\n                    {/*        axisBottom={{*/}\n                    {/*            orient: 'bottom',*/}\n                    {/*            tickSize: 0,*/}\n                    {/*            tickPadding: 15,*/}\n                    {/*            tickRotation: 0,*/}\n                    {/*            tickValues: [\"2020.08\", \"2020.09\", \"2020.10\", \"2020.11\"],*/}\n                    {/*        }}*/}\n                    {/*        enableArea={true}*/}\n                    {/*        enableGridX={false}*/}\n                    {/*        enableGridY={false}*/}\n                    {/*        crosshairType=\"top\"*/}\n                    {/*        curve='monotoneX'*/}\n                    {/*        colors={['#406AFE', '#FF71C5', '#F6883B']}*/}\n                    {/*        pointSize={5}*/}\n                    {/*        pointColor=\"#ffffff\"*/}\n                    {/*        pointBorderWidth={2}*/}\n                    {/*        pointBorderColor={{ from: 'serieColor' }}*/}\n                    {/*        pointLabelYOffset={-12}*/}\n                    {/*        enablePoints={false}*/}\n                    {/*        useMesh={true}*/}\n                    {/*        enableSlices='x'*/}\n                    {/*        animate={true}*/}\n                    {/*        sliceTooltip={({ slice }) => {*/}\n                    {/*            return (*/}\n                    {/*                <div*/}\n                    {/*                    style={{*/}\n                    {/*                        background: 'white',*/}\n                    {/*                        padding: '9px 12px',*/}\n                    {/*                        opacity: '0.92',*/}\n                    {/*                        width: '130px',*/}\n                    {/*                        height: '140px',*/}\n                    {/*                        borderRadius: '10px',*/}\n                    {/*                        boxShadow: '0px 0px 10px 2px rgba(0, 0, 0, 0.15)',*/}\n                    {/*                    }}*/}\n                    {/*                >*/}\n                    {/*                    {slice.points.map(point => (*/}\n                    {/*                        <div*/}\n                    {/*                            key={point.id}*/}\n                    {/*                            style={{*/}\n                    {/*                                color: '#999999',*/}\n                    {/*                                padding: '3px 0',*/}\n                    {/*                                fontSize: '11px'*/}\n                    {/*                            }}*/}\n                    {/*                        >*/}\n                    {/*                            <div>*/}\n                    {/*                                <span style={{*/}\n                    {/*                                    display: 'inline-block',*/}\n                    {/*                                    marginRight: '5px',*/}\n                    {/*                                    width: '8px',*/}\n                    {/*                                    height: '8px',*/}\n                    {/*                                    borderRadius: '4px',*/}\n                    {/*                                    background: point.serieColor*/}\n                    {/*                                }}></span>*/}\n                    {/*                                {point.serieId}*/}\n                    {/*                            </div>*/}\n                    {/*                            <span style={{color: '#333333', marginLeft: '13px', fontSize: '13px'}}>${point.data.yFormatted}</span>*/}\n                    {/*                        </div>*/}\n                    {/*                    ))}*/}\n                    {/*                </div>*/}\n                    {/*            )*/}\n                    {/*        }}*/}\n                    {/*        defs={[*/}\n                    {/*            {*/}\n                    {/*                id: 'gradientA',*/}\n                    {/*                type: 'linearGradient',*/}\n                    {/*                colors: [*/}\n                    {/*                    { offset: 0, color: '#F6883B' },*/}\n                    {/*                    { offset: 60, color: '#ffffff' },*/}\n                    {/*                ],*/}\n                    {/*            },*/}\n                    {/*            {*/}\n                    {/*                id: 'gradientB',*/}\n                    {/*                type: 'linearGradient',*/}\n                    {/*                colors: [*/}\n                    {/*                    { offset: 0, color: '#FF71C5' },*/}\n                    {/*                    { offset: 60, color: '#ffffff' },*/}\n                    {/*                ],*/}\n                    {/*            },*/}\n                    {/*            {*/}\n                    {/*                id: 'gradientC',*/}\n                    {/*                type: 'linearGradient',*/}\n                    {/*                colors: [*/}\n                    {/*                    { offset: 0, color: '#406AFE' },*/}\n                    {/*                    { offset: 100, color: '#ffffff' },*/}\n                    {/*                ],*/}\n                    {/*            },*/}\n                    {/*        ]}*/}\n                    {/*        fill={[*/}\n                    {/*            { match: d => d.id === 'TotalAssets', id: 'gradientA' },*/}\n                    {/*            { match: d => d.id === 'NetAssets', id: 'gradientB' },*/}\n                    {/*            { match: d => d.id === 'Total liabilities', id: 'gradientC' },*/}\n                    {/*        ]}*/}\n                    {/*        // legends={[*/}\n                    {/*        //     {*/}\n                    {/*        //         anchor: 'top',*/}\n                    {/*        //         direction: 'row',*/}\n                    {/*        //         justify: false,*/}\n                    {/*        //         translateX: 10,*/}\n                    {/*        //         translateY: -40,*/}\n                    {/*        //         itemsSpacing: 0,*/}\n                    {/*        //         itemDirection: 'left-to-right',*/}\n                    {/*        //         itemWidth: 100,*/}\n                    {/*        //         itemHeight: 20,*/}\n                    {/*        //         symbolSize: 8,*/}\n                    {/*        //         symbolShape: 'circle',*/}\n                    {/*        //     }*/}\n                    {/*        // ]}*/}\n                    {/*        theme={{*/}\n                    {/*            axis: {*/}\n                    {/*                ticks: {*/}\n                    {/*                    text: {*/}\n                    {/*                        fill: \"#666666\",*/}\n                    {/*                    },*/}\n                    {/*                },*/}\n                    {/*            },*/}\n                    {/*            // legends: {*/}\n                    {/*            //     text: {*/}\n                    {/*            //         fill: \"#999999\",*/}\n                    {/*            //     }*/}\n                    {/*            // }*/}\n                    {/*        }}*/}\n                    {/*    />*/}\n                    {/*</LineChartWrapper>*/}\n\n                    {/*<Text fontSize='18px' fontWeight='bold' color='#333333' marginLeft='25px'>Profit and loss of assets</Text>*/}\n                    {/*<BarChartWrapper>*/}\n                    {/*    <ResponsiveBar*/}\n                    {/*        enableGridY={false}*/}\n                    {/*        margin={{ top: 60, right: 20, bottom: 60, left: 20 }}*/}\n                    {/*        padding={0.6}*/}\n                    {/*        colors={getOrdinalColorScale(barData.map(c => c.color), 'index')}*/}\n                    {/*        axisBottom={{*/}\n                    {/*            tickSize: 0,*/}\n                    {/*            tickPadding: 35,*/}\n                    {/*            tickRotation: 0,*/}\n                    {/*        }}*/}\n                    {/*        axisLeft={null}*/}\n                    {/*        borderRadius={5}*/}\n                    {/*        labelTextColor='#666666'*/}\n                    {/*        barComponent={BarComponent}*/}\n                    {/*        data={barData}*/}\n                    {/*        keys={[\"earnings\"]}*/}\n                    {/*        indexBy=\"currency\"*/}\n                    {/*        markers={[*/}\n                    {/*            {*/}\n                    {/*                axis: 'y',*/}\n                    {/*                value: 0,*/}\n                    {/*                lineStyle: { stroke: 'rgba(64, 106, 254, 0.12)'},*/}\n                    {/*            },*/}\n                    {/*        ]}*/}\n                    {/*    />*/}\n                    {/*    <div style={barInnerStyles.overlay}>*/}\n                    {/*        <span style={barInnerStyles.span}></span>*/}\n                    {/*        <div style={barInnerStyles.divWrapper}>*/}\n                    {/*            <span style={barInnerStyles.text}>Earnings today</span>*/}\n                    {/*            <span style={barInnerStyles.number}>$1254576.03</span>*/}\n                    {/*        </div>*/}\n                    {/*    </div>*/}\n                    {/*</BarChartWrapper>*/}\n                </BodyWrapper>\n            </AppBody>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}