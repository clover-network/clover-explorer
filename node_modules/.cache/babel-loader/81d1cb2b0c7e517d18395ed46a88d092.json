{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar tooltipMarkup_1 = require(\"./tooltipMarkup\");\n\nvar dataProvider_1 = require(\"../../data/helper/dataProvider\");\n\nvar model_1 = require(\"../../util/model\");\n\nfunction defaultSeriesFormatTooltip(opt) {\n  var series = opt.series;\n  var dataIndex = opt.dataIndex;\n  var multipleSeries = opt.multipleSeries;\n  var data = series.getData();\n  var tooltipDims = data.mapDimensionsAll('defaultedTooltip');\n  var tooltipDimLen = tooltipDims.length;\n  var value = series.getRawValue(dataIndex);\n  var isValueArr = util_1.isArray(value);\n  var markerColor = tooltipMarkup_1.retrieveVisualColorForTooltipMarker(series, dataIndex);\n  var inlineValue;\n  var inlineValueType;\n  var subBlocks;\n  var sortParam;\n\n  if (tooltipDimLen > 1 || isValueArr && !tooltipDimLen) {\n    var formatArrResult = formatTooltipArrayValue(value, series, dataIndex, tooltipDims, markerColor);\n    inlineValue = formatArrResult.inlineValues;\n    inlineValueType = formatArrResult.inlineValueTypes;\n    subBlocks = formatArrResult.blocks;\n    sortParam = formatArrResult.inlineValues[0];\n  } else if (tooltipDimLen) {\n    var dimInfo = data.getDimensionInfo(tooltipDims[0]);\n    sortParam = inlineValue = dataProvider_1.retrieveRawValue(data, dataIndex, tooltipDims[0]);\n    inlineValueType = dimInfo.type;\n  } else {\n    sortParam = inlineValue = isValueArr ? value[0] : value;\n  }\n\n  var seriesNameSpecified = model_1.isNameSpecified(series);\n  var seriesName = seriesNameSpecified && series.name || '';\n  var itemName = data.getName(dataIndex);\n  var inlineName = multipleSeries ? seriesName : itemName;\n  return tooltipMarkup_1.createTooltipMarkup('section', {\n    header: seriesName,\n    noHeader: multipleSeries || !seriesNameSpecified,\n    sortParam: sortParam,\n    blocks: [tooltipMarkup_1.createTooltipMarkup('nameValue', {\n      markerType: 'item',\n      markerColor: markerColor,\n      name: inlineName,\n      noName: !util_1.trim(inlineName),\n      value: inlineValue,\n      valueType: inlineValueType\n    })].concat(subBlocks || [])\n  });\n}\n\nexports.defaultSeriesFormatTooltip = defaultSeriesFormatTooltip;\n\nfunction formatTooltipArrayValue(value, series, dataIndex, tooltipDims, colorStr) {\n  var data = series.getData();\n  var isValueMultipleLine = util_1.reduce(value, function (isValueMultipleLine, val, idx) {\n    var dimItem = data.getDimensionInfo(idx);\n    return isValueMultipleLine = isValueMultipleLine || dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n  }, false);\n  var inlineValues = [];\n  var inlineValueTypes = [];\n  var blocks = [];\n  tooltipDims.length ? util_1.each(tooltipDims, function (dim) {\n    setEachItem(dataProvider_1.retrieveRawValue(data, dataIndex, dim), dim);\n  }) : util_1.each(value, setEachItem);\n\n  function setEachItem(val, dim) {\n    var dimInfo = data.getDimensionInfo(dim);\n\n    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n      return;\n    }\n\n    if (isValueMultipleLine) {\n      blocks.push(tooltipMarkup_1.createTooltipMarkup('nameValue', {\n        markerType: 'subItem',\n        markerColor: colorStr,\n        name: dimInfo.displayName,\n        value: val,\n        valueType: dimInfo.type\n      }));\n    } else {\n      inlineValues.push(val);\n      inlineValueTypes.push(dimInfo.type);\n    }\n  }\n\n  return {\n    inlineValues: inlineValues,\n    inlineValueTypes: inlineValueTypes,\n    blocks: blocks\n  };\n}","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/component/tooltip/seriesFormatTooltip.js"],"names":["exports","__esModule","util_1","require","tooltipMarkup_1","dataProvider_1","model_1","defaultSeriesFormatTooltip","opt","series","dataIndex","multipleSeries","data","getData","tooltipDims","mapDimensionsAll","tooltipDimLen","length","value","getRawValue","isValueArr","isArray","markerColor","retrieveVisualColorForTooltipMarker","inlineValue","inlineValueType","subBlocks","sortParam","formatArrResult","formatTooltipArrayValue","inlineValues","inlineValueTypes","blocks","dimInfo","getDimensionInfo","retrieveRawValue","type","seriesNameSpecified","isNameSpecified","seriesName","name","itemName","getName","inlineName","createTooltipMarkup","header","noHeader","markerType","noName","trim","valueType","concat","colorStr","isValueMultipleLine","reduce","val","idx","dimItem","tooltip","displayName","each","dim","setEachItem","otherDims","push"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar tooltipMarkup_1 = require(\"./tooltipMarkup\");\n\nvar dataProvider_1 = require(\"../../data/helper/dataProvider\");\n\nvar model_1 = require(\"../../util/model\");\n\nfunction defaultSeriesFormatTooltip(opt) {\n  var series = opt.series;\n  var dataIndex = opt.dataIndex;\n  var multipleSeries = opt.multipleSeries;\n  var data = series.getData();\n  var tooltipDims = data.mapDimensionsAll('defaultedTooltip');\n  var tooltipDimLen = tooltipDims.length;\n  var value = series.getRawValue(dataIndex);\n  var isValueArr = util_1.isArray(value);\n  var markerColor = tooltipMarkup_1.retrieveVisualColorForTooltipMarker(series, dataIndex);\n  var inlineValue;\n  var inlineValueType;\n  var subBlocks;\n  var sortParam;\n\n  if (tooltipDimLen > 1 || isValueArr && !tooltipDimLen) {\n    var formatArrResult = formatTooltipArrayValue(value, series, dataIndex, tooltipDims, markerColor);\n    inlineValue = formatArrResult.inlineValues;\n    inlineValueType = formatArrResult.inlineValueTypes;\n    subBlocks = formatArrResult.blocks;\n    sortParam = formatArrResult.inlineValues[0];\n  } else if (tooltipDimLen) {\n    var dimInfo = data.getDimensionInfo(tooltipDims[0]);\n    sortParam = inlineValue = dataProvider_1.retrieveRawValue(data, dataIndex, tooltipDims[0]);\n    inlineValueType = dimInfo.type;\n  } else {\n    sortParam = inlineValue = isValueArr ? value[0] : value;\n  }\n\n  var seriesNameSpecified = model_1.isNameSpecified(series);\n  var seriesName = seriesNameSpecified && series.name || '';\n  var itemName = data.getName(dataIndex);\n  var inlineName = multipleSeries ? seriesName : itemName;\n  return tooltipMarkup_1.createTooltipMarkup('section', {\n    header: seriesName,\n    noHeader: multipleSeries || !seriesNameSpecified,\n    sortParam: sortParam,\n    blocks: [tooltipMarkup_1.createTooltipMarkup('nameValue', {\n      markerType: 'item',\n      markerColor: markerColor,\n      name: inlineName,\n      noName: !util_1.trim(inlineName),\n      value: inlineValue,\n      valueType: inlineValueType\n    })].concat(subBlocks || [])\n  });\n}\n\nexports.defaultSeriesFormatTooltip = defaultSeriesFormatTooltip;\n\nfunction formatTooltipArrayValue(value, series, dataIndex, tooltipDims, colorStr) {\n  var data = series.getData();\n  var isValueMultipleLine = util_1.reduce(value, function (isValueMultipleLine, val, idx) {\n    var dimItem = data.getDimensionInfo(idx);\n    return isValueMultipleLine = isValueMultipleLine || dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n  }, false);\n  var inlineValues = [];\n  var inlineValueTypes = [];\n  var blocks = [];\n  tooltipDims.length ? util_1.each(tooltipDims, function (dim) {\n    setEachItem(dataProvider_1.retrieveRawValue(data, dataIndex, dim), dim);\n  }) : util_1.each(value, setEachItem);\n\n  function setEachItem(val, dim) {\n    var dimInfo = data.getDimensionInfo(dim);\n\n    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n      return;\n    }\n\n    if (isValueMultipleLine) {\n      blocks.push(tooltipMarkup_1.createTooltipMarkup('nameValue', {\n        markerType: 'subItem',\n        markerColor: colorStr,\n        name: dimInfo.displayName,\n        value: val,\n        valueType: dimInfo.type\n      }));\n    } else {\n      inlineValues.push(val);\n      inlineValueTypes.push(dimInfo.type);\n    }\n  }\n\n  return {\n    inlineValues: inlineValues,\n    inlineValueTypes: inlineValueTypes,\n    blocks: blocks\n  };\n}"]},"metadata":{},"sourceType":"script"}