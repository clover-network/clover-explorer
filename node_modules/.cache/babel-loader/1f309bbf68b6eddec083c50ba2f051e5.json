{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nimport { __extends } from \"tslib\";\nimport SeriesModel from '../../model/Series';\nimport createListFromArray from '../helper/createListFromArray';\nimport CoordinateSystem from '../../CoordinateSystem';\n\nvar HeatmapSeriesModel = function (_super) {\n  __extends(HeatmapSeriesModel, _super);\n\n  function HeatmapSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = HeatmapSeriesModel.type;\n    return _this;\n  }\n\n  HeatmapSeriesModel.prototype.getInitialData = function (option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      generateCoord: 'value'\n    });\n  };\n\n  HeatmapSeriesModel.prototype.preventIncremental = function () {\n    var coordSysCreator = CoordinateSystem.get(this.get('coordinateSystem'));\n\n    if (coordSysCreator && coordSysCreator.dimensions) {\n      return coordSysCreator.dimensions[0] === 'lng' && coordSysCreator.dimensions[1] === 'lat';\n    }\n  };\n\n  HeatmapSeriesModel.type = 'series.heatmap';\n  HeatmapSeriesModel.defaultOption = {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    geoIndex: 0,\n    blurSize: 30,\n    pointSize: 20,\n    maxOpacity: 1,\n    minOpacity: 0,\n    select: {\n      itemStyle: {\n        borderColor: '#212121'\n      }\n    }\n  };\n  return HeatmapSeriesModel;\n}(SeriesModel);\n\nSeriesModel.registerClass(HeatmapSeriesModel);\nexport default HeatmapSeriesModel;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/esm/chart/heatmap/HeatmapSeries.js"],"names":["__extends","SeriesModel","createListFromArray","CoordinateSystem","HeatmapSeriesModel","_super","_this","apply","arguments","type","prototype","getInitialData","option","ecModel","getSource","generateCoord","preventIncremental","coordSysCreator","get","dimensions","defaultOption","coordinateSystem","zlevel","z","geoIndex","blurSize","pointSize","maxOpacity","minOpacity","select","itemStyle","borderColor","registerClass"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AAEA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,mBAAP,MAAgC,+BAAhC;AACA,OAAOC,gBAAP,MAA6B,wBAA7B;;AAEA,IAAIC,kBAAkB,GAAG,UAAUC,MAAV,EAAkB;AACzCL,EAAAA,SAAS,CAACI,kBAAD,EAAqBC,MAArB,CAAT;;AAEA,WAASD,kBAAT,GAA8B;AAC5B,QAAIE,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;;AAEAF,IAAAA,KAAK,CAACG,IAAN,GAAaL,kBAAkB,CAACK,IAAhC;AACA,WAAOH,KAAP;AACD;;AAEDF,EAAAA,kBAAkB,CAACM,SAAnB,CAA6BC,cAA7B,GAA8C,UAAUC,MAAV,EAAkBC,OAAlB,EAA2B;AACvE,WAAOX,mBAAmB,CAAC,KAAKY,SAAL,EAAD,EAAmB,IAAnB,EAAyB;AACjDC,MAAAA,aAAa,EAAE;AADkC,KAAzB,CAA1B;AAGD,GAJD;;AAMAX,EAAAA,kBAAkB,CAACM,SAAnB,CAA6BM,kBAA7B,GAAkD,YAAY;AAC5D,QAAIC,eAAe,GAAGd,gBAAgB,CAACe,GAAjB,CAAqB,KAAKA,GAAL,CAAS,kBAAT,CAArB,CAAtB;;AAEA,QAAID,eAAe,IAAIA,eAAe,CAACE,UAAvC,EAAmD;AACjD,aAAOF,eAAe,CAACE,UAAhB,CAA2B,CAA3B,MAAkC,KAAlC,IAA2CF,eAAe,CAACE,UAAhB,CAA2B,CAA3B,MAAkC,KAApF;AACD;AACF,GAND;;AAQAf,EAAAA,kBAAkB,CAACK,IAAnB,GAA0B,gBAA1B;AACAL,EAAAA,kBAAkB,CAACgB,aAAnB,GAAmC;AACjCC,IAAAA,gBAAgB,EAAE,aADe;AAEjCC,IAAAA,MAAM,EAAE,CAFyB;AAGjCC,IAAAA,CAAC,EAAE,CAH8B;AAIjCC,IAAAA,QAAQ,EAAE,CAJuB;AAKjCC,IAAAA,QAAQ,EAAE,EALuB;AAMjCC,IAAAA,SAAS,EAAE,EANsB;AAOjCC,IAAAA,UAAU,EAAE,CAPqB;AAQjCC,IAAAA,UAAU,EAAE,CARqB;AASjCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,SAAS,EAAE;AACTC,QAAAA,WAAW,EAAE;AADJ;AADL;AATyB,GAAnC;AAeA,SAAO3B,kBAAP;AACD,CAzCwB,CAyCvBH,WAzCuB,CAAzB;;AA2CAA,WAAW,CAAC+B,aAAZ,CAA0B5B,kBAA1B;AACA,eAAeA,kBAAf","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\nimport SeriesModel from '../../model/Series';\nimport createListFromArray from '../helper/createListFromArray';\nimport CoordinateSystem from '../../CoordinateSystem';\n\nvar HeatmapSeriesModel = function (_super) {\n  __extends(HeatmapSeriesModel, _super);\n\n  function HeatmapSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = HeatmapSeriesModel.type;\n    return _this;\n  }\n\n  HeatmapSeriesModel.prototype.getInitialData = function (option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      generateCoord: 'value'\n    });\n  };\n\n  HeatmapSeriesModel.prototype.preventIncremental = function () {\n    var coordSysCreator = CoordinateSystem.get(this.get('coordinateSystem'));\n\n    if (coordSysCreator && coordSysCreator.dimensions) {\n      return coordSysCreator.dimensions[0] === 'lng' && coordSysCreator.dimensions[1] === 'lat';\n    }\n  };\n\n  HeatmapSeriesModel.type = 'series.heatmap';\n  HeatmapSeriesModel.defaultOption = {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    geoIndex: 0,\n    blurSize: 30,\n    pointSize: 20,\n    maxOpacity: 1,\n    minOpacity: 0,\n    select: {\n      itemStyle: {\n        borderColor: '#212121'\n      }\n    }\n  };\n  return HeatmapSeriesModel;\n}(SeriesModel);\n\nSeriesModel.registerClass(HeatmapSeriesModel);\nexport default HeatmapSeriesModel;"]},"metadata":{},"sourceType":"module"}