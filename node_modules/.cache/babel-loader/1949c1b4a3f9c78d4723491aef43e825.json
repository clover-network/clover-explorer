{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar model_1 = require(\"../../util/model\");\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar types_1 = require(\"../../util/types\");\n\nexports.BE_ORDINAL = {\n  Must: 1,\n  Might: 2,\n  Not: 3\n};\nvar innerGlobalModel = model_1.makeInner();\n\nfunction resetSourceDefaulter(ecModel) {\n  innerGlobalModel(ecModel).datasetMap = util_1.createHashMap();\n}\n\nexports.resetSourceDefaulter = resetSourceDefaulter;\n\nfunction inheritSourceMetaRawOption(upstream, newMetaRawOption) {\n  var parentMetaRawOption = upstream ? upstream.metaRawOption : null;\n  var seriesLayoutBy = util_1.retrieve2(newMetaRawOption.seriesLayoutBy, parentMetaRawOption ? parentMetaRawOption.seriesLayoutBy : null);\n  var sourceHeader = util_1.retrieve2(newMetaRawOption.sourceHeader, upstream ? upstream.startIndex : null);\n  var dimensions = util_1.retrieve2(newMetaRawOption.dimensions, upstream ? upstream.dimensionsDefine : null);\n  return {\n    seriesLayoutBy: seriesLayoutBy,\n    sourceHeader: sourceHeader,\n    dimensions: dimensions\n  };\n}\n\nexports.inheritSourceMetaRawOption = inheritSourceMetaRawOption;\n\nfunction makeSeriesEncodeForAxisCoordSys(coordDimensions, seriesModel, source) {\n  var encode = {};\n  var datasetModel = querySeriesUpstreamDatasetModel(seriesModel);\n\n  if (!datasetModel || !coordDimensions) {\n    return encode;\n  }\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var ecModel = seriesModel.ecModel;\n  var datasetMap = innerGlobalModel(ecModel).datasetMap;\n  var key = datasetModel.uid + '_' + source.seriesLayoutBy;\n  var baseCategoryDimIndex;\n  var categoryWayValueDimStart;\n  coordDimensions = coordDimensions.slice();\n  util_1.each(coordDimensions, function (coordDimInfoLoose, coordDimIdx) {\n    var coordDimInfo = util_1.isObject(coordDimInfoLoose) ? coordDimInfoLoose : coordDimensions[coordDimIdx] = {\n      name: coordDimInfoLoose\n    };\n\n    if (coordDimInfo.type === 'ordinal' && baseCategoryDimIndex == null) {\n      baseCategoryDimIndex = coordDimIdx;\n      categoryWayValueDimStart = getDataDimCountOnCoordDim(coordDimInfo);\n    }\n\n    encode[coordDimInfo.name] = [];\n  });\n  var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n    categoryWayDim: categoryWayValueDimStart,\n    valueWayDim: 0\n  });\n  util_1.each(coordDimensions, function (coordDimInfo, coordDimIdx) {\n    var coordDimName = coordDimInfo.name;\n    var count = getDataDimCountOnCoordDim(coordDimInfo);\n\n    if (baseCategoryDimIndex == null) {\n      var start = datasetRecord.valueWayDim;\n      pushDim(encode[coordDimName], start, count);\n      pushDim(encodeSeriesName, start, count);\n      datasetRecord.valueWayDim += count;\n    } else if (baseCategoryDimIndex === coordDimIdx) {\n      pushDim(encode[coordDimName], 0, count);\n      pushDim(encodeItemName, 0, count);\n    } else {\n      var start = datasetRecord.categoryWayDim;\n      pushDim(encode[coordDimName], start, count);\n      pushDim(encodeSeriesName, start, count);\n      datasetRecord.categoryWayDim += count;\n    }\n  });\n\n  function pushDim(dimIdxArr, idxFrom, idxCount) {\n    for (var i = 0; i < idxCount; i++) {\n      dimIdxArr.push(idxFrom + i);\n    }\n  }\n\n  function getDataDimCountOnCoordDim(coordDimInfo) {\n    var dimsDef = coordDimInfo.dimsDef;\n    return dimsDef ? dimsDef.length : 1;\n  }\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n\nexports.makeSeriesEncodeForAxisCoordSys = makeSeriesEncodeForAxisCoordSys;\n\nfunction makeSeriesEncodeForNameBased(seriesModel, source, dimCount) {\n  var encode = {};\n  var datasetModel = querySeriesUpstreamDatasetModel(seriesModel);\n\n  if (!datasetModel) {\n    return encode;\n  }\n\n  var sourceFormat = source.sourceFormat;\n  var dimensionsDefine = source.dimensionsDefine;\n  var potentialNameDimIndex;\n\n  if (sourceFormat === types_1.SOURCE_FORMAT_OBJECT_ROWS || sourceFormat === types_1.SOURCE_FORMAT_KEYED_COLUMNS) {\n    util_1.each(dimensionsDefine, function (dim, idx) {\n      if ((util_1.isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  var idxResult = function () {\n    var idxRes0 = {};\n    var idxRes1 = {};\n    var guessRecords = [];\n\n    for (var i = 0, len = Math.min(5, dimCount); i < len; i++) {\n      var guessResult = doGuessOrdinal(source.data, sourceFormat, source.seriesLayoutBy, dimensionsDefine, source.startIndex, i);\n      guessRecords.push(guessResult);\n      var isPureNumber = guessResult === exports.BE_ORDINAL.Not;\n\n      if (isPureNumber && idxRes0.v == null && i !== potentialNameDimIndex) {\n        idxRes0.v = i;\n      }\n\n      if (idxRes0.n == null || idxRes0.n === idxRes0.v || !isPureNumber && guessRecords[idxRes0.n] === exports.BE_ORDINAL.Not) {\n        idxRes0.n = i;\n      }\n\n      if (fulfilled(idxRes0) && guessRecords[idxRes0.n] !== exports.BE_ORDINAL.Not) {\n        return idxRes0;\n      }\n\n      if (!isPureNumber) {\n        if (guessResult === exports.BE_ORDINAL.Might && idxRes1.v == null && i !== potentialNameDimIndex) {\n          idxRes1.v = i;\n        }\n\n        if (idxRes1.n == null || idxRes1.n === idxRes1.v) {\n          idxRes1.n = i;\n        }\n      }\n    }\n\n    function fulfilled(idxResult) {\n      return idxResult.v != null && idxResult.n != null;\n    }\n\n    return fulfilled(idxRes0) ? idxRes0 : fulfilled(idxRes1) ? idxRes1 : null;\n  }();\n\n  if (idxResult) {\n    encode.value = [idxResult.v];\n    var nameDimIndex = potentialNameDimIndex != null ? potentialNameDimIndex : idxResult.n;\n    encode.itemName = [nameDimIndex];\n    encode.seriesName = [nameDimIndex];\n  }\n\n  return encode;\n}\n\nexports.makeSeriesEncodeForNameBased = makeSeriesEncodeForNameBased;\n\nfunction querySeriesUpstreamDatasetModel(seriesModel) {\n  var thisData = seriesModel.get('data', true);\n\n  if (!thisData) {\n    return model_1.queryReferringComponents(seriesModel.ecModel, 'dataset', {\n      index: seriesModel.get('datasetIndex', true),\n      id: seriesModel.get('datasetId', true)\n    }, model_1.SINGLE_REFERRING).models[0];\n  }\n}\n\nexports.querySeriesUpstreamDatasetModel = querySeriesUpstreamDatasetModel;\n\nfunction queryDatasetUpstreamDatasetModels(datasetModel) {\n  if (!datasetModel.get('transform', true) && !datasetModel.get('fromTransformResult', true)) {\n    return [];\n  }\n\n  return model_1.queryReferringComponents(datasetModel.ecModel, 'dataset', {\n    index: datasetModel.get('fromDatasetIndex', true),\n    id: datasetModel.get('fromDatasetId', true)\n  }, model_1.SINGLE_REFERRING).models;\n}\n\nexports.queryDatasetUpstreamDatasetModels = queryDatasetUpstreamDatasetModels;\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n}\n\nexports.guessOrdinal = guessOrdinal;\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result;\n  var maxLoop = 5;\n\n  if (util_1.isTypedArray(data)) {\n    return exports.BE_ORDINAL.Not;\n  }\n\n  var dimName;\n  var dimType;\n\n  if (dimensionsDefine) {\n    var dimDefItem = dimensionsDefine[dimIndex];\n\n    if (util_1.isObject(dimDefItem)) {\n      dimName = dimDefItem.name;\n      dimType = dimDefItem.type;\n    } else if (util_1.isString(dimDefItem)) {\n      dimName = dimDefItem;\n    }\n  }\n\n  if (dimType != null) {\n    return dimType === 'ordinal' ? exports.BE_ORDINAL.Must : exports.BE_ORDINAL.Not;\n  }\n\n  if (sourceFormat === types_1.SOURCE_FORMAT_ARRAY_ROWS) {\n    var dataArrayRows = data;\n\n    if (seriesLayoutBy === types_1.SERIES_LAYOUT_BY_ROW) {\n      var sample = dataArrayRows[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < dataArrayRows.length && i < maxLoop; i++) {\n        var row = dataArrayRows[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === types_1.SOURCE_FORMAT_OBJECT_ROWS) {\n    var dataObjectRows = data;\n\n    if (!dimName) {\n      return exports.BE_ORDINAL.Not;\n    }\n\n    for (var i = 0; i < dataObjectRows.length && i < maxLoop; i++) {\n      var item = dataObjectRows[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === types_1.SOURCE_FORMAT_KEYED_COLUMNS) {\n    var dataKeyedColumns = data;\n\n    if (!dimName) {\n      return exports.BE_ORDINAL.Not;\n    }\n\n    var sample = dataKeyedColumns[dimName];\n\n    if (!sample || util_1.isTypedArray(sample)) {\n      return exports.BE_ORDINAL.Not;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === types_1.SOURCE_FORMAT_ORIGINAL) {\n    var dataOriginal = data;\n\n    for (var i = 0; i < dataOriginal.length && i < maxLoop; i++) {\n      var item = dataOriginal[i];\n      var val = model_1.getDataItemValue(item);\n\n      if (!util_1.isArray(val)) {\n        return exports.BE_ORDINAL.Not;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    var beStr = util_1.isString(val);\n\n    if (val != null && isFinite(val) && val !== '') {\n      return beStr ? exports.BE_ORDINAL.Might : exports.BE_ORDINAL.Not;\n    } else if (beStr && val !== '-') {\n      return exports.BE_ORDINAL.Must;\n    }\n  }\n\n  return exports.BE_ORDINAL.Not;\n}","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/data/helper/sourceHelper.js"],"names":["exports","__esModule","model_1","require","util_1","types_1","BE_ORDINAL","Must","Might","Not","innerGlobalModel","makeInner","resetSourceDefaulter","ecModel","datasetMap","createHashMap","inheritSourceMetaRawOption","upstream","newMetaRawOption","parentMetaRawOption","metaRawOption","seriesLayoutBy","retrieve2","sourceHeader","startIndex","dimensions","dimensionsDefine","makeSeriesEncodeForAxisCoordSys","coordDimensions","seriesModel","source","encode","datasetModel","querySeriesUpstreamDatasetModel","encodeItemName","encodeSeriesName","key","uid","baseCategoryDimIndex","categoryWayValueDimStart","slice","each","coordDimInfoLoose","coordDimIdx","coordDimInfo","isObject","name","type","getDataDimCountOnCoordDim","datasetRecord","get","set","categoryWayDim","valueWayDim","coordDimName","count","start","pushDim","dimIdxArr","idxFrom","idxCount","i","push","dimsDef","length","itemName","seriesName","makeSeriesEncodeForNameBased","dimCount","sourceFormat","potentialNameDimIndex","SOURCE_FORMAT_OBJECT_ROWS","SOURCE_FORMAT_KEYED_COLUMNS","dim","idx","idxResult","idxRes0","idxRes1","guessRecords","len","Math","min","guessResult","doGuessOrdinal","data","isPureNumber","v","n","fulfilled","value","nameDimIndex","thisData","queryReferringComponents","index","id","SINGLE_REFERRING","models","queryDatasetUpstreamDatasetModels","guessOrdinal","dimIndex","result","maxLoop","isTypedArray","dimName","dimType","dimDefItem","isString","SOURCE_FORMAT_ARRAY_ROWS","dataArrayRows","SERIES_LAYOUT_BY_ROW","sample","detectValue","row","dataObjectRows","item","dataKeyedColumns","SOURCE_FORMAT_ORIGINAL","dataOriginal","val","getDataItemValue","isArray","beStr","isFinite"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar model_1 = require(\"../../util/model\");\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar types_1 = require(\"../../util/types\");\n\nexports.BE_ORDINAL = {\n  Must: 1,\n  Might: 2,\n  Not: 3\n};\nvar innerGlobalModel = model_1.makeInner();\n\nfunction resetSourceDefaulter(ecModel) {\n  innerGlobalModel(ecModel).datasetMap = util_1.createHashMap();\n}\n\nexports.resetSourceDefaulter = resetSourceDefaulter;\n\nfunction inheritSourceMetaRawOption(upstream, newMetaRawOption) {\n  var parentMetaRawOption = upstream ? upstream.metaRawOption : null;\n  var seriesLayoutBy = util_1.retrieve2(newMetaRawOption.seriesLayoutBy, parentMetaRawOption ? parentMetaRawOption.seriesLayoutBy : null);\n  var sourceHeader = util_1.retrieve2(newMetaRawOption.sourceHeader, upstream ? upstream.startIndex : null);\n  var dimensions = util_1.retrieve2(newMetaRawOption.dimensions, upstream ? upstream.dimensionsDefine : null);\n  return {\n    seriesLayoutBy: seriesLayoutBy,\n    sourceHeader: sourceHeader,\n    dimensions: dimensions\n  };\n}\n\nexports.inheritSourceMetaRawOption = inheritSourceMetaRawOption;\n\nfunction makeSeriesEncodeForAxisCoordSys(coordDimensions, seriesModel, source) {\n  var encode = {};\n  var datasetModel = querySeriesUpstreamDatasetModel(seriesModel);\n\n  if (!datasetModel || !coordDimensions) {\n    return encode;\n  }\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var ecModel = seriesModel.ecModel;\n  var datasetMap = innerGlobalModel(ecModel).datasetMap;\n  var key = datasetModel.uid + '_' + source.seriesLayoutBy;\n  var baseCategoryDimIndex;\n  var categoryWayValueDimStart;\n  coordDimensions = coordDimensions.slice();\n  util_1.each(coordDimensions, function (coordDimInfoLoose, coordDimIdx) {\n    var coordDimInfo = util_1.isObject(coordDimInfoLoose) ? coordDimInfoLoose : coordDimensions[coordDimIdx] = {\n      name: coordDimInfoLoose\n    };\n\n    if (coordDimInfo.type === 'ordinal' && baseCategoryDimIndex == null) {\n      baseCategoryDimIndex = coordDimIdx;\n      categoryWayValueDimStart = getDataDimCountOnCoordDim(coordDimInfo);\n    }\n\n    encode[coordDimInfo.name] = [];\n  });\n  var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n    categoryWayDim: categoryWayValueDimStart,\n    valueWayDim: 0\n  });\n  util_1.each(coordDimensions, function (coordDimInfo, coordDimIdx) {\n    var coordDimName = coordDimInfo.name;\n    var count = getDataDimCountOnCoordDim(coordDimInfo);\n\n    if (baseCategoryDimIndex == null) {\n      var start = datasetRecord.valueWayDim;\n      pushDim(encode[coordDimName], start, count);\n      pushDim(encodeSeriesName, start, count);\n      datasetRecord.valueWayDim += count;\n    } else if (baseCategoryDimIndex === coordDimIdx) {\n      pushDim(encode[coordDimName], 0, count);\n      pushDim(encodeItemName, 0, count);\n    } else {\n      var start = datasetRecord.categoryWayDim;\n      pushDim(encode[coordDimName], start, count);\n      pushDim(encodeSeriesName, start, count);\n      datasetRecord.categoryWayDim += count;\n    }\n  });\n\n  function pushDim(dimIdxArr, idxFrom, idxCount) {\n    for (var i = 0; i < idxCount; i++) {\n      dimIdxArr.push(idxFrom + i);\n    }\n  }\n\n  function getDataDimCountOnCoordDim(coordDimInfo) {\n    var dimsDef = coordDimInfo.dimsDef;\n    return dimsDef ? dimsDef.length : 1;\n  }\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n\nexports.makeSeriesEncodeForAxisCoordSys = makeSeriesEncodeForAxisCoordSys;\n\nfunction makeSeriesEncodeForNameBased(seriesModel, source, dimCount) {\n  var encode = {};\n  var datasetModel = querySeriesUpstreamDatasetModel(seriesModel);\n\n  if (!datasetModel) {\n    return encode;\n  }\n\n  var sourceFormat = source.sourceFormat;\n  var dimensionsDefine = source.dimensionsDefine;\n  var potentialNameDimIndex;\n\n  if (sourceFormat === types_1.SOURCE_FORMAT_OBJECT_ROWS || sourceFormat === types_1.SOURCE_FORMAT_KEYED_COLUMNS) {\n    util_1.each(dimensionsDefine, function (dim, idx) {\n      if ((util_1.isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  var idxResult = function () {\n    var idxRes0 = {};\n    var idxRes1 = {};\n    var guessRecords = [];\n\n    for (var i = 0, len = Math.min(5, dimCount); i < len; i++) {\n      var guessResult = doGuessOrdinal(source.data, sourceFormat, source.seriesLayoutBy, dimensionsDefine, source.startIndex, i);\n      guessRecords.push(guessResult);\n      var isPureNumber = guessResult === exports.BE_ORDINAL.Not;\n\n      if (isPureNumber && idxRes0.v == null && i !== potentialNameDimIndex) {\n        idxRes0.v = i;\n      }\n\n      if (idxRes0.n == null || idxRes0.n === idxRes0.v || !isPureNumber && guessRecords[idxRes0.n] === exports.BE_ORDINAL.Not) {\n        idxRes0.n = i;\n      }\n\n      if (fulfilled(idxRes0) && guessRecords[idxRes0.n] !== exports.BE_ORDINAL.Not) {\n        return idxRes0;\n      }\n\n      if (!isPureNumber) {\n        if (guessResult === exports.BE_ORDINAL.Might && idxRes1.v == null && i !== potentialNameDimIndex) {\n          idxRes1.v = i;\n        }\n\n        if (idxRes1.n == null || idxRes1.n === idxRes1.v) {\n          idxRes1.n = i;\n        }\n      }\n    }\n\n    function fulfilled(idxResult) {\n      return idxResult.v != null && idxResult.n != null;\n    }\n\n    return fulfilled(idxRes0) ? idxRes0 : fulfilled(idxRes1) ? idxRes1 : null;\n  }();\n\n  if (idxResult) {\n    encode.value = [idxResult.v];\n    var nameDimIndex = potentialNameDimIndex != null ? potentialNameDimIndex : idxResult.n;\n    encode.itemName = [nameDimIndex];\n    encode.seriesName = [nameDimIndex];\n  }\n\n  return encode;\n}\n\nexports.makeSeriesEncodeForNameBased = makeSeriesEncodeForNameBased;\n\nfunction querySeriesUpstreamDatasetModel(seriesModel) {\n  var thisData = seriesModel.get('data', true);\n\n  if (!thisData) {\n    return model_1.queryReferringComponents(seriesModel.ecModel, 'dataset', {\n      index: seriesModel.get('datasetIndex', true),\n      id: seriesModel.get('datasetId', true)\n    }, model_1.SINGLE_REFERRING).models[0];\n  }\n}\n\nexports.querySeriesUpstreamDatasetModel = querySeriesUpstreamDatasetModel;\n\nfunction queryDatasetUpstreamDatasetModels(datasetModel) {\n  if (!datasetModel.get('transform', true) && !datasetModel.get('fromTransformResult', true)) {\n    return [];\n  }\n\n  return model_1.queryReferringComponents(datasetModel.ecModel, 'dataset', {\n    index: datasetModel.get('fromDatasetIndex', true),\n    id: datasetModel.get('fromDatasetId', true)\n  }, model_1.SINGLE_REFERRING).models;\n}\n\nexports.queryDatasetUpstreamDatasetModels = queryDatasetUpstreamDatasetModels;\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n}\n\nexports.guessOrdinal = guessOrdinal;\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result;\n  var maxLoop = 5;\n\n  if (util_1.isTypedArray(data)) {\n    return exports.BE_ORDINAL.Not;\n  }\n\n  var dimName;\n  var dimType;\n\n  if (dimensionsDefine) {\n    var dimDefItem = dimensionsDefine[dimIndex];\n\n    if (util_1.isObject(dimDefItem)) {\n      dimName = dimDefItem.name;\n      dimType = dimDefItem.type;\n    } else if (util_1.isString(dimDefItem)) {\n      dimName = dimDefItem;\n    }\n  }\n\n  if (dimType != null) {\n    return dimType === 'ordinal' ? exports.BE_ORDINAL.Must : exports.BE_ORDINAL.Not;\n  }\n\n  if (sourceFormat === types_1.SOURCE_FORMAT_ARRAY_ROWS) {\n    var dataArrayRows = data;\n\n    if (seriesLayoutBy === types_1.SERIES_LAYOUT_BY_ROW) {\n      var sample = dataArrayRows[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < dataArrayRows.length && i < maxLoop; i++) {\n        var row = dataArrayRows[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === types_1.SOURCE_FORMAT_OBJECT_ROWS) {\n    var dataObjectRows = data;\n\n    if (!dimName) {\n      return exports.BE_ORDINAL.Not;\n    }\n\n    for (var i = 0; i < dataObjectRows.length && i < maxLoop; i++) {\n      var item = dataObjectRows[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === types_1.SOURCE_FORMAT_KEYED_COLUMNS) {\n    var dataKeyedColumns = data;\n\n    if (!dimName) {\n      return exports.BE_ORDINAL.Not;\n    }\n\n    var sample = dataKeyedColumns[dimName];\n\n    if (!sample || util_1.isTypedArray(sample)) {\n      return exports.BE_ORDINAL.Not;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === types_1.SOURCE_FORMAT_ORIGINAL) {\n    var dataOriginal = data;\n\n    for (var i = 0; i < dataOriginal.length && i < maxLoop; i++) {\n      var item = dataOriginal[i];\n      var val = model_1.getDataItemValue(item);\n\n      if (!util_1.isArray(val)) {\n        return exports.BE_ORDINAL.Not;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    var beStr = util_1.isString(val);\n\n    if (val != null && isFinite(val) && val !== '') {\n      return beStr ? exports.BE_ORDINAL.Might : exports.BE_ORDINAL.Not;\n    } else if (beStr && val !== '-') {\n      return exports.BE_ORDINAL.Must;\n    }\n  }\n\n  return exports.BE_ORDINAL.Not;\n}"]},"metadata":{},"sourceType":"script"}