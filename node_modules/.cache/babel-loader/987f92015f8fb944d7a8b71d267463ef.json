{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar is_array_1 = require(\"./is-array\");\n\nvar is_function_1 = require(\"./is-function\");\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction groupBy(data, condition) {\n  if (!condition || !is_array_1.default(data)) {\n    return {};\n  }\n\n  var result = {}; // 兼容方法和 字符串的写法\n\n  var predicate = is_function_1.default(condition) ? condition : function (item) {\n    return item[condition];\n  };\n  var key;\n\n  for (var i = 0; i < data.length; i++) {\n    var item = data[i];\n    key = predicate(item);\n\n    if (hasOwnProperty.call(result, key)) {\n      result[key].push(item);\n    } else {\n      result[key] = [item];\n    }\n  }\n\n  return result;\n}\n\nexports.default = groupBy;","map":{"version":3,"sources":["../src/group-by.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAEA,IAAM,cAAc,GAAG,MAAM,CAAC,SAAP,CAAiB,cAAxC;;AAQA,SAAS,OAAT,CAAoB,IAApB,EAA+B,SAA/B,EAAwE;AACtE,MAAI,CAAC,SAAD,IAAc,CAAC,UAAA,CAAA,OAAA,CAAQ,IAAR,CAAnB,EAAkC;AAChC,WAAO,EAAP;AACD;;AACD,MAAM,MAAM,GAAkB,EAA9B,CAJsE,CAMtE;;AACA,MAAM,SAAS,GAAG,aAAA,CAAA,OAAA,CAAW,SAAX,IAAwB,SAAxB,GAAoC,UAAC,IAAD,EAAK;AAAK,WAAA,IAAI,CAAJ,SAAI,CAAJ;AAAe,GAA/E;AAEA,MAAI,GAAJ;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,CAAC,EAAlC,EAAsC;AACpC,QAAM,IAAI,GAAG,IAAI,CAAC,CAAD,CAAjB;AACA,IAAA,GAAG,GAAG,SAAS,CAAC,IAAD,CAAf;;AACA,QAAI,cAAc,CAAC,IAAf,CAAoB,MAApB,EAA4B,GAA5B,CAAJ,EAAsC;AACpC,MAAA,MAAM,CAAC,GAAD,CAAN,CAAY,IAAZ,CAAiB,IAAjB;AACD,KAFD,MAEO;AACL,MAAA,MAAM,CAAC,GAAD,CAAN,GAAc,CAAE,IAAF,CAAd;AACD;AACF;;AAED,SAAO,MAAP;AACD;;AAED,OAAA,CAAA,OAAA,GAAe,OAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar is_array_1 = require(\"./is-array\");\nvar is_function_1 = require(\"./is-function\");\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction groupBy(data, condition) {\n    if (!condition || !is_array_1.default(data)) {\n        return {};\n    }\n    var result = {};\n    // 兼容方法和 字符串的写法\n    var predicate = is_function_1.default(condition) ? condition : function (item) { return item[condition]; };\n    var key;\n    for (var i = 0; i < data.length; i++) {\n        var item = data[i];\n        key = predicate(item);\n        if (hasOwnProperty.call(result, key)) {\n            result[key].push(item);\n        }\n        else {\n            result[key] = [item];\n        }\n    }\n    return result;\n}\nexports.default = groupBy;\n//# sourceMappingURL=group-by.js.map"]},"metadata":{},"sourceType":"script"}