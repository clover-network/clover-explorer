{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { registerShape, registerShapeFactory } from '../base';\nimport { getStyle } from '../util/get-style';\nimport { getIntervalRectPath, getRectPoints } from './util';\n/** Interval 的 shape 工厂 */\n\nvar IntervalShapeFactory = registerShapeFactory('interval', {\n  defaultShapeType: 'rect',\n  getDefaultPoints: function (pointInfo) {\n    return getRectPoints(pointInfo);\n  }\n});\n/** Inerval 默认 shape，填充的矩形 */\n\nregisterShape('interval', 'rect', {\n  draw: function (cfg, container) {\n    var style = getStyle(cfg, false, true);\n    var path = this.parsePath(getIntervalRectPath(cfg.points, style.lineCap, this.coordinate));\n    var shape = container.addShape('path', {\n      attrs: __assign(__assign({}, style), {\n        path: path\n      }),\n      name: 'interval'\n    });\n    return shape;\n  },\n  getMarker: function (markerCfg) {\n    var color = markerCfg.color,\n        isInPolar = markerCfg.isInPolar;\n\n    if (isInPolar) {\n      return {\n        symbol: 'circle',\n        style: {\n          r: 4.5,\n          fill: color\n        }\n      };\n    }\n\n    return {\n      symbol: 'square',\n      style: {\n        r: 4,\n        fill: color\n      }\n    };\n  }\n});\nexport default IntervalShapeFactory;","map":{"version":3,"sources":["../../../../src/geometry/shape/interval/index.ts"],"names":[],"mappings":";AAGA,SAAS,aAAT,EAAwB,oBAAxB,QAAoD,SAApD;AACA,SAAS,QAAT,QAAyB,mBAAzB;AACA,SAAS,mBAAT,EAA8B,aAA9B,QAAmD,QAAnD;AAEA;;AACA,IAAM,oBAAoB,GAAG,oBAAoB,CAAC,UAAD,EAAa;AAC5D,EAAA,gBAAgB,EAAE,MAD0C;AAE5D,EAAA,gBAAgB,EAAhB,UAAiB,SAAjB,EAAsC;AACpC,WAAO,aAAa,CAAC,SAAD,CAApB;AACD;AAJ2D,CAAb,CAAjD;AAOA;;AACA,aAAa,CAAC,UAAD,EAAa,MAAb,EAAqB;AAChC,EAAA,IAAI,EAAJ,UAAK,GAAL,EAAqB,SAArB,EAAsC;AACpC,QAAM,KAAK,GAAG,QAAQ,CAAC,GAAD,EAAM,KAAN,EAAa,IAAb,CAAtB;AACA,QAAM,IAAI,GAAG,KAAK,SAAL,CAAe,mBAAmB,CAAC,GAAG,CAAC,MAAL,EAAwB,KAAK,CAAC,OAA9B,EAAuC,KAAK,UAA5C,CAAlC,CAAb;AACA,QAAM,KAAK,GAAG,SAAS,CAAC,QAAV,CAAmB,MAAnB,EAA2B;AACvC,MAAA,KAAK,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACA,KADA,CAAA,EACK;AACR,QAAA,IAAI,EAAA;AADI,OADL,CADkC;AAKvC,MAAA,IAAI,EAAE;AALiC,KAA3B,CAAd;AAQA,WAAO,KAAP;AACD,GAb+B;AAchC,EAAA,SAAS,EAAT,UAAU,SAAV,EAAmC;AACzB,QAAA,KAAK,GAAgB,SAAS,CAAzB,KAAL;AAAA,QAAO,SAAS,GAAK,SAAS,CAAd,SAAhB;;AACR,QAAI,SAAJ,EAAe;AACb,aAAO;AACL,QAAA,MAAM,EAAE,QADH;AAEL,QAAA,KAAK,EAAE;AACL,UAAA,CAAC,EAAE,GADE;AAEL,UAAA,IAAI,EAAE;AAFD;AAFF,OAAP;AAOD;;AAED,WAAO;AACL,MAAA,MAAM,EAAE,QADH;AAEL,MAAA,KAAK,EAAE;AACL,QAAA,CAAC,EAAE,CADE;AAEL,QAAA,IAAI,EAAE;AAFD;AAFF,KAAP;AAOD;AAjC+B,CAArB,CAAb;AAoCA,eAAe,oBAAf","sourcesContent":["import { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { registerShape, registerShapeFactory } from '../base';\nimport { getStyle } from '../util/get-style';\nimport { getIntervalRectPath, getRectPoints } from './util';\n\n/** Interval 的 shape 工厂 */\nconst IntervalShapeFactory = registerShapeFactory('interval', {\n  defaultShapeType: 'rect',\n  getDefaultPoints(pointInfo: ShapePoint): Point[] {\n    return getRectPoints(pointInfo);\n  },\n});\n\n/** Inerval 默认 shape，填充的矩形 */\nregisterShape('interval', 'rect', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, false, true);\n    const path = this.parsePath(getIntervalRectPath(cfg.points as Point[], style.lineCap, this.coordinate));\n    const shape = container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n      },\n      name: 'interval',\n    });\n\n    return shape;\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color, isInPolar } = markerCfg;\n    if (isInPolar) {\n      return {\n        symbol: 'circle',\n        style: {\n          r: 4.5,\n          fill: color,\n        },\n      };\n    }\n\n    return {\n      symbol: 'square',\n      style: {\n        r: 4,\n        fill: color,\n      },\n    };\n  },\n});\n\nexport default IntervalShapeFactory;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}