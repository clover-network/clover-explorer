{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar Scale_1 = require(\"./Scale\");\n\nvar OrdinalMeta_1 = require(\"../data/OrdinalMeta\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar OrdinalScale = function (_super) {\n  tslib_1.__extends(OrdinalScale, _super);\n\n  function OrdinalScale(setting) {\n    var _this = _super.call(this, setting) || this;\n\n    _this.type = 'ordinal';\n\n    var ordinalMeta = _this.getSetting('ordinalMeta');\n\n    if (!ordinalMeta) {\n      ordinalMeta = new OrdinalMeta_1[\"default\"]({});\n    }\n\n    if (util_1.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta_1[\"default\"]({\n        categories: util_1.map(ordinalMeta, function (item) {\n          return util_1.isObject(item) ? item.value : item;\n        })\n      });\n    }\n\n    _this._ordinalMeta = ordinalMeta;\n    _this._categorySortInfo = [];\n    _this._extent = _this.getSetting('extent') || [0, ordinalMeta.categories.length - 1];\n    return _this;\n  }\n\n  OrdinalScale.prototype.parse = function (val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) : Math.round(val);\n  };\n\n  OrdinalScale.prototype.contain = function (rank) {\n    rank = this.parse(rank);\n    return scaleHelper.contain(rank, this._extent) && this._ordinalMeta.categories[rank] != null;\n  };\n\n  OrdinalScale.prototype.normalize = function (val) {\n    val = this.getCategoryIndex(this.parse(val));\n    return scaleHelper.normalize(val, this._extent);\n  };\n\n  OrdinalScale.prototype.scale = function (val) {\n    val = this.getCategoryIndex(val);\n    return Math.round(scaleHelper.scale(val, this._extent));\n  };\n\n  OrdinalScale.prototype.getTicks = function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push({\n        value: this.getCategoryIndex(rank)\n      });\n      rank++;\n    }\n\n    return ticks;\n  };\n\n  OrdinalScale.prototype.getMinorTicks = function (splitNumber) {\n    return;\n  };\n\n  OrdinalScale.prototype.setCategorySortInfo = function (info) {\n    this._categorySortInfo = info;\n  };\n\n  OrdinalScale.prototype.getCategorySortInfo = function () {\n    return this._categorySortInfo;\n  };\n\n  OrdinalScale.prototype.getCategoryIndex = function (n) {\n    if (this._categorySortInfo.length) {\n      return this._categorySortInfo[n].beforeSortIndex;\n    } else {\n      return n;\n    }\n  };\n\n  OrdinalScale.prototype.getRawIndex = function (displayIndex) {\n    if (this._categorySortInfo.length) {\n      return this._categorySortInfo[displayIndex].ordinalNumber;\n    } else {\n      return displayIndex;\n    }\n  };\n\n  OrdinalScale.prototype.getLabel = function (tick) {\n    if (!this.isBlank()) {\n      var rawIndex = this.getRawIndex(tick.value);\n      var cateogry = this._ordinalMeta.categories[rawIndex];\n      return cateogry == null ? '' : cateogry + '';\n    }\n  };\n\n  OrdinalScale.prototype.count = function () {\n    return this._extent[1] - this._extent[0] + 1;\n  };\n\n  OrdinalScale.prototype.unionExtentFromData = function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  };\n\n  OrdinalScale.prototype.isInExtentRange = function (value) {\n    value = this.getCategoryIndex(value);\n    return this._extent[0] <= value && this._extent[1] >= value;\n  };\n\n  OrdinalScale.prototype.getOrdinalMeta = function () {\n    return this._ordinalMeta;\n  };\n\n  OrdinalScale.prototype.niceTicks = function () {};\n\n  OrdinalScale.prototype.niceExtent = function () {};\n\n  OrdinalScale.type = 'ordinal';\n  return OrdinalScale;\n}(Scale_1[\"default\"]);\n\nScale_1[\"default\"].registerClass(OrdinalScale);\nexports[\"default\"] = OrdinalScale;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/scale/Ordinal.js"],"names":["exports","__esModule","tslib_1","require","Scale_1","OrdinalMeta_1","scaleHelper","util_1","OrdinalScale","_super","__extends","setting","_this","call","type","ordinalMeta","getSetting","isArray","categories","map","item","isObject","value","_ordinalMeta","_categorySortInfo","_extent","length","prototype","parse","val","getOrdinal","Math","round","contain","rank","normalize","getCategoryIndex","scale","getTicks","ticks","extent","push","getMinorTicks","splitNumber","setCategorySortInfo","info","getCategorySortInfo","n","beforeSortIndex","getRawIndex","displayIndex","ordinalNumber","getLabel","tick","isBlank","rawIndex","cateogry","count","unionExtentFromData","data","dim","unionExtent","getApproximateExtent","isInExtentRange","getOrdinalMeta","niceTicks","niceExtent","registerClass"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar Scale_1 = require(\"./Scale\");\n\nvar OrdinalMeta_1 = require(\"../data/OrdinalMeta\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar OrdinalScale = function (_super) {\n  tslib_1.__extends(OrdinalScale, _super);\n\n  function OrdinalScale(setting) {\n    var _this = _super.call(this, setting) || this;\n\n    _this.type = 'ordinal';\n\n    var ordinalMeta = _this.getSetting('ordinalMeta');\n\n    if (!ordinalMeta) {\n      ordinalMeta = new OrdinalMeta_1[\"default\"]({});\n    }\n\n    if (util_1.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta_1[\"default\"]({\n        categories: util_1.map(ordinalMeta, function (item) {\n          return util_1.isObject(item) ? item.value : item;\n        })\n      });\n    }\n\n    _this._ordinalMeta = ordinalMeta;\n    _this._categorySortInfo = [];\n    _this._extent = _this.getSetting('extent') || [0, ordinalMeta.categories.length - 1];\n    return _this;\n  }\n\n  OrdinalScale.prototype.parse = function (val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) : Math.round(val);\n  };\n\n  OrdinalScale.prototype.contain = function (rank) {\n    rank = this.parse(rank);\n    return scaleHelper.contain(rank, this._extent) && this._ordinalMeta.categories[rank] != null;\n  };\n\n  OrdinalScale.prototype.normalize = function (val) {\n    val = this.getCategoryIndex(this.parse(val));\n    return scaleHelper.normalize(val, this._extent);\n  };\n\n  OrdinalScale.prototype.scale = function (val) {\n    val = this.getCategoryIndex(val);\n    return Math.round(scaleHelper.scale(val, this._extent));\n  };\n\n  OrdinalScale.prototype.getTicks = function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push({\n        value: this.getCategoryIndex(rank)\n      });\n      rank++;\n    }\n\n    return ticks;\n  };\n\n  OrdinalScale.prototype.getMinorTicks = function (splitNumber) {\n    return;\n  };\n\n  OrdinalScale.prototype.setCategorySortInfo = function (info) {\n    this._categorySortInfo = info;\n  };\n\n  OrdinalScale.prototype.getCategorySortInfo = function () {\n    return this._categorySortInfo;\n  };\n\n  OrdinalScale.prototype.getCategoryIndex = function (n) {\n    if (this._categorySortInfo.length) {\n      return this._categorySortInfo[n].beforeSortIndex;\n    } else {\n      return n;\n    }\n  };\n\n  OrdinalScale.prototype.getRawIndex = function (displayIndex) {\n    if (this._categorySortInfo.length) {\n      return this._categorySortInfo[displayIndex].ordinalNumber;\n    } else {\n      return displayIndex;\n    }\n  };\n\n  OrdinalScale.prototype.getLabel = function (tick) {\n    if (!this.isBlank()) {\n      var rawIndex = this.getRawIndex(tick.value);\n      var cateogry = this._ordinalMeta.categories[rawIndex];\n      return cateogry == null ? '' : cateogry + '';\n    }\n  };\n\n  OrdinalScale.prototype.count = function () {\n    return this._extent[1] - this._extent[0] + 1;\n  };\n\n  OrdinalScale.prototype.unionExtentFromData = function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  };\n\n  OrdinalScale.prototype.isInExtentRange = function (value) {\n    value = this.getCategoryIndex(value);\n    return this._extent[0] <= value && this._extent[1] >= value;\n  };\n\n  OrdinalScale.prototype.getOrdinalMeta = function () {\n    return this._ordinalMeta;\n  };\n\n  OrdinalScale.prototype.niceTicks = function () {};\n\n  OrdinalScale.prototype.niceExtent = function () {};\n\n  OrdinalScale.type = 'ordinal';\n  return OrdinalScale;\n}(Scale_1[\"default\"]);\n\nScale_1[\"default\"].registerClass(OrdinalScale);\nexports[\"default\"] = OrdinalScale;"]},"metadata":{},"sourceType":"script"}