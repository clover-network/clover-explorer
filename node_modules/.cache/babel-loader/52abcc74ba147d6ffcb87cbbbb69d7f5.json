{"ast":null,"code":"import { __rest } from \"tslib\";\nimport { filter, isObject, isArray } from '@antv/util';\nimport { flow, findGeometry, log, LEVEL, transformLabel, deepAssign } from '../../utils';\nimport { tooltip, interaction, animation, theme, scale, annotation, state } from '../../adaptor/common';\nimport { interval } from '../../adaptor/geometries';\n/**\n * geometry 配置处理\n * @param params\n */\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var data = options.data,\n      sectorStyle = options.sectorStyle,\n      color = options.color; // 装载数据\n\n  chart.data(data);\n  flow(interval)(deepAssign({}, params, {\n    options: {\n      marginRatio: 1,\n      interval: {\n        style: sectorStyle,\n        color: color\n      }\n    }\n  }));\n  return params;\n}\n/**\n * label 配置\n * @param params\n */\n\n\nfunction label(params) {\n  var chart = params.chart,\n      options = params.options;\n  var label = options.label,\n      xField = options.xField;\n  var geometry = findGeometry(chart, 'interval'); // label 为 false 不显示 label\n\n  if (label === false) {\n    geometry.label(false);\n  } else if (isObject(label)) {\n    var callback = label.callback,\n        fields = label.fields,\n        cfg = __rest(label, [\"callback\", \"fields\"]);\n\n    var offset = cfg.offset;\n    var layout = cfg.layout; // 当 label 在 shape 外部显示时，设置 'limit-in-shape' 会\n    // 造成 label 不显示。\n\n    if (offset === undefined || offset >= 0) {\n      layout = layout ? isArray(layout) ? layout : [layout] : [];\n      cfg.layout = filter(layout, function (v) {\n        return v.type !== 'limit-in-shape';\n      });\n      cfg.layout.length || delete cfg.layout;\n    }\n\n    geometry.label({\n      fields: fields || [xField],\n      callback: callback,\n      cfg: transformLabel(cfg)\n    });\n  } else {\n    log(LEVEL.WARN, label === null, 'the label option must be an Object.');\n    geometry.label({\n      fields: [xField]\n    });\n  }\n\n  return params;\n}\n/**\n * legend 配置\n * @param params\n */\n\n\nexport function legend(params) {\n  var chart = params.chart,\n      options = params.options;\n  var legend = options.legend,\n      seriesField = options.seriesField;\n\n  if (legend === false) {\n    chart.legend(false);\n  } else if (seriesField) {\n    chart.legend(seriesField, legend);\n  }\n\n  return params;\n}\n/**\n * coord 配置\n * @param params\n */\n\nfunction coordinate(params) {\n  var chart = params.chart,\n      options = params.options;\n  var radius = options.radius,\n      innerRadius = options.innerRadius;\n  chart.coordinate({\n    type: 'polar',\n    cfg: {\n      radius: radius,\n      innerRadius: innerRadius\n    }\n  });\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\n\n\nfunction meta(params) {\n  var _a;\n\n  var options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField;\n  return flow(scale((_a = {}, _a[xField] = xAxis, _a[yField] = yAxis, _a)))(params);\n}\n/**\n * axis 配置\n * @param params\n */\n\n\nfunction axis(params) {\n  var chart = params.chart,\n      options = params.options;\n  var xAxis = options.xAxis,\n      yAxis = options.yAxis,\n      xField = options.xField,\n      yField = options.yField; // 为 falsy 则是不显示轴\n\n  if (!xAxis) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (!yAxis) {\n    chart.axis(yField, false);\n  } else {\n    chart.axis(yField, yAxis);\n  }\n\n  return params;\n}\n/**\n * 玫瑰图适配器\n * @param chart\n * @param options\n */\n\n\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  flow(geometry, meta, label, coordinate, axis, legend, tooltip, interaction, animation, theme, annotation(), state)(params);\n}","map":{"version":3,"sources":["../../../src/plots/rose/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { filter, isObject, isArray } from '@antv/util';\nimport { Params } from '../../core/adaptor';\nimport { flow, findGeometry, log, LEVEL, transformLabel, deepAssign } from '../../utils';\nimport { tooltip, interaction, animation, theme, scale, annotation, state } from '../../adaptor/common';\nimport { interval } from '../../adaptor/geometries';\nimport { RoseOptions } from './types';\n\n/**\n * geometry 配置处理\n * @param params\n */\nfunction geometry(params: Params<RoseOptions>): Params<RoseOptions> {\n  const { chart, options } = params;\n  const { data, sectorStyle, color } = options;\n\n  // 装载数据\n  chart.data(data);\n\n  flow(interval)(\n    deepAssign({}, params, {\n      options: {\n        marginRatio: 1,\n        interval: {\n          style: sectorStyle,\n          color,\n        },\n      },\n    })\n  );\n\n  return params;\n}\n\n/**\n * label 配置\n * @param params\n */\nfunction label(params: Params<RoseOptions>): Params<RoseOptions> {\n  const { chart, options } = params;\n  const { label, xField } = options;\n  const geometry = findGeometry(chart, 'interval');\n\n  // label 为 false 不显示 label\n  if (label === false) {\n    geometry.label(false);\n  } else if (isObject(label)) {\n    const { callback, fields, ...cfg } = label;\n    const { offset } = cfg;\n    let layout = cfg.layout;\n\n    // 当 label 在 shape 外部显示时，设置 'limit-in-shape' 会\n    // 造成 label 不显示。\n    if (offset === undefined || offset >= 0) {\n      layout = layout ? (isArray(layout) ? layout : [layout]) : [];\n      cfg.layout = filter(layout, (v) => v.type !== 'limit-in-shape');\n      cfg.layout.length || delete cfg.layout;\n    }\n\n    geometry.label({\n      fields: fields || [xField],\n      callback,\n      cfg: transformLabel(cfg),\n    });\n  } else {\n    log(LEVEL.WARN, label === null, 'the label option must be an Object.');\n    geometry.label({ fields: [xField] });\n  }\n\n  return params;\n}\n\n/**\n * legend 配置\n * @param params\n */\nexport function legend(params: Params<RoseOptions>): Params<RoseOptions> {\n  const { chart, options } = params;\n  const { legend, seriesField } = options;\n\n  if (legend === false) {\n    chart.legend(false);\n  } else if (seriesField) {\n    chart.legend(seriesField, legend);\n  }\n\n  return params;\n}\n\n/**\n * coord 配置\n * @param params\n */\nfunction coordinate(params: Params<RoseOptions>): Params<RoseOptions> {\n  const { chart, options } = params;\n  const { radius, innerRadius } = options;\n\n  chart.coordinate({\n    type: 'polar',\n    cfg: {\n      radius,\n      innerRadius,\n    },\n  });\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params: Params<RoseOptions>): Params<RoseOptions> {\n  const { options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  return flow(\n    scale({\n      [xField]: xAxis,\n      [yField]: yAxis,\n    })\n  )(params);\n}\n\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params: Params<RoseOptions>): Params<RoseOptions> {\n  const { chart, options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  // 为 falsy 则是不显示轴\n  if (!xAxis) {\n    chart.axis(xField, false);\n  } else {\n    chart.axis(xField, xAxis);\n  }\n\n  if (!yAxis) {\n    chart.axis(yField, false);\n  } else {\n    chart.axis(yField, yAxis);\n  }\n\n  return params;\n}\n\n/**\n * 玫瑰图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<RoseOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  flow(\n    geometry,\n    meta,\n    label,\n    coordinate,\n    axis,\n    legend,\n    tooltip,\n    interaction,\n    animation,\n    theme,\n    annotation(),\n    state\n  )(params);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}