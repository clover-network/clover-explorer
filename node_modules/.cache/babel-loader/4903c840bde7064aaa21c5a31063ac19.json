{"ast":null,"code":"import React, { useCallback, createElement, useMemo, Fragment, useRef, useEffect } from 'react';\nimport { useValueFormatter, degreesToRadians, radiansToDegrees, computeArcBoundingBox, useTheme, getLabelGenerator, midAngle, positionFromAngle, absoluteAngleRadians, absoluteAngleDegrees, textPropsByEngine, withContainer, useDimensions, bindDefs, SvgWrapper, ResponsiveWrapper, getRelativeCursor, getHoveredArc } from '@nivo/core';\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors';\nimport { useTooltip, BasicTooltip } from '@nivo/tooltip';\nimport _get from 'lodash/get';\nimport { pie, arc, line } from 'd3-shape';\nimport { BoxLegendSvg, renderLegendToCanvas } from '@nivo/legends';\n\nvar PieSlice = function PieSlice(_ref) {\n  var datum = _ref.datum,\n      path = _ref.path,\n      borderWidth = _ref.borderWidth,\n      borderColor = _ref.borderColor,\n      isInteractive = _ref.isInteractive,\n      onClick = _ref.onClick,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseMove = _ref.onMouseMove,\n      onMouseLeave = _ref.onMouseLeave,\n      tooltip = _ref.tooltip;\n\n  var _useTooltip = useTooltip(),\n      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,\n      hideTooltip = _useTooltip.hideTooltip;\n\n  var handleTooltip = useCallback(function (event) {\n    return showTooltipFromEvent(createElement(tooltip, {\n      datum: datum\n    }), event);\n  }, [showTooltipFromEvent, datum, tooltip]);\n  var handleMouseEnter = useCallback(function (event) {\n    onMouseEnter === null || onMouseEnter === void 0 ? void 0 : onMouseEnter(datum, event);\n    handleTooltip(event);\n  }, [onMouseEnter, handleTooltip, datum]);\n  var handleMouseMove = useCallback(function (event) {\n    onMouseMove === null || onMouseMove === void 0 ? void 0 : onMouseMove(datum, event);\n    handleTooltip(event);\n  }, [onMouseMove, handleTooltip, datum]);\n  var handleMouseLeave = useCallback(function (event) {\n    onMouseLeave === null || onMouseLeave === void 0 ? void 0 : onMouseLeave(datum, event);\n    hideTooltip();\n  }, [onMouseLeave, hideTooltip, datum]);\n  var handleClick = useCallback(function (event) {\n    onClick === null || onClick === void 0 ? void 0 : onClick(datum, event);\n  }, [onClick, datum]);\n  return React.createElement(\"path\", {\n    d: path,\n    fill: datum.fill || datum.color,\n    strokeWidth: borderWidth,\n    stroke: borderColor,\n    onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n    onMouseMove: isInteractive ? handleMouseMove : undefined,\n    onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n    onClick: isInteractive ? handleClick : undefined\n  });\n};\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar PieTooltip = function PieTooltip(_ref) {\n  var datum = _ref.datum;\n  return React.createElement(BasicTooltip, {\n    id: datum.id,\n    value: datum.formattedValue,\n    enableChip: true,\n    color: datum.color\n  });\n};\n\nvar _window$devicePixelRa;\n\nvar defaultProps = {\n  id: 'id',\n  value: 'value',\n  sortByValue: false,\n  innerRadius: 0,\n  padAngle: 0,\n  cornerRadius: 0,\n  layers: ['slices', 'radialLabels', 'sliceLabels', 'legends'],\n  startAngle: 0,\n  endAngle: 360,\n  fit: true,\n  borderWidth: 0,\n  borderColor: {\n    from: 'color',\n    modifiers: [['darker', 1]]\n  },\n  radialLabel: 'id',\n  enableRadialLabels: true,\n  radialLabelsSkipAngle: 0,\n  radialLabelsLinkOffset: 0,\n  radialLabelsLinkDiagonalLength: 16,\n  radialLabelsLinkHorizontalLength: 24,\n  radialLabelsLinkStrokeWidth: 1,\n  radialLabelsTextXOffset: 6,\n  radialLabelsTextColor: {\n    theme: 'labels.text.fill'\n  },\n  radialLabelsLinkColor: {\n    theme: 'axis.ticks.line.stroke'\n  },\n  enableSliceLabels: true,\n  sliceLabel: 'formattedValue',\n  sliceLabelsSkipAngle: 0,\n  sliceLabelsRadiusOffset: 0.5,\n  sliceLabelsTextColor: {\n    theme: 'labels.text.fill'\n  },\n  colors: {\n    scheme: 'nivo'\n  },\n  defs: [],\n  fill: [],\n  isInteractive: true,\n  tooltip: PieTooltip,\n  legends: [],\n  role: 'img',\n  pixelRatio: typeof window !== 'undefined' ? (_window$devicePixelRa = window.devicePixelRatio) !== null && _window$devicePixelRa !== void 0 ? _window$devicePixelRa : 1 : 1\n};\n\nvar useNormalizedData = function useNormalizedData(_ref) {\n  var data = _ref.data,\n      _ref$id = _ref.id,\n      id = _ref$id === void 0 ? defaultProps.id : _ref$id,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? defaultProps.value : _ref$value,\n      valueFormat = _ref.valueFormat,\n      _ref$colors = _ref.colors,\n      colors = _ref$colors === void 0 ? defaultProps.colors : _ref$colors;\n  var getId = useMemo(function () {\n    return typeof id === 'function' ? id : function (d) {\n      return _get(d, id);\n    };\n  }, [id]);\n  var getValue = useMemo(function () {\n    return typeof value === 'function' ? value : function (d) {\n      return _get(d, value);\n    };\n  }, [value]);\n  var formatValue = useValueFormatter(valueFormat);\n  var getColor = useOrdinalColorScale(colors, 'id');\n  return useMemo(function () {\n    return data.map(function (datum) {\n      var _datum$label;\n\n      var datumId = getId(datum);\n      var datumValue = getValue(datum);\n      var normalizedDatum = {\n        id: datumId,\n        label: (_datum$label = datum.label) !== null && _datum$label !== void 0 ? _datum$label : datumId,\n        value: datumValue,\n        formattedValue: formatValue(datumValue),\n        data: datum\n      };\n      return _objectSpread2(_objectSpread2({}, normalizedDatum), {}, {\n        color: getColor(normalizedDatum)\n      });\n    });\n  }, [data, getId, getValue, formatValue, getColor]);\n};\n\nvar usePieArcs = function usePieArcs(_ref2) {\n  var data = _ref2.data,\n      _ref2$startAngle = _ref2.startAngle,\n      startAngle = _ref2$startAngle === void 0 ? defaultProps.startAngle : _ref2$startAngle,\n      _ref2$endAngle = _ref2.endAngle,\n      endAngle = _ref2$endAngle === void 0 ? defaultProps.endAngle : _ref2$endAngle,\n      _ref2$padAngle = _ref2.padAngle,\n      padAngle = _ref2$padAngle === void 0 ? defaultProps.padAngle : _ref2$padAngle,\n      _ref2$sortByValue = _ref2.sortByValue,\n      sortByValue = _ref2$sortByValue === void 0 ? defaultProps.sortByValue : _ref2$sortByValue;\n  var pie$1 = useMemo(function () {\n    var innerPie = pie().value(function (d) {\n      return d.value;\n    }).padAngle(degreesToRadians(padAngle)).startAngle(degreesToRadians(startAngle)).endAngle(degreesToRadians(endAngle));\n    if (sortByValue !== true) innerPie.sortValues(null);\n    return innerPie;\n  }, [startAngle, endAngle, padAngle, sortByValue]);\n  return useMemo(function () {\n    return pie$1(data).map(function (arc) {\n      var angle = Math.abs(arc.endAngle - arc.startAngle);\n      return _objectSpread2(_objectSpread2({}, arc.data), {}, {\n        arc: {\n          index: arc.index,\n          startAngle: arc.startAngle,\n          endAngle: arc.endAngle,\n          padAngle: arc.padAngle,\n          angle: angle,\n          angleDeg: radiansToDegrees(angle)\n        }\n      });\n    });\n  }, [pie$1, data]);\n};\n\nvar usePieArcGenerator = function usePieArcGenerator(_ref3) {\n  var radius = _ref3.radius,\n      innerRadius = _ref3.innerRadius,\n      _ref3$cornerRadius = _ref3.cornerRadius,\n      cornerRadius = _ref3$cornerRadius === void 0 ? defaultProps.cornerRadius : _ref3$cornerRadius;\n  return useMemo(function () {\n    return arc().outerRadius(radius).innerRadius(innerRadius).cornerRadius(cornerRadius);\n  }, [radius, innerRadius, cornerRadius]);\n};\n\nvar usePie = function usePie(_ref4) {\n  var data = _ref4.data,\n      radius = _ref4.radius,\n      innerRadius = _ref4.innerRadius,\n      _ref4$startAngle = _ref4.startAngle,\n      startAngle = _ref4$startAngle === void 0 ? defaultProps.startAngle : _ref4$startAngle,\n      _ref4$endAngle = _ref4.endAngle,\n      endAngle = _ref4$endAngle === void 0 ? defaultProps.endAngle : _ref4$endAngle,\n      _ref4$padAngle = _ref4.padAngle,\n      padAngle = _ref4$padAngle === void 0 ? defaultProps.padAngle : _ref4$padAngle,\n      _ref4$sortByValue = _ref4.sortByValue,\n      sortByValue = _ref4$sortByValue === void 0 ? defaultProps.sortByValue : _ref4$sortByValue,\n      _ref4$cornerRadius = _ref4.cornerRadius,\n      cornerRadius = _ref4$cornerRadius === void 0 ? defaultProps.cornerRadius : _ref4$cornerRadius;\n  var dataWithArc = usePieArcs({\n    data: data,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    padAngle: padAngle,\n    sortByValue: sortByValue\n  });\n  var arcGenerator = usePieArcGenerator({\n    radius: radius,\n    innerRadius: innerRadius,\n    cornerRadius: cornerRadius\n  });\n  return {\n    dataWithArc: dataWithArc,\n    arcGenerator: arcGenerator\n  };\n};\n\nvar usePieFromBox = function usePieFromBox(_ref5) {\n  var data = _ref5.data,\n      width = _ref5.width,\n      height = _ref5.height,\n      _ref5$innerRadius = _ref5.innerRadius,\n      innerRadiusRatio = _ref5$innerRadius === void 0 ? defaultProps.innerRadius : _ref5$innerRadius,\n      _ref5$startAngle = _ref5.startAngle,\n      startAngle = _ref5$startAngle === void 0 ? defaultProps.startAngle : _ref5$startAngle,\n      _ref5$endAngle = _ref5.endAngle,\n      endAngle = _ref5$endAngle === void 0 ? defaultProps.endAngle : _ref5$endAngle,\n      _ref5$padAngle = _ref5.padAngle,\n      padAngle = _ref5$padAngle === void 0 ? defaultProps.padAngle : _ref5$padAngle,\n      _ref5$sortByValue = _ref5.sortByValue,\n      sortByValue = _ref5$sortByValue === void 0 ? defaultProps.sortByValue : _ref5$sortByValue,\n      _ref5$cornerRadius = _ref5.cornerRadius,\n      cornerRadius = _ref5$cornerRadius === void 0 ? defaultProps.cornerRadius : _ref5$cornerRadius,\n      _ref5$fit = _ref5.fit,\n      fit = _ref5$fit === void 0 ? defaultProps.fit : _ref5$fit;\n  var dataWithArc = usePieArcs({\n    data: data,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    padAngle: padAngle,\n    sortByValue: sortByValue\n  });\n  var computedProps = useMemo(function () {\n    var radius = Math.min(width, height) / 2;\n    var innerRadius = radius * Math.min(innerRadiusRatio, 1);\n    var centerX = width / 2;\n    var centerY = height / 2;\n    var boundingBox;\n\n    if (fit) {\n      var _computeArcBoundingBo = computeArcBoundingBox(centerX, centerY, radius, startAngle - 90, endAngle - 90),\n          points = _computeArcBoundingBo.points,\n          box = _objectWithoutProperties(_computeArcBoundingBo, [\"points\"]);\n\n      var ratio = Math.min(width / box.width, height / box.height);\n      var adjustedBox = {\n        width: box.width * ratio,\n        height: box.height * ratio\n      };\n      adjustedBox.x = (width - adjustedBox.width) / 2;\n      adjustedBox.y = (height - adjustedBox.height) / 2;\n      centerX = (centerX - box.x) / box.width * box.width * ratio + adjustedBox.x;\n      centerY = (centerY - box.y) / box.height * box.height * ratio + adjustedBox.y;\n      boundingBox = {\n        box: box,\n        ratio: ratio,\n        points: points\n      };\n      radius = radius * ratio;\n      innerRadius = innerRadius * ratio;\n    }\n\n    return {\n      centerX: centerX,\n      centerY: centerY,\n      radius: radius,\n      innerRadius: innerRadius,\n      debug: boundingBox\n    };\n  }, [width, height, innerRadiusRatio, startAngle, endAngle, fit, cornerRadius]);\n  var arcGenerator = usePieArcGenerator({\n    radius: computedProps.radius,\n    innerRadius: computedProps.innerRadius,\n    cornerRadius: cornerRadius\n  });\n  return _objectSpread2({\n    dataWithArc: dataWithArc,\n    arcGenerator: arcGenerator\n  }, computedProps);\n};\n\nvar usePieSliceLabels = function usePieSliceLabels(_ref6) {\n  var enable = _ref6.enable,\n      dataWithArc = _ref6.dataWithArc,\n      skipAngle = _ref6.skipAngle,\n      radius = _ref6.radius,\n      innerRadius = _ref6.innerRadius,\n      radiusOffset = _ref6.radiusOffset,\n      label = _ref6.label,\n      textColor = _ref6.textColor;\n  var theme = useTheme();\n  var getTextColor = useInheritedColor(textColor, theme);\n  var getLabel = useMemo(function () {\n    return getLabelGenerator(label);\n  }, [label]);\n  return useMemo(function () {\n    if (!enable) return [];\n    return dataWithArc.filter(function (datumWithArc) {\n      return skipAngle === 0 || datumWithArc.arc.angleDeg > skipAngle;\n    }).map(function (datumWithArc) {\n      var angle = midAngle(datumWithArc.arc) - Math.PI / 2;\n      var labelRadius = innerRadius + (radius - innerRadius) * radiusOffset;\n      var position = positionFromAngle(angle, labelRadius);\n      var datumTextColor = getTextColor(datumWithArc);\n      return _objectSpread2(_objectSpread2({}, position), {}, {\n        label: getLabel(datumWithArc),\n        textColor: datumTextColor,\n        datum: datumWithArc\n      });\n    });\n  }, [enable, dataWithArc, skipAngle, radius, innerRadius, radiusOffset, getLabel, getTextColor]);\n};\n\nvar usePieRadialLabels = function usePieRadialLabels(_ref7) {\n  var enable = _ref7.enable,\n      dataWithArc = _ref7.dataWithArc,\n      label = _ref7.label,\n      textXOffset = _ref7.textXOffset,\n      textColor = _ref7.textColor,\n      radius = _ref7.radius,\n      skipAngle = _ref7.skipAngle,\n      linkOffset = _ref7.linkOffset,\n      linkDiagonalLength = _ref7.linkDiagonalLength,\n      linkHorizontalLength = _ref7.linkHorizontalLength,\n      linkColor = _ref7.linkColor;\n  var getLabel = useMemo(function () {\n    return getLabelGenerator(label);\n  }, [label]);\n  var theme = useTheme();\n  var getTextColor = useInheritedColor(textColor, theme);\n  var getLinkColor = useInheritedColor(linkColor, theme);\n  return useMemo(function () {\n    if (!enable) return [];\n    return dataWithArc.filter(function (datum) {\n      return skipAngle === 0 || datum.arc.angleDeg > skipAngle;\n    }).map(function (datum) {\n      var angle = absoluteAngleRadians(midAngle(datum.arc) - Math.PI / 2);\n      var positionA = positionFromAngle(angle, radius + linkOffset);\n      var positionB = positionFromAngle(angle, radius + linkOffset + linkDiagonalLength);\n      var positionC;\n      var labelPosition;\n      var textAlign;\n\n      if (absoluteAngleDegrees(radiansToDegrees(angle)) < 90 || absoluteAngleDegrees(radiansToDegrees(angle)) >= 270) {\n        positionC = {\n          x: positionB.x + linkHorizontalLength,\n          y: positionB.y\n        };\n        labelPosition = {\n          x: positionB.x + linkHorizontalLength + textXOffset,\n          y: positionB.y\n        };\n        textAlign = 'left';\n      } else {\n        positionC = {\n          x: positionB.x - linkHorizontalLength,\n          y: positionB.y\n        };\n        labelPosition = {\n          x: positionB.x - linkHorizontalLength - textXOffset,\n          y: positionB.y\n        };\n        textAlign = 'right';\n      }\n\n      return {\n        text: getLabel(datum),\n        textColor: getTextColor(datum),\n        position: labelPosition,\n        align: textAlign,\n        line: [positionA, positionB, positionC],\n        linkColor: getLinkColor(datum),\n        datum: datum\n      };\n    });\n  }, [dataWithArc, skipAngle, radius, linkOffset, linkDiagonalLength, linkHorizontalLength, textXOffset, getLabel, getTextColor, getLinkColor]);\n};\n\nvar usePieLayerContext = function usePieLayerContext(_ref8) {\n  var dataWithArc = _ref8.dataWithArc,\n      arcGenerator = _ref8.arcGenerator,\n      centerX = _ref8.centerX,\n      centerY = _ref8.centerY,\n      radius = _ref8.radius,\n      innerRadius = _ref8.innerRadius;\n  return useMemo(function () {\n    return {\n      dataWithArc: dataWithArc,\n      arcGenerator: arcGenerator,\n      centerX: centerX,\n      centerY: centerY,\n      radius: radius,\n      innerRadius: innerRadius\n    };\n  }, [dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius]);\n};\n\nvar lineGenerator = line().x(function (d) {\n  return d.x;\n}).y(function (d) {\n  return d.y;\n});\n\nvar RadialLabel = function RadialLabel(_ref) {\n  var _lineGenerator;\n\n  var label = _ref.label,\n      linkStrokeWidth = _ref.linkStrokeWidth;\n  var theme = useTheme();\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: (_lineGenerator = lineGenerator(label.line)) !== null && _lineGenerator !== void 0 ? _lineGenerator : undefined,\n    fill: \"none\",\n    style: {\n      fill: 'none',\n      stroke: label.linkColor\n    },\n    strokeWidth: linkStrokeWidth\n  }), React.createElement(\"g\", {\n    transform: \"translate(\".concat(label.position.x, \", \").concat(label.position.y, \")\")\n  }, React.createElement(\"text\", {\n    textAnchor: textPropsByEngine.svg.align[label.align],\n    dominantBaseline: \"central\",\n    style: _objectSpread2(_objectSpread2({}, theme.labels.text), {}, {\n      fill: label.textColor\n    })\n  }, label.text)));\n};\n\nvar RadialLabels = function RadialLabels(_ref) {\n  var dataWithArc = _ref.dataWithArc,\n      label = _ref.label,\n      radius = _ref.radius,\n      skipAngle = _ref.skipAngle,\n      linkOffset = _ref.linkOffset,\n      linkDiagonalLength = _ref.linkDiagonalLength,\n      linkHorizontalLength = _ref.linkHorizontalLength,\n      linkStrokeWidth = _ref.linkStrokeWidth,\n      textXOffset = _ref.textXOffset,\n      textColor = _ref.textColor,\n      linkColor = _ref.linkColor;\n  var radialLabels = usePieRadialLabels({\n    enable: true,\n    dataWithArc: dataWithArc,\n    label: label,\n    textXOffset: textXOffset,\n    textColor: textColor,\n    radius: radius,\n    skipAngle: skipAngle,\n    linkOffset: linkOffset,\n    linkDiagonalLength: linkDiagonalLength,\n    linkHorizontalLength: linkHorizontalLength,\n    linkColor: linkColor\n  });\n  return React.createElement(React.Fragment, null, radialLabels.map(function (labelData) {\n    return React.createElement(RadialLabel, {\n      key: labelData.datum.id,\n      label: labelData,\n      linkStrokeWidth: linkStrokeWidth\n    });\n  }));\n};\n\nvar sliceStyle = {\n  pointerEvents: 'none'\n};\n\nvar SliceLabels = function SliceLabels(_ref) {\n  var dataWithArc = _ref.dataWithArc,\n      labelAccessor = _ref.label,\n      radius = _ref.radius,\n      innerRadius = _ref.innerRadius,\n      radiusOffset = _ref.radiusOffset,\n      skipAngle = _ref.skipAngle,\n      textColor = _ref.textColor;\n  var theme = useTheme();\n  var labels = usePieSliceLabels({\n    enable: true,\n    dataWithArc: dataWithArc,\n    skipAngle: skipAngle,\n    radius: radius,\n    innerRadius: innerRadius,\n    radiusOffset: radiusOffset,\n    label: labelAccessor,\n    textColor: textColor\n  });\n  return React.createElement(React.Fragment, null, labels.map(function (label) {\n    return React.createElement(\"g\", {\n      key: label.datum.id,\n      transform: \"translate(\".concat(label.x, \", \").concat(label.y, \")\"),\n      style: sliceStyle\n    }, React.createElement(\"text\", {\n      textAnchor: \"middle\",\n      dominantBaseline: \"central\",\n      style: _objectSpread2(_objectSpread2({}, theme.labels.text), {}, {\n        fill: label.textColor\n      })\n    }, label.label));\n  }));\n};\n\nvar PieLegends = function PieLegends(_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      legends = _ref.legends,\n      dataWithArc = _ref.dataWithArc;\n  return React.createElement(React.Fragment, null, legends.map(function (legend, i) {\n    return React.createElement(BoxLegendSvg, Object.assign({\n      key: i\n    }, legend, {\n      containerWidth: width,\n      containerHeight: height,\n      data: dataWithArc\n    }));\n  }));\n};\n\nvar Pie = function Pie(_ref) {\n  var data = _ref.data,\n      _ref$id = _ref.id,\n      id = _ref$id === void 0 ? defaultProps.id : _ref$id,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? defaultProps.value : _ref$value,\n      valueFormat = _ref.valueFormat,\n      _ref$sortByValue = _ref.sortByValue,\n      sortByValue = _ref$sortByValue === void 0 ? defaultProps.sortByValue : _ref$sortByValue,\n      _ref$layers = _ref.layers,\n      layers = _ref$layers === void 0 ? defaultProps.layers : _ref$layers,\n      _ref$startAngle = _ref.startAngle,\n      startAngle = _ref$startAngle === void 0 ? defaultProps.startAngle : _ref$startAngle,\n      _ref$endAngle = _ref.endAngle,\n      endAngle = _ref$endAngle === void 0 ? defaultProps.endAngle : _ref$endAngle,\n      _ref$padAngle = _ref.padAngle,\n      padAngle = _ref$padAngle === void 0 ? defaultProps.padAngle : _ref$padAngle,\n      _ref$fit = _ref.fit,\n      fit = _ref$fit === void 0 ? defaultProps.fit : _ref$fit,\n      _ref$innerRadius = _ref.innerRadius,\n      innerRadiusRatio = _ref$innerRadius === void 0 ? defaultProps.innerRadius : _ref$innerRadius,\n      _ref$cornerRadius = _ref.cornerRadius,\n      cornerRadius = _ref$cornerRadius === void 0 ? defaultProps.cornerRadius : _ref$cornerRadius,\n      width = _ref.width,\n      height = _ref.height,\n      partialMargin = _ref.margin,\n      _ref$colors = _ref.colors,\n      colors = _ref$colors === void 0 ? defaultProps.colors : _ref$colors,\n      _ref$borderWidth = _ref.borderWidth,\n      borderWidth = _ref$borderWidth === void 0 ? defaultProps.borderWidth : _ref$borderWidth,\n      _ref$borderColor = _ref.borderColor,\n      _borderColor = _ref$borderColor === void 0 ? defaultProps.borderColor : _ref$borderColor,\n      _ref$radialLabel = _ref.radialLabel,\n      radialLabel = _ref$radialLabel === void 0 ? defaultProps.radialLabel : _ref$radialLabel,\n      _ref$enableRadialLabe = _ref.enableRadialLabels,\n      enableRadialLabels = _ref$enableRadialLabe === void 0 ? defaultProps.enableRadialLabels : _ref$enableRadialLabe,\n      _ref$radialLabelsSkip = _ref.radialLabelsSkipAngle,\n      radialLabelsSkipAngle = _ref$radialLabelsSkip === void 0 ? defaultProps.radialLabelsSkipAngle : _ref$radialLabelsSkip,\n      _ref$radialLabelsLink = _ref.radialLabelsLinkOffset,\n      radialLabelsLinkOffset = _ref$radialLabelsLink === void 0 ? defaultProps.radialLabelsLinkOffset : _ref$radialLabelsLink,\n      _ref$radialLabelsLink2 = _ref.radialLabelsLinkDiagonalLength,\n      radialLabelsLinkDiagonalLength = _ref$radialLabelsLink2 === void 0 ? defaultProps.radialLabelsLinkDiagonalLength : _ref$radialLabelsLink2,\n      _ref$radialLabelsLink3 = _ref.radialLabelsLinkHorizontalLength,\n      radialLabelsLinkHorizontalLength = _ref$radialLabelsLink3 === void 0 ? defaultProps.radialLabelsLinkHorizontalLength : _ref$radialLabelsLink3,\n      _ref$radialLabelsLink4 = _ref.radialLabelsLinkStrokeWidth,\n      radialLabelsLinkStrokeWidth = _ref$radialLabelsLink4 === void 0 ? defaultProps.radialLabelsLinkStrokeWidth : _ref$radialLabelsLink4,\n      _ref$radialLabelsText = _ref.radialLabelsTextXOffset,\n      radialLabelsTextXOffset = _ref$radialLabelsText === void 0 ? defaultProps.radialLabelsTextXOffset : _ref$radialLabelsText,\n      _ref$radialLabelsText2 = _ref.radialLabelsTextColor,\n      radialLabelsTextColor = _ref$radialLabelsText2 === void 0 ? defaultProps.radialLabelsTextColor : _ref$radialLabelsText2,\n      _ref$radialLabelsLink5 = _ref.radialLabelsLinkColor,\n      radialLabelsLinkColor = _ref$radialLabelsLink5 === void 0 ? defaultProps.radialLabelsLinkColor : _ref$radialLabelsLink5,\n      _ref$sliceLabel = _ref.sliceLabel,\n      sliceLabel = _ref$sliceLabel === void 0 ? defaultProps.sliceLabel : _ref$sliceLabel,\n      _ref$enableSliceLabel = _ref.enableSliceLabels,\n      enableSliceLabels = _ref$enableSliceLabel === void 0 ? defaultProps.enableSliceLabels : _ref$enableSliceLabel,\n      _ref$sliceLabelsSkipA = _ref.sliceLabelsSkipAngle,\n      sliceLabelsSkipAngle = _ref$sliceLabelsSkipA === void 0 ? defaultProps.sliceLabelsSkipAngle : _ref$sliceLabelsSkipA,\n      _ref$sliceLabelsTextC = _ref.sliceLabelsTextColor,\n      sliceLabelsTextColor = _ref$sliceLabelsTextC === void 0 ? defaultProps.sliceLabelsTextColor : _ref$sliceLabelsTextC,\n      _ref$sliceLabelsRadiu = _ref.sliceLabelsRadiusOffset,\n      sliceLabelsRadiusOffset = _ref$sliceLabelsRadiu === void 0 ? defaultProps.sliceLabelsRadiusOffset : _ref$sliceLabelsRadiu,\n      _ref$defs = _ref.defs,\n      defs = _ref$defs === void 0 ? defaultProps.defs : _ref$defs,\n      _ref$fill = _ref.fill,\n      fill = _ref$fill === void 0 ? defaultProps.fill : _ref$fill,\n      _ref$isInteractive = _ref.isInteractive,\n      isInteractive = _ref$isInteractive === void 0 ? defaultProps.isInteractive : _ref$isInteractive,\n      onClick = _ref.onClick,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseMove = _ref.onMouseMove,\n      onMouseLeave = _ref.onMouseLeave,\n      _ref$tooltip = _ref.tooltip,\n      tooltip = _ref$tooltip === void 0 ? defaultProps.tooltip : _ref$tooltip,\n      _ref$legends = _ref.legends,\n      legends = _ref$legends === void 0 ? defaultProps.legends : _ref$legends,\n      _ref$role = _ref.role,\n      role = _ref$role === void 0 ? defaultProps.role : _ref$role;\n\n  var theme = useTheme();\n\n  var _useDimensions = useDimensions(width, height, partialMargin),\n      outerWidth = _useDimensions.outerWidth,\n      outerHeight = _useDimensions.outerHeight,\n      margin = _useDimensions.margin,\n      innerWidth = _useDimensions.innerWidth,\n      innerHeight = _useDimensions.innerHeight;\n\n  var normalizedData = useNormalizedData({\n    data: data,\n    id: id,\n    value: value,\n    valueFormat: valueFormat,\n    colors: colors\n  });\n\n  var _usePieFromBox = usePieFromBox({\n    data: normalizedData,\n    width: innerWidth,\n    height: innerHeight,\n    fit: fit,\n    innerRadius: innerRadiusRatio,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    padAngle: padAngle,\n    sortByValue: sortByValue,\n    cornerRadius: cornerRadius\n  }),\n      dataWithArc = _usePieFromBox.dataWithArc,\n      arcGenerator = _usePieFromBox.arcGenerator,\n      centerX = _usePieFromBox.centerX,\n      centerY = _usePieFromBox.centerY,\n      radius = _usePieFromBox.radius,\n      innerRadius = _usePieFromBox.innerRadius;\n\n  var borderColor = useInheritedColor(_borderColor, theme);\n  var boundDefs = bindDefs(defs, dataWithArc, fill);\n  var layerById = {\n    slices: null,\n    radialLabels: null,\n    sliceLabels: null,\n    legends: null\n  };\n\n  if (layers.includes('slices')) {\n    layerById.slices = React.createElement(\"g\", {\n      key: \"slices\",\n      transform: \"translate(\".concat(centerX, \",\").concat(centerY, \")\")\n    }, dataWithArc.map(function (datumWithArc) {\n      var _arcGenerator;\n\n      return React.createElement(PieSlice, {\n        key: datumWithArc.id,\n        datum: datumWithArc,\n        path: (_arcGenerator = arcGenerator(datumWithArc.arc)) !== null && _arcGenerator !== void 0 ? _arcGenerator : undefined,\n        borderWidth: borderWidth,\n        borderColor: borderColor(datumWithArc),\n        tooltip: tooltip,\n        isInteractive: isInteractive,\n        onClick: onClick,\n        onMouseEnter: onMouseEnter,\n        onMouseMove: onMouseMove,\n        onMouseLeave: onMouseLeave\n      });\n    }));\n  }\n\n  if (enableRadialLabels && layers.includes('radialLabels')) {\n    layerById.radialLabels = React.createElement(\"g\", {\n      key: \"radialLabels\",\n      transform: \"translate(\".concat(centerX, \",\").concat(centerY, \")\")\n    }, React.createElement(RadialLabels, {\n      dataWithArc: dataWithArc,\n      radius: radius,\n      label: radialLabel,\n      skipAngle: radialLabelsSkipAngle,\n      linkOffset: radialLabelsLinkOffset,\n      linkDiagonalLength: radialLabelsLinkDiagonalLength,\n      linkHorizontalLength: radialLabelsLinkHorizontalLength,\n      linkStrokeWidth: radialLabelsLinkStrokeWidth,\n      textXOffset: radialLabelsTextXOffset,\n      textColor: radialLabelsTextColor,\n      linkColor: radialLabelsLinkColor\n    }));\n  }\n\n  if (enableSliceLabels && layers.includes('sliceLabels')) {\n    layerById.sliceLabels = React.createElement(\"g\", {\n      key: \"sliceLabels\",\n      transform: \"translate(\".concat(centerX, \",\").concat(centerY, \")\")\n    }, React.createElement(SliceLabels, {\n      dataWithArc: dataWithArc,\n      label: sliceLabel,\n      radius: radius,\n      innerRadius: innerRadius,\n      radiusOffset: sliceLabelsRadiusOffset,\n      skipAngle: sliceLabelsSkipAngle,\n      textColor: sliceLabelsTextColor\n    }));\n  }\n\n  if (legends.length > 0 && layers.includes('legends')) {\n    layerById.legends = React.createElement(PieLegends, {\n      key: \"legends\",\n      width: innerWidth,\n      height: innerHeight,\n      dataWithArc: dataWithArc,\n      legends: legends\n    });\n  }\n\n  var layerContext = usePieLayerContext({\n    dataWithArc: dataWithArc,\n    arcGenerator: arcGenerator,\n    centerX: centerX,\n    centerY: centerY,\n    radius: radius,\n    innerRadius: innerRadius\n  });\n  return React.createElement(SvgWrapper, {\n    width: outerWidth,\n    height: outerHeight,\n    margin: margin,\n    defs: boundDefs,\n    role: role\n  }, layers.map(function (layer, i) {\n    if (layerById[layer] !== undefined) {\n      return layerById[layer];\n    }\n\n    if (typeof layer === 'function') {\n      return React.createElement(Fragment, {\n        key: i\n      }, createElement(layer, layerContext));\n    }\n\n    return null;\n  }));\n};\n\nvar Pie$1 = withContainer(Pie);\n\nvar ResponsivePie = function ResponsivePie(props) {\n  return React.createElement(ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React.createElement(Pie$1, Object.assign({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nvar drawSliceLabels = function drawSliceLabels(ctx, labels, theme) {\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'middle';\n  ctx.font = \"\".concat(theme.labels.text.fontSize, \"px \").concat(theme.labels.text.fontFamily);\n  labels.forEach(function (label) {\n    ctx.save();\n    ctx.translate(label.x, label.y);\n    ctx.fillStyle = label.textColor;\n    ctx.fillText(\"\".concat(label.label), 0, 0);\n    ctx.restore();\n  });\n};\n\nvar drawRadialLabels = function drawRadialLabels(ctx, labels, theme, linkStrokeWidth) {\n  ctx.textBaseline = 'middle';\n  ctx.font = \"\".concat(theme.labels.text.fontSize, \"px \").concat(theme.labels.text.fontFamily);\n  labels.forEach(function (label) {\n    ctx.save();\n    ctx.translate(label.position.x, label.position.y);\n    ctx.fillStyle = label.textColor;\n    ctx.textAlign = textPropsByEngine.canvas.align[label.align];\n    ctx.fillText(\"\".concat(label.text), 0, 0);\n    ctx.restore();\n    ctx.beginPath();\n    ctx.strokeStyle = label.linkColor;\n    ctx.lineWidth = linkStrokeWidth;\n    label.line.forEach(function (point, index) {\n      if (index === 0) ctx.moveTo(point.x, point.y);else ctx.lineTo(point.x, point.y);\n    });\n    if (linkStrokeWidth > 0) ctx.stroke();\n  });\n};\n\nvar PieCanvas = function PieCanvas(_ref) {\n  var data = _ref.data,\n      _ref$id = _ref.id,\n      id = _ref$id === void 0 ? defaultProps.id : _ref$id,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? defaultProps.value : _ref$value,\n      valueFormat = _ref.valueFormat,\n      _ref$sortByValue = _ref.sortByValue,\n      sortByValue = _ref$sortByValue === void 0 ? defaultProps.sortByValue : _ref$sortByValue,\n      _ref$startAngle = _ref.startAngle,\n      startAngle = _ref$startAngle === void 0 ? defaultProps.startAngle : _ref$startAngle,\n      _ref$endAngle = _ref.endAngle,\n      endAngle = _ref$endAngle === void 0 ? defaultProps.endAngle : _ref$endAngle,\n      _ref$padAngle = _ref.padAngle,\n      padAngle = _ref$padAngle === void 0 ? defaultProps.padAngle : _ref$padAngle,\n      _ref$fit = _ref.fit,\n      fit = _ref$fit === void 0 ? defaultProps.fit : _ref$fit,\n      _ref$innerRadius = _ref.innerRadius,\n      innerRadiusRatio = _ref$innerRadius === void 0 ? defaultProps.innerRadius : _ref$innerRadius,\n      _ref$cornerRadius = _ref.cornerRadius,\n      cornerRadius = _ref$cornerRadius === void 0 ? defaultProps.cornerRadius : _ref$cornerRadius,\n      width = _ref.width,\n      height = _ref.height,\n      partialMargin = _ref.margin,\n      _ref$pixelRatio = _ref.pixelRatio,\n      pixelRatio = _ref$pixelRatio === void 0 ? 1 : _ref$pixelRatio,\n      _ref$colors = _ref.colors,\n      colors = _ref$colors === void 0 ? defaultProps.colors : _ref$colors,\n      _ref$borderWidth = _ref.borderWidth,\n      borderWidth = _ref$borderWidth === void 0 ? defaultProps.borderWidth : _ref$borderWidth,\n      _ref$borderColor = _ref.borderColor,\n      borderColor = _ref$borderColor === void 0 ? defaultProps.borderColor : _ref$borderColor,\n      _ref$radialLabel = _ref.radialLabel,\n      radialLabel = _ref$radialLabel === void 0 ? defaultProps.radialLabel : _ref$radialLabel,\n      _ref$enableRadialLabe = _ref.enableRadialLabels,\n      enableRadialLabels = _ref$enableRadialLabe === void 0 ? defaultProps.enableRadialLabels : _ref$enableRadialLabe,\n      _ref$radialLabelsSkip = _ref.radialLabelsSkipAngle,\n      radialLabelsSkipAngle = _ref$radialLabelsSkip === void 0 ? defaultProps.radialLabelsSkipAngle : _ref$radialLabelsSkip,\n      _ref$radialLabelsLink = _ref.radialLabelsLinkOffset,\n      radialLabelsLinkOffset = _ref$radialLabelsLink === void 0 ? defaultProps.radialLabelsLinkOffset : _ref$radialLabelsLink,\n      _ref$radialLabelsLink2 = _ref.radialLabelsLinkDiagonalLength,\n      radialLabelsLinkDiagonalLength = _ref$radialLabelsLink2 === void 0 ? defaultProps.radialLabelsLinkDiagonalLength : _ref$radialLabelsLink2,\n      _ref$radialLabelsLink3 = _ref.radialLabelsLinkHorizontalLength,\n      radialLabelsLinkHorizontalLength = _ref$radialLabelsLink3 === void 0 ? defaultProps.radialLabelsLinkHorizontalLength : _ref$radialLabelsLink3,\n      _ref$radialLabelsLink4 = _ref.radialLabelsLinkStrokeWidth,\n      radialLabelsLinkStrokeWidth = _ref$radialLabelsLink4 === void 0 ? defaultProps.radialLabelsLinkStrokeWidth : _ref$radialLabelsLink4,\n      _ref$radialLabelsText = _ref.radialLabelsTextXOffset,\n      radialLabelsTextXOffset = _ref$radialLabelsText === void 0 ? defaultProps.radialLabelsTextXOffset : _ref$radialLabelsText,\n      _ref$radialLabelsText2 = _ref.radialLabelsTextColor,\n      radialLabelsTextColor = _ref$radialLabelsText2 === void 0 ? defaultProps.radialLabelsTextColor : _ref$radialLabelsText2,\n      _ref$radialLabelsLink5 = _ref.radialLabelsLinkColor,\n      radialLabelsLinkColor = _ref$radialLabelsLink5 === void 0 ? defaultProps.radialLabelsLinkColor : _ref$radialLabelsLink5,\n      _ref$sliceLabel = _ref.sliceLabel,\n      sliceLabel = _ref$sliceLabel === void 0 ? defaultProps.sliceLabel : _ref$sliceLabel,\n      _ref$enableSliceLabel = _ref.enableSliceLabels,\n      enableSliceLabels = _ref$enableSliceLabel === void 0 ? defaultProps.enableSliceLabels : _ref$enableSliceLabel,\n      _ref$sliceLabelsSkipA = _ref.sliceLabelsSkipAngle,\n      sliceLabelsSkipAngle = _ref$sliceLabelsSkipA === void 0 ? defaultProps.sliceLabelsSkipAngle : _ref$sliceLabelsSkipA,\n      _ref$sliceLabelsTextC = _ref.sliceLabelsTextColor,\n      sliceLabelsTextColor = _ref$sliceLabelsTextC === void 0 ? defaultProps.sliceLabelsTextColor : _ref$sliceLabelsTextC,\n      _ref$sliceLabelsRadiu = _ref.sliceLabelsRadiusOffset,\n      sliceLabelsRadiusOffset = _ref$sliceLabelsRadiu === void 0 ? defaultProps.sliceLabelsRadiusOffset : _ref$sliceLabelsRadiu,\n      _ref$isInteractive = _ref.isInteractive,\n      isInteractive = _ref$isInteractive === void 0 ? defaultProps.isInteractive : _ref$isInteractive,\n      onClick = _ref.onClick,\n      onMouseMove = _ref.onMouseMove,\n      _ref$tooltip = _ref.tooltip,\n      tooltip = _ref$tooltip === void 0 ? defaultProps.tooltip : _ref$tooltip,\n      _ref$legends = _ref.legends,\n      legends = _ref$legends === void 0 ? defaultProps.legends : _ref$legends;\n  var canvasEl = useRef(null);\n  var theme = useTheme();\n\n  var _useDimensions = useDimensions(width, height, partialMargin),\n      margin = _useDimensions.margin,\n      innerWidth = _useDimensions.innerWidth,\n      innerHeight = _useDimensions.innerHeight,\n      outerWidth = _useDimensions.outerWidth,\n      outerHeight = _useDimensions.outerHeight;\n\n  var normalizedData = useNormalizedData({\n    data: data,\n    id: id,\n    value: value,\n    valueFormat: valueFormat,\n    colors: colors\n  });\n\n  var _usePieFromBox = usePieFromBox({\n    data: normalizedData,\n    width: innerWidth,\n    height: innerHeight,\n    fit: fit,\n    innerRadius: innerRadiusRatio,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    padAngle: padAngle,\n    sortByValue: sortByValue,\n    cornerRadius: cornerRadius\n  }),\n      dataWithArc = _usePieFromBox.dataWithArc,\n      arcGenerator = _usePieFromBox.arcGenerator,\n      centerX = _usePieFromBox.centerX,\n      centerY = _usePieFromBox.centerY,\n      radius = _usePieFromBox.radius,\n      innerRadius = _usePieFromBox.innerRadius;\n\n  var getBorderColor = useInheritedColor(borderColor, theme);\n  var radialLabels = usePieRadialLabels({\n    enable: enableRadialLabels,\n    dataWithArc: dataWithArc,\n    label: radialLabel,\n    textXOffset: radialLabelsTextXOffset,\n    textColor: radialLabelsTextColor,\n    radius: radius,\n    skipAngle: radialLabelsSkipAngle,\n    linkOffset: radialLabelsLinkOffset,\n    linkDiagonalLength: radialLabelsLinkDiagonalLength,\n    linkHorizontalLength: radialLabelsLinkHorizontalLength,\n    linkColor: radialLabelsLinkColor\n  });\n  var sliceLabels = usePieSliceLabels({\n    enable: enableSliceLabels,\n    dataWithArc: dataWithArc,\n    label: sliceLabel,\n    radius: radius,\n    innerRadius: innerRadius,\n    radiusOffset: sliceLabelsRadiusOffset,\n    skipAngle: sliceLabelsSkipAngle,\n    textColor: sliceLabelsTextColor\n  });\n  useEffect(function () {\n    if (!canvasEl.current) return;\n    canvasEl.current.width = outerWidth * pixelRatio;\n    canvasEl.current.height = outerHeight * pixelRatio;\n    var ctx = canvasEl.current.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.fillStyle = theme.background;\n    ctx.fillRect(0, 0, outerWidth, outerHeight);\n    ctx.save();\n    ctx.translate(margin.left, margin.top);\n    arcGenerator.context(ctx);\n    ctx.save();\n    ctx.translate(centerX, centerY);\n    dataWithArc.forEach(function (arc) {\n      ctx.beginPath();\n      ctx.fillStyle = arc.color;\n      ctx.strokeStyle = getBorderColor(arc);\n      ctx.lineWidth = borderWidth;\n      arcGenerator(arc.arc);\n      ctx.fill();\n\n      if (borderWidth > 0) {\n        ctx.stroke();\n      }\n    });\n\n    if (enableRadialLabels === true) {\n      drawRadialLabels(ctx, radialLabels, theme, radialLabelsLinkStrokeWidth);\n    }\n\n    if (enableSliceLabels === true) {\n      drawSliceLabels(ctx, sliceLabels, theme);\n    }\n\n    ctx.restore();\n    legends.forEach(function (legend) {\n      renderLegendToCanvas(ctx, _objectSpread2(_objectSpread2({}, legend), {}, {\n        data: dataWithArc,\n        containerWidth: innerWidth,\n        containerHeight: innerHeight,\n        theme: theme\n      }));\n    });\n  }, [canvasEl, innerWidth, innerHeight, outerWidth, outerHeight, margin.top, margin.left, pixelRatio, centerX, centerY, arcGenerator, dataWithArc, getBorderColor, enableRadialLabels, radialLabels, enableSliceLabels, sliceLabels, legends, theme]);\n  var arcs = useMemo(function () {\n    return dataWithArc.map(function (datum) {\n      return _objectSpread2({\n        id: datum.id\n      }, datum.arc);\n    });\n  }, [dataWithArc]);\n\n  var getArcFromMouse = function getArcFromMouse(event) {\n    var _getRelativeCursor = getRelativeCursor(canvasEl.current, event),\n        _getRelativeCursor2 = _slicedToArray(_getRelativeCursor, 2),\n        x = _getRelativeCursor2[0],\n        y = _getRelativeCursor2[1];\n\n    var hoveredArc = getHoveredArc(margin.left + centerX, margin.top + centerY, radius, innerRadius, arcs, x, y);\n    if (!hoveredArc) return null;\n    return dataWithArc.find(function (datum) {\n      return datum.id === hoveredArc.id;\n    });\n  };\n\n  var _useTooltip = useTooltip(),\n      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,\n      hideTooltip = _useTooltip.hideTooltip;\n\n  var handleMouseHover = function handleMouseHover(event) {\n    var datum = getArcFromMouse(event);\n\n    if (datum) {\n      onMouseMove === null || onMouseMove === void 0 ? void 0 : onMouseMove(datum, event);\n      showTooltipFromEvent(createElement(tooltip, {\n        datum: datum\n      }), event);\n    } else {\n      hideTooltip();\n    }\n  };\n\n  var handleMouseLeave = function handleMouseLeave() {\n    hideTooltip();\n  };\n\n  var handleClick = function handleClick(event) {\n    if (!onClick) return;\n    var arc = getArcFromMouse(event);\n\n    if (arc) {\n      onClick(arc, event);\n    }\n  };\n\n  return React.createElement(\"canvas\", {\n    ref: canvasEl,\n    width: outerWidth * pixelRatio,\n    height: outerHeight * pixelRatio,\n    style: {\n      width: outerWidth,\n      height: outerHeight,\n      cursor: isInteractive ? 'auto' : 'normal'\n    },\n    onMouseEnter: isInteractive ? handleMouseHover : undefined,\n    onMouseMove: isInteractive ? handleMouseHover : undefined,\n    onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n    onClick: isInteractive ? handleClick : undefined\n  });\n};\n\nvar PieCanvas$1 = withContainer(PieCanvas);\n\nvar ResponsivePieCanvas = function ResponsivePieCanvas(props) {\n  return React.createElement(ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React.createElement(PieCanvas$1, Object.assign({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nexport { Pie$1 as Pie, PieCanvas$1 as PieCanvas, ResponsivePie, ResponsivePieCanvas, defaultProps, useNormalizedData, usePie, usePieArcGenerator, usePieArcs, usePieFromBox, usePieLayerContext, usePieRadialLabels, usePieSliceLabels };","map":{"version":3,"sources":["../src/PieSlice.tsx","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/PieTooltip.tsx","../src/props.ts","../src/hooks.ts","../src/RadialLabel.tsx","../src/RadialLabels.tsx","../src/SliceLabels.tsx","../src/PieLegends.tsx","../src/Pie.tsx","../src/ResponsivePie.tsx","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/PieCanvas.tsx","../src/ResponsivePieCanvas.tsx"],"names":["PieSlice","datum","path","borderWidth","borderColor","isInteractive","onClick","onMouseEnter","onMouseMove","onMouseLeave","tooltip","showTooltipFromEvent","hideTooltip","useTooltip","handleTooltip","useCallback","createElement","handleMouseEnter","handleMouseMove","handleMouseLeave","handleClick","undefined","objectWithoutPropertiesLoose","defineProperty","PieTooltip","color","defaultProps","id","value","sortByValue","innerRadius","padAngle","cornerRadius","layers","startAngle","endAngle","fit","from","modifiers","radialLabel","enableRadialLabels","radialLabelsSkipAngle","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsTextXOffset","radialLabelsTextColor","theme","radialLabelsLinkColor","enableSliceLabels","sliceLabel","sliceLabelsSkipAngle","sliceLabelsRadiusOffset","sliceLabelsTextColor","colors","scheme","defs","fill","legends","role","pixelRatio","window","useNormalizedData","data","valueFormat","getId","useMemo","getValue","formatValue","useValueFormatter","getColor","useOrdinalColorScale","datumId","datumValue","normalizedDatum","label","formattedValue","usePieArcs","pie","innerPie","d","degreesToRadians","angle","Math","arc","index","angleDeg","radiansToDegrees","usePieArcGenerator","radius","d3Arc","usePie","dataWithArc","arcGenerator","usePieFromBox","width","height","innerRadiusRatio","computedProps","centerX","centerY","points","box","computeArcBoundingBox","ratio","adjustedBox","boundingBox","debug","usePieSliceLabels","enable","skipAngle","radiusOffset","textColor","useTheme","getTextColor","useInheritedColor","getLabel","getLabelGenerator","datumWithArc","midAngle","labelRadius","position","positionFromAngle","datumTextColor","usePieRadialLabels","textXOffset","linkOffset","linkDiagonalLength","linkHorizontalLength","linkColor","getLinkColor","absoluteAngleRadians","positionA","positionB","absoluteAngleDegrees","positionC","x","y","labelPosition","textAlign","text","align","line","usePieLayerContext","lineGenerator","RadialLabel","linkStrokeWidth","stroke","textPropsByEngine","RadialLabels","radialLabels","labelData","sliceStyle","pointerEvents","SliceLabels","labelAccessor","labels","PieLegends","i","Pie","margin","partialMargin","_borderColor","outerWidth","outerHeight","innerWidth","innerHeight","useDimensions","normalizedData","boundDefs","bindDefs","layerById","slices","sliceLabels","layerContext","withContainer","ResponsivePie","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","drawSliceLabels","ctx","drawRadialLabels","point","PieCanvas","canvasEl","useRef","getBorderColor","useEffect","renderLegendToCanvas","containerWidth","containerHeight","arcs","getArcFromMouse","getRelativeCursor","hoveredArc","getHoveredArc","handleMouseHover","cursor","ResponsivePieCanvas"],"mappings":"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","sourcesContent":["import React, { createElement, useCallback } from 'react'\n// @ts-ignore\nimport { useTooltip } from '@nivo/tooltip'\nimport { ComputedDatum, CompletePieSvgProps } from './types'\n\ninterface PieSliceProps<RawDatum> {\n    datum: ComputedDatum<RawDatum>\n    path?: string\n    borderWidth: CompletePieSvgProps<RawDatum>['borderWidth']\n    borderColor: string\n    isInteractive: CompletePieSvgProps<RawDatum>['isInteractive']\n    tooltip: CompletePieSvgProps<RawDatum>['tooltip']\n    onClick: CompletePieSvgProps<RawDatum>['onClick']\n    onMouseEnter: CompletePieSvgProps<RawDatum>['onMouseEnter']\n    onMouseMove: CompletePieSvgProps<RawDatum>['onMouseMove']\n    onMouseLeave: CompletePieSvgProps<RawDatum>['onMouseLeave']\n}\n\nexport const PieSlice = <RawDatum,>({\n    datum,\n    path,\n    borderWidth,\n    borderColor,\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip,\n}: PieSliceProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleTooltip = useCallback(\n        event => showTooltipFromEvent(createElement(tooltip, { datum }), event),\n        [showTooltipFromEvent, datum, tooltip]\n    )\n\n    const handleMouseEnter = useCallback(\n        event => {\n            onMouseEnter?.(datum, event)\n            handleTooltip(event)\n        },\n        [onMouseEnter, handleTooltip, datum]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            onMouseMove?.(datum, event)\n            handleTooltip(event)\n        },\n        [onMouseMove, handleTooltip, datum]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            onMouseLeave?.(datum, event)\n            hideTooltip()\n        },\n        [onMouseLeave, hideTooltip, datum]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            onClick?.(datum, event)\n        },\n        [onClick, datum]\n    )\n\n    return (\n        <path\n            d={path}\n            fill={datum.fill || datum.color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n            onMouseMove={isInteractive ? handleMouseMove : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React from 'react'\nimport { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const PieTooltip = <RawDatum,>({ datum }: { datum: ComputedDatum<RawDatum> }) => (\n    <BasicTooltip\n        id={datum.id}\n        value={datum.formattedValue}\n        enableChip={true}\n        color={datum.color}\n    />\n)\n\nexport default PieTooltip\n","import { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { PieTooltip } from './PieTooltip'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    sortByValue: false,\n    innerRadius: 0,\n    padAngle: 0,\n    cornerRadius: 0,\n\n    layers: ['slices', 'radialLabels', 'sliceLabels', 'legends'],\n\n    // layout\n    startAngle: 0,\n    endAngle: 360,\n    fit: true,\n\n    // border\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n\n    // radial labels\n    radialLabel: 'id',\n    enableRadialLabels: true,\n    radialLabelsSkipAngle: 0,\n    radialLabelsLinkOffset: 0,\n    radialLabelsLinkDiagonalLength: 16,\n    radialLabelsLinkHorizontalLength: 24,\n    radialLabelsLinkStrokeWidth: 1,\n    radialLabelsTextXOffset: 6,\n    radialLabelsTextColor: { theme: 'labels.text.fill' },\n    radialLabelsLinkColor: { theme: 'axis.ticks.line.stroke' },\n\n    // slices labels\n    enableSliceLabels: true,\n    sliceLabel: 'formattedValue',\n    sliceLabelsSkipAngle: 0,\n    sliceLabelsRadiusOffset: 0.5,\n    sliceLabelsTextColor: { theme: 'labels.text.fill' },\n\n    // styling\n    colors: ({ scheme: 'nivo' } as unknown) as OrdinalColorScaleConfig,\n    defs: [],\n    fill: [],\n\n    // interactivity\n    isInteractive: true,\n\n    // tooltip\n    tooltip: PieTooltip,\n\n    // legends\n    legends: [],\n\n    role: 'img',\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { useMemo } from 'react'\nimport { get } from 'lodash'\nimport { arc as d3Arc, pie as d3Pie } from 'd3-shape'\nimport {\n    // @ts-ignore\n    degreesToRadians,\n    // @ts-ignore\n    radiansToDegrees,\n    // @ts-ignore\n    useValueFormatter,\n    // @ts-ignore\n    computeArcBoundingBox,\n    useTheme,\n    // @ts-ignore\n    positionFromAngle,\n    // @ts-ignore\n    midAngle,\n    // @ts-ignore\n    getLabelGenerator,\n    // @ts-ignore\n    absoluteAngleRadians,\n    // @ts-ignore\n    absoluteAngleDegrees,\n} from '@nivo/core'\nimport {\n    OrdinalColorScaleConfig,\n    useOrdinalColorScale,\n    InheritedColorConfig,\n    useInheritedColor,\n} from '@nivo/colors'\nimport { defaultProps } from './props'\nimport {\n    CompletePieSvgProps,\n    ComputedDatum,\n    PieArc,\n    PieArcGenerator,\n    LabelAccessorFunction,\n    PieCustomLayerProps,\n    RadialLabelData,\n    SliceLabelData,\n} from './types'\n\ninterface MayHaveLabel {\n    label?: string | number\n}\n\n/**\n * Format data so that we get a consistent data structure.\n * It will also add the `formattedValue` and `color` property.\n */\nexport const useNormalizedData = <RawDatum extends MayHaveLabel>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>\n    >,\n}: Pick<CompletePieSvgProps<RawDatum>, 'id' | 'value' | 'valueFormat' | 'colors'> & {\n    data: RawDatum[]\n}): Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[] => {\n    const getId = useMemo(() => (typeof id === 'function' ? id : (d: RawDatum) => get(d, id)), [id])\n    const getValue = useMemo(\n        () => (typeof value === 'function' ? value : (d: RawDatum) => get(d, value)),\n        [value]\n    )\n    const formatValue = useValueFormatter(valueFormat as any)\n\n    const getColor = useOrdinalColorScale<Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>>(\n        colors,\n        'id'\n    )\n\n    return useMemo(\n        () =>\n            data.map(datum => {\n                const datumId = getId(datum)\n                const datumValue = getValue(datum)\n\n                const normalizedDatum: Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'> = {\n                    id: datumId,\n                    label: datum.label ?? datumId,\n                    value: datumValue,\n                    formattedValue: formatValue(datumValue),\n                    data: datum,\n                }\n\n                return {\n                    ...normalizedDatum,\n                    color: getColor(normalizedDatum),\n                }\n            }),\n        [data, getId, getValue, formatValue, getColor]\n    )\n}\n\n/**\n * Compute arcs, which don't depend yet on radius.\n */\nexport const usePieArcs = <RawDatum>({\n    data,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n}: {\n    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[]\n    startAngle: number\n    endAngle: number\n    padAngle: number\n    sortByValue: boolean\n}): Omit<ComputedDatum<RawDatum>, 'fill'>[] => {\n    const pie = useMemo(() => {\n        const innerPie = d3Pie<Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>>()\n            .value(d => d.value)\n            .padAngle(degreesToRadians(padAngle))\n            .startAngle(degreesToRadians(startAngle))\n            .endAngle(degreesToRadians(endAngle))\n\n        if (sortByValue !== true) innerPie.sortValues(null)\n\n        return innerPie\n    }, [startAngle, endAngle, padAngle, sortByValue])\n\n    return useMemo(\n        () =>\n            pie(data).map(\n                (\n                    arc: Omit<PieArc, 'angle' | 'angleDeg'> & {\n                        data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>\n                    }\n                ) => {\n                    const angle = Math.abs(arc.endAngle - arc.startAngle)\n\n                    return {\n                        ...arc.data,\n                        arc: {\n                            index: arc.index,\n                            startAngle: arc.startAngle,\n                            endAngle: arc.endAngle,\n                            padAngle: arc.padAngle,\n                            angle,\n                            angleDeg: radiansToDegrees(angle),\n                        },\n                    }\n                }\n            ),\n\n        [pie, data]\n    )\n}\n\nexport const usePieArcGenerator = ({\n    radius,\n    innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n}: {\n    radius: number\n    innerRadius: number\n    cornerRadius: number\n}): PieArcGenerator =>\n    useMemo(\n        () =>\n            d3Arc<PieArc>().outerRadius(radius).innerRadius(innerRadius).cornerRadius(cornerRadius),\n        [radius, innerRadius, cornerRadius]\n    )\n\n/**\n * Compute pie layout using explicit radius/innerRadius,\n * expressed in pixels.\n */\nexport const usePie = <RawDatum>({\n    data,\n    radius,\n    innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n}: Pick<\n    CompletePieSvgProps<RawDatum>,\n    'startAngle' | 'endAngle' | 'padAngle' | 'sortByValue' | 'cornerRadius'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    radius: number\n    innerRadius: number\n}) => {\n    const dataWithArc = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n    })\n\n    const arcGenerator = usePieArcGenerator({\n        radius,\n        innerRadius,\n        cornerRadius,\n    })\n\n    return { dataWithArc, arcGenerator }\n}\n\n/**\n * Compute pie layout using a box to find radius/innerRadius,\n * expressed in ratio (0~1), can optionally use the `fit`\n * attribute to find the most space efficient layout.\n *\n * It also returns `centerX`/`centerY` as those can be altered\n * if `fit` is `true`.\n */\nexport const usePieFromBox = <RawDatum>({\n    data,\n    width,\n    height,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    fit = defaultProps.fit,\n}: Pick<\n    CompletePieSvgProps<RawDatum>,\n    | 'width'\n    | 'height'\n    | 'innerRadius'\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'fit'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n}) => {\n    const dataWithArc = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n    })\n\n    const computedProps = useMemo(() => {\n        let radius = Math.min(width, height) / 2\n        let innerRadius = radius * Math.min(innerRadiusRatio, 1)\n\n        let centerX = width / 2\n        let centerY = height / 2\n\n        let boundingBox\n        if (fit) {\n            const { points, ...box } = computeArcBoundingBox(\n                centerX,\n                centerY,\n                radius,\n                startAngle - 90,\n                endAngle - 90\n            )\n            const ratio = Math.min(width / box.width, height / box.height)\n\n            const adjustedBox: {\n                width: number\n                height: number\n                x?: number\n                y?: number\n            } = {\n                width: box.width * ratio,\n                height: box.height * ratio,\n            }\n            adjustedBox.x = (width - adjustedBox.width) / 2\n            adjustedBox.y = (height - adjustedBox.height) / 2\n\n            centerX = ((centerX - box.x) / box.width) * box.width * ratio + adjustedBox.x\n            centerY = ((centerY - box.y) / box.height) * box.height * ratio + adjustedBox.y\n\n            boundingBox = { box, ratio, points }\n\n            radius = radius * ratio\n            innerRadius = innerRadius * ratio\n        }\n\n        return {\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n            debug: boundingBox,\n        }\n    }, [width, height, innerRadiusRatio, startAngle, endAngle, fit, cornerRadius])\n\n    const arcGenerator = usePieArcGenerator({\n        radius: computedProps.radius,\n        innerRadius: computedProps.innerRadius,\n        cornerRadius,\n    })\n\n    return {\n        dataWithArc,\n        arcGenerator,\n        ...computedProps,\n    }\n}\n\nexport const usePieSliceLabels = <RawDatum>({\n    enable,\n    dataWithArc,\n    skipAngle,\n    radius,\n    innerRadius,\n    radiusOffset,\n    label,\n    textColor,\n}: {\n    enable: boolean\n    dataWithArc: ComputedDatum<RawDatum>[]\n    skipAngle: number\n    radius: number\n    innerRadius: number\n    radiusOffset: number\n    label: string | LabelAccessorFunction<RawDatum>\n    textColor: InheritedColorConfig<ComputedDatum<RawDatum>>\n}): SliceLabelData<RawDatum>[] => {\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<ComputedDatum<RawDatum>>(textColor, theme)\n    const getLabel = useMemo(() => getLabelGenerator(label), [label])\n\n    return useMemo(() => {\n        if (!enable) return []\n\n        return dataWithArc\n            .filter(datumWithArc => skipAngle === 0 || datumWithArc.arc.angleDeg > skipAngle)\n            .map(datumWithArc => {\n                const angle = midAngle(datumWithArc.arc) - Math.PI / 2\n                const labelRadius = innerRadius + (radius - innerRadius) * radiusOffset\n                const position = positionFromAngle(angle, labelRadius)\n                const datumTextColor = getTextColor(datumWithArc)\n\n                return {\n                    ...position,\n                    label: getLabel(datumWithArc),\n                    textColor: datumTextColor,\n                    datum: datumWithArc,\n                }\n            })\n    }, [enable, dataWithArc, skipAngle, radius, innerRadius, radiusOffset, getLabel, getTextColor])\n}\n\nexport const usePieRadialLabels = <RawDatum>({\n    enable,\n    dataWithArc,\n    label,\n    textXOffset,\n    textColor,\n    radius,\n    skipAngle,\n    linkOffset,\n    linkDiagonalLength,\n    linkHorizontalLength,\n    linkColor,\n}: {\n    enable: boolean\n    dataWithArc: ComputedDatum<RawDatum>[]\n    label: string | LabelAccessorFunction<RawDatum>\n    textXOffset: number\n    textColor: InheritedColorConfig<ComputedDatum<RawDatum>>\n    radius: number\n    skipAngle: number\n    linkOffset: number\n    linkDiagonalLength: number\n    linkHorizontalLength: number\n    linkColor: InheritedColorConfig<ComputedDatum<RawDatum>>\n}): RadialLabelData<RawDatum>[] => {\n    const getLabel = useMemo(() => getLabelGenerator(label), [label])\n\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<ComputedDatum<RawDatum>>(textColor, theme)\n    const getLinkColor = useInheritedColor<ComputedDatum<RawDatum>>(linkColor, theme)\n\n    return useMemo(() => {\n        if (!enable) return []\n\n        return dataWithArc\n            .filter(datum => skipAngle === 0 || datum.arc.angleDeg > skipAngle)\n            .map(datum => {\n                const angle = absoluteAngleRadians(midAngle(datum.arc) - Math.PI / 2)\n                const positionA = positionFromAngle(angle, radius + linkOffset)\n                const positionB = positionFromAngle(angle, radius + linkOffset + linkDiagonalLength)\n\n                let positionC\n                let labelPosition\n                let textAlign\n\n                if (\n                    absoluteAngleDegrees(radiansToDegrees(angle)) < 90 ||\n                    absoluteAngleDegrees(radiansToDegrees(angle)) >= 270\n                ) {\n                    positionC = { x: positionB.x + linkHorizontalLength, y: positionB.y }\n                    labelPosition = {\n                        x: positionB.x + linkHorizontalLength + textXOffset,\n                        y: positionB.y,\n                    }\n                    textAlign = 'left'\n                } else {\n                    positionC = { x: positionB.x - linkHorizontalLength, y: positionB.y }\n                    labelPosition = {\n                        x: positionB.x - linkHorizontalLength - textXOffset,\n                        y: positionB.y,\n                    }\n                    textAlign = 'right'\n                }\n\n                return {\n                    text: getLabel(datum),\n                    textColor: getTextColor(datum),\n                    position: labelPosition,\n                    align: textAlign,\n                    line: [positionA, positionB, positionC],\n                    linkColor: getLinkColor(datum),\n                    datum,\n                }\n            })\n    }, [\n        dataWithArc,\n        skipAngle,\n        radius,\n        linkOffset,\n        linkDiagonalLength,\n        linkHorizontalLength,\n        textXOffset,\n        getLabel,\n        getTextColor,\n        getLinkColor,\n    ])\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const usePieLayerContext = <RawDatum>({\n    dataWithArc,\n    arcGenerator,\n    centerX,\n    centerY,\n    radius,\n    innerRadius,\n}: {\n    dataWithArc: ComputedDatum<RawDatum>[]\n    arcGenerator: PieArcGenerator\n    centerX: number\n    centerY: number\n    radius: number\n    innerRadius: number\n}): PieCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            dataWithArc,\n            arcGenerator,\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n        }),\n        [dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius]\n    )\n","import React from 'react'\nimport { line } from 'd3-shape'\nimport {\n    // @ts-ignore\n    textPropsByEngine,\n    useTheme,\n} from '@nivo/core'\nimport { RadialLabelData, Point } from './types'\n\nconst lineGenerator = line<Point>()\n    .x(d => d.x)\n    .y(d => d.y)\n\nexport const RadialLabel = <RawDatum,>({\n    label,\n    linkStrokeWidth,\n}: {\n    label: RadialLabelData<RawDatum>\n    linkStrokeWidth: number\n}) => {\n    const theme = useTheme()\n\n    return (\n        <>\n            <path\n                d={lineGenerator(label.line) ?? undefined}\n                fill=\"none\"\n                style={{ fill: 'none', stroke: label.linkColor }}\n                strokeWidth={linkStrokeWidth}\n            />\n            <g transform={`translate(${label.position.x}, ${label.position.y})`}>\n                <text\n                    textAnchor={textPropsByEngine.svg.align[label.align]}\n                    dominantBaseline=\"central\"\n                    style={{\n                        ...theme.labels.text,\n                        fill: label.textColor,\n                    }}\n                >\n                    {label.text}\n                </text>\n            </g>\n        </>\n    )\n}\n","import React from 'react'\nimport { usePieRadialLabels } from './hooks'\nimport { RadialLabel } from './RadialLabel'\nimport { ComputedDatum, CompletePieSvgProps } from './types'\n\ninterface RadialLabelsProps<RawDatum> {\n    dataWithArc: ComputedDatum<RawDatum>[]\n    label: CompletePieSvgProps<RawDatum>['radialLabel']\n    skipAngle: CompletePieSvgProps<RawDatum>['radialLabelsSkipAngle']\n    radius: number\n    linkOffset: CompletePieSvgProps<RawDatum>['radialLabelsLinkOffset']\n    linkDiagonalLength: CompletePieSvgProps<RawDatum>['radialLabelsLinkDiagonalLength']\n    linkHorizontalLength: CompletePieSvgProps<RawDatum>['radialLabelsLinkHorizontalLength']\n    linkStrokeWidth: CompletePieSvgProps<RawDatum>['radialLabelsLinkStrokeWidth']\n    textXOffset: CompletePieSvgProps<RawDatum>['radialLabelsTextXOffset']\n    textColor: CompletePieSvgProps<RawDatum>['radialLabelsTextColor']\n    linkColor: CompletePieSvgProps<RawDatum>['radialLabelsLinkColor']\n}\n\nexport const RadialLabels = <RawDatum,>({\n    dataWithArc,\n    label,\n    radius,\n    skipAngle,\n    linkOffset,\n    linkDiagonalLength,\n    linkHorizontalLength,\n    linkStrokeWidth,\n    textXOffset,\n    textColor,\n    linkColor,\n}: RadialLabelsProps<RawDatum>) => {\n    const radialLabels = usePieRadialLabels<RawDatum>({\n        enable: true,\n        dataWithArc,\n        label,\n        textXOffset,\n        textColor,\n        radius,\n        skipAngle,\n        linkOffset,\n        linkDiagonalLength,\n        linkHorizontalLength,\n        linkColor,\n    })\n\n    return (\n        <>\n            {radialLabels.map(labelData => (\n                <RadialLabel\n                    key={labelData.datum.id}\n                    label={labelData}\n                    linkStrokeWidth={linkStrokeWidth}\n                />\n            ))}\n        </>\n    )\n}\n","import React, { CSSProperties } from 'react'\nimport { useTheme } from '@nivo/core'\nimport { usePieSliceLabels } from './hooks'\nimport { CompletePieSvgProps, ComputedDatum } from './types'\n\nconst sliceStyle: CSSProperties = {\n    pointerEvents: 'none',\n}\n\ninterface SliceLabelsProps<RawDatum> {\n    dataWithArc: ComputedDatum<RawDatum>[]\n    label: CompletePieSvgProps<RawDatum>['sliceLabel']\n    radiusOffset: CompletePieSvgProps<RawDatum>['sliceLabelsRadiusOffset']\n    radius: number\n    innerRadius: number\n    skipAngle: CompletePieSvgProps<RawDatum>['sliceLabelsSkipAngle']\n    textColor: CompletePieSvgProps<RawDatum>['sliceLabelsTextColor']\n}\n\nexport const SliceLabels = <RawDatum,>({\n    dataWithArc,\n    label: labelAccessor,\n    radius,\n    innerRadius,\n    radiusOffset,\n    skipAngle,\n    textColor,\n}: SliceLabelsProps<RawDatum>) => {\n    const theme = useTheme()\n\n    const labels = usePieSliceLabels({\n        enable: true,\n        dataWithArc,\n        skipAngle,\n        radius,\n        innerRadius,\n        radiusOffset,\n        label: labelAccessor,\n        textColor,\n    })\n\n    return (\n        <>\n            {labels.map(label => (\n                <g\n                    key={label.datum.id}\n                    transform={`translate(${label.x}, ${label.y})`}\n                    style={sliceStyle}\n                >\n                    <text\n                        textAnchor=\"middle\"\n                        dominantBaseline=\"central\"\n                        style={{\n                            ...theme.labels.text,\n                            fill: label.textColor,\n                        }}\n                    >\n                        {label.label}\n                    </text>\n                </g>\n            ))}\n        </>\n    )\n}\n","import React from 'react'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { CompletePieSvgProps, ComputedDatum } from './types'\n\ninterface PieLegendsProps<RawDatum> {\n    width: number\n    height: number\n    legends: CompletePieSvgProps<RawDatum>['legends']\n    dataWithArc: ComputedDatum<RawDatum>[]\n}\n\nconst PieLegends = <RawDatum,>({\n    width,\n    height,\n    legends,\n    dataWithArc,\n}: PieLegendsProps<RawDatum>) => {\n    return (\n        <>\n            {legends.map((legend, i) => (\n                <BoxLegendSvg\n                    key={i}\n                    {...legend}\n                    containerWidth={width}\n                    containerHeight={height}\n                    data={dataWithArc}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default PieLegends\n","import React, { ReactNode, Fragment, createElement } from 'react'\nimport {\n    // @ts-ignore\n    withContainer,\n    SvgWrapper,\n    // @ts-ignore\n    bindDefs,\n    useTheme,\n    useDimensions,\n} from '@nivo/core'\nimport { useInheritedColor, InheritedColorConfig } from '@nivo/colors'\nimport { PieSlice } from './PieSlice'\nimport { RadialLabels } from './RadialLabels'\nimport { SliceLabels } from './SliceLabels'\nimport PieLegends from './PieLegends'\nimport { useNormalizedData, usePieFromBox, usePieLayerContext } from './hooks'\nimport { ComputedDatum, PieLayer, PieSvgProps, PieLayerId } from './types'\nimport { defaultProps } from './props'\n\nconst Pie = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    layers = defaultProps.layers as PieLayer<RawDatum>[],\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor: _borderColor = defaultProps.borderColor as InheritedColorConfig<\n        ComputedDatum<RawDatum>\n    >,\n\n    // radial labels\n    radialLabel = defaultProps.radialLabel,\n    enableRadialLabels = defaultProps.enableRadialLabels,\n    radialLabelsSkipAngle = defaultProps.radialLabelsSkipAngle,\n    radialLabelsLinkOffset = defaultProps.radialLabelsLinkOffset,\n    radialLabelsLinkDiagonalLength = defaultProps.radialLabelsLinkDiagonalLength,\n    radialLabelsLinkHorizontalLength = defaultProps.radialLabelsLinkHorizontalLength,\n    radialLabelsLinkStrokeWidth = defaultProps.radialLabelsLinkStrokeWidth,\n    radialLabelsTextXOffset = defaultProps.radialLabelsTextXOffset,\n    radialLabelsTextColor = defaultProps.radialLabelsTextColor,\n    radialLabelsLinkColor = defaultProps.radialLabelsLinkColor,\n\n    // slices labels\n    sliceLabel = defaultProps.sliceLabel,\n    enableSliceLabels = defaultProps.enableSliceLabels,\n    sliceLabelsSkipAngle = defaultProps.sliceLabelsSkipAngle,\n    sliceLabelsTextColor = defaultProps.sliceLabelsTextColor,\n    sliceLabelsRadiusOffset = defaultProps.sliceLabelsRadiusOffset,\n\n    // styling\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip = defaultProps.tooltip,\n\n    legends = defaultProps.legends,\n    role = defaultProps.role,\n}: PieSvgProps<RawDatum>) => {\n    const theme = useTheme()\n\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const { dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius } = usePieFromBox<\n        RawDatum\n    >({\n        data: normalizedData,\n        width: innerWidth,\n        height: innerHeight,\n        fit,\n        innerRadius: innerRadiusRatio,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n        cornerRadius,\n    })\n\n    const borderColor = useInheritedColor<ComputedDatum<RawDatum>>(_borderColor, theme)\n\n    const boundDefs = bindDefs(defs, dataWithArc, fill)\n\n    const layerById: Record<PieLayerId, ReactNode> = {\n        slices: null,\n        radialLabels: null,\n        sliceLabels: null,\n        legends: null,\n    }\n\n    if (layers.includes('slices')) {\n        layerById.slices = (\n            <g key=\"slices\" transform={`translate(${centerX},${centerY})`}>\n                {dataWithArc.map(datumWithArc => (\n                    <PieSlice<RawDatum>\n                        key={datumWithArc.id}\n                        datum={datumWithArc}\n                        path={arcGenerator(datumWithArc.arc) ?? undefined}\n                        borderWidth={borderWidth}\n                        borderColor={borderColor(datumWithArc)}\n                        tooltip={tooltip}\n                        isInteractive={isInteractive}\n                        onClick={onClick}\n                        onMouseEnter={onMouseEnter}\n                        onMouseMove={onMouseMove}\n                        onMouseLeave={onMouseLeave}\n                    />\n                ))}\n            </g>\n        )\n    }\n\n    if (enableRadialLabels && layers.includes('radialLabels')) {\n        layerById.radialLabels = (\n            <g key=\"radialLabels\" transform={`translate(${centerX},${centerY})`}>\n                <RadialLabels<RawDatum>\n                    dataWithArc={dataWithArc}\n                    radius={radius}\n                    label={radialLabel}\n                    skipAngle={radialLabelsSkipAngle}\n                    linkOffset={radialLabelsLinkOffset}\n                    linkDiagonalLength={radialLabelsLinkDiagonalLength}\n                    linkHorizontalLength={radialLabelsLinkHorizontalLength}\n                    linkStrokeWidth={radialLabelsLinkStrokeWidth}\n                    textXOffset={radialLabelsTextXOffset}\n                    textColor={radialLabelsTextColor}\n                    linkColor={radialLabelsLinkColor}\n                />\n            </g>\n        )\n    }\n\n    if (enableSliceLabels && layers.includes('sliceLabels')) {\n        layerById.sliceLabels = (\n            <g key=\"sliceLabels\" transform={`translate(${centerX},${centerY})`}>\n                <SliceLabels<RawDatum>\n                    dataWithArc={dataWithArc}\n                    label={sliceLabel}\n                    radius={radius}\n                    innerRadius={innerRadius}\n                    radiusOffset={sliceLabelsRadiusOffset}\n                    skipAngle={sliceLabelsSkipAngle}\n                    textColor={sliceLabelsTextColor}\n                />\n            </g>\n        )\n    }\n\n    if (legends.length > 0 && layers.includes('legends')) {\n        layerById.legends = (\n            <PieLegends<RawDatum>\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                dataWithArc={dataWithArc}\n                legends={legends}\n            />\n        )\n    }\n\n    const layerContext = usePieLayerContext<RawDatum>({\n        dataWithArc,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as PieLayerId] !== undefined) {\n                    return layerById[layer as PieLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport default withContainer(Pie) as <RawDatum>(props: PieSvgProps<RawDatum>) => JSX.Element\n","import React from 'react'\n// @ts-ignore\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Pie from './Pie'\nimport { PieSvgProps } from './types'\n\nexport const ResponsivePie = <RawDatum,>(\n    props: Omit<PieSvgProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Pie<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import React, { createElement, useEffect, useMemo, useRef } from 'react'\nimport {\n    // @ts-ignore\n    getHoveredArc,\n    // @ts-ignore\n    getRelativeCursor,\n    // @ts-ignore\n    textPropsByEngine,\n    useDimensions,\n    useTheme,\n    // @ts-ignore\n    withContainer,\n    Theme,\n} from '@nivo/core'\n// @ts-ignore\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useInheritedColor, InheritedColorConfig } from '@nivo/colors'\n// @ts-ignore\nimport { useTooltip } from '@nivo/tooltip'\nimport { useNormalizedData, usePieFromBox, usePieRadialLabels, usePieSliceLabels } from './hooks'\nimport { ComputedDatum, PieCanvasProps, RadialLabelData, SliceLabelData } from './types'\nimport { defaultProps } from './props'\n\nconst drawSliceLabels = <RawDatum,>(\n    ctx: CanvasRenderingContext2D,\n    labels: SliceLabelData<RawDatum>[],\n    theme: Theme\n) => {\n    ctx.textAlign = 'center'\n    ctx.textBaseline = 'middle'\n    ctx.font = `${theme.labels!.text!.fontSize}px ${theme.labels!.text!.fontFamily}`\n\n    labels.forEach(label => {\n        ctx.save()\n        ctx.translate(label.x, label.y)\n        ctx.fillStyle = label.textColor\n        ctx.fillText(`${label.label}`, 0, 0)\n        ctx.restore()\n    })\n}\n\n// prettier-ignore\nconst drawRadialLabels = <RawDatum, >(\n    ctx: CanvasRenderingContext2D,\n    labels: RadialLabelData<RawDatum>[],\n    theme: Theme,\n    linkStrokeWidth: number\n) => {\n    ctx.textBaseline = 'middle'\n    ctx.font = `${theme.labels!.text!.fontSize}px ${theme.labels!.text!.fontFamily}`\n\n    labels.forEach(label => {\n        ctx.save()\n        ctx.translate(label.position.x, label.position.y)\n        ctx.fillStyle = label.textColor\n        ctx.textAlign = textPropsByEngine.canvas.align[label.align]\n        ctx.fillText(`${label.text}`, 0, 0)\n        ctx.restore()\n\n        ctx.beginPath()\n        ctx.strokeStyle = label.linkColor\n        ctx.lineWidth = linkStrokeWidth\n        label.line.forEach((point, index) => {\n            if (index === 0) ctx.moveTo(point.x, point.y)\n            else ctx.lineTo(point.x, point.y)\n        })\n        if (linkStrokeWidth > 0) ctx.stroke()\n    })\n}\n\n// prettier-ignore\nconst PieCanvas = <RawDatum, >({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio = 1,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n\n    // radial labels\n    radialLabel = defaultProps.radialLabel,\n    enableRadialLabels = defaultProps.enableRadialLabels,\n    radialLabelsSkipAngle = defaultProps.radialLabelsSkipAngle,\n    radialLabelsLinkOffset = defaultProps.radialLabelsLinkOffset,\n    radialLabelsLinkDiagonalLength = defaultProps.radialLabelsLinkDiagonalLength,\n    radialLabelsLinkHorizontalLength = defaultProps.radialLabelsLinkHorizontalLength,\n    radialLabelsLinkStrokeWidth = defaultProps.radialLabelsLinkStrokeWidth,\n    radialLabelsTextXOffset = defaultProps.radialLabelsTextXOffset,\n    radialLabelsTextColor = defaultProps.radialLabelsTextColor,\n    radialLabelsLinkColor = defaultProps.radialLabelsLinkColor,\n\n    // slices labels\n    sliceLabel = defaultProps.sliceLabel,\n    enableSliceLabels = defaultProps.enableSliceLabels,\n    sliceLabelsSkipAngle = defaultProps.sliceLabelsSkipAngle,\n    sliceLabelsTextColor = defaultProps.sliceLabelsTextColor,\n    sliceLabelsRadiusOffset = defaultProps.sliceLabelsRadiusOffset,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseMove,\n    tooltip = defaultProps.tooltip,\n\n    legends = defaultProps.legends,\n}: PieCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n    const theme = useTheme()\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const { dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius } = usePieFromBox<RawDatum>({\n        data: normalizedData,\n        width: innerWidth,\n        height: innerHeight,\n        fit,\n        innerRadius: innerRadiusRatio,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n        cornerRadius,\n    })\n\n    const getBorderColor = useInheritedColor<ComputedDatum<RawDatum>>(borderColor, theme)\n\n    const radialLabels = usePieRadialLabels<RawDatum>({\n        enable: enableRadialLabels,\n        dataWithArc,\n        label: radialLabel,\n        textXOffset: radialLabelsTextXOffset,\n        textColor: radialLabelsTextColor,\n        radius,\n        skipAngle: radialLabelsSkipAngle,\n        linkOffset: radialLabelsLinkOffset,\n        linkDiagonalLength: radialLabelsLinkDiagonalLength,\n        linkHorizontalLength: radialLabelsLinkHorizontalLength,\n        linkColor: radialLabelsLinkColor,\n    })\n\n    const sliceLabels = usePieSliceLabels<RawDatum>({\n        enable: enableSliceLabels,\n        dataWithArc,\n        label: sliceLabel,\n        radius,\n        innerRadius,\n        radiusOffset: sliceLabelsRadiusOffset,\n        skipAngle: sliceLabelsSkipAngle,\n        textColor: sliceLabelsTextColor,\n    })\n\n    useEffect(() => {\n        if (!canvasEl.current) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')!\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n\n        ctx.save()\n        ctx.translate(margin.left, margin.top);\n\n        (arcGenerator as any).context(ctx)\n\n        ctx.save()\n        ctx.translate(centerX, centerY)\n\n        dataWithArc.forEach(arc => {\n            ctx.beginPath()\n            ctx.fillStyle = arc.color\n\n            ctx.strokeStyle = getBorderColor(arc)\n            ctx.lineWidth = borderWidth\n\n            arcGenerator(arc.arc)\n\n            ctx.fill()\n\n            if (borderWidth > 0) {\n                ctx.stroke()\n            }\n        })\n\n        if (enableRadialLabels === true) {\n            drawRadialLabels(ctx, radialLabels, theme, radialLabelsLinkStrokeWidth)\n        }\n\n        if (enableSliceLabels === true) {\n            drawSliceLabels(ctx, sliceLabels, theme)\n        }\n\n        // legends assume a box rather than a center,\n        // that's why we restore previously saved position here.\n        ctx.restore()\n        legends.forEach(legend => {\n            renderLegendToCanvas(ctx, {\n                ...legend,\n                data: dataWithArc,\n                containerWidth: innerWidth,\n                containerHeight: innerHeight,\n                theme,\n            })\n        })\n    }, [\n        canvasEl,\n        innerWidth,\n        innerHeight,\n        outerWidth,\n        outerHeight,\n        margin.top,\n        margin.left,\n        pixelRatio,\n        centerX,\n        centerY,\n        arcGenerator,\n        dataWithArc,\n        getBorderColor,\n        enableRadialLabels,\n        radialLabels,\n        enableSliceLabels,\n        sliceLabels,\n        legends,\n        theme,\n    ])\n\n    const arcs = useMemo(\n        () =>\n            dataWithArc.map(datum => ({\n                id: datum.id,\n                ...datum.arc,\n            })),\n        [dataWithArc]\n    )\n\n    const getArcFromMouse = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        const [x, y] = getRelativeCursor(canvasEl.current, event)\n\n        const hoveredArc = getHoveredArc(\n            margin.left + centerX,\n            margin.top + centerY,\n            radius,\n            innerRadius,\n            arcs,\n            x,\n            y\n        )\n\n        if (!hoveredArc) return null\n\n        return dataWithArc.find(datum => datum.id === hoveredArc.id)\n    }\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        const datum = getArcFromMouse(event)\n        if (datum) {\n            onMouseMove?.(datum, event)\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n        } else {\n            hideTooltip()\n        }\n    }\n\n    const handleMouseLeave = () => {\n        hideTooltip()\n    }\n\n    const handleClick = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        if (!onClick) return\n\n        const arc = getArcFromMouse(event)\n        if (arc) {\n            onClick(arc, event)\n        }\n    }\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport default withContainer(PieCanvas) as <RawDatum>(\n    props: PieCanvasProps<RawDatum>\n) => JSX.Element\n","import React from 'react'\n// @ts-ignore\nimport { ResponsiveWrapper } from '@nivo/core'\nimport PieCanvas from './PieCanvas'\nimport { PieCanvasProps } from './types'\n\nexport const ResponsivePieCanvas = <RawDatum,>(\n    props: Omit<PieCanvasProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <PieCanvas<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n"]},"metadata":{},"sourceType":"module"}