{"ast":null,"code":"/* eslint-disable no-cond-assign */\nvar util = require('../util');\n\nvar PEM = 18;\nvar DEFAULT_HEIGHT = PEM * 2;\nvar DEFAULT_GAP = PEM;\nvar DEFAULT_OPTIONS = {\n  getId: function getId(d) {\n    return d.id || d.name;\n  },\n  getHGap: function getHGap(d) {\n    return d.hgap || DEFAULT_GAP;\n  },\n  getVGap: function getVGap(d) {\n    return d.vgap || DEFAULT_GAP;\n  },\n  getChildren: function getChildren(d) {\n    return d.children;\n  },\n  getHeight: function getHeight(d) {\n    return d.height || DEFAULT_HEIGHT;\n  },\n  getWidth: function getWidth(d) {\n    var label = d.label || ' ';\n    return d.width || label.split('').length * PEM; // FIXME DO NOT get width like this\n  }\n};\n\nfunction Node(data, options) {\n  var me = this;\n  me.vgap = me.hgap = 0;\n  if (data instanceof Node) return data;\n  me.data = data;\n  /*\n   * Gaps: filling space between nodes\n   * (x, y) ----------------------\n   * |            vgap            |\n   * |    --------------------    h\n   * | h |                    |   e\n   * | g |                    |   i\n   * | a |                    |   g\n   * | p |                    |   h\n   * |   ---------------------    t\n   * |                            |\n   *  -----------width------------\n   */\n\n  var hgap = options.getHGap(data);\n  var vgap = options.getVGap(data);\n  me.width = options.getWidth(data);\n  me.height = options.getHeight(data);\n  me.id = options.getId(data);\n  me.x = me.y = 0;\n  me.depth = 0;\n\n  if (!me.children) {\n    me.children = [];\n  }\n\n  me.addGap(hgap, vgap);\n  return me;\n}\n\nutil.assign(Node.prototype, {\n  isRoot: function isRoot() {\n    return this.depth === 0;\n  },\n  isLeaf: function isLeaf() {\n    return this.children.length === 0;\n  },\n  addGap: function addGap(hgap, vgap) {\n    var me = this;\n    me.hgap += hgap;\n    me.vgap += vgap;\n    me.width += 2 * hgap;\n    me.height += 2 * vgap;\n  },\n  eachNode: function eachNode(callback) {\n    // Depth First traverse\n    var me = this;\n    var nodes = [me];\n    var current;\n\n    while (current = nodes.shift()) {\n      callback(current);\n      nodes = current.children.concat(nodes);\n    }\n  },\n  DFTraverse: function DFTraverse(callback) {\n    // Depth First traverse\n    this.eachNode(callback);\n  },\n  BFTraverse: function BFTraverse(callback) {\n    // Breadth First traverse\n    var me = this;\n    var nodes = [me];\n    var current;\n\n    while (current = nodes.shift()) {\n      callback(current);\n      nodes = nodes.concat(current.children);\n    }\n  },\n  getBoundingBox: function getBoundingBox() {\n    // BBox for just one tree node\n    var bb = {\n      left: Number.MAX_VALUE,\n      top: Number.MAX_VALUE,\n      width: 0,\n      height: 0\n    };\n    this.eachNode(function (node) {\n      bb.left = Math.min(bb.left, node.x);\n      bb.top = Math.min(bb.top, node.y);\n      bb.width = Math.max(bb.width, node.x + node.width);\n      bb.height = Math.max(bb.height, node.y + node.height);\n    });\n    return bb;\n  },\n  // translate\n  translate: function translate(tx, ty) {\n    if (tx === void 0) {\n      tx = 0;\n    }\n\n    if (ty === void 0) {\n      ty = 0;\n    }\n\n    this.eachNode(function (node) {\n      node.x += tx;\n      node.y += ty;\n    });\n  },\n  right2left: function right2left() {\n    var me = this;\n    var bb = me.getBoundingBox();\n    me.eachNode(function (node) {\n      node.x = node.x - (node.x - bb.left) * 2 - node.width; // node.x = - node.x;\n    });\n    me.translate(bb.width, 0);\n  },\n  bottom2top: function bottom2top() {\n    var me = this;\n    var bb = me.getBoundingBox();\n    me.eachNode(function (node) {\n      node.y = node.y - (node.y - bb.top) * 2 - node.height; // node.y = - node.y;\n    });\n    me.translate(0, bb.height);\n  }\n});\n\nfunction hierarchy(data, options, isolated) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  options = util.assign({}, DEFAULT_OPTIONS, options);\n  var root = new Node(data, options);\n  var nodes = [root];\n  var node;\n\n  if (!isolated && !data.collapsed) {\n    while (node = nodes.shift()) {\n      if (!node.data.collapsed) {\n        var children = options.getChildren(node.data);\n        var length = children ? children.length : 0;\n        node.children = new Array(length);\n\n        if (children && length) {\n          for (var i = 0; i < length; i++) {\n            var child = new Node(children[i], options);\n            node.children[i] = child;\n            nodes.push(child);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n        }\n      }\n    }\n  }\n\n  return root;\n}\n\nmodule.exports = hierarchy;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@antv/hierarchy/lib/layout/hierarchy.js"],"names":["util","require","PEM","DEFAULT_HEIGHT","DEFAULT_GAP","DEFAULT_OPTIONS","getId","d","id","name","getHGap","hgap","getVGap","vgap","getChildren","children","getHeight","height","getWidth","label","width","split","length","Node","data","options","me","x","y","depth","addGap","assign","prototype","isRoot","isLeaf","eachNode","callback","nodes","current","shift","concat","DFTraverse","BFTraverse","getBoundingBox","bb","left","Number","MAX_VALUE","top","node","Math","min","max","translate","tx","ty","right2left","bottom2top","hierarchy","isolated","root","collapsed","Array","i","child","push","parent","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable no-cond-assign */\nvar util = require('../util');\n\nvar PEM = 18;\nvar DEFAULT_HEIGHT = PEM * 2;\nvar DEFAULT_GAP = PEM;\nvar DEFAULT_OPTIONS = {\n  getId: function getId(d) {\n    return d.id || d.name;\n  },\n  getHGap: function getHGap(d) {\n    return d.hgap || DEFAULT_GAP;\n  },\n  getVGap: function getVGap(d) {\n    return d.vgap || DEFAULT_GAP;\n  },\n  getChildren: function getChildren(d) {\n    return d.children;\n  },\n  getHeight: function getHeight(d) {\n    return d.height || DEFAULT_HEIGHT;\n  },\n  getWidth: function getWidth(d) {\n    var label = d.label || ' ';\n    return d.width || label.split('').length * PEM; // FIXME DO NOT get width like this\n  }\n};\n\nfunction Node(data, options) {\n  var me = this;\n  me.vgap = me.hgap = 0;\n  if (data instanceof Node) return data;\n  me.data = data;\n  /*\n   * Gaps: filling space between nodes\n   * (x, y) ----------------------\n   * |            vgap            |\n   * |    --------------------    h\n   * | h |                    |   e\n   * | g |                    |   i\n   * | a |                    |   g\n   * | p |                    |   h\n   * |   ---------------------    t\n   * |                            |\n   *  -----------width------------\n   */\n\n  var hgap = options.getHGap(data);\n  var vgap = options.getVGap(data);\n  me.width = options.getWidth(data);\n  me.height = options.getHeight(data);\n  me.id = options.getId(data);\n  me.x = me.y = 0;\n  me.depth = 0;\n\n  if (!me.children) {\n    me.children = [];\n  }\n\n  me.addGap(hgap, vgap);\n  return me;\n}\n\nutil.assign(Node.prototype, {\n  isRoot: function isRoot() {\n    return this.depth === 0;\n  },\n  isLeaf: function isLeaf() {\n    return this.children.length === 0;\n  },\n  addGap: function addGap(hgap, vgap) {\n    var me = this;\n    me.hgap += hgap;\n    me.vgap += vgap;\n    me.width += 2 * hgap;\n    me.height += 2 * vgap;\n  },\n  eachNode: function eachNode(callback) {\n    // Depth First traverse\n    var me = this;\n    var nodes = [me];\n    var current;\n\n    while (current = nodes.shift()) {\n      callback(current);\n      nodes = current.children.concat(nodes);\n    }\n  },\n  DFTraverse: function DFTraverse(callback) {\n    // Depth First traverse\n    this.eachNode(callback);\n  },\n  BFTraverse: function BFTraverse(callback) {\n    // Breadth First traverse\n    var me = this;\n    var nodes = [me];\n    var current;\n\n    while (current = nodes.shift()) {\n      callback(current);\n      nodes = nodes.concat(current.children);\n    }\n  },\n  getBoundingBox: function getBoundingBox() {\n    // BBox for just one tree node\n    var bb = {\n      left: Number.MAX_VALUE,\n      top: Number.MAX_VALUE,\n      width: 0,\n      height: 0\n    };\n    this.eachNode(function (node) {\n      bb.left = Math.min(bb.left, node.x);\n      bb.top = Math.min(bb.top, node.y);\n      bb.width = Math.max(bb.width, node.x + node.width);\n      bb.height = Math.max(bb.height, node.y + node.height);\n    });\n    return bb;\n  },\n  // translate\n  translate: function translate(tx, ty) {\n    if (tx === void 0) {\n      tx = 0;\n    }\n\n    if (ty === void 0) {\n      ty = 0;\n    }\n\n    this.eachNode(function (node) {\n      node.x += tx;\n      node.y += ty;\n    });\n  },\n  right2left: function right2left() {\n    var me = this;\n    var bb = me.getBoundingBox();\n    me.eachNode(function (node) {\n      node.x = node.x - (node.x - bb.left) * 2 - node.width; // node.x = - node.x;\n    });\n    me.translate(bb.width, 0);\n  },\n  bottom2top: function bottom2top() {\n    var me = this;\n    var bb = me.getBoundingBox();\n    me.eachNode(function (node) {\n      node.y = node.y - (node.y - bb.top) * 2 - node.height; // node.y = - node.y;\n    });\n    me.translate(0, bb.height);\n  }\n});\n\nfunction hierarchy(data, options, isolated) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  options = util.assign({}, DEFAULT_OPTIONS, options);\n  var root = new Node(data, options);\n  var nodes = [root];\n  var node;\n\n  if (!isolated && !data.collapsed) {\n    while (node = nodes.shift()) {\n      if (!node.data.collapsed) {\n        var children = options.getChildren(node.data);\n        var length = children ? children.length : 0;\n        node.children = new Array(length);\n\n        if (children && length) {\n          for (var i = 0; i < length; i++) {\n            var child = new Node(children[i], options);\n            node.children[i] = child;\n            nodes.push(child);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n        }\n      }\n    }\n  }\n\n  return root;\n}\n\nmodule.exports = hierarchy;"]},"metadata":{},"sourceType":"script"}