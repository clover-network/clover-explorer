{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar Path_1 = require(\"../Path\");\n\nvar PI = Math.PI;\nvar sin = Math.sin;\nvar cos = Math.cos;\n\nvar IsogonShape = function () {\n  function IsogonShape() {\n    this.x = 0;\n    this.y = 0;\n    this.r = 0;\n    this.n = 0;\n  }\n\n  return IsogonShape;\n}();\n\nvar Isogon = function (_super) {\n  tslib_1.__extends(Isogon, _super);\n\n  function Isogon(opts) {\n    return _super.call(this, opts) || this;\n  }\n\n  Isogon.prototype.getDefaultShape = function () {\n    return new IsogonShape();\n  };\n\n  Isogon.prototype.buildPath = function (ctx, shape) {\n    var n = shape.n;\n\n    if (!n || n < 2) {\n      return;\n    }\n\n    var x = shape.x;\n    var y = shape.y;\n    var r = shape.r;\n    var dStep = 2 * PI / n;\n    var deg = -PI / 2;\n    ctx.moveTo(x + r * cos(deg), y + r * sin(deg));\n\n    for (var i = 0, end = n - 1; i < end; i++) {\n      deg += dStep;\n      ctx.lineTo(x + r * cos(deg), y + r * sin(deg));\n    }\n\n    ctx.closePath();\n    return;\n  };\n\n  return Isogon;\n}(Path_1[\"default\"]);\n\nIsogon.prototype.type = 'isogon';\nexports[\"default\"] = Isogon;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/zrender/lib/graphic/shape/Isogon.js"],"names":["exports","__esModule","tslib_1","require","Path_1","PI","Math","sin","cos","IsogonShape","x","y","r","n","Isogon","_super","__extends","opts","call","prototype","getDefaultShape","buildPath","ctx","shape","dStep","deg","moveTo","i","end","lineTo","closePath","type"],"mappings":"AAAA;;AACAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAApB;;AACA,IAAIE,EAAE,GAAGC,IAAI,CAACD,EAAd;AACA,IAAIE,GAAG,GAAGD,IAAI,CAACC,GAAf;AACA,IAAIC,GAAG,GAAGF,IAAI,CAACE,GAAf;;AACA,IAAIC,WAAW,GAAI,YAAY;AAC3B,WAASA,WAAT,GAAuB;AACnB,SAAKC,CAAL,GAAS,CAAT;AACA,SAAKC,CAAL,GAAS,CAAT;AACA,SAAKC,CAAL,GAAS,CAAT;AACA,SAAKC,CAAL,GAAS,CAAT;AACH;;AACD,SAAOJ,WAAP;AACH,CARkB,EAAnB;;AASA,IAAIK,MAAM,GAAI,UAAUC,MAAV,EAAkB;AAC5Bb,EAAAA,OAAO,CAACc,SAAR,CAAkBF,MAAlB,EAA0BC,MAA1B;;AACA,WAASD,MAAT,CAAgBG,IAAhB,EAAsB;AAClB,WAAOF,MAAM,CAACG,IAAP,CAAY,IAAZ,EAAkBD,IAAlB,KAA2B,IAAlC;AACH;;AACDH,EAAAA,MAAM,CAACK,SAAP,CAAiBC,eAAjB,GAAmC,YAAY;AAC3C,WAAO,IAAIX,WAAJ,EAAP;AACH,GAFD;;AAGAK,EAAAA,MAAM,CAACK,SAAP,CAAiBE,SAAjB,GAA6B,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AAC/C,QAAIV,CAAC,GAAGU,KAAK,CAACV,CAAd;;AACA,QAAI,CAACA,CAAD,IAAMA,CAAC,GAAG,CAAd,EAAiB;AACb;AACH;;AACD,QAAIH,CAAC,GAAGa,KAAK,CAACb,CAAd;AACA,QAAIC,CAAC,GAAGY,KAAK,CAACZ,CAAd;AACA,QAAIC,CAAC,GAAGW,KAAK,CAACX,CAAd;AACA,QAAIY,KAAK,GAAG,IAAInB,EAAJ,GAASQ,CAArB;AACA,QAAIY,GAAG,GAAG,CAACpB,EAAD,GAAM,CAAhB;AACAiB,IAAAA,GAAG,CAACI,MAAJ,CAAWhB,CAAC,GAAGE,CAAC,GAAGJ,GAAG,CAACiB,GAAD,CAAtB,EAA6Bd,CAAC,GAAGC,CAAC,GAAGL,GAAG,CAACkB,GAAD,CAAxC;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGf,CAAC,GAAG,CAA1B,EAA6Bc,CAAC,GAAGC,GAAjC,EAAsCD,CAAC,EAAvC,EAA2C;AACvCF,MAAAA,GAAG,IAAID,KAAP;AACAF,MAAAA,GAAG,CAACO,MAAJ,CAAWnB,CAAC,GAAGE,CAAC,GAAGJ,GAAG,CAACiB,GAAD,CAAtB,EAA6Bd,CAAC,GAAGC,CAAC,GAAGL,GAAG,CAACkB,GAAD,CAAxC;AACH;;AACDH,IAAAA,GAAG,CAACQ,SAAJ;AACA;AACH,GAjBD;;AAkBA,SAAOhB,MAAP;AACH,CA3Ba,CA2BZV,MAAM,CAAC,SAAD,CA3BM,CAAd;;AA4BAU,MAAM,CAACK,SAAP,CAAiBY,IAAjB,GAAwB,QAAxB;AACA/B,OAAO,CAAC,SAAD,CAAP,GAAqBc,MAArB","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar tslib_1 = require(\"tslib\");\nvar Path_1 = require(\"../Path\");\nvar PI = Math.PI;\nvar sin = Math.sin;\nvar cos = Math.cos;\nvar IsogonShape = (function () {\n    function IsogonShape() {\n        this.x = 0;\n        this.y = 0;\n        this.r = 0;\n        this.n = 0;\n    }\n    return IsogonShape;\n}());\nvar Isogon = (function (_super) {\n    tslib_1.__extends(Isogon, _super);\n    function Isogon(opts) {\n        return _super.call(this, opts) || this;\n    }\n    Isogon.prototype.getDefaultShape = function () {\n        return new IsogonShape();\n    };\n    Isogon.prototype.buildPath = function (ctx, shape) {\n        var n = shape.n;\n        if (!n || n < 2) {\n            return;\n        }\n        var x = shape.x;\n        var y = shape.y;\n        var r = shape.r;\n        var dStep = 2 * PI / n;\n        var deg = -PI / 2;\n        ctx.moveTo(x + r * cos(deg), y + r * sin(deg));\n        for (var i = 0, end = n - 1; i < end; i++) {\n            deg += dStep;\n            ctx.lineTo(x + r * cos(deg), y + r * sin(deg));\n        }\n        ctx.closePath();\n        return;\n    };\n    return Isogon;\n}(Path_1[\"default\"]));\nIsogon.prototype.type = 'isogon';\nexports[\"default\"] = Isogon;\n"]},"metadata":{},"sourceType":"script"}