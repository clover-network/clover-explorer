{"ast":null,"code":"// Adapted from vega-statistics by Jeffrey Heer\n// License: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/LICENSE\n// Source: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/packages/vega-statistics/src/regression/points.js\nexport function points(data, x, y, sort) {\n  data = data.filter(d => {\n    let u = x(d),\n        v = y(d);\n    return u != null && isFinite(u) && v != null && isFinite(v);\n  });\n\n  if (sort) {\n    data.sort((a, b) => x(a) - x(b));\n  }\n\n  const n = data.length,\n        X = new Float64Array(n),\n        Y = new Float64Array(n); // extract values, calculate means\n\n  let ux = 0,\n      uy = 0,\n      xv,\n      yv,\n      d;\n\n  for (let i = 0; i < n;) {\n    d = data[i];\n    X[i] = xv = +x(d);\n    Y[i] = yv = +y(d);\n    ++i;\n    ux += (xv - ux) / i;\n    uy += (yv - uy) / i;\n  } // mean center the data\n\n\n  for (let i = 0; i < n; ++i) {\n    X[i] -= ux;\n    Y[i] -= uy;\n  }\n\n  return [X, Y, ux, uy];\n}\nexport function visitPoints(data, x, y, cb) {\n  let iterations = 0;\n\n  for (let i = 0, n = data.length; i < n; i++) {\n    const d = data[i],\n          dx = +x(d),\n          dy = +y(d);\n\n    if (dx != null && isFinite(dx) && dy != null && isFinite(dy)) {\n      cb(dx, dy, iterations++);\n    }\n  }\n}","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/d3-regression/src/utils/points.js"],"names":["points","data","x","y","sort","filter","d","u","v","isFinite","a","b","n","length","X","Float64Array","Y","ux","uy","xv","yv","i","visitPoints","cb","iterations","dx","dy"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,SAASA,MAAT,CAAgBC,IAAhB,EAAsBC,CAAtB,EAAyBC,CAAzB,EAA4BC,IAA5B,EAAkC;AACvCH,EAAAA,IAAI,GAAGA,IAAI,CAACI,MAAL,CAAYC,CAAC,IAAI;AACtB,QAAIC,CAAC,GAAGL,CAAC,CAACI,CAAD,CAAT;AAAA,QAAcE,CAAC,GAAGL,CAAC,CAACG,CAAD,CAAnB;AACA,WAAOC,CAAC,IAAI,IAAL,IAAaE,QAAQ,CAACF,CAAD,CAArB,IAA4BC,CAAC,IAAI,IAAjC,IAAyCC,QAAQ,CAACD,CAAD,CAAxD;AACD,GAHM,CAAP;;AAKA,MAAIJ,IAAJ,EAAU;AACRH,IAAAA,IAAI,CAACG,IAAL,CAAU,CAACM,CAAD,EAAIC,CAAJ,KAAUT,CAAC,CAACQ,CAAD,CAAD,GAAOR,CAAC,CAACS,CAAD,CAA5B;AACD;;AAED,QAAMC,CAAC,GAAGX,IAAI,CAACY,MAAf;AAAA,QACMC,CAAC,GAAG,IAAIC,YAAJ,CAAiBH,CAAjB,CADV;AAAA,QAEMI,CAAC,GAAG,IAAID,YAAJ,CAAiBH,CAAjB,CAFV,CAVuC,CAcvC;;AACA,MAAIK,EAAE,GAAG,CAAT;AAAA,MAAYC,EAAE,GAAG,CAAjB;AAAA,MAAoBC,EAApB;AAAA,MAAwBC,EAAxB;AAAA,MAA4Bd,CAA5B;;AACA,OAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,CAApB,GAAyB;AACvBN,IAAAA,CAAC,GAAGL,IAAI,CAACoB,CAAD,CAAR;AACAP,IAAAA,CAAC,CAACO,CAAD,CAAD,GAAOF,EAAE,GAAG,CAACjB,CAAC,CAACI,CAAD,CAAd;AACAU,IAAAA,CAAC,CAACK,CAAD,CAAD,GAAOD,EAAE,GAAG,CAACjB,CAAC,CAACG,CAAD,CAAd;AACA,MAAEe,CAAF;AACAJ,IAAAA,EAAE,IAAI,CAACE,EAAE,GAAGF,EAAN,IAAYI,CAAlB;AACAH,IAAAA,EAAE,IAAI,CAACE,EAAE,GAAGF,EAAN,IAAYG,CAAlB;AACD,GAvBsC,CAyBvC;;;AACA,OAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,CAApB,EAAuB,EAAES,CAAzB,EAA4B;AAC1BP,IAAAA,CAAC,CAACO,CAAD,CAAD,IAAQJ,EAAR;AACAD,IAAAA,CAAC,CAACK,CAAD,CAAD,IAAQH,EAAR;AACD;;AAED,SAAO,CAACJ,CAAD,EAAIE,CAAJ,EAAOC,EAAP,EAAWC,EAAX,CAAP;AACD;AAGD,OAAO,SAASI,WAAT,CAAqBrB,IAArB,EAA2BC,CAA3B,EAA8BC,CAA9B,EAAiCoB,EAAjC,EAAoC;AACzC,MAAIC,UAAU,GAAG,CAAjB;;AAEA,OAAK,IAAIH,CAAC,GAAG,CAAR,EAAWT,CAAC,GAAGX,IAAI,CAACY,MAAzB,EAAiCQ,CAAC,GAAGT,CAArC,EAAwCS,CAAC,EAAzC,EAA6C;AAC3C,UAAMf,CAAC,GAAGL,IAAI,CAACoB,CAAD,CAAd;AAAA,UACMI,EAAE,GAAG,CAACvB,CAAC,CAACI,CAAD,CADb;AAAA,UAEMoB,EAAE,GAAG,CAACvB,CAAC,CAACG,CAAD,CAFb;;AAIA,QAAImB,EAAE,IAAI,IAAN,IAAchB,QAAQ,CAACgB,EAAD,CAAtB,IAA8BC,EAAE,IAAI,IAApC,IAA4CjB,QAAQ,CAACiB,EAAD,CAAxD,EAA8D;AAC5DH,MAAAA,EAAE,CAACE,EAAD,EAAKC,EAAL,EAASF,UAAU,EAAnB,CAAF;AACD;AACF;AACF","sourcesContent":["// Adapted from vega-statistics by Jeffrey Heer\n// License: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/LICENSE\n// Source: https://github.com/vega/vega/blob/f058b099decad9db78301405dd0d2e9d8ba3d51a/packages/vega-statistics/src/regression/points.js\nexport function points(data, x, y, sort) {\n  data = data.filter(d => {\n    let u = x(d), v = y(d);\n    return u != null && isFinite(u) && v != null && isFinite(v);\n  });\n\n  if (sort) {\n    data.sort((a, b) => x(a) - x(b));\n  }\n\n  const n = data.length,\n        X = new Float64Array(n),\n        Y = new Float64Array(n);\n\n  // extract values, calculate means\n  let ux = 0, uy = 0, xv, yv, d;\n  for (let i = 0; i < n; ) {\n    d = data[i];\n    X[i] = xv = +x(d);\n    Y[i] = yv = +y(d);\n    ++i;\n    ux += (xv - ux) / i;\n    uy += (yv - uy) / i;\n  }\n\n  // mean center the data\n  for (let i = 0; i < n; ++i) {\n    X[i] -= ux;\n    Y[i] -= uy;\n  }\n\n  return [X, Y, ux, uy];\n}\n\n\nexport function visitPoints(data, x, y, cb){\n  let iterations = 0;\n\n  for (let i = 0, n = data.length; i < n; i++) {\n    const d = data[i],\n          dx = +x(d),\n          dy = +y(d);\n    \n    if (dx != null && isFinite(dx) && dy != null && isFinite(dy)) {\n      cb(dx, dy, iterations++);\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}