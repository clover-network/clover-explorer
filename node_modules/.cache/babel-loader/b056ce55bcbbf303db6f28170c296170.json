{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar log_1 = require(\"../util/log\");\n\nvar model_1 = require(\"../util/model\");\n\nfunction createLegacyDataSelectAction(seriesType, ecRegisterAction) {\n  function getSeriesIndices(ecModel, payload) {\n    var seriesIndices = [];\n    ecModel.eachComponent({\n      mainType: 'series',\n      subType: seriesType,\n      query: payload\n    }, function (seriesModel) {\n      seriesIndices.push(seriesModel.seriesIndex);\n    });\n    return seriesIndices;\n  }\n\n  util_1.each([[seriesType + 'ToggleSelect', 'toggleSelect'], [seriesType + 'Select', 'select'], [seriesType + 'UnSelect', 'unselect']], function (eventsMap) {\n    ecRegisterAction(eventsMap[0], function (payload, ecModel, api) {\n      payload = util_1.extend({}, payload);\n\n      if (process.env.NODE_ENV !== 'production') {\n        log_1.deprecateReplaceLog(payload.type, eventsMap[1]);\n      }\n\n      api.dispatchAction(util_1.extend(payload, {\n        type: eventsMap[1],\n        seriesIndex: getSeriesIndices(ecModel, payload)\n      }));\n    });\n  });\n}\n\nexports.createLegacyDataSelectAction = createLegacyDataSelectAction;\n\nfunction handleSeriesLegacySelectEvents(type, eventPostfix, ecIns, ecModel, payload) {\n  var legacyEventName = type + eventPostfix;\n\n  if (!ecIns.isSilent(legacyEventName)) {\n    if (process.env.NODE_ENV !== 'production') {\n      log_1.deprecateLog(\"event \" + legacyEventName + \" is deprecated.\");\n    }\n\n    ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'pie'\n    }, function (seriesModel) {\n      var seriesIndex = seriesModel.seriesIndex;\n      var selected = payload.selected;\n\n      for (var i = 0; i < selected.length; i++) {\n        if (selected[i].seriesIndex === seriesIndex) {\n          var data = seriesModel.getData();\n          var dataIndex = model_1.queryDataIndex(data, payload.fromActionPayload);\n          ecIns.trigger(legacyEventName, {\n            type: legacyEventName,\n            seriesId: seriesModel.id,\n            name: util_1.isArray(dataIndex) ? data.getName(dataIndex[0]) : data.getName(dataIndex),\n            selected: util_1.extend({}, seriesModel.option.selectedMap)\n          });\n        }\n      }\n    });\n  }\n}\n\nfunction handleLegacySelectEvents(messageCenter, ecIns, ecModel) {\n  messageCenter.on('selectchanged', function (params) {\n    if (params.isFromClick) {\n      handleSeriesLegacySelectEvents('map', 'selectchanged', ecIns, ecModel, params);\n      handleSeriesLegacySelectEvents('pie', 'selectchanged', ecIns, ecModel, params);\n    } else if (params.fromAction === 'select') {\n      handleSeriesLegacySelectEvents('map', 'selected', ecIns, ecModel, params);\n      handleSeriesLegacySelectEvents('pie', 'selected', ecIns, ecModel, params);\n    } else if (params.fromAction === 'unselect') {\n      handleSeriesLegacySelectEvents('map', 'unselected', ecIns, ecModel, params);\n      handleSeriesLegacySelectEvents('pie', 'unselected', ecIns, ecModel, params);\n    }\n  });\n}\n\nexports.handleLegacySelectEvents = handleLegacySelectEvents;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/legacy/dataSelectAction.js"],"names":["exports","__esModule","util_1","require","log_1","model_1","createLegacyDataSelectAction","seriesType","ecRegisterAction","getSeriesIndices","ecModel","payload","seriesIndices","eachComponent","mainType","subType","query","seriesModel","push","seriesIndex","each","eventsMap","api","extend","process","env","NODE_ENV","deprecateReplaceLog","type","dispatchAction","handleSeriesLegacySelectEvents","eventPostfix","ecIns","legacyEventName","isSilent","deprecateLog","selected","i","length","data","getData","dataIndex","queryDataIndex","fromActionPayload","trigger","seriesId","id","name","isArray","getName","option","selectedMap","handleLegacySelectEvents","messageCenter","on","params","isFromClick","fromAction"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nvar log_1 = require(\"../util/log\");\n\nvar model_1 = require(\"../util/model\");\n\nfunction createLegacyDataSelectAction(seriesType, ecRegisterAction) {\n  function getSeriesIndices(ecModel, payload) {\n    var seriesIndices = [];\n    ecModel.eachComponent({\n      mainType: 'series',\n      subType: seriesType,\n      query: payload\n    }, function (seriesModel) {\n      seriesIndices.push(seriesModel.seriesIndex);\n    });\n    return seriesIndices;\n  }\n\n  util_1.each([[seriesType + 'ToggleSelect', 'toggleSelect'], [seriesType + 'Select', 'select'], [seriesType + 'UnSelect', 'unselect']], function (eventsMap) {\n    ecRegisterAction(eventsMap[0], function (payload, ecModel, api) {\n      payload = util_1.extend({}, payload);\n\n      if (process.env.NODE_ENV !== 'production') {\n        log_1.deprecateReplaceLog(payload.type, eventsMap[1]);\n      }\n\n      api.dispatchAction(util_1.extend(payload, {\n        type: eventsMap[1],\n        seriesIndex: getSeriesIndices(ecModel, payload)\n      }));\n    });\n  });\n}\n\nexports.createLegacyDataSelectAction = createLegacyDataSelectAction;\n\nfunction handleSeriesLegacySelectEvents(type, eventPostfix, ecIns, ecModel, payload) {\n  var legacyEventName = type + eventPostfix;\n\n  if (!ecIns.isSilent(legacyEventName)) {\n    if (process.env.NODE_ENV !== 'production') {\n      log_1.deprecateLog(\"event \" + legacyEventName + \" is deprecated.\");\n    }\n\n    ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'pie'\n    }, function (seriesModel) {\n      var seriesIndex = seriesModel.seriesIndex;\n      var selected = payload.selected;\n\n      for (var i = 0; i < selected.length; i++) {\n        if (selected[i].seriesIndex === seriesIndex) {\n          var data = seriesModel.getData();\n          var dataIndex = model_1.queryDataIndex(data, payload.fromActionPayload);\n          ecIns.trigger(legacyEventName, {\n            type: legacyEventName,\n            seriesId: seriesModel.id,\n            name: util_1.isArray(dataIndex) ? data.getName(dataIndex[0]) : data.getName(dataIndex),\n            selected: util_1.extend({}, seriesModel.option.selectedMap)\n          });\n        }\n      }\n    });\n  }\n}\n\nfunction handleLegacySelectEvents(messageCenter, ecIns, ecModel) {\n  messageCenter.on('selectchanged', function (params) {\n    if (params.isFromClick) {\n      handleSeriesLegacySelectEvents('map', 'selectchanged', ecIns, ecModel, params);\n      handleSeriesLegacySelectEvents('pie', 'selectchanged', ecIns, ecModel, params);\n    } else if (params.fromAction === 'select') {\n      handleSeriesLegacySelectEvents('map', 'selected', ecIns, ecModel, params);\n      handleSeriesLegacySelectEvents('pie', 'selected', ecIns, ecModel, params);\n    } else if (params.fromAction === 'unselect') {\n      handleSeriesLegacySelectEvents('map', 'unselected', ecIns, ecModel, params);\n      handleSeriesLegacySelectEvents('pie', 'unselected', ecIns, ecModel, params);\n    }\n  });\n}\n\nexports.handleLegacySelectEvents = handleLegacySelectEvents;"]},"metadata":{},"sourceType":"script"}