{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PortalConsumer from './portal-consumer';\nimport PortalHost, { portal, PortalContext } from './portal-host';\n/**\n * Portal allows to render a component at a different place in the parent tree.\n * You can use it to render content which should appear above other elements, similar to `Modal`.\n * It requires a [`Portal.Host`](portal-host.html) component to be rendered somewhere in the parent tree.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Portal, Text } from '@ant-design/react-native';\n *\n * export default class MyComponent extends React.Component {\n *   render() {\n *     const { visible } = this.state;\n *     return (\n *       <Portal>\n *         <Text>This is rendered at a different place</Text>\n *       </Portal>\n *     );\n *   }\n * }\n * ```\n */\n\nvar Portal = function (_React$Component) {\n  _inherits(Portal, _React$Component);\n\n  function Portal() {\n    _classCallCheck(this, Portal);\n\n    return _possibleConstructorReturn(this, (Portal.__proto__ || Object.getPrototypeOf(Portal)).apply(this, arguments));\n  }\n\n  _createClass(Portal, [{\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n      return React.createElement(PortalContext.Consumer, null, function (manager) {\n        return React.createElement(PortalConsumer, {\n          manager: manager\n        }, children);\n      });\n    }\n  }]);\n\n  return Portal;\n}(React.Component);\n\nPortal.Host = PortalHost;\nPortal.add = portal.add;\nPortal.remove = portal.remove;\nexport default Portal;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@ant-design/react-native/es/portal/portal.js"],"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","PortalConsumer","PortalHost","portal","PortalContext","Portal","_React$Component","__proto__","Object","getPrototypeOf","apply","arguments","key","value","render","children","props","createElement","Consumer","manager","Component","Host","add","remove"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,sCAA5B;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,0BAAP,MAAuC,iDAAvC;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,UAAP,IAAqBC,MAArB,EAA6BC,aAA7B,QAAkD,eAAlD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,MAAM,GAAG,UAAUC,gBAAV,EAA4B;AACrCP,EAAAA,SAAS,CAACM,MAAD,EAASC,gBAAT,CAAT;;AAEA,WAASD,MAAT,GAAkB;AACdT,IAAAA,eAAe,CAAC,IAAD,EAAOS,MAAP,CAAf;;AAEA,WAAOP,0BAA0B,CAAC,IAAD,EAAO,CAACO,MAAM,CAACE,SAAP,IAAoBC,MAAM,CAACC,cAAP,CAAsBJ,MAAtB,CAArB,EAAoDK,KAApD,CAA0D,IAA1D,EAAgEC,SAAhE,CAAP,CAAjC;AACH;;AAEDd,EAAAA,YAAY,CAACQ,MAAD,EAAS,CAAC;AAClBO,IAAAA,GAAG,EAAE,QADa;AAElBC,IAAAA,KAAK,EAAE,SAASC,MAAT,GAAkB;AACrB,UAAIC,QAAQ,GAAG,KAAKC,KAAL,CAAWD,QAA1B;AAEA,aAAOf,KAAK,CAACiB,aAAN,CACHb,aAAa,CAACc,QADX,EAEH,IAFG,EAGH,UAAUC,OAAV,EAAmB;AACf,eAAOnB,KAAK,CAACiB,aAAN,CACHhB,cADG,EAEH;AAAEkB,UAAAA,OAAO,EAAEA;AAAX,SAFG,EAGHJ,QAHG,CAAP;AAKH,OATE,CAAP;AAWH;AAhBiB,GAAD,CAAT,CAAZ;;AAmBA,SAAOV,MAAP;AACH,CA7BY,CA6BXL,KAAK,CAACoB,SA7BK,CAAb;;AA+BAf,MAAM,CAACgB,IAAP,GAAcnB,UAAd;AACAG,MAAM,CAACiB,GAAP,GAAanB,MAAM,CAACmB,GAApB;AACAjB,MAAM,CAACkB,MAAP,GAAgBpB,MAAM,CAACoB,MAAvB;AACA,eAAelB,MAAf","sourcesContent":["import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PortalConsumer from './portal-consumer';\nimport PortalHost, { portal, PortalContext } from './portal-host';\n/**\n * Portal allows to render a component at a different place in the parent tree.\n * You can use it to render content which should appear above other elements, similar to `Modal`.\n * It requires a [`Portal.Host`](portal-host.html) component to be rendered somewhere in the parent tree.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Portal, Text } from '@ant-design/react-native';\n *\n * export default class MyComponent extends React.Component {\n *   render() {\n *     const { visible } = this.state;\n *     return (\n *       <Portal>\n *         <Text>This is rendered at a different place</Text>\n *       </Portal>\n *     );\n *   }\n * }\n * ```\n */\n\nvar Portal = function (_React$Component) {\n    _inherits(Portal, _React$Component);\n\n    function Portal() {\n        _classCallCheck(this, Portal);\n\n        return _possibleConstructorReturn(this, (Portal.__proto__ || Object.getPrototypeOf(Portal)).apply(this, arguments));\n    }\n\n    _createClass(Portal, [{\n        key: 'render',\n        value: function render() {\n            var children = this.props.children;\n\n            return React.createElement(\n                PortalContext.Consumer,\n                null,\n                function (manager) {\n                    return React.createElement(\n                        PortalConsumer,\n                        { manager: manager },\n                        children\n                    );\n                }\n            );\n        }\n    }]);\n\n    return Portal;\n}(React.Component);\n\nPortal.Host = PortalHost;\nPortal.add = portal.add;\nPortal.remove = portal.remove;\nexport default Portal;"]},"metadata":{},"sourceType":"module"}