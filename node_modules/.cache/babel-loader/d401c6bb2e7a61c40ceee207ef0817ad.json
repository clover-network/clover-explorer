{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nimport { __extends } from \"tslib\";\nimport Path from 'zrender/esm/graphic/Path';\nimport Group from 'zrender/esm/graphic/Group';\nimport { extend, map, defaults, each } from 'zrender/esm/core/util';\nimport { Rect, Sector, updateProps, initProps, removeElementWithFadeOut } from '../../util/graphic';\nimport { getECData } from '../../util/innerStore';\nimport { enableHoverEmphasis, setStatesStylesFromModel } from '../../util/states';\nimport { setLabelStyle, getLabelStatesModels, setLabelValueAnimation } from '../../label/labelStyle';\nimport { throttle } from '../../util/throttle';\nimport { createClipPath } from '../helper/createClipPathFromCoordSys';\nimport Sausage from '../../util/shape/sausage';\nimport ChartView from '../../view/Chart';\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem';\nimport { getDefaultLabel, getDefaultInterpolatedLabel } from '../helper/labelHelper';\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'borderWidth'];\nvar BAR_BORDER_RADIUS_QUERY = ['itemStyle', 'borderRadius'];\nvar _eventPos = [0, 0];\nvar mathMax = Math.max;\nvar mathMin = Math.min;\n\nfunction getClipArea(coord, data) {\n  var coordSysClipArea = coord.getArea && coord.getArea();\n\n  if (isCoordinateSystemType(coord, 'cartesian2d')) {\n    var baseAxis = coord.getBaseAxis();\n\n    if (baseAxis.type !== 'category' || !baseAxis.onBand) {\n      var expandWidth = data.getLayout('bandWidth');\n\n      if (baseAxis.isHorizontal()) {\n        coordSysClipArea.x -= expandWidth;\n        coordSysClipArea.width += expandWidth * 2;\n      } else {\n        coordSysClipArea.y -= expandWidth;\n        coordSysClipArea.height += expandWidth * 2;\n      }\n    }\n  }\n\n  return coordSysClipArea;\n}\n\nvar BarView = function (_super) {\n  __extends(BarView, _super);\n\n  function BarView() {\n    var _this = _super.call(this) || this;\n\n    _this.type = BarView.type;\n    _this._isFirstFrame = true;\n    return _this;\n  }\n\n  BarView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    this._model = seriesModel;\n    this.removeOnRenderedListener(api);\n\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api, payload);\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.warn('Only cartesian2d and polar supported for bar.');\n    }\n  };\n\n  BarView.prototype.incrementalPrepareRender = function (seriesModel) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n\n    this._updateLargeClip(seriesModel);\n  };\n\n  BarView.prototype.incrementalRender = function (params, seriesModel) {\n    this._incrementalRenderLarge(params, seriesModel);\n  };\n\n  BarView.prototype._updateDrawMode = function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw !== this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  };\n\n  BarView.prototype._renderNormal = function (seriesModel, ecModel, api, payload) {\n    var _this = this;\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    var axis2DModel = baseAxis.model;\n    var realtimeSort = seriesModel.get('realtimeSort');\n\n    if (realtimeSort && data.count()) {\n      if (this._isFirstFrame) {\n        this._initSort(data, isHorizontalOrRadial, baseAxis, api);\n\n        this._isFirstFrame = false;\n        return;\n      } else {\n        this._onRendered = function () {\n          var orderMap = function (idx) {\n            var el = data.getItemGraphicEl(idx);\n\n            if (el) {\n              var shape = el.shape;\n              return (isHorizontalOrRadial ? shape.y + shape.height : shape.x + shape.width) || 0;\n            } else {\n              return 0;\n            }\n          };\n\n          _this._updateSort(data, orderMap, baseAxis, api);\n        };\n\n        api.getZr().on('rendered', this._onRendered);\n      }\n    }\n\n    var needsClip = seriesModel.get('clip', true) || realtimeSort;\n    var coordSysClipArea = getClipArea(coord, data);\n    group.removeClipPath();\n    var roundCap = seriesModel.get('roundCap', true);\n    var drawBackground = seriesModel.get('showBackground', true);\n    var backgroundModel = seriesModel.getModel('backgroundStyle');\n    var barBorderRadius = backgroundModel.get('borderRadius') || 0;\n    var bgEls = [];\n    var oldBgEls = this._backgroundEls;\n    var isInitSort = payload && payload.isInitSort;\n    var isChangeOrder = payload && payload.type === 'changeAxisOrder';\n\n    function createBackground(dataIndex) {\n      var bgLayout = getLayout[coord.type](data, dataIndex);\n      var bgEl = createBackgroundEl(coord, isHorizontalOrRadial, bgLayout);\n      bgEl.useStyle(backgroundModel.getItemStyle());\n\n      if (coord.type === 'cartesian2d') {\n        bgEl.setShape('r', barBorderRadius);\n      }\n\n      bgEls[dataIndex] = bgEl;\n      return bgEl;\n    }\n\n    ;\n    data.diff(oldData).add(function (dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n\n      if (drawBackground) {\n        createBackground(dataIndex);\n      }\n\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var isClipped = false;\n\n      if (needsClip) {\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n      }\n\n      var el = elementCreator[coord.type](seriesModel, data, dataIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, false, roundCap);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSort) {\n        updateRealtimeAnimation(seriesModel, axis2DModel, animationModel, el, layout, dataIndex, isHorizontalOrRadial, false, false);\n      } else {\n        initProps(el, {\n          shape: layout\n        }, seriesModel, dataIndex);\n      }\n\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      el.ignore = isClipped;\n    }).update(function (newIndex, oldIndex) {\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (drawBackground) {\n        var bgEl = void 0;\n\n        if (oldBgEls.length === 0) {\n          bgEl = createBackground(oldIndex);\n        } else {\n          bgEl = oldBgEls[oldIndex];\n          bgEl.useStyle(backgroundModel.getItemStyle());\n\n          if (coord.type === 'cartesian2d') {\n            bgEl.setShape('r', barBorderRadius);\n          }\n\n          bgEls[newIndex] = bgEl;\n        }\n\n        var bgLayout = getLayout[coord.type](data, newIndex);\n        var shape = createBackgroundShape(isHorizontalOrRadial, bgLayout, coord);\n        updateProps(bgEl, {\n          shape: shape\n        }, animationModel, newIndex);\n      }\n\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        el = null;\n        return;\n      }\n\n      var isClipped = false;\n\n      if (needsClip) {\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n        }\n      }\n\n      if (!el) {\n        el = elementCreator[coord.type](seriesModel, data, newIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, !!el, roundCap);\n      }\n\n      if (!isChangeOrder) {\n        updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n      }\n\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSort) {\n        updateRealtimeAnimation(seriesModel, axis2DModel, animationModel, el, layout, newIndex, isHorizontalOrRadial, true, isChangeOrder);\n      } else {\n        updateProps(el, {\n          shape: layout\n        }, seriesModel, newIndex, null);\n      }\n\n      data.setItemGraphicEl(newIndex, el);\n      el.ignore = isClipped;\n      group.add(el);\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n      el && removeElementWithFadeOut(el, seriesModel, dataIndex);\n    }).execute();\n    var bgGroup = this._backgroundGroup || (this._backgroundGroup = new Group());\n    bgGroup.removeAll();\n\n    for (var i = 0; i < bgEls.length; ++i) {\n      bgGroup.add(bgEls[i]);\n    }\n\n    group.add(bgGroup);\n    this._backgroundEls = bgEls;\n    this._data = data;\n  };\n\n  BarView.prototype._renderLarge = function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n\n    this._updateLargeClip(seriesModel);\n  };\n\n  BarView.prototype._incrementalRenderLarge = function (params, seriesModel) {\n    this._removeBackground();\n\n    createLarge(seriesModel, this.group, true);\n  };\n\n  BarView.prototype._updateLargeClip = function (seriesModel) {\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\n\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n  };\n\n  BarView.prototype._dataSort = function (data, idxMap) {\n    var info = [];\n    data.each(function (idx) {\n      info.push({\n        mappedValue: idxMap(idx),\n        ordinalNumber: idx,\n        beforeSortIndex: null\n      });\n    });\n    info.sort(function (a, b) {\n      return b.mappedValue - a.mappedValue;\n    });\n\n    for (var i = 0; i < info.length; ++i) {\n      info[info[i].ordinalNumber].beforeSortIndex = i;\n    }\n\n    return map(info, function (item) {\n      return {\n        ordinalNumber: item.ordinalNumber,\n        beforeSortIndex: item.beforeSortIndex\n      };\n    });\n  };\n\n  BarView.prototype._isDataOrderChanged = function (data, orderMap, oldOrder) {\n    var oldCount = oldOrder ? oldOrder.length : 0;\n\n    if (oldCount !== data.count()) {\n      return true;\n    }\n\n    var lastValue = Number.MAX_VALUE;\n\n    for (var i = 0; i < oldOrder.length; ++i) {\n      var value = orderMap(oldOrder[i].ordinalNumber);\n\n      if (value > lastValue) {\n        return true;\n      }\n\n      lastValue = value;\n    }\n\n    return false;\n  };\n\n  BarView.prototype._updateSort = function (data, orderMap, baseAxis, api) {\n    var oldOrder = baseAxis.scale.getCategorySortInfo();\n\n    var isOrderChanged = this._isDataOrderChanged(data, orderMap, oldOrder);\n\n    if (isOrderChanged) {\n      var newOrder = this._dataSort(data, orderMap);\n\n      var extent = baseAxis.scale.getExtent();\n\n      for (var i = extent[0]; i < extent[1]; ++i) {\n        if (!oldOrder[i] || oldOrder[i].ordinalNumber !== newOrder[i].ordinalNumber) {\n          this.removeOnRenderedListener(api);\n          var action = {\n            type: 'changeAxisOrder',\n            componentType: baseAxis.dim + 'Axis',\n            axisId: baseAxis.index,\n            sortInfo: newOrder\n          };\n          api.dispatchAction(action);\n          break;\n        }\n      }\n    }\n  };\n\n  BarView.prototype._initSort = function (data, isHorizontal, baseAxis, api) {\n    var action = {\n      type: 'changeAxisOrder',\n      componentType: baseAxis.dim + 'Axis',\n      isInitSort: true,\n      axisId: baseAxis.index,\n      sortInfo: this._dataSort(data, function (idx) {\n        return parseFloat(data.get(isHorizontal ? 'y' : 'x', idx)) || 0;\n      })\n    };\n    api.dispatchAction(action);\n  };\n\n  BarView.prototype.remove = function (ecModel, api) {\n    this._clear(this._model);\n\n    this.removeOnRenderedListener(api);\n  };\n\n  BarView.prototype.dispose = function (ecModel, api) {\n    this.removeOnRenderedListener(api);\n  };\n\n  BarView.prototype.removeOnRenderedListener = function (api) {\n    if (this._onRendered) {\n      api.getZr().off('rendered', this._onRendered);\n      this._onRendered = null;\n    }\n  };\n\n  BarView.prototype._clear = function (model) {\n    var group = this.group;\n    var data = this._data;\n\n    if (model && model.isAnimationEnabled() && data && !this._isLargeDraw) {\n      this._removeBackground();\n\n      this._backgroundEls = [];\n      data.eachItemGraphicEl(function (el) {\n        removeElementWithFadeOut(el, model, getECData(el).dataIndex);\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n    this._isFirstFrame = true;\n  };\n\n  BarView.prototype._removeBackground = function () {\n    this.group.remove(this._backgroundGroup);\n    this._backgroundGroup = null;\n  };\n\n  BarView.type = 'bar';\n  return BarView;\n}(ChartView);\n\nvar clip = {\n  cartesian2d: function (coordSysBoundingRect, layout) {\n    var signWidth = layout.width < 0 ? -1 : 1;\n    var signHeight = layout.height < 0 ? -1 : 1;\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    var x = mathMax(layout.x, coordSysBoundingRect.x);\n    var x2 = mathMin(layout.x + layout.width, coordSysBoundingRect.x + coordSysBoundingRect.width);\n    var y = mathMax(layout.y, coordSysBoundingRect.y);\n    var y2 = mathMin(layout.y + layout.height, coordSysBoundingRect.y + coordSysBoundingRect.height);\n    layout.x = x;\n    layout.y = y;\n    layout.width = x2 - x;\n    layout.height = y2 - y;\n    var clipped = layout.width < 0 || layout.height < 0;\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    return clipped;\n  },\n  polar: function (coordSysClipArea, layout) {\n    var signR = layout.r0 <= layout.r ? 1 : -1;\n\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n\n    var r = mathMin(layout.r, coordSysClipArea.r);\n    var r0 = mathMax(layout.r0, coordSysClipArea.r0);\n    layout.r = r;\n    layout.r0 = r0;\n    var clipped = r - r0 < 0;\n\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n\n    return clipped;\n  }\n};\nvar elementCreator = {\n  cartesian2d: function (seriesModel, data, newIndex, layout, isHorizontal, animationModel, axisModel, isUpdate, roundCap) {\n    var rect = new Rect({\n      shape: extend({}, layout),\n      z2: 1\n    });\n    rect.__dataIndex = newIndex;\n    rect.name = 'item';\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      rectShape[animateProperty] = 0;\n    }\n\n    return rect;\n  },\n  polar: function (seriesModel, data, newIndex, layout, isRadial, animationModel, axisModel, isUpdate, roundCap) {\n    var clockwise = layout.startAngle < layout.endAngle;\n    var ShapeClass = !isRadial && roundCap ? Sausage : Sector;\n    var sector = new ShapeClass({\n      shape: defaults({\n        clockwise: clockwise\n      }, layout),\n      z2: 1\n    });\n    sector.name = 'item';\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      (isUpdate ? updateProps : initProps)(sector, {\n        shape: animateTarget\n      }, animationModel);\n    }\n\n    return sector;\n  }\n};\n\nfunction updateRealtimeAnimation(seriesModel, axisModel, animationModel, el, layout, newIndex, isHorizontal, isUpdate, isChangeOrder) {\n  if (animationModel || axisModel) {\n    var seriesTarget = void 0;\n    var axisTarget = void 0;\n\n    if (isHorizontal) {\n      axisTarget = {\n        x: layout.x,\n        width: layout.width\n      };\n      seriesTarget = {\n        y: layout.y,\n        height: layout.height\n      };\n    } else {\n      axisTarget = {\n        y: layout.y,\n        height: layout.height\n      };\n      seriesTarget = {\n        x: layout.x,\n        width: layout.width\n      };\n    }\n\n    if (!isChangeOrder) {\n      (isUpdate ? updateProps : initProps)(el, {\n        shape: seriesTarget\n      }, seriesModel, newIndex, null);\n    }\n\n    (isUpdate ? updateProps : initProps)(el, {\n      shape: axisTarget\n    }, axisModel, newIndex);\n  }\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = itemModel ? getLineWidth(itemModel, layout) : 0;\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction isZeroOnPolar(layout) {\n  return layout.startAngle != null && layout.endAngle != null && layout.startAngle === layout.endAngle;\n}\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var style = data.getItemVisual(dataIndex, 'style');\n\n  if (!isPolar) {\n    el.setShape('r', itemModel.get(BAR_BORDER_RADIUS_QUERY) || 0);\n  }\n\n  el.useStyle(style);\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n\n  if (!isPolar) {\n    var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n    var labelStatesModels = getLabelStatesModels(itemModel);\n    setLabelStyle(el, labelStatesModels, {\n      labelFetcher: seriesModel,\n      labelDataIndex: dataIndex,\n      defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n      inheritColor: style.fill,\n      defaultOpacity: style.opacity,\n      defaultOutsidePosition: labelPositionOutside\n    });\n    var label = el.getTextContent();\n    setLabelValueAnimation(label, labelStatesModels, seriesModel.getRawValue(dataIndex), function (value) {\n      return getDefaultInterpolatedLabel(data, value);\n    });\n  }\n\n  var emphasisModel = itemModel.getModel(['emphasis']);\n  enableHoverEmphasis(el, emphasisModel.get('focus'), emphasisModel.get('blurScope'));\n  setStatesStylesFromModel(el, itemModel);\n\n  if (isZeroOnPolar(layout)) {\n    el.style.fill = 'none';\n    el.style.stroke = 'none';\n    each(el.states, function (state) {\n      if (state.style) {\n        state.style.fill = state.style.stroke = 'none';\n      }\n    });\n  }\n}\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  var width = isNaN(rawLayout.width) ? Number.MAX_VALUE : Math.abs(rawLayout.width);\n  var height = isNaN(rawLayout.height) ? Number.MAX_VALUE : Math.abs(rawLayout.height);\n  return Math.min(lineWidth, width, height);\n}\n\nvar LagePathShape = function () {\n  function LagePathShape() {}\n\n  return LagePathShape;\n}();\n\nvar LargePath = function (_super) {\n  __extends(LargePath, _super);\n\n  function LargePath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'largeBar';\n    return _this;\n  }\n\n  ;\n\n  LargePath.prototype.getDefaultShape = function () {\n    return new LagePathShape();\n  };\n\n  LargePath.prototype.buildPath = function (ctx, shape) {\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var baseDimIdx = this.__baseDimIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  };\n\n  return LargePath;\n}(Path);\n\nfunction createLarge(seriesModel, group, incremental) {\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - baseDimIdx] = data.getLayout('valueAxisStart');\n  var largeDataIndices = data.getLayout('largeDataIndices');\n  var barWidth = data.getLayout('barWidth');\n  var backgroundModel = seriesModel.getModel('backgroundStyle');\n  var drawBackground = seriesModel.get('showBackground', true);\n\n  if (drawBackground) {\n    var points = data.getLayout('largeBackgroundPoints');\n    var backgroundStartPoint = [];\n    backgroundStartPoint[1 - baseDimIdx] = data.getLayout('backgroundStart');\n    var bgEl = new LargePath({\n      shape: {\n        points: points\n      },\n      incremental: !!incremental,\n      silent: true,\n      z2: 0\n    });\n    bgEl.__startPoint = backgroundStartPoint;\n    bgEl.__baseDimIdx = baseDimIdx;\n    bgEl.__largeDataIndices = largeDataIndices;\n    bgEl.__barWidth = barWidth;\n    setLargeBackgroundStyle(bgEl, backgroundModel, data);\n    group.add(bgEl);\n  }\n\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental\n  });\n  el.__startPoint = startPoint;\n  el.__baseDimIdx = baseDimIdx;\n  el.__largeDataIndices = largeDataIndices;\n  el.__barWidth = barWidth;\n  group.add(el);\n  setLargeStyle(el, seriesModel, data);\n  getECData(el).seriesIndex = seriesModel.seriesIndex;\n\n  if (!seriesModel.get('silent')) {\n    el.on('mousedown', largePathUpdateDataIndex);\n    el.on('mousemove', largePathUpdateDataIndex);\n  }\n}\n\nvar largePathUpdateDataIndex = throttle(function (event) {\n  var largePath = this;\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\n  getECData(largePath).dataIndex = dataIndex >= 0 ? dataIndex : null;\n}, 30, false);\n\nfunction largePathFindDataIndex(largePath, x, y) {\n  var baseDimIdx = largePath.__baseDimIdx;\n  var valueDimIdx = 1 - baseDimIdx;\n  var points = largePath.shape.points;\n  var largeDataIndices = largePath.__largeDataIndices;\n  var barWidthHalf = Math.abs(largePath.__barWidth / 2);\n  var startValueVal = largePath.__startPoint[valueDimIdx];\n  _eventPos[0] = x;\n  _eventPos[1] = y;\n  var pointerBaseVal = _eventPos[baseDimIdx];\n  var pointerValueVal = _eventPos[1 - baseDimIdx];\n  var baseLowerBound = pointerBaseVal - barWidthHalf;\n  var baseUpperBound = pointerBaseVal + barWidthHalf;\n\n  for (var i = 0, len = points.length / 2; i < len; i++) {\n    var ii = i * 2;\n    var barBaseVal = points[ii + baseDimIdx];\n    var barValueVal = points[ii + valueDimIdx];\n\n    if (barBaseVal >= baseLowerBound && barBaseVal <= baseUpperBound && (startValueVal <= barValueVal ? pointerValueVal >= startValueVal && pointerValueVal <= barValueVal : pointerValueVal >= barValueVal && pointerValueVal <= startValueVal)) {\n      return largeDataIndices[i];\n    }\n  }\n\n  return -1;\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var globalStyle = data.getVisual('style');\n  el.useStyle(extend({}, globalStyle));\n  el.style.fill = null;\n  el.style.stroke = globalStyle.fill;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction setLargeBackgroundStyle(el, backgroundModel, data) {\n  var borderColor = backgroundModel.get('borderColor') || backgroundModel.get('color');\n  var itemStyle = backgroundModel.getItemStyle();\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction createBackgroundShape(isHorizontalOrRadial, layout, coord) {\n  if (isCoordinateSystemType(coord, 'cartesian2d')) {\n    var rectShape = layout;\n    var coordLayout = coord.getArea();\n    return {\n      x: isHorizontalOrRadial ? rectShape.x : coordLayout.x,\n      y: isHorizontalOrRadial ? coordLayout.y : rectShape.y,\n      width: isHorizontalOrRadial ? rectShape.width : coordLayout.width,\n      height: isHorizontalOrRadial ? coordLayout.height : rectShape.height\n    };\n  } else {\n    var coordLayout = coord.getArea();\n    var sectorShape = layout;\n    return {\n      cx: coordLayout.cx,\n      cy: coordLayout.cy,\n      r0: isHorizontalOrRadial ? coordLayout.r0 : sectorShape.r0,\n      r: isHorizontalOrRadial ? coordLayout.r : sectorShape.r,\n      startAngle: isHorizontalOrRadial ? sectorShape.startAngle : 0,\n      endAngle: isHorizontalOrRadial ? sectorShape.endAngle : Math.PI * 2\n    };\n  }\n}\n\nfunction createBackgroundEl(coord, isHorizontalOrRadial, layout) {\n  var ElementClz = coord.type === 'polar' ? Sector : Rect;\n  return new ElementClz({\n    shape: createBackgroundShape(isHorizontalOrRadial, layout, coord),\n    silent: true,\n    z2: 0\n  });\n}\n\nChartView.registerClass(BarView);\nexport default BarView;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/esm/chart/bar/BarView.js"],"names":["__extends","Path","Group","extend","map","defaults","each","Rect","Sector","updateProps","initProps","removeElementWithFadeOut","getECData","enableHoverEmphasis","setStatesStylesFromModel","setLabelStyle","getLabelStatesModels","setLabelValueAnimation","throttle","createClipPath","Sausage","ChartView","isCoordinateSystemType","getDefaultLabel","getDefaultInterpolatedLabel","BAR_BORDER_WIDTH_QUERY","BAR_BORDER_RADIUS_QUERY","_eventPos","mathMax","Math","max","mathMin","min","getClipArea","coord","data","coordSysClipArea","getArea","baseAxis","getBaseAxis","type","onBand","expandWidth","getLayout","isHorizontal","x","width","y","height","BarView","_super","_this","call","_isFirstFrame","prototype","render","seriesModel","ecModel","api","payload","_model","removeOnRenderedListener","_updateDrawMode","coordinateSystemType","get","_isLargeDraw","_renderLarge","_renderNormal","process","env","NODE_ENV","console","warn","incrementalPrepareRender","_clear","_updateLargeClip","incrementalRender","params","_incrementalRenderLarge","isLargeDraw","pipelineContext","large","group","getData","oldData","_data","coordinateSystem","isHorizontalOrRadial","dim","animationModel","isAnimationEnabled","axis2DModel","model","realtimeSort","count","_initSort","_onRendered","orderMap","idx","el","getItemGraphicEl","shape","_updateSort","getZr","on","needsClip","removeClipPath","roundCap","drawBackground","backgroundModel","getModel","barBorderRadius","bgEls","oldBgEls","_backgroundEls","isInitSort","isChangeOrder","createBackground","dataIndex","bgLayout","bgEl","createBackgroundEl","useStyle","getItemStyle","setShape","diff","add","itemModel","getItemModel","layout","hasValue","isClipped","clip","elementCreator","updateStyle","attr","updateRealtimeAnimation","setItemGraphicEl","ignore","update","newIndex","oldIndex","length","createBackgroundShape","remove","execute","bgGroup","_backgroundGroup","removeAll","i","createLarge","_removeBackground","clipPath","setClipPath","_dataSort","idxMap","info","push","mappedValue","ordinalNumber","beforeSortIndex","sort","a","b","item","_isDataOrderChanged","oldOrder","oldCount","lastValue","Number","MAX_VALUE","value","scale","getCategorySortInfo","isOrderChanged","newOrder","extent","getExtent","action","componentType","axisId","index","sortInfo","dispatchAction","parseFloat","dispose","off","eachItemGraphicEl","cartesian2d","coordSysBoundingRect","signWidth","signHeight","x2","y2","clipped","polar","signR","r0","r","tmp","axisModel","isUpdate","rect","z2","__dataIndex","name","rectShape","animateProperty","isRadial","clockwise","startAngle","endAngle","ShapeClass","sector","sectorShape","animateTarget","seriesTarget","axisTarget","getItemLayout","fixedLineWidth","getLineWidth","signX","signY","cx","cy","isZeroOnPolar","isPolar","style","getItemVisual","cursorStyle","getShallow","labelPositionOutside","labelStatesModels","labelFetcher","labelDataIndex","defaultText","inheritColor","fill","defaultOpacity","opacity","defaultOutsidePosition","label","getTextContent","getRawValue","emphasisModel","stroke","states","state","rawLayout","lineWidth","isNaN","abs","LagePathShape","LargePath","opts","getDefaultShape","buildPath","ctx","points","startPoint","__startPoint","baseDimIdx","__baseDimIdx","moveTo","lineTo","incremental","largeDataIndices","barWidth","backgroundStartPoint","silent","__largeDataIndices","__barWidth","setLargeBackgroundStyle","setLargeStyle","seriesIndex","largePathUpdateDataIndex","event","largePath","largePathFindDataIndex","offsetX","offsetY","valueDimIdx","barWidthHalf","startValueVal","pointerBaseVal","pointerValueVal","baseLowerBound","baseUpperBound","len","ii","barBaseVal","barValueVal","globalStyle","getVisual","borderColor","itemStyle","coordLayout","PI","ElementClz","registerClass"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\nimport Path from 'zrender/esm/graphic/Path';\nimport Group from 'zrender/esm/graphic/Group';\nimport { extend, map, defaults, each } from 'zrender/esm/core/util';\nimport { Rect, Sector, updateProps, initProps, removeElementWithFadeOut } from '../../util/graphic';\nimport { getECData } from '../../util/innerStore';\nimport { enableHoverEmphasis, setStatesStylesFromModel } from '../../util/states';\nimport { setLabelStyle, getLabelStatesModels, setLabelValueAnimation } from '../../label/labelStyle';\nimport { throttle } from '../../util/throttle';\nimport { createClipPath } from '../helper/createClipPathFromCoordSys';\nimport Sausage from '../../util/shape/sausage';\nimport ChartView from '../../view/Chart';\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem';\nimport { getDefaultLabel, getDefaultInterpolatedLabel } from '../helper/labelHelper';\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'borderWidth'];\nvar BAR_BORDER_RADIUS_QUERY = ['itemStyle', 'borderRadius'];\nvar _eventPos = [0, 0];\nvar mathMax = Math.max;\nvar mathMin = Math.min;\n\nfunction getClipArea(coord, data) {\n  var coordSysClipArea = coord.getArea && coord.getArea();\n\n  if (isCoordinateSystemType(coord, 'cartesian2d')) {\n    var baseAxis = coord.getBaseAxis();\n\n    if (baseAxis.type !== 'category' || !baseAxis.onBand) {\n      var expandWidth = data.getLayout('bandWidth');\n\n      if (baseAxis.isHorizontal()) {\n        coordSysClipArea.x -= expandWidth;\n        coordSysClipArea.width += expandWidth * 2;\n      } else {\n        coordSysClipArea.y -= expandWidth;\n        coordSysClipArea.height += expandWidth * 2;\n      }\n    }\n  }\n\n  return coordSysClipArea;\n}\n\nvar BarView = function (_super) {\n  __extends(BarView, _super);\n\n  function BarView() {\n    var _this = _super.call(this) || this;\n\n    _this.type = BarView.type;\n    _this._isFirstFrame = true;\n    return _this;\n  }\n\n  BarView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    this._model = seriesModel;\n    this.removeOnRenderedListener(api);\n\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api, payload);\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.warn('Only cartesian2d and polar supported for bar.');\n    }\n  };\n\n  BarView.prototype.incrementalPrepareRender = function (seriesModel) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n\n    this._updateLargeClip(seriesModel);\n  };\n\n  BarView.prototype.incrementalRender = function (params, seriesModel) {\n    this._incrementalRenderLarge(params, seriesModel);\n  };\n\n  BarView.prototype._updateDrawMode = function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw !== this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  };\n\n  BarView.prototype._renderNormal = function (seriesModel, ecModel, api, payload) {\n    var _this = this;\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    var axis2DModel = baseAxis.model;\n    var realtimeSort = seriesModel.get('realtimeSort');\n\n    if (realtimeSort && data.count()) {\n      if (this._isFirstFrame) {\n        this._initSort(data, isHorizontalOrRadial, baseAxis, api);\n\n        this._isFirstFrame = false;\n        return;\n      } else {\n        this._onRendered = function () {\n          var orderMap = function (idx) {\n            var el = data.getItemGraphicEl(idx);\n\n            if (el) {\n              var shape = el.shape;\n              return (isHorizontalOrRadial ? shape.y + shape.height : shape.x + shape.width) || 0;\n            } else {\n              return 0;\n            }\n          };\n\n          _this._updateSort(data, orderMap, baseAxis, api);\n        };\n\n        api.getZr().on('rendered', this._onRendered);\n      }\n    }\n\n    var needsClip = seriesModel.get('clip', true) || realtimeSort;\n    var coordSysClipArea = getClipArea(coord, data);\n    group.removeClipPath();\n    var roundCap = seriesModel.get('roundCap', true);\n    var drawBackground = seriesModel.get('showBackground', true);\n    var backgroundModel = seriesModel.getModel('backgroundStyle');\n    var barBorderRadius = backgroundModel.get('borderRadius') || 0;\n    var bgEls = [];\n    var oldBgEls = this._backgroundEls;\n    var isInitSort = payload && payload.isInitSort;\n    var isChangeOrder = payload && payload.type === 'changeAxisOrder';\n\n    function createBackground(dataIndex) {\n      var bgLayout = getLayout[coord.type](data, dataIndex);\n      var bgEl = createBackgroundEl(coord, isHorizontalOrRadial, bgLayout);\n      bgEl.useStyle(backgroundModel.getItemStyle());\n\n      if (coord.type === 'cartesian2d') {\n        bgEl.setShape('r', barBorderRadius);\n      }\n\n      bgEls[dataIndex] = bgEl;\n      return bgEl;\n    }\n\n    ;\n    data.diff(oldData).add(function (dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n\n      if (drawBackground) {\n        createBackground(dataIndex);\n      }\n\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var isClipped = false;\n\n      if (needsClip) {\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n      }\n\n      var el = elementCreator[coord.type](seriesModel, data, dataIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, false, roundCap);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSort) {\n        updateRealtimeAnimation(seriesModel, axis2DModel, animationModel, el, layout, dataIndex, isHorizontalOrRadial, false, false);\n      } else {\n        initProps(el, {\n          shape: layout\n        }, seriesModel, dataIndex);\n      }\n\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      el.ignore = isClipped;\n    }).update(function (newIndex, oldIndex) {\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (drawBackground) {\n        var bgEl = void 0;\n\n        if (oldBgEls.length === 0) {\n          bgEl = createBackground(oldIndex);\n        } else {\n          bgEl = oldBgEls[oldIndex];\n          bgEl.useStyle(backgroundModel.getItemStyle());\n\n          if (coord.type === 'cartesian2d') {\n            bgEl.setShape('r', barBorderRadius);\n          }\n\n          bgEls[newIndex] = bgEl;\n        }\n\n        var bgLayout = getLayout[coord.type](data, newIndex);\n        var shape = createBackgroundShape(isHorizontalOrRadial, bgLayout, coord);\n        updateProps(bgEl, {\n          shape: shape\n        }, animationModel, newIndex);\n      }\n\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        el = null;\n        return;\n      }\n\n      var isClipped = false;\n\n      if (needsClip) {\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n        }\n      }\n\n      if (!el) {\n        el = elementCreator[coord.type](seriesModel, data, newIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, !!el, roundCap);\n      }\n\n      if (!isChangeOrder) {\n        updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n      }\n\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSort) {\n        updateRealtimeAnimation(seriesModel, axis2DModel, animationModel, el, layout, newIndex, isHorizontalOrRadial, true, isChangeOrder);\n      } else {\n        updateProps(el, {\n          shape: layout\n        }, seriesModel, newIndex, null);\n      }\n\n      data.setItemGraphicEl(newIndex, el);\n      el.ignore = isClipped;\n      group.add(el);\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n      el && removeElementWithFadeOut(el, seriesModel, dataIndex);\n    }).execute();\n    var bgGroup = this._backgroundGroup || (this._backgroundGroup = new Group());\n    bgGroup.removeAll();\n\n    for (var i = 0; i < bgEls.length; ++i) {\n      bgGroup.add(bgEls[i]);\n    }\n\n    group.add(bgGroup);\n    this._backgroundEls = bgEls;\n    this._data = data;\n  };\n\n  BarView.prototype._renderLarge = function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n\n    this._updateLargeClip(seriesModel);\n  };\n\n  BarView.prototype._incrementalRenderLarge = function (params, seriesModel) {\n    this._removeBackground();\n\n    createLarge(seriesModel, this.group, true);\n  };\n\n  BarView.prototype._updateLargeClip = function (seriesModel) {\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\n\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n  };\n\n  BarView.prototype._dataSort = function (data, idxMap) {\n    var info = [];\n    data.each(function (idx) {\n      info.push({\n        mappedValue: idxMap(idx),\n        ordinalNumber: idx,\n        beforeSortIndex: null\n      });\n    });\n    info.sort(function (a, b) {\n      return b.mappedValue - a.mappedValue;\n    });\n\n    for (var i = 0; i < info.length; ++i) {\n      info[info[i].ordinalNumber].beforeSortIndex = i;\n    }\n\n    return map(info, function (item) {\n      return {\n        ordinalNumber: item.ordinalNumber,\n        beforeSortIndex: item.beforeSortIndex\n      };\n    });\n  };\n\n  BarView.prototype._isDataOrderChanged = function (data, orderMap, oldOrder) {\n    var oldCount = oldOrder ? oldOrder.length : 0;\n\n    if (oldCount !== data.count()) {\n      return true;\n    }\n\n    var lastValue = Number.MAX_VALUE;\n\n    for (var i = 0; i < oldOrder.length; ++i) {\n      var value = orderMap(oldOrder[i].ordinalNumber);\n\n      if (value > lastValue) {\n        return true;\n      }\n\n      lastValue = value;\n    }\n\n    return false;\n  };\n\n  BarView.prototype._updateSort = function (data, orderMap, baseAxis, api) {\n    var oldOrder = baseAxis.scale.getCategorySortInfo();\n\n    var isOrderChanged = this._isDataOrderChanged(data, orderMap, oldOrder);\n\n    if (isOrderChanged) {\n      var newOrder = this._dataSort(data, orderMap);\n\n      var extent = baseAxis.scale.getExtent();\n\n      for (var i = extent[0]; i < extent[1]; ++i) {\n        if (!oldOrder[i] || oldOrder[i].ordinalNumber !== newOrder[i].ordinalNumber) {\n          this.removeOnRenderedListener(api);\n          var action = {\n            type: 'changeAxisOrder',\n            componentType: baseAxis.dim + 'Axis',\n            axisId: baseAxis.index,\n            sortInfo: newOrder\n          };\n          api.dispatchAction(action);\n          break;\n        }\n      }\n    }\n  };\n\n  BarView.prototype._initSort = function (data, isHorizontal, baseAxis, api) {\n    var action = {\n      type: 'changeAxisOrder',\n      componentType: baseAxis.dim + 'Axis',\n      isInitSort: true,\n      axisId: baseAxis.index,\n      sortInfo: this._dataSort(data, function (idx) {\n        return parseFloat(data.get(isHorizontal ? 'y' : 'x', idx)) || 0;\n      })\n    };\n    api.dispatchAction(action);\n  };\n\n  BarView.prototype.remove = function (ecModel, api) {\n    this._clear(this._model);\n\n    this.removeOnRenderedListener(api);\n  };\n\n  BarView.prototype.dispose = function (ecModel, api) {\n    this.removeOnRenderedListener(api);\n  };\n\n  BarView.prototype.removeOnRenderedListener = function (api) {\n    if (this._onRendered) {\n      api.getZr().off('rendered', this._onRendered);\n      this._onRendered = null;\n    }\n  };\n\n  BarView.prototype._clear = function (model) {\n    var group = this.group;\n    var data = this._data;\n\n    if (model && model.isAnimationEnabled() && data && !this._isLargeDraw) {\n      this._removeBackground();\n\n      this._backgroundEls = [];\n      data.eachItemGraphicEl(function (el) {\n        removeElementWithFadeOut(el, model, getECData(el).dataIndex);\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n    this._isFirstFrame = true;\n  };\n\n  BarView.prototype._removeBackground = function () {\n    this.group.remove(this._backgroundGroup);\n    this._backgroundGroup = null;\n  };\n\n  BarView.type = 'bar';\n  return BarView;\n}(ChartView);\n\nvar clip = {\n  cartesian2d: function (coordSysBoundingRect, layout) {\n    var signWidth = layout.width < 0 ? -1 : 1;\n    var signHeight = layout.height < 0 ? -1 : 1;\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    var x = mathMax(layout.x, coordSysBoundingRect.x);\n    var x2 = mathMin(layout.x + layout.width, coordSysBoundingRect.x + coordSysBoundingRect.width);\n    var y = mathMax(layout.y, coordSysBoundingRect.y);\n    var y2 = mathMin(layout.y + layout.height, coordSysBoundingRect.y + coordSysBoundingRect.height);\n    layout.x = x;\n    layout.y = y;\n    layout.width = x2 - x;\n    layout.height = y2 - y;\n    var clipped = layout.width < 0 || layout.height < 0;\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    return clipped;\n  },\n  polar: function (coordSysClipArea, layout) {\n    var signR = layout.r0 <= layout.r ? 1 : -1;\n\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n\n    var r = mathMin(layout.r, coordSysClipArea.r);\n    var r0 = mathMax(layout.r0, coordSysClipArea.r0);\n    layout.r = r;\n    layout.r0 = r0;\n    var clipped = r - r0 < 0;\n\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n\n    return clipped;\n  }\n};\nvar elementCreator = {\n  cartesian2d: function (seriesModel, data, newIndex, layout, isHorizontal, animationModel, axisModel, isUpdate, roundCap) {\n    var rect = new Rect({\n      shape: extend({}, layout),\n      z2: 1\n    });\n    rect.__dataIndex = newIndex;\n    rect.name = 'item';\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      rectShape[animateProperty] = 0;\n    }\n\n    return rect;\n  },\n  polar: function (seriesModel, data, newIndex, layout, isRadial, animationModel, axisModel, isUpdate, roundCap) {\n    var clockwise = layout.startAngle < layout.endAngle;\n    var ShapeClass = !isRadial && roundCap ? Sausage : Sector;\n    var sector = new ShapeClass({\n      shape: defaults({\n        clockwise: clockwise\n      }, layout),\n      z2: 1\n    });\n    sector.name = 'item';\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      (isUpdate ? updateProps : initProps)(sector, {\n        shape: animateTarget\n      }, animationModel);\n    }\n\n    return sector;\n  }\n};\n\nfunction updateRealtimeAnimation(seriesModel, axisModel, animationModel, el, layout, newIndex, isHorizontal, isUpdate, isChangeOrder) {\n  if (animationModel || axisModel) {\n    var seriesTarget = void 0;\n    var axisTarget = void 0;\n\n    if (isHorizontal) {\n      axisTarget = {\n        x: layout.x,\n        width: layout.width\n      };\n      seriesTarget = {\n        y: layout.y,\n        height: layout.height\n      };\n    } else {\n      axisTarget = {\n        y: layout.y,\n        height: layout.height\n      };\n      seriesTarget = {\n        x: layout.x,\n        width: layout.width\n      };\n    }\n\n    if (!isChangeOrder) {\n      (isUpdate ? updateProps : initProps)(el, {\n        shape: seriesTarget\n      }, seriesModel, newIndex, null);\n    }\n\n    (isUpdate ? updateProps : initProps)(el, {\n      shape: axisTarget\n    }, axisModel, newIndex);\n  }\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = itemModel ? getLineWidth(itemModel, layout) : 0;\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction isZeroOnPolar(layout) {\n  return layout.startAngle != null && layout.endAngle != null && layout.startAngle === layout.endAngle;\n}\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var style = data.getItemVisual(dataIndex, 'style');\n\n  if (!isPolar) {\n    el.setShape('r', itemModel.get(BAR_BORDER_RADIUS_QUERY) || 0);\n  }\n\n  el.useStyle(style);\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n\n  if (!isPolar) {\n    var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n    var labelStatesModels = getLabelStatesModels(itemModel);\n    setLabelStyle(el, labelStatesModels, {\n      labelFetcher: seriesModel,\n      labelDataIndex: dataIndex,\n      defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n      inheritColor: style.fill,\n      defaultOpacity: style.opacity,\n      defaultOutsidePosition: labelPositionOutside\n    });\n    var label = el.getTextContent();\n    setLabelValueAnimation(label, labelStatesModels, seriesModel.getRawValue(dataIndex), function (value) {\n      return getDefaultInterpolatedLabel(data, value);\n    });\n  }\n\n  var emphasisModel = itemModel.getModel(['emphasis']);\n  enableHoverEmphasis(el, emphasisModel.get('focus'), emphasisModel.get('blurScope'));\n  setStatesStylesFromModel(el, itemModel);\n\n  if (isZeroOnPolar(layout)) {\n    el.style.fill = 'none';\n    el.style.stroke = 'none';\n    each(el.states, function (state) {\n      if (state.style) {\n        state.style.fill = state.style.stroke = 'none';\n      }\n    });\n  }\n}\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  var width = isNaN(rawLayout.width) ? Number.MAX_VALUE : Math.abs(rawLayout.width);\n  var height = isNaN(rawLayout.height) ? Number.MAX_VALUE : Math.abs(rawLayout.height);\n  return Math.min(lineWidth, width, height);\n}\n\nvar LagePathShape = function () {\n  function LagePathShape() {}\n\n  return LagePathShape;\n}();\n\nvar LargePath = function (_super) {\n  __extends(LargePath, _super);\n\n  function LargePath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'largeBar';\n    return _this;\n  }\n\n  ;\n\n  LargePath.prototype.getDefaultShape = function () {\n    return new LagePathShape();\n  };\n\n  LargePath.prototype.buildPath = function (ctx, shape) {\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var baseDimIdx = this.__baseDimIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  };\n\n  return LargePath;\n}(Path);\n\nfunction createLarge(seriesModel, group, incremental) {\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - baseDimIdx] = data.getLayout('valueAxisStart');\n  var largeDataIndices = data.getLayout('largeDataIndices');\n  var barWidth = data.getLayout('barWidth');\n  var backgroundModel = seriesModel.getModel('backgroundStyle');\n  var drawBackground = seriesModel.get('showBackground', true);\n\n  if (drawBackground) {\n    var points = data.getLayout('largeBackgroundPoints');\n    var backgroundStartPoint = [];\n    backgroundStartPoint[1 - baseDimIdx] = data.getLayout('backgroundStart');\n    var bgEl = new LargePath({\n      shape: {\n        points: points\n      },\n      incremental: !!incremental,\n      silent: true,\n      z2: 0\n    });\n    bgEl.__startPoint = backgroundStartPoint;\n    bgEl.__baseDimIdx = baseDimIdx;\n    bgEl.__largeDataIndices = largeDataIndices;\n    bgEl.__barWidth = barWidth;\n    setLargeBackgroundStyle(bgEl, backgroundModel, data);\n    group.add(bgEl);\n  }\n\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental\n  });\n  el.__startPoint = startPoint;\n  el.__baseDimIdx = baseDimIdx;\n  el.__largeDataIndices = largeDataIndices;\n  el.__barWidth = barWidth;\n  group.add(el);\n  setLargeStyle(el, seriesModel, data);\n  getECData(el).seriesIndex = seriesModel.seriesIndex;\n\n  if (!seriesModel.get('silent')) {\n    el.on('mousedown', largePathUpdateDataIndex);\n    el.on('mousemove', largePathUpdateDataIndex);\n  }\n}\n\nvar largePathUpdateDataIndex = throttle(function (event) {\n  var largePath = this;\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\n  getECData(largePath).dataIndex = dataIndex >= 0 ? dataIndex : null;\n}, 30, false);\n\nfunction largePathFindDataIndex(largePath, x, y) {\n  var baseDimIdx = largePath.__baseDimIdx;\n  var valueDimIdx = 1 - baseDimIdx;\n  var points = largePath.shape.points;\n  var largeDataIndices = largePath.__largeDataIndices;\n  var barWidthHalf = Math.abs(largePath.__barWidth / 2);\n  var startValueVal = largePath.__startPoint[valueDimIdx];\n  _eventPos[0] = x;\n  _eventPos[1] = y;\n  var pointerBaseVal = _eventPos[baseDimIdx];\n  var pointerValueVal = _eventPos[1 - baseDimIdx];\n  var baseLowerBound = pointerBaseVal - barWidthHalf;\n  var baseUpperBound = pointerBaseVal + barWidthHalf;\n\n  for (var i = 0, len = points.length / 2; i < len; i++) {\n    var ii = i * 2;\n    var barBaseVal = points[ii + baseDimIdx];\n    var barValueVal = points[ii + valueDimIdx];\n\n    if (barBaseVal >= baseLowerBound && barBaseVal <= baseUpperBound && (startValueVal <= barValueVal ? pointerValueVal >= startValueVal && pointerValueVal <= barValueVal : pointerValueVal >= barValueVal && pointerValueVal <= startValueVal)) {\n      return largeDataIndices[i];\n    }\n  }\n\n  return -1;\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var globalStyle = data.getVisual('style');\n  el.useStyle(extend({}, globalStyle));\n  el.style.fill = null;\n  el.style.stroke = globalStyle.fill;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction setLargeBackgroundStyle(el, backgroundModel, data) {\n  var borderColor = backgroundModel.get('borderColor') || backgroundModel.get('color');\n  var itemStyle = backgroundModel.getItemStyle();\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction createBackgroundShape(isHorizontalOrRadial, layout, coord) {\n  if (isCoordinateSystemType(coord, 'cartesian2d')) {\n    var rectShape = layout;\n    var coordLayout = coord.getArea();\n    return {\n      x: isHorizontalOrRadial ? rectShape.x : coordLayout.x,\n      y: isHorizontalOrRadial ? coordLayout.y : rectShape.y,\n      width: isHorizontalOrRadial ? rectShape.width : coordLayout.width,\n      height: isHorizontalOrRadial ? coordLayout.height : rectShape.height\n    };\n  } else {\n    var coordLayout = coord.getArea();\n    var sectorShape = layout;\n    return {\n      cx: coordLayout.cx,\n      cy: coordLayout.cy,\n      r0: isHorizontalOrRadial ? coordLayout.r0 : sectorShape.r0,\n      r: isHorizontalOrRadial ? coordLayout.r : sectorShape.r,\n      startAngle: isHorizontalOrRadial ? sectorShape.startAngle : 0,\n      endAngle: isHorizontalOrRadial ? sectorShape.endAngle : Math.PI * 2\n    };\n  }\n}\n\nfunction createBackgroundEl(coord, isHorizontalOrRadial, layout) {\n  var ElementClz = coord.type === 'polar' ? Sector : Rect;\n  return new ElementClz({\n    shape: createBackgroundShape(isHorizontalOrRadial, layout, coord),\n    silent: true,\n    z2: 0\n  });\n}\n\nChartView.registerClass(BarView);\nexport default BarView;"]},"metadata":{},"sourceType":"module"}