{"ast":null,"code":"/**\n * @fileOverview fruchterman layout\n * @author shiwu.wyy@antfin.com\n */\nimport { __extends } from \"tslib\";\nimport { BaseLayout } from './layout';\nimport { isNumber } from '@antv/util';\nvar SPEED_DIVISOR = 800;\n/**\n * fruchterman 布局\n */\n\nvar FruchtermanLayout =\n/** @class */\nfunction (_super) {\n  __extends(FruchtermanLayout, _super);\n\n  function FruchtermanLayout() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 布局中心 */\n\n\n    _this.center = [0, 0];\n    /** 停止迭代的最大迭代数 */\n\n    _this.maxIteration = 1000;\n    /** 重力大小，影响图的紧凑程度 */\n\n    _this.gravity = 10;\n    /** 速度 */\n\n    _this.speed = 1;\n    /** 是否产生聚类力 */\n\n    _this.clustering = false;\n    /** 聚类力大小 */\n\n    _this.clusterGravity = 10;\n    _this.nodes = [];\n    _this.edges = [];\n    _this.width = 300;\n    _this.height = 300;\n    _this.nodeMap = {};\n    _this.nodeIdxMap = {};\n    return _this;\n  }\n\n  FruchtermanLayout.prototype.getDefaultCfg = function () {\n    return {\n      maxIteration: 1000,\n      center: [0, 0],\n      gravity: 10,\n      speed: 1,\n      clustering: false,\n      clusterGravity: 10\n    };\n  };\n  /**\n   * 执行布局\n   */\n\n\n  FruchtermanLayout.prototype.execute = function () {\n    var _this = this;\n\n    var self = this;\n    var nodes = self.nodes;\n    var center = self.center;\n\n    if (!nodes || nodes.length === 0) {\n      return;\n    }\n\n    if (nodes.length === 1) {\n      nodes[0].x = center[0];\n      nodes[0].y = center[1];\n      return;\n    }\n\n    var nodeMap = {};\n    var nodeIdxMap = {};\n    nodes.forEach(function (node, i) {\n      if (!isNumber(node.x)) node.x = Math.random() * _this.width;\n      if (!isNumber(node.y)) node.y = Math.random() * _this.height;\n      nodeMap[node.id] = node;\n      nodeIdxMap[node.id] = i;\n    });\n    self.nodeMap = nodeMap;\n    self.nodeIdxMap = nodeIdxMap; // layout\n\n    self.run();\n  };\n\n  FruchtermanLayout.prototype.run = function () {\n    var self = this;\n    var nodes = self.nodes;\n    var edges = self.edges;\n    var maxIteration = self.maxIteration;\n\n    if (!self.width && typeof window !== 'undefined') {\n      self.width = window.innerWidth;\n    }\n\n    if (!self.height && typeof window !== 'undefined') {\n      self.height = window.innerHeight;\n    }\n\n    var center = self.center;\n    var maxDisplace = self.width / 10;\n    var k = Math.sqrt(self.width * self.height / (nodes.length + 1));\n    var gravity = self.gravity;\n    var speed = self.speed;\n    var clustering = self.clustering;\n    var clusterMap = {};\n\n    if (clustering) {\n      nodes.forEach(function (n) {\n        if (clusterMap[n.cluster] === undefined) {\n          var cluster = {\n            name: n.cluster,\n            cx: 0,\n            cy: 0,\n            count: 0\n          };\n          clusterMap[n.cluster] = cluster;\n        }\n\n        var c = clusterMap[n.cluster];\n\n        if (isNumber(n.x)) {\n          c.cx += n.x;\n        }\n\n        if (isNumber(n.y)) {\n          c.cy += n.y;\n        }\n\n        c.count++;\n      });\n\n      for (var key in clusterMap) {\n        clusterMap[key].cx /= clusterMap[key].count;\n        clusterMap[key].cy /= clusterMap[key].count;\n      }\n    }\n\n    var _loop_1 = function _loop_1(i) {\n      var displacements = [];\n      nodes.forEach(function (_, j) {\n        displacements[j] = {\n          x: 0,\n          y: 0\n        };\n      });\n      self.applyCalculate(nodes, edges, displacements, k); // gravity for clusters\n\n      if (clustering) {\n        var clusterGravity_1 = self.clusterGravity || gravity;\n        nodes.forEach(function (n, j) {\n          if (!isNumber(n.x) || !isNumber(n.y)) return;\n          var c = clusterMap[n.cluster];\n          var distLength = Math.sqrt((n.x - c.cx) * (n.x - c.cx) + (n.y - c.cy) * (n.y - c.cy));\n          var gravityForce = k * clusterGravity_1;\n          displacements[j].x -= gravityForce * (n.x - c.cx) / distLength;\n          displacements[j].y -= gravityForce * (n.y - c.cy) / distLength;\n        });\n\n        for (var key in clusterMap) {\n          clusterMap[key].cx = 0;\n          clusterMap[key].cy = 0;\n          clusterMap[key].count = 0;\n        }\n\n        nodes.forEach(function (n) {\n          var c = clusterMap[n.cluster];\n\n          if (isNumber(n.x)) {\n            c.cx += n.x;\n          }\n\n          if (isNumber(n.y)) {\n            c.cy += n.y;\n          }\n\n          c.count++;\n        });\n\n        for (var key in clusterMap) {\n          clusterMap[key].cx /= clusterMap[key].count;\n          clusterMap[key].cy /= clusterMap[key].count;\n        }\n      } // gravity\n\n\n      nodes.forEach(function (n, j) {\n        if (!isNumber(n.x) || !isNumber(n.y)) return;\n        var gravityForce = 0.01 * k * gravity;\n        displacements[j].x -= gravityForce * (n.x - center[0]);\n        displacements[j].y -= gravityForce * (n.y - center[1]);\n      }); // move\n\n      nodes.forEach(function (n, j) {\n        if (!isNumber(n.x) || !isNumber(n.y)) return;\n        var distLength = Math.sqrt(displacements[j].x * displacements[j].x + displacements[j].y * displacements[j].y);\n\n        if (distLength > 0) {\n          // && !n.isFixed()\n          var limitedDist = Math.min(maxDisplace * (speed / SPEED_DIVISOR), distLength);\n          n.x += displacements[j].x / distLength * limitedDist;\n          n.y += displacements[j].y / distLength * limitedDist;\n        }\n      });\n    };\n\n    for (var i = 0; i < maxIteration; i++) {\n      _loop_1(i);\n    }\n  };\n\n  FruchtermanLayout.prototype.applyCalculate = function (nodes, edges, displacements, k) {\n    var self = this;\n    self.calRepulsive(nodes, displacements, k);\n    self.calAttractive(edges, displacements, k);\n  };\n\n  FruchtermanLayout.prototype.calRepulsive = function (nodes, displacements, k) {\n    nodes.forEach(function (v, i) {\n      displacements[i] = {\n        x: 0,\n        y: 0\n      };\n      nodes.forEach(function (u, j) {\n        if (i === j) {\n          return;\n        }\n\n        if (!isNumber(v.x) || !isNumber(u.x) || !isNumber(v.y) || !isNumber(u.y)) return;\n        var vecX = v.x - u.x;\n        var vecY = v.y - u.y;\n        var vecLengthSqr = vecX * vecX + vecY * vecY;\n\n        if (vecLengthSqr === 0) {\n          vecLengthSqr = 1;\n          var sign = i > j ? 1 : -1;\n          vecX = 0.01 * sign;\n          vecY = 0.01 * sign;\n        }\n\n        var common = k * k / vecLengthSqr;\n        displacements[i].x += vecX * common;\n        displacements[i].y += vecY * common;\n      });\n    });\n  };\n\n  FruchtermanLayout.prototype.calAttractive = function (edges, displacements, k) {\n    var _this = this;\n\n    edges.forEach(function (e) {\n      if (!e.source || !e.target) return;\n      var uIndex = _this.nodeIdxMap[e.source];\n      var vIndex = _this.nodeIdxMap[e.target];\n\n      if (uIndex === vIndex) {\n        return;\n      }\n\n      var u = _this.nodeMap[e.source];\n      var v = _this.nodeMap[e.target];\n      if (!isNumber(v.x) || !isNumber(u.x) || !isNumber(v.y) || !isNumber(u.y)) return;\n      var vecX = v.x - u.x;\n      var vecY = v.y - u.y;\n      var vecLength = Math.sqrt(vecX * vecX + vecY * vecY);\n      var common = vecLength * vecLength / k;\n      displacements[vIndex].x -= vecX / vecLength * common;\n      displacements[vIndex].y -= vecY / vecLength * common;\n      displacements[uIndex].x += vecX / vecLength * common;\n      displacements[uIndex].y += vecY / vecLength * common;\n    });\n  };\n\n  return FruchtermanLayout;\n}(BaseLayout);\n\nexport default FruchtermanLayout;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@antv/g6/es/layout/fruchterman.js"],"names":["__extends","BaseLayout","isNumber","SPEED_DIVISOR","FruchtermanLayout","_super","_this","apply","arguments","center","maxIteration","gravity","speed","clustering","clusterGravity","nodes","edges","width","height","nodeMap","nodeIdxMap","prototype","getDefaultCfg","execute","self","length","x","y","forEach","node","i","Math","random","id","run","window","innerWidth","innerHeight","maxDisplace","k","sqrt","clusterMap","n","cluster","undefined","name","cx","cy","count","c","key","_loop_1","displacements","_","j","applyCalculate","clusterGravity_1","distLength","gravityForce","limitedDist","min","calRepulsive","calAttractive","v","u","vecX","vecY","vecLengthSqr","sign","common","e","source","target","uIndex","vIndex","vecLength"],"mappings":"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","sourcesContent":["/**\n * @fileOverview fruchterman layout\n * @author shiwu.wyy@antfin.com\n */\nimport { __extends } from \"tslib\";\nimport { BaseLayout } from './layout';\nimport { isNumber } from '@antv/util';\nvar SPEED_DIVISOR = 800;\n/**\n * fruchterman 布局\n */\n\nvar FruchtermanLayout =\n/** @class */\nfunction (_super) {\n  __extends(FruchtermanLayout, _super);\n\n  function FruchtermanLayout() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 布局中心 */\n\n\n    _this.center = [0, 0];\n    /** 停止迭代的最大迭代数 */\n\n    _this.maxIteration = 1000;\n    /** 重力大小，影响图的紧凑程度 */\n\n    _this.gravity = 10;\n    /** 速度 */\n\n    _this.speed = 1;\n    /** 是否产生聚类力 */\n\n    _this.clustering = false;\n    /** 聚类力大小 */\n\n    _this.clusterGravity = 10;\n    _this.nodes = [];\n    _this.edges = [];\n    _this.width = 300;\n    _this.height = 300;\n    _this.nodeMap = {};\n    _this.nodeIdxMap = {};\n    return _this;\n  }\n\n  FruchtermanLayout.prototype.getDefaultCfg = function () {\n    return {\n      maxIteration: 1000,\n      center: [0, 0],\n      gravity: 10,\n      speed: 1,\n      clustering: false,\n      clusterGravity: 10\n    };\n  };\n  /**\n   * 执行布局\n   */\n\n\n  FruchtermanLayout.prototype.execute = function () {\n    var _this = this;\n\n    var self = this;\n    var nodes = self.nodes;\n    var center = self.center;\n\n    if (!nodes || nodes.length === 0) {\n      return;\n    }\n\n    if (nodes.length === 1) {\n      nodes[0].x = center[0];\n      nodes[0].y = center[1];\n      return;\n    }\n\n    var nodeMap = {};\n    var nodeIdxMap = {};\n    nodes.forEach(function (node, i) {\n      if (!isNumber(node.x)) node.x = Math.random() * _this.width;\n      if (!isNumber(node.y)) node.y = Math.random() * _this.height;\n      nodeMap[node.id] = node;\n      nodeIdxMap[node.id] = i;\n    });\n    self.nodeMap = nodeMap;\n    self.nodeIdxMap = nodeIdxMap; // layout\n\n    self.run();\n  };\n\n  FruchtermanLayout.prototype.run = function () {\n    var self = this;\n    var nodes = self.nodes;\n    var edges = self.edges;\n    var maxIteration = self.maxIteration;\n\n    if (!self.width && typeof window !== 'undefined') {\n      self.width = window.innerWidth;\n    }\n\n    if (!self.height && typeof window !== 'undefined') {\n      self.height = window.innerHeight;\n    }\n\n    var center = self.center;\n    var maxDisplace = self.width / 10;\n    var k = Math.sqrt(self.width * self.height / (nodes.length + 1));\n    var gravity = self.gravity;\n    var speed = self.speed;\n    var clustering = self.clustering;\n    var clusterMap = {};\n\n    if (clustering) {\n      nodes.forEach(function (n) {\n        if (clusterMap[n.cluster] === undefined) {\n          var cluster = {\n            name: n.cluster,\n            cx: 0,\n            cy: 0,\n            count: 0\n          };\n          clusterMap[n.cluster] = cluster;\n        }\n\n        var c = clusterMap[n.cluster];\n\n        if (isNumber(n.x)) {\n          c.cx += n.x;\n        }\n\n        if (isNumber(n.y)) {\n          c.cy += n.y;\n        }\n\n        c.count++;\n      });\n\n      for (var key in clusterMap) {\n        clusterMap[key].cx /= clusterMap[key].count;\n        clusterMap[key].cy /= clusterMap[key].count;\n      }\n    }\n\n    var _loop_1 = function _loop_1(i) {\n      var displacements = [];\n      nodes.forEach(function (_, j) {\n        displacements[j] = {\n          x: 0,\n          y: 0\n        };\n      });\n      self.applyCalculate(nodes, edges, displacements, k); // gravity for clusters\n\n      if (clustering) {\n        var clusterGravity_1 = self.clusterGravity || gravity;\n        nodes.forEach(function (n, j) {\n          if (!isNumber(n.x) || !isNumber(n.y)) return;\n          var c = clusterMap[n.cluster];\n          var distLength = Math.sqrt((n.x - c.cx) * (n.x - c.cx) + (n.y - c.cy) * (n.y - c.cy));\n          var gravityForce = k * clusterGravity_1;\n          displacements[j].x -= gravityForce * (n.x - c.cx) / distLength;\n          displacements[j].y -= gravityForce * (n.y - c.cy) / distLength;\n        });\n\n        for (var key in clusterMap) {\n          clusterMap[key].cx = 0;\n          clusterMap[key].cy = 0;\n          clusterMap[key].count = 0;\n        }\n\n        nodes.forEach(function (n) {\n          var c = clusterMap[n.cluster];\n\n          if (isNumber(n.x)) {\n            c.cx += n.x;\n          }\n\n          if (isNumber(n.y)) {\n            c.cy += n.y;\n          }\n\n          c.count++;\n        });\n\n        for (var key in clusterMap) {\n          clusterMap[key].cx /= clusterMap[key].count;\n          clusterMap[key].cy /= clusterMap[key].count;\n        }\n      } // gravity\n\n\n      nodes.forEach(function (n, j) {\n        if (!isNumber(n.x) || !isNumber(n.y)) return;\n        var gravityForce = 0.01 * k * gravity;\n        displacements[j].x -= gravityForce * (n.x - center[0]);\n        displacements[j].y -= gravityForce * (n.y - center[1]);\n      }); // move\n\n      nodes.forEach(function (n, j) {\n        if (!isNumber(n.x) || !isNumber(n.y)) return;\n        var distLength = Math.sqrt(displacements[j].x * displacements[j].x + displacements[j].y * displacements[j].y);\n\n        if (distLength > 0) {\n          // && !n.isFixed()\n          var limitedDist = Math.min(maxDisplace * (speed / SPEED_DIVISOR), distLength);\n          n.x += displacements[j].x / distLength * limitedDist;\n          n.y += displacements[j].y / distLength * limitedDist;\n        }\n      });\n    };\n\n    for (var i = 0; i < maxIteration; i++) {\n      _loop_1(i);\n    }\n  };\n\n  FruchtermanLayout.prototype.applyCalculate = function (nodes, edges, displacements, k) {\n    var self = this;\n    self.calRepulsive(nodes, displacements, k);\n    self.calAttractive(edges, displacements, k);\n  };\n\n  FruchtermanLayout.prototype.calRepulsive = function (nodes, displacements, k) {\n    nodes.forEach(function (v, i) {\n      displacements[i] = {\n        x: 0,\n        y: 0\n      };\n      nodes.forEach(function (u, j) {\n        if (i === j) {\n          return;\n        }\n\n        if (!isNumber(v.x) || !isNumber(u.x) || !isNumber(v.y) || !isNumber(u.y)) return;\n        var vecX = v.x - u.x;\n        var vecY = v.y - u.y;\n        var vecLengthSqr = vecX * vecX + vecY * vecY;\n\n        if (vecLengthSqr === 0) {\n          vecLengthSqr = 1;\n          var sign = i > j ? 1 : -1;\n          vecX = 0.01 * sign;\n          vecY = 0.01 * sign;\n        }\n\n        var common = k * k / vecLengthSqr;\n        displacements[i].x += vecX * common;\n        displacements[i].y += vecY * common;\n      });\n    });\n  };\n\n  FruchtermanLayout.prototype.calAttractive = function (edges, displacements, k) {\n    var _this = this;\n\n    edges.forEach(function (e) {\n      if (!e.source || !e.target) return;\n      var uIndex = _this.nodeIdxMap[e.source];\n      var vIndex = _this.nodeIdxMap[e.target];\n\n      if (uIndex === vIndex) {\n        return;\n      }\n\n      var u = _this.nodeMap[e.source];\n      var v = _this.nodeMap[e.target];\n      if (!isNumber(v.x) || !isNumber(u.x) || !isNumber(v.y) || !isNumber(u.y)) return;\n      var vecX = v.x - u.x;\n      var vecY = v.y - u.y;\n      var vecLength = Math.sqrt(vecX * vecX + vecY * vecY);\n      var common = vecLength * vecLength / k;\n      displacements[vIndex].x -= vecX / vecLength * common;\n      displacements[vIndex].y -= vecY / vecLength * common;\n      displacements[uIndex].x += vecX / vecLength * common;\n      displacements[uIndex].y += vecY / vecLength * common;\n    });\n  };\n\n  return FruchtermanLayout;\n}(BaseLayout);\n\nexport default FruchtermanLayout;"]},"metadata":{},"sourceType":"module"}