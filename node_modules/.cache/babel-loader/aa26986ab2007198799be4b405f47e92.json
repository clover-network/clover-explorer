{"ast":null,"code":"import React, { useMemo, useCallback, memo, useState, Fragment } from 'react';\nimport { useTheme, useMotionConfig, motionPropTypes, useAnimatedPath, withContainer, useDimensions, SvgWrapper, ResponsiveWrapper, blendModePropType, bindDefs } from '@nivo/core';\nimport { axisPropType, Grid, Axes } from '@nivo/axes';\nimport { line, curveBasis, curveLinear, area } from 'd3-shape';\nimport { useOrdinalColorScale, useInheritedColor, ordinalColorsPropType, inheritedColorPropType } from '@nivo/colors';\nimport { useTooltip, BasicTooltip } from '@nivo/tooltip';\nimport { scalePoint, scaleLinear } from 'd3-scale';\nimport PropTypes from 'prop-types';\nimport { useSpring, animated, to, useSprings } from 'react-spring';\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar computeSeries = function computeSeries(_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      data = _ref.data,\n      xPadding = _ref.xPadding,\n      xOuterPadding = _ref.xOuterPadding,\n      yOuterPadding = _ref.yOuterPadding;\n  var xValues = new Set();\n  data.forEach(function (serie) {\n    serie.data.forEach(function (datum) {\n      if (!xValues.has(datum.x)) {\n        xValues.add(datum.x);\n      }\n    });\n  });\n  xValues = Array.from(xValues);\n  var xScale = scalePoint().domain(xValues).range([0, width]).padding(xOuterPadding);\n  var yScale = scalePoint().domain(data.map(function (serie, i) {\n    return i + 1;\n  })).range([0, height]).padding(yOuterPadding);\n  var linePointPadding = xScale.step() * Math.min(xPadding * 0.5, 0.5);\n  var series = data.map(function (rawSerie) {\n    var serie = _objectSpread2(_objectSpread2({}, rawSerie), {}, {\n      points: [],\n      linePoints: []\n    });\n\n    rawSerie.data.forEach(function (datum, i) {\n      var x = null;\n      var y = null;\n\n      if (datum.y !== null && datum.y !== undefined) {\n        x = xScale(datum.x);\n        y = yScale(datum.y);\n      }\n\n      var point = {\n        id: \"\".concat(rawSerie.id, \".\").concat(i),\n        serie: rawSerie,\n        data: datum,\n        x: x,\n        y: y\n      };\n      serie.points.push(point);\n\n      if (x !== null) {\n        if (i === 0) {\n          serie.linePoints.push([0, point.y]);\n        } else {\n          serie.linePoints.push([point.x - linePointPadding, point.y]);\n        }\n      }\n\n      serie.linePoints.push([point.x, point.y]);\n\n      if (x !== null) {\n        if (i === rawSerie.data.length - 1 && x) {\n          serie.linePoints.push([width, point.y]);\n        } else {\n          serie.linePoints.push([point.x + linePointPadding, point.y]);\n        }\n      }\n\n      serie.points = serie.points.filter(function (point) {\n        return point.x !== null;\n      });\n    });\n    return serie;\n  });\n  return {\n    series: series,\n    xScale: xScale,\n    yScale: yScale\n  };\n};\n\nvar useLineGenerator = function useLineGenerator(interpolation) {\n  return useMemo(function () {\n    return line().curve(interpolation === 'smooth' ? curveBasis : curveLinear).defined(function (d) {\n      return d[0] !== null && d[1] !== null;\n    });\n  }, [interpolation]);\n};\n\nvar useSerieDerivedProp = function useSerieDerivedProp(instruction) {\n  return useMemo(function () {\n    if (typeof instruction === 'function') return instruction;\n    return function () {\n      return instruction;\n    };\n  }, [instruction]);\n};\n\nvar useSerieStyle = function useSerieStyle(_ref) {\n  var lineWidth = _ref.lineWidth,\n      activeLineWidth = _ref.activeLineWidth,\n      inactiveLineWidth = _ref.inactiveLineWidth,\n      opacity = _ref.opacity,\n      activeOpacity = _ref.activeOpacity,\n      inactiveOpacity = _ref.inactiveOpacity,\n      isInteractive = _ref.isInteractive,\n      currentSerie = _ref.currentSerie;\n  var getLineWidth = useSerieDerivedProp(lineWidth);\n  var getActiveLineWidth = useSerieDerivedProp(activeLineWidth);\n  var getInactiveLineWidth = useSerieDerivedProp(inactiveLineWidth);\n  var getOpacity = useSerieDerivedProp(opacity);\n  var getActiveOpacity = useSerieDerivedProp(activeOpacity);\n  var getInactiveOpacity = useSerieDerivedProp(inactiveOpacity);\n  var getNormalStyle = useMemo(function () {\n    return function (serie) {\n      return {\n        lineWidth: getLineWidth(serie),\n        opacity: getOpacity(serie)\n      };\n    };\n  }, [getLineWidth, getOpacity]);\n  var getActiveStyle = useMemo(function () {\n    return function (serie) {\n      return {\n        lineWidth: getActiveLineWidth(serie),\n        opacity: getActiveOpacity(serie)\n      };\n    };\n  }, [getActiveLineWidth, getActiveOpacity]);\n  var getInactiveStyle = useMemo(function () {\n    return function (serie) {\n      return {\n        lineWidth: getInactiveLineWidth(serie),\n        opacity: getInactiveOpacity(serie)\n      };\n    };\n  }, [getInactiveLineWidth, getInactiveOpacity]);\n  return useMemo(function () {\n    if (!isInteractive) return getNormalStyle;\n    return function (serie) {\n      if (currentSerie === null) return getNormalStyle(serie);\n      if (serie.id === currentSerie) return getActiveStyle(serie);\n      return getInactiveStyle(serie);\n    };\n  }, [getNormalStyle, getActiveStyle, getInactiveStyle, isInteractive, currentSerie]);\n};\n\nvar usePointStyle = function usePointStyle(_ref2) {\n  var pointSize = _ref2.pointSize,\n      activePointSize = _ref2.activePointSize,\n      inactivePointSize = _ref2.inactivePointSize,\n      pointBorderWidth = _ref2.pointBorderWidth,\n      activePointBorderWidth = _ref2.activePointBorderWidth,\n      inactivePointBorderWidth = _ref2.inactivePointBorderWidth,\n      isInteractive = _ref2.isInteractive,\n      currentSerie = _ref2.currentSerie;\n  var getSize = useSerieDerivedProp(pointSize);\n  var getActiveSize = useSerieDerivedProp(activePointSize);\n  var getInactiveSize = useSerieDerivedProp(inactivePointSize);\n  var getBorderWidth = useSerieDerivedProp(pointBorderWidth);\n  var getActiveBorderWidth = useSerieDerivedProp(activePointBorderWidth);\n  var getInactiveBorderWidth = useSerieDerivedProp(inactivePointBorderWidth);\n  var getNormalStyle = useMemo(function () {\n    return function (point) {\n      return {\n        size: getSize(point),\n        borderWidth: getBorderWidth(point)\n      };\n    };\n  }, [getSize, getBorderWidth]);\n  var getActiveStyle = useMemo(function () {\n    return function (point) {\n      return {\n        size: getActiveSize(point),\n        borderWidth: getActiveBorderWidth(point)\n      };\n    };\n  }, [getActiveSize, getActiveBorderWidth]);\n  var getInactiveStyle = useMemo(function () {\n    return function (point) {\n      return {\n        size: getInactiveSize(point),\n        borderWidth: getInactiveBorderWidth(point)\n      };\n    };\n  }, [getInactiveSize, getInactiveBorderWidth]);\n  return useMemo(function () {\n    if (!isInteractive) return getNormalStyle;\n    return function (point) {\n      if (currentSerie === null) return getNormalStyle(point);\n      if (point.serieId === currentSerie) return getActiveStyle(point);\n      return getInactiveStyle(point);\n    };\n  }, [getNormalStyle, getActiveStyle, getInactiveStyle, isInteractive, currentSerie]);\n};\n\nvar useBump = function useBump(_ref3) {\n  var width = _ref3.width,\n      height = _ref3.height,\n      data = _ref3.data,\n      interpolation = _ref3.interpolation,\n      xPadding = _ref3.xPadding,\n      xOuterPadding = _ref3.xOuterPadding,\n      yOuterPadding = _ref3.yOuterPadding,\n      lineWidth = _ref3.lineWidth,\n      activeLineWidth = _ref3.activeLineWidth,\n      inactiveLineWidth = _ref3.inactiveLineWidth,\n      colors = _ref3.colors,\n      opacity = _ref3.opacity,\n      activeOpacity = _ref3.activeOpacity,\n      inactiveOpacity = _ref3.inactiveOpacity,\n      pointSize = _ref3.pointSize,\n      activePointSize = _ref3.activePointSize,\n      inactivePointSize = _ref3.inactivePointSize,\n      pointColor = _ref3.pointColor,\n      pointBorderWidth = _ref3.pointBorderWidth,\n      activePointBorderWidth = _ref3.activePointBorderWidth,\n      inactivePointBorderWidth = _ref3.inactivePointBorderWidth,\n      pointBorderColor = _ref3.pointBorderColor,\n      isInteractive = _ref3.isInteractive,\n      currentSerie = _ref3.currentSerie;\n\n  var _useMemo = useMemo(function () {\n    return computeSeries({\n      width: width,\n      height: height,\n      data: data,\n      xPadding: xPadding,\n      xOuterPadding: xOuterPadding,\n      yOuterPadding: yOuterPadding\n    });\n  }, [width, height, data, xPadding, xOuterPadding, yOuterPadding]),\n      rawSeries = _useMemo.series,\n      xScale = _useMemo.xScale,\n      yScale = _useMemo.yScale;\n\n  var lineGenerator = useLineGenerator(interpolation);\n  var getColor = useOrdinalColorScale(colors, 'id');\n  var getSerieStyle = useSerieStyle({\n    lineWidth: lineWidth,\n    activeLineWidth: activeLineWidth,\n    inactiveLineWidth: inactiveLineWidth,\n    opacity: opacity,\n    activeOpacity: activeOpacity,\n    inactiveOpacity: inactiveOpacity,\n    isInteractive: isInteractive,\n    currentSerie: currentSerie\n  });\n  var series = useMemo(function () {\n    return rawSeries.map(function (serie) {\n      serie.color = getColor(serie);\n      serie.style = getSerieStyle(serie);\n      return serie;\n    });\n  }, [rawSeries, getColor, getSerieStyle]);\n  var theme = useTheme();\n  var getPointColor = useInheritedColor(pointColor, theme);\n  var getPointBorderColor = useInheritedColor(pointBorderColor, theme);\n  var getPointStyle = usePointStyle({\n    pointSize: pointSize,\n    activePointSize: activePointSize,\n    inactivePointSize: inactivePointSize,\n    pointBorderWidth: pointBorderWidth,\n    activePointBorderWidth: activePointBorderWidth,\n    inactivePointBorderWidth: inactivePointBorderWidth,\n    isInteractive: isInteractive,\n    currentSerie: currentSerie\n  });\n  var points = useMemo(function () {\n    var pts = [];\n    series.forEach(function (serie) {\n      serie.points.forEach(function (rawPoint) {\n        var point = _objectSpread2(_objectSpread2({}, rawPoint), {}, {\n          serie: serie,\n          serieId: serie.id,\n          isActive: currentSerie === serie.id,\n          isInactive: currentSerie !== null && currentSerie !== serie.id\n        });\n\n        point.color = getPointColor(point);\n        point.borderColor = getPointBorderColor(point);\n        point.style = getPointStyle(_objectSpread2(_objectSpread2({}, point), {}, {\n          serie: serie\n        }));\n        pts.push(point);\n      });\n    });\n    return pts;\n  }, [series, getPointColor, getPointBorderColor, getPointStyle, currentSerie]);\n  return {\n    xScale: xScale,\n    yScale: yScale,\n    series: series,\n    points: points,\n    lineGenerator: lineGenerator\n  };\n};\n\nvar useSerieHandlers = function useSerieHandlers(_ref4) {\n  var serie = _ref4.serie,\n      isInteractive = _ref4.isInteractive,\n      onMouseEnter = _ref4.onMouseEnter,\n      onMouseMove = _ref4.onMouseMove,\n      onMouseLeave = _ref4.onMouseLeave,\n      onClick = _ref4.onClick,\n      setCurrent = _ref4.setCurrent,\n      tooltip = _ref4.tooltip;\n\n  var _useTooltip = useTooltip(),\n      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,\n      hideTooltip = _useTooltip.hideTooltip;\n\n  var handleMouseEnter = useCallback(function (event) {\n    showTooltipFromEvent(React.createElement(tooltip, {\n      serie: serie\n    }), event);\n    setCurrent(serie.id);\n    onMouseEnter && onMouseEnter(serie, event);\n  }, [serie, onMouseEnter, showTooltipFromEvent, setCurrent]);\n  var handleMouseMove = useCallback(function (event) {\n    showTooltipFromEvent(React.createElement(tooltip, {\n      serie: serie\n    }), event);\n    onMouseMove && onMouseMove(serie, event);\n  }, [serie, onMouseMove, showTooltipFromEvent]);\n  var handleMouseLeave = useCallback(function (event) {\n    hideTooltip();\n    setCurrent(null);\n    onMouseLeave && onMouseLeave(serie, event);\n  }, [serie, onMouseLeave, hideTooltip, setCurrent]);\n  var handleClick = useCallback(function (event) {\n    onClick && onClick(serie, event);\n  }, [serie, onClick]);\n  var handlers = useMemo(function () {\n    return {\n      onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n      onMouseMove: isInteractive ? handleMouseMove : undefined,\n      onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n      onClick: isInteractive ? handleClick : undefined\n    };\n  }, [isInteractive, handleMouseEnter, handleMouseMove, handleMouseLeave, handleClick]);\n  return handlers;\n};\n\nvar useSeriesLabels = function useSeriesLabels(_ref5) {\n  var series = _ref5.series,\n      position = _ref5.position,\n      padding = _ref5.padding,\n      color = _ref5.color,\n      getLabel = _ref5.getLabel;\n  var theme = useTheme();\n  var getColor = useInheritedColor(color, theme);\n  return useMemo(function () {\n    var textAnchor;\n    var signedPadding;\n\n    if (position === 'start') {\n      textAnchor = 'end';\n      signedPadding = padding * -1;\n    } else {\n      textAnchor = 'start';\n      signedPadding = padding;\n    }\n\n    var labels = [];\n    series.forEach(function (serie) {\n      var label = serie.id;\n\n      if (typeof getLabel === 'function') {\n        label = getLabel(serie);\n      }\n\n      var point = position === 'start' ? serie.linePoints[0] : serie.linePoints[serie.linePoints.length - 1];\n\n      if (point[0] === null || point[1] === null) {\n        return;\n      }\n\n      labels.push({\n        id: serie.id,\n        label: label,\n        x: point[0] + signedPadding,\n        y: point[1],\n        color: getColor(serie),\n        opacity: serie.style.opacity,\n        serie: serie,\n        textAnchor: textAnchor\n      });\n    });\n    return labels;\n  }, [series, position, padding, getColor]);\n};\n\nvar LineTooltip = function LineTooltip(_ref) {\n  var serie = _ref.serie;\n  return React.createElement(BasicTooltip, {\n    id: serie.id,\n    enableChip: true,\n    color: serie.color\n  });\n};\n\nvar LineTooltip$1 = memo(LineTooltip);\nvar pointStyle = {\n  pointerEvents: 'none'\n};\n\nvar Point = function Point(_ref) {\n  var x = _ref.x,\n      y = _ref.y,\n      size = _ref.size,\n      color = _ref.color,\n      borderColor = _ref.borderColor,\n      borderWidth = _ref.borderWidth;\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var animatedProps = useSpring({\n    x: x,\n    y: y,\n    radius: size / 2,\n    color: color,\n    borderWidth: borderWidth,\n    config: springConfig,\n    immediate: !animate\n  });\n  return React.createElement(animated.circle, {\n    cx: animatedProps.x,\n    cy: animatedProps.y,\n    r: to(animatedProps.radius, function (v) {\n      return Math.max(v, 0);\n    }),\n    fill: animatedProps.color,\n    strokeWidth: animatedProps.borderWidth,\n    stroke: borderColor,\n    style: pointStyle\n  });\n};\n\nvar Point$1 = memo(Point);\nvar commonPropTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    data: PropTypes.arrayOf(PropTypes.shape({\n      x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n      y: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    })).isRequired\n  })).isRequired,\n  layers: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.oneOf(['grid', 'axes', 'labels', 'lines', 'points']), PropTypes.func])).isRequired,\n  interpolation: PropTypes.oneOf(['linear', 'smooth']).isRequired,\n  xPadding: PropTypes.number.isRequired,\n  xOuterPadding: PropTypes.number.isRequired,\n  yOuterPadding: PropTypes.number.isRequired,\n  colors: ordinalColorsPropType.isRequired,\n  lineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n  activeLineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n  inactiveLineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n  opacity: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n  activeOpacity: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n  inactiveOpacity: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n  startLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func]).isRequired,\n  startLabelPadding: PropTypes.number.isRequired,\n  startLabelTextColor: inheritedColorPropType.isRequired,\n  endLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func]).isRequired,\n  endLabelPadding: PropTypes.number.isRequired,\n  endLabelTextColor: inheritedColorPropType.isRequired,\n  pointComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  pointSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n  activePointSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n  inactivePointSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n  pointColor: inheritedColorPropType.isRequired,\n  pointBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n  activePointBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n  inactivePointBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n  pointBorderColor: inheritedColorPropType.isRequired,\n  enableGridX: PropTypes.bool.isRequired,\n  enableGridY: PropTypes.bool.isRequired,\n  axisTop: axisPropType,\n  axisRight: axisPropType,\n  axisBottom: axisPropType,\n  axisLeft: axisPropType,\n  isInteractive: PropTypes.bool.isRequired,\n  onMouseEnter: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onClick: PropTypes.func,\n  tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired\n};\n\nvar BumpPropTypes = _objectSpread2(_objectSpread2(_objectSpread2({}, commonPropTypes), motionPropTypes), {}, {\n  role: PropTypes.string.isRequired\n});\n\nvar commonDefaultProps = {\n  layers: ['grid', 'axes', 'labels', 'lines', 'points'],\n  interpolation: 'smooth',\n  xPadding: 0.6,\n  xOuterPadding: 0.5,\n  yOuterPadding: 0.5,\n  colors: {\n    scheme: 'nivo'\n  },\n  lineWidth: 2,\n  activeLineWidth: 4,\n  inactiveLineWidth: 1,\n  opacity: 1,\n  activeOpacity: 1,\n  inactiveOpacity: 0.3,\n  startLabel: false,\n  startLabelPadding: 16,\n  startLabelTextColor: {\n    from: 'color'\n  },\n  endLabel: 'id',\n  endLabelPadding: 16,\n  endLabelTextColor: {\n    from: 'color'\n  },\n  pointSize: 6,\n  activePointSize: 8,\n  inactivePointSize: 4,\n  pointColor: {\n    from: 'serie.color'\n  },\n  pointBorderWidth: 0,\n  activePointBorderWidth: 0,\n  inactivePointBorderWidth: 0,\n  pointBorderColor: {\n    from: 'serie.color',\n    modifiers: [['darker', 1.4]]\n  },\n  enableGridX: true,\n  enableGridY: true,\n  axisTop: {},\n  axisBottom: {},\n  axisLeft: {},\n  isInteractive: true,\n  tooltip: LineTooltip$1\n};\n\nvar BumpDefaultProps = _objectSpread2(_objectSpread2({}, commonDefaultProps), {}, {\n  pointComponent: Point$1,\n  animate: true,\n  motionConfig: 'gentle',\n  role: 'img'\n});\n\nvar Line = function Line(_ref) {\n  var serie = _ref.serie,\n      lineGenerator = _ref.lineGenerator,\n      yStep = _ref.yStep,\n      isInteractive = _ref.isInteractive,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseMove = _ref.onMouseMove,\n      onMouseLeave = _ref.onMouseLeave,\n      onClick = _ref.onClick,\n      setCurrentSerie = _ref.setCurrentSerie,\n      tooltip = _ref.tooltip;\n  var handlers = useSerieHandlers({\n    serie: serie,\n    isInteractive: isInteractive,\n    onMouseEnter: onMouseEnter,\n    onMouseMove: onMouseMove,\n    onMouseLeave: onMouseLeave,\n    onClick: onClick,\n    setCurrent: setCurrentSerie,\n    tooltip: tooltip\n  });\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var linePath = lineGenerator(serie.linePoints);\n  var animatedPath = useAnimatedPath(linePath);\n  var animatedProps = useSpring({\n    color: serie.color,\n    opacity: serie.style.opacity,\n    lineWidth: serie.style.lineWidth,\n    config: springConfig,\n    immediate: !animate\n  });\n  return React.createElement(React.Fragment, null, React.createElement(animated.path, {\n    fill: \"none\",\n    d: animatedPath,\n    stroke: animatedProps.color,\n    strokeWidth: animatedProps.lineWidth,\n    strokeLinecap: \"round\",\n    strokeOpacity: animatedProps.opacity,\n    style: {\n      pointerEvents: 'none'\n    }\n  }), isInteractive && React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"red\",\n    strokeOpacity: 0,\n    strokeWidth: yStep,\n    d: linePath,\n    strokeLinecap: \"butt\",\n    onMouseEnter: handlers.onMouseEnter,\n    onMouseMove: handlers.onMouseMove,\n    onMouseLeave: handlers.onMouseLeave,\n    onClick: handlers.onClick\n  }));\n};\n\nvar Line$1 = memo(Line);\n\nvar LinesLabels = function LinesLabels(_ref) {\n  var series = _ref.series,\n      getLabel = _ref.getLabel,\n      position = _ref.position,\n      padding = _ref.padding,\n      color = _ref.color;\n  var theme = useTheme();\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var labels = useSeriesLabels({\n    series: series,\n    getLabel: getLabel,\n    position: position,\n    padding: padding,\n    color: color\n  });\n  var springs = useSprings(labels.length, labels.map(function (label) {\n    return {\n      x: label.x,\n      y: label.y,\n      opacity: label.opacity,\n      config: springConfig,\n      immediate: !animate\n    };\n  }));\n  return springs.map(function (animatedProps, index) {\n    var label = labels[index];\n    return React.createElement(animated.text, {\n      key: label.id,\n      x: animatedProps.x,\n      y: animatedProps.y,\n      textAnchor: label.textAnchor,\n      dominantBaseline: \"central\",\n      opacity: animatedProps.opacity,\n      style: _objectSpread2(_objectSpread2({}, theme.labels.text), {}, {\n        fill: label.color\n      })\n    }, label.label);\n  });\n};\n\nvar LinesLabels$1 = memo(LinesLabels);\n\nvar Points = function Points(_ref) {\n  var pointComponent = _ref.pointComponent,\n      points = _ref.points;\n  return points.map(function (point) {\n    return React.createElement(pointComponent, {\n      key: point.id,\n      data: point.data,\n      x: point.x,\n      y: point.y,\n      isActive: point.isActive,\n      isInactive: point.isInactive,\n      size: point.style.size,\n      color: point.color,\n      borderColor: point.borderColor,\n      borderWidth: point.style.borderWidth\n    });\n  });\n};\n\nvar Points$1 = memo(Points);\n\nvar Bump = function Bump(props) {\n  var data = props.data,\n      width = props.width,\n      height = props.height,\n      partialMargin = props.margin,\n      layers = props.layers,\n      interpolation = props.interpolation,\n      xPadding = props.xPadding,\n      xOuterPadding = props.xOuterPadding,\n      yOuterPadding = props.yOuterPadding,\n      colors = props.colors,\n      lineWidth = props.lineWidth,\n      activeLineWidth = props.activeLineWidth,\n      inactiveLineWidth = props.inactiveLineWidth,\n      opacity = props.opacity,\n      activeOpacity = props.activeOpacity,\n      inactiveOpacity = props.inactiveOpacity,\n      startLabel = props.startLabel,\n      startLabelPadding = props.startLabelPadding,\n      startLabelTextColor = props.startLabelTextColor,\n      endLabel = props.endLabel,\n      endLabelPadding = props.endLabelPadding,\n      endLabelTextColor = props.endLabelTextColor,\n      pointComponent = props.pointComponent,\n      pointSize = props.pointSize,\n      activePointSize = props.activePointSize,\n      inactivePointSize = props.inactivePointSize,\n      pointColor = props.pointColor,\n      pointBorderWidth = props.pointBorderWidth,\n      activePointBorderWidth = props.activePointBorderWidth,\n      inactivePointBorderWidth = props.inactivePointBorderWidth,\n      pointBorderColor = props.pointBorderColor,\n      axisTop = props.axisTop,\n      axisRight = props.axisRight,\n      axisBottom = props.axisBottom,\n      axisLeft = props.axisLeft,\n      enableGridX = props.enableGridX,\n      enableGridY = props.enableGridY,\n      isInteractive = props.isInteractive,\n      onMouseEnter = props.onMouseEnter,\n      onMouseMove = props.onMouseMove,\n      onMouseLeave = props.onMouseLeave,\n      onClick = props.onClick,\n      tooltip = props.tooltip,\n      role = props.role;\n\n  var _useDimensions = useDimensions(width, height, partialMargin),\n      margin = _useDimensions.margin,\n      innerWidth = _useDimensions.innerWidth,\n      innerHeight = _useDimensions.innerHeight,\n      outerWidth = _useDimensions.outerWidth,\n      outerHeight = _useDimensions.outerHeight;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentSerie = _useState2[0],\n      setCurrentSerie = _useState2[1];\n\n  var _useBump = useBump({\n    width: innerWidth,\n    height: innerHeight,\n    data: data,\n    interpolation: interpolation,\n    xPadding: xPadding,\n    xOuterPadding: xOuterPadding,\n    yOuterPadding: yOuterPadding,\n    lineWidth: lineWidth,\n    activeLineWidth: activeLineWidth,\n    inactiveLineWidth: inactiveLineWidth,\n    colors: colors,\n    opacity: opacity,\n    activeOpacity: activeOpacity,\n    inactiveOpacity: inactiveOpacity,\n    pointSize: pointSize,\n    activePointSize: activePointSize,\n    inactivePointSize: inactivePointSize,\n    pointColor: pointColor,\n    pointBorderWidth: pointBorderWidth,\n    activePointBorderWidth: activePointBorderWidth,\n    inactivePointBorderWidth: inactivePointBorderWidth,\n    pointBorderColor: pointBorderColor,\n    startLabel: startLabel,\n    endLabel: endLabel,\n    isInteractive: isInteractive,\n    currentSerie: currentSerie\n  }),\n      series = _useBump.series,\n      points = _useBump.points,\n      xScale = _useBump.xScale,\n      yScale = _useBump.yScale,\n      lineGenerator = _useBump.lineGenerator;\n\n  var layerById = {\n    grid: React.createElement(Grid, {\n      key: \"grid\",\n      width: innerWidth,\n      height: innerHeight,\n      xScale: enableGridX ? xScale : null,\n      yScale: enableGridY ? yScale : null\n    }),\n    axes: React.createElement(Axes, {\n      key: \"axes\",\n      xScale: xScale,\n      yScale: yScale,\n      width: innerWidth,\n      height: innerHeight,\n      top: axisTop,\n      right: axisRight,\n      bottom: axisBottom,\n      left: axisLeft\n    }),\n    labels: [],\n    lines: React.createElement(Fragment, {\n      key: \"lines\"\n    }, series.map(function (serie) {\n      return React.createElement(Line$1, {\n        key: serie.id,\n        serie: serie,\n        currentSerie: currentSerie,\n        setCurrentSerie: setCurrentSerie,\n        lineGenerator: lineGenerator,\n        yStep: yScale.step(),\n        margin: margin,\n        isInteractive: isInteractive,\n        onMouseEnter: onMouseEnter,\n        onMouseMove: onMouseMove,\n        onMouseLeave: onMouseLeave,\n        onClick: onClick,\n        tooltip: tooltip\n      });\n    })),\n    points: React.createElement(Points$1, {\n      key: \"points\",\n      pointComponent: pointComponent,\n      points: points\n    })\n  };\n\n  if (startLabel !== false) {\n    layerById.labels.push(React.createElement(LinesLabels$1, {\n      key: \"start\",\n      series: series,\n      getLabel: startLabel,\n      position: \"start\",\n      padding: startLabelPadding,\n      color: startLabelTextColor\n    }));\n  }\n\n  if (endLabel !== false) {\n    layerById.labels.push(React.createElement(LinesLabels$1, {\n      key: \"end\",\n      series: series,\n      getLabel: endLabel,\n      position: \"end\",\n      padding: endLabelPadding,\n      color: endLabelTextColor\n    }));\n  }\n\n  return React.createElement(SvgWrapper, {\n    width: outerWidth,\n    height: outerHeight,\n    margin: margin,\n    role: role\n  }, layers.map(function (layer, i) {\n    if (typeof layer === 'function') {\n      return React.createElement(Fragment, {\n        key: i\n      }, layer({\n        innerWidth: innerWidth,\n        innerHeight: innerHeight,\n        xScale: xScale,\n        yScale: yScale\n      }));\n    }\n\n    return layerById[layer];\n  }));\n};\n\nBump.defaultProps = BumpDefaultProps;\nvar Bump$1 = memo(withContainer(Bump));\n\nvar ResponsiveBump = function ResponsiveBump(props) {\n  return React.createElement(ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React.createElement(Bump$1, Object.assign({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nvar AreaTooltip = function AreaTooltip(_ref) {\n  var serie = _ref.serie;\n  return React.createElement(BasicTooltip, {\n    id: serie.id,\n    enableChip: true,\n    color: serie.color\n  });\n};\n\nvar AreaTooltip$1 = memo(AreaTooltip);\nvar commonPropTypes$1 = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    data: PropTypes.arrayOf(PropTypes.shape({\n      x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n      y: PropTypes.number.isRequired\n    })).isRequired\n  })).isRequired,\n  align: PropTypes.oneOf(['start', 'middle', 'end']).isRequired,\n  layers: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.oneOf(['grid', 'axes', 'labels', 'areas']), PropTypes.func])).isRequired,\n  interpolation: PropTypes.oneOf(['linear', 'smooth']).isRequired,\n  spacing: PropTypes.number.isRequired,\n  xPadding: PropTypes.number.isRequired,\n  colors: ordinalColorsPropType.isRequired,\n  blendMode: blendModePropType.isRequired,\n  fillOpacity: PropTypes.number.isRequired,\n  activeFillOpacity: PropTypes.number.isRequired,\n  inactiveFillOpacity: PropTypes.number.isRequired,\n  defs: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired\n  })).isRequired,\n  fill: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    match: PropTypes.oneOfType([PropTypes.oneOf(['*']), PropTypes.object, PropTypes.func]).isRequired\n  })).isRequired,\n  borderWidth: PropTypes.number.isRequired,\n  activeBorderWidth: PropTypes.number.isRequired,\n  inactiveBorderWidth: PropTypes.number.isRequired,\n  borderColor: inheritedColorPropType.isRequired,\n  borderOpacity: PropTypes.number.isRequired,\n  activeBorderOpacity: PropTypes.number.isRequired,\n  inactiveBorderOpacity: PropTypes.number.isRequired,\n  startLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func]).isRequired,\n  startLabelPadding: PropTypes.number.isRequired,\n  startLabelTextColor: inheritedColorPropType.isRequired,\n  endLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func]).isRequired,\n  endLabelPadding: PropTypes.number.isRequired,\n  endLabelTextColor: inheritedColorPropType.isRequired,\n  enableGridX: PropTypes.bool.isRequired,\n  axisTop: axisPropType,\n  axisBottom: axisPropType,\n  isInteractive: PropTypes.bool.isRequired,\n  onMouseEnter: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onClick: PropTypes.func,\n  tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired\n};\n\nvar AreaBumpPropTypes = _objectSpread2(_objectSpread2(_objectSpread2({}, commonPropTypes$1), motionPropTypes), {}, {\n  role: PropTypes.string.isRequired\n});\n\nvar commonDefaultProps$1 = {\n  align: 'middle',\n  layers: ['grid', 'axes', 'labels', 'areas'],\n  interpolation: 'smooth',\n  spacing: 0,\n  xPadding: 0.6,\n  colors: {\n    scheme: 'nivo'\n  },\n  blendMode: 'normal',\n  fillOpacity: 0.8,\n  activeFillOpacity: 1,\n  inactiveFillOpacity: 0.15,\n  defs: [],\n  fill: [],\n  borderWidth: 1,\n  activeBorderWidth: 1,\n  inactiveBorderWidth: 0,\n  borderColor: {\n    from: 'color',\n    modifiers: [['darker', 0.4]]\n  },\n  borderOpacity: 1,\n  activeBorderOpacity: 1,\n  inactiveBorderOpacity: 0,\n  startLabel: false,\n  startLabelPadding: 12,\n  startLabelTextColor: {\n    from: 'color',\n    modifiers: [['darker', 1]]\n  },\n  endLabel: 'id',\n  endLabelPadding: 12,\n  endLabelTextColor: {\n    from: 'color',\n    modifiers: [['darker', 1]]\n  },\n  enableGridX: true,\n  axisTop: {},\n  axisBottom: {},\n  isInteractive: true,\n  tooltip: AreaTooltip$1\n};\n\nvar AreaBumpDefaultProps = _objectSpread2(_objectSpread2({}, commonDefaultProps$1), {}, {\n  animate: true,\n  motionConfig: 'gentle',\n  role: 'img'\n});\n\nvar computeSeries$1 = function computeSeries(_ref) {\n  var data = _ref.data,\n      width = _ref.width,\n      height = _ref.height,\n      align = _ref.align,\n      spacing = _ref.spacing,\n      xPadding = _ref.xPadding;\n  var slices = new Map();\n  var maxSum = null;\n  var maxValues = null;\n  data.forEach(function (serie) {\n    serie.data.forEach(function (datum) {\n      if (!slices.has(datum.x)) {\n        slices.set(datum.x, {\n          id: datum.x,\n          total: 0,\n          values: new Map()\n        });\n      }\n\n      var slice = slices.get(datum.x);\n      var total = slice.total + datum.y;\n      slice.total = total;\n      slice.values.set(serie.id, {\n        serieId: serie.id,\n        value: datum.y\n      });\n\n      if (total === null || total > maxSum) {\n        maxSum = total;\n        maxValues = slice.values.size;\n      }\n    });\n  });\n  var xScale = scalePoint().domain(Array.from(slices.keys())).range([0, width]);\n  var heightScale = scaleLinear().domain([0, maxSum]).range([0, height - maxValues * spacing]);\n  slices.forEach(function (slice, x) {\n    slice.x = xScale(x);\n    var sliceHeight = heightScale(slice.total) + slice.values.size * spacing;\n    var offset = 0;\n\n    if (align === 'middle') {\n      offset = (height - sliceHeight) / 2;\n    } else if (align === 'end') {\n      offset = height - sliceHeight;\n    }\n\n    Array.from(slice.values.values()).sort(function (a, b) {\n      return b.value - a.value;\n    }).forEach(function (value, position, all) {\n      var previousValues = all.filter(function (i, pos) {\n        return pos < position;\n      });\n      var beforeValue = previousValues.reduce(function (t, v) {\n        return t + v.value;\n      }, 0);\n      var sliceValue = slice.values.get(value.serieId);\n      sliceValue.position = position;\n      sliceValue.height = heightScale(value.value);\n      sliceValue.beforeHeight = heightScale(beforeValue) + offset + spacing * (previousValues.length + 0.5);\n    });\n  });\n  var areaPointPadding = xScale.step() * Math.min(xPadding * 0.5, 0.5);\n  var series = data.map(function (serie) {\n    var serieCopy = _objectSpread2({}, serie);\n\n    serieCopy.points = [];\n    serieCopy.areaPoints = [];\n    serie.data.forEach(function (datum, i) {\n      var slice = slices.get(datum.x);\n      var position = slice.values.get(serie.id);\n      var x = slice.x;\n      var beforeHeight = position.beforeHeight,\n          height = position.height;\n      var y = beforeHeight + height / 2;\n      var y0 = beforeHeight;\n      var y1 = beforeHeight + height;\n      serieCopy.points.push({\n        x: x,\n        y: y,\n        height: height,\n        data: _objectSpread2({}, datum)\n      });\n\n      if (i > 0) {\n        serieCopy.areaPoints.push({\n          x: x - areaPointPadding,\n          y0: y0,\n          y1: y1\n        });\n      }\n\n      serieCopy.areaPoints.push({\n        x: x,\n        y0: y0,\n        y1: y1\n      });\n\n      if (i < serie.data.length - 1) {\n        serieCopy.areaPoints.push({\n          x: x + areaPointPadding,\n          y0: y0,\n          y1: y1\n        });\n      }\n    });\n    return serieCopy;\n  });\n  return {\n    xScale: xScale,\n    heightScale: heightScale,\n    series: series\n  };\n};\n\nvar useAreaBumpSeries = function useAreaBumpSeries(_ref) {\n  var data = _ref.data,\n      width = _ref.width,\n      height = _ref.height,\n      align = _ref.align,\n      spacing = _ref.spacing,\n      xPadding = _ref.xPadding;\n  return useMemo(function () {\n    return computeSeries$1({\n      data: data,\n      width: width,\n      height: height,\n      align: align,\n      spacing: spacing,\n      xPadding: xPadding\n    });\n  }, [data, width, height, align, spacing, xPadding]);\n};\n\nvar useAreaGenerator = function useAreaGenerator(interpolation) {\n  return useMemo(function () {\n    return area().x(function (d) {\n      return d.x;\n    }).y0(function (d) {\n      return d.y0;\n    }).y1(function (d) {\n      return d.y1;\n    }).curve(interpolation === 'smooth' ? curveBasis : curveLinear);\n  }, [interpolation]);\n};\n\nvar useSerieDerivedProp$1 = function useSerieDerivedProp(instruction) {\n  return useMemo(function () {\n    if (typeof instruction === 'function') return instruction;\n    return function () {\n      return instruction;\n    };\n  }, [instruction]);\n};\n\nvar useSerieStyle$1 = function useSerieStyle(_ref2) {\n  var fillOpacity = _ref2.fillOpacity,\n      activeFillOpacity = _ref2.activeFillOpacity,\n      inactiveFillOpacity = _ref2.inactiveFillOpacity,\n      borderWidth = _ref2.borderWidth,\n      activeBorderWidth = _ref2.activeBorderWidth,\n      inactiveBorderWidth = _ref2.inactiveBorderWidth,\n      borderColor = _ref2.borderColor,\n      borderOpacity = _ref2.borderOpacity,\n      activeBorderOpacity = _ref2.activeBorderOpacity,\n      inactiveBorderOpacity = _ref2.inactiveBorderOpacity,\n      isInteractive = _ref2.isInteractive,\n      current = _ref2.current;\n  var getFillOpacity = useSerieDerivedProp$1(fillOpacity);\n  var getActiveFillOpacity = useSerieDerivedProp$1(activeFillOpacity);\n  var getInactiveFillOpacity = useSerieDerivedProp$1(inactiveFillOpacity);\n  var getBorderWidth = useSerieDerivedProp$1(borderWidth);\n  var getActiveBorderWidth = useSerieDerivedProp$1(activeBorderWidth);\n  var getInactiveBorderWidth = useSerieDerivedProp$1(inactiveBorderWidth);\n  var theme = useTheme();\n  var getBorderColor = useInheritedColor(borderColor, theme);\n  var getBorderOpacity = useSerieDerivedProp$1(borderOpacity);\n  var getActiveBorderOpacity = useSerieDerivedProp$1(activeBorderOpacity);\n  var getInactiveBorderOpacity = useSerieDerivedProp$1(inactiveBorderOpacity);\n  var getNormalStyle = useMemo(function () {\n    return function (serie) {\n      return {\n        fillOpacity: getFillOpacity(serie),\n        borderWidth: getBorderWidth(serie),\n        borderColor: getBorderColor(serie),\n        borderOpacity: getBorderOpacity(serie)\n      };\n    };\n  }, [getFillOpacity, getBorderWidth, getBorderColor, getBorderOpacity]);\n  var getActiveStyle = useMemo(function () {\n    return function (serie) {\n      return {\n        fillOpacity: getActiveFillOpacity(serie),\n        borderWidth: getActiveBorderWidth(serie),\n        borderColor: getBorderColor(serie),\n        borderOpacity: getActiveBorderOpacity(serie)\n      };\n    };\n  }, [getActiveFillOpacity, getActiveBorderWidth, getBorderColor, getActiveBorderOpacity]);\n  var getInactiveStyle = useMemo(function () {\n    return function (serie) {\n      return {\n        fillOpacity: getInactiveFillOpacity(serie),\n        borderWidth: getInactiveBorderWidth(serie),\n        borderColor: getBorderColor(serie),\n        borderOpacity: getInactiveBorderOpacity(serie)\n      };\n    };\n  }, [getInactiveFillOpacity, getInactiveBorderWidth, getBorderColor, getInactiveBorderOpacity]);\n  return useMemo(function () {\n    if (!isInteractive) return getNormalStyle;\n    return function (serie) {\n      if (current === null) return getNormalStyle(serie);\n      if (serie.id === current) return getActiveStyle(serie);\n      return getInactiveStyle(serie);\n    };\n  }, [getNormalStyle, getActiveStyle, getInactiveStyle, isInteractive, current]);\n};\n\nvar useAreaBump = function useAreaBump(_ref3) {\n  var data = _ref3.data,\n      width = _ref3.width,\n      height = _ref3.height,\n      align = _ref3.align,\n      spacing = _ref3.spacing,\n      xPadding = _ref3.xPadding,\n      interpolation = _ref3.interpolation,\n      colors = _ref3.colors,\n      fillOpacity = _ref3.fillOpacity,\n      activeFillOpacity = _ref3.activeFillOpacity,\n      inactiveFillOpacity = _ref3.inactiveFillOpacity,\n      borderWidth = _ref3.borderWidth,\n      activeBorderWidth = _ref3.activeBorderWidth,\n      inactiveBorderWidth = _ref3.inactiveBorderWidth,\n      borderColor = _ref3.borderColor,\n      borderOpacity = _ref3.borderOpacity,\n      activeBorderOpacity = _ref3.activeBorderOpacity,\n      inactiveBorderOpacity = _ref3.inactiveBorderOpacity,\n      isInteractive = _ref3.isInteractive,\n      current = _ref3.current;\n\n  var _useAreaBumpSeries = useAreaBumpSeries({\n    data: data,\n    width: width,\n    height: height,\n    align: align,\n    spacing: spacing,\n    xPadding: xPadding\n  }),\n      rawSeries = _useAreaBumpSeries.series,\n      xScale = _useAreaBumpSeries.xScale,\n      heightScale = _useAreaBumpSeries.heightScale;\n\n  var areaGenerator = useAreaGenerator(interpolation);\n  var getColor = useOrdinalColorScale(colors, 'id');\n  var getSerieStyle = useSerieStyle$1({\n    fillOpacity: fillOpacity,\n    activeFillOpacity: activeFillOpacity,\n    inactiveFillOpacity: inactiveFillOpacity,\n    borderWidth: borderWidth,\n    activeBorderWidth: activeBorderWidth,\n    inactiveBorderWidth: inactiveBorderWidth,\n    borderColor: borderColor,\n    borderOpacity: borderOpacity,\n    activeBorderOpacity: activeBorderOpacity,\n    inactiveBorderOpacity: inactiveBorderOpacity,\n    isInteractive: isInteractive,\n    current: current\n  });\n  var series = useMemo(function () {\n    return rawSeries.map(function (serie) {\n      serie.color = getColor(serie);\n      serie.style = getSerieStyle(serie);\n      return serie;\n    });\n  }, [rawSeries, getColor, getSerieStyle]);\n  return {\n    series: series,\n    xScale: xScale,\n    heightScale: heightScale,\n    areaGenerator: areaGenerator\n  };\n};\n\nvar useSerieHandlers$1 = function useSerieHandlers(_ref4) {\n  var serie = _ref4.serie,\n      isInteractive = _ref4.isInteractive,\n      onMouseEnter = _ref4.onMouseEnter,\n      onMouseMove = _ref4.onMouseMove,\n      onMouseLeave = _ref4.onMouseLeave,\n      onClick = _ref4.onClick,\n      setCurrent = _ref4.setCurrent,\n      tooltip = _ref4.tooltip;\n\n  var _useTooltip = useTooltip(),\n      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,\n      hideTooltip = _useTooltip.hideTooltip;\n\n  var handleMouseEnter = useCallback(function (event) {\n    showTooltipFromEvent(React.createElement(tooltip, {\n      serie: serie\n    }), event);\n    setCurrent(serie.id);\n    onMouseEnter && onMouseEnter(serie, event);\n  }, [serie, onMouseEnter, showTooltipFromEvent, setCurrent]);\n  var handleMouseMove = useCallback(function (event) {\n    showTooltipFromEvent(React.createElement(tooltip, {\n      serie: serie\n    }), event);\n    onMouseMove && onMouseMove(serie, event);\n  }, [serie, onMouseMove, showTooltipFromEvent]);\n  var handleMouseLeave = useCallback(function (event) {\n    hideTooltip();\n    setCurrent(null);\n    onMouseLeave && onMouseLeave(serie, event);\n  }, [serie, onMouseLeave, hideTooltip, setCurrent]);\n  var handleClick = useCallback(function (event) {\n    onClick && onClick(serie, event);\n  }, [serie, onClick]);\n  var handlers = useMemo(function () {\n    return {\n      onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n      onMouseMove: isInteractive ? handleMouseMove : undefined,\n      onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n      onClick: isInteractive ? handleClick : undefined\n    };\n  }, [isInteractive, handleMouseEnter, handleMouseMove, handleMouseLeave, handleClick]);\n  return handlers;\n};\n\nvar useSeriesLabels$1 = function useSeriesLabels(_ref5) {\n  var series = _ref5.series,\n      position = _ref5.position,\n      padding = _ref5.padding,\n      color = _ref5.color;\n  var theme = useTheme();\n  var getColor = useInheritedColor(color, theme);\n  return useMemo(function () {\n    var textAnchor;\n    var signedPadding;\n\n    if (position === 'start') {\n      textAnchor = 'end';\n      signedPadding = padding * -1;\n    } else {\n      textAnchor = 'start';\n      signedPadding = padding;\n    }\n\n    return series.map(function (serie) {\n      var point = position === 'start' ? serie.points[0] : serie.points[serie.points.length - 1];\n      return {\n        id: serie.id,\n        x: point.x + signedPadding,\n        y: point.y,\n        color: getColor(serie),\n        opacity: serie.style.fillOpacity,\n        serie: serie,\n        textAnchor: textAnchor\n      };\n    });\n  }, [series, position, padding, getColor]);\n};\n\nvar Area = function Area(_ref) {\n  var serie = _ref.serie,\n      areaGenerator = _ref.areaGenerator,\n      blendMode = _ref.blendMode,\n      isInteractive = _ref.isInteractive,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseMove = _ref.onMouseMove,\n      onMouseLeave = _ref.onMouseLeave,\n      onClick = _ref.onClick,\n      setCurrentSerie = _ref.setCurrentSerie,\n      tooltip = _ref.tooltip;\n  var handlers = useSerieHandlers$1({\n    serie: serie,\n    isInteractive: isInteractive,\n    onMouseEnter: onMouseEnter,\n    onMouseMove: onMouseMove,\n    onMouseLeave: onMouseLeave,\n    onClick: onClick,\n    setCurrent: setCurrentSerie,\n    tooltip: tooltip\n  });\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var animatedPath = useAnimatedPath(areaGenerator(serie.areaPoints));\n  var animatedProps = useSpring({\n    color: serie.color,\n    fillOpacity: serie.style.fillOpacity,\n    stroke: serie.style.borderColor,\n    strokeOpacity: serie.style.borderOpacity,\n    config: springConfig,\n    immediate: !animate\n  });\n  return React.createElement(animated.path, {\n    d: animatedPath,\n    fill: serie.fill ? serie.fill : animatedProps.color,\n    fillOpacity: animatedProps.fillOpacity,\n    stroke: animatedProps.stroke,\n    strokeWidth: serie.style.borderWidth,\n    strokeOpacity: animatedProps.strokeOpacity,\n    style: {\n      mixBlendMode: blendMode\n    },\n    onMouseEnter: handlers.onMouseEnter,\n    onMouseMove: handlers.onMouseMove,\n    onMouseLeave: handlers.onMouseLeave,\n    onClick: handlers.onClick\n  });\n};\n\nvar Area$1 = memo(Area);\n\nvar AreasLabels = function AreasLabels(_ref) {\n  var series = _ref.series,\n      position = _ref.position,\n      padding = _ref.padding,\n      color = _ref.color;\n  var theme = useTheme();\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var labels = useSeriesLabels$1({\n    series: series,\n    position: position,\n    padding: padding,\n    color: color\n  });\n  var springs = useSprings(labels.length, labels.map(function (label) {\n    return {\n      x: label.x,\n      y: label.y,\n      opacity: label.opacity,\n      config: springConfig,\n      immediate: !animate\n    };\n  }));\n  return springs.map(function (animatedProps, index) {\n    var label = labels[index];\n    return React.createElement(animated.text, {\n      key: label.id,\n      x: animatedProps.x,\n      y: animatedProps.y,\n      textAnchor: label.textAnchor,\n      dominantBaseline: \"central\",\n      opacity: animatedProps.opacity,\n      style: _objectSpread2(_objectSpread2({}, theme.labels.text), {}, {\n        fill: label.color\n      })\n    }, label.id);\n  });\n};\n\nvar AreasLabels$1 = memo(AreasLabels);\n\nvar AreaBump = function AreaBump(props) {\n  var data = props.data,\n      align = props.align,\n      width = props.width,\n      height = props.height,\n      partialMargin = props.margin,\n      layers = props.layers,\n      interpolation = props.interpolation,\n      spacing = props.spacing,\n      xPadding = props.xPadding,\n      colors = props.colors,\n      blendMode = props.blendMode,\n      fillOpacity = props.fillOpacity,\n      activeFillOpacity = props.activeFillOpacity,\n      inactiveFillOpacity = props.inactiveFillOpacity,\n      defs = props.defs,\n      fill = props.fill,\n      borderWidth = props.borderWidth,\n      activeBorderWidth = props.activeBorderWidth,\n      inactiveBorderWidth = props.inactiveBorderWidth,\n      borderColor = props.borderColor,\n      borderOpacity = props.borderOpacity,\n      activeBorderOpacity = props.activeBorderOpacity,\n      inactiveBorderOpacity = props.inactiveBorderOpacity,\n      startLabel = props.startLabel,\n      startLabelPadding = props.startLabelPadding,\n      startLabelTextColor = props.startLabelTextColor,\n      endLabel = props.endLabel,\n      endLabelPadding = props.endLabelPadding,\n      endLabelTextColor = props.endLabelTextColor,\n      enableGridX = props.enableGridX,\n      axisTop = props.axisTop,\n      axisBottom = props.axisBottom,\n      isInteractive = props.isInteractive,\n      onMouseEnter = props.onMouseEnter,\n      onMouseMove = props.onMouseMove,\n      onMouseLeave = props.onMouseLeave,\n      onClick = props.onClick,\n      tooltip = props.tooltip,\n      role = props.role;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentSerie = _useState2[0],\n      setCurrentSerie = _useState2[1];\n\n  var _useDimensions = useDimensions(width, height, partialMargin),\n      margin = _useDimensions.margin,\n      innerWidth = _useDimensions.innerWidth,\n      innerHeight = _useDimensions.innerHeight,\n      outerWidth = _useDimensions.outerWidth,\n      outerHeight = _useDimensions.outerHeight;\n\n  var _useAreaBump = useAreaBump({\n    data: data,\n    width: innerWidth,\n    height: innerHeight,\n    align: align,\n    spacing: spacing,\n    xPadding: xPadding,\n    interpolation: interpolation,\n    colors: colors,\n    fillOpacity: fillOpacity,\n    activeFillOpacity: activeFillOpacity,\n    inactiveFillOpacity: inactiveFillOpacity,\n    borderWidth: borderWidth,\n    activeBorderWidth: activeBorderWidth,\n    inactiveBorderWidth: inactiveBorderWidth,\n    borderColor: borderColor,\n    borderOpacity: borderOpacity,\n    activeBorderOpacity: activeBorderOpacity,\n    inactiveBorderOpacity: inactiveBorderOpacity,\n    isInteractive: isInteractive,\n    current: currentSerie\n  }),\n      series = _useAreaBump.series,\n      xScale = _useAreaBump.xScale,\n      areaGenerator = _useAreaBump.areaGenerator;\n\n  var boundDefs = useMemo(function () {\n    return bindDefs(defs, series, fill, {\n      targetKey: 'fill'\n    });\n  }, [defs, series, fill]);\n  var layerById = {\n    grid: enableGridX && React.createElement(Grid, {\n      key: \"grid\",\n      width: innerWidth,\n      height: innerHeight,\n      xScale: xScale\n    }),\n    axes: React.createElement(Axes, {\n      key: \"axes\",\n      xScale: xScale,\n      width: innerWidth,\n      height: innerHeight,\n      top: axisTop,\n      bottom: axisBottom\n    }),\n    labels: [],\n    areas: React.createElement(Fragment, {\n      key: \"areas\"\n    }, series.map(function (serie) {\n      return React.createElement(Area$1, {\n        key: serie.id,\n        areaGenerator: areaGenerator,\n        serie: serie,\n        blendMode: blendMode,\n        isInteractive: isInteractive,\n        setCurrentSerie: setCurrentSerie,\n        onMouseEnter: onMouseEnter,\n        onMouseMove: onMouseMove,\n        onMouseLeave: onMouseLeave,\n        onClick: onClick,\n        tooltip: tooltip\n      });\n    }))\n  };\n\n  if (startLabel !== false) {\n    layerById.labels.push(React.createElement(AreasLabels$1, {\n      key: \"start\",\n      series: series,\n      position: \"start\",\n      padding: startLabelPadding,\n      color: startLabelTextColor\n    }));\n  }\n\n  if (endLabel !== false) {\n    layerById.labels.push(React.createElement(AreasLabels$1, {\n      key: \"end\",\n      series: series,\n      position: \"end\",\n      padding: endLabelPadding,\n      color: endLabelTextColor\n    }));\n  }\n\n  return React.createElement(SvgWrapper, {\n    defs: boundDefs,\n    width: outerWidth,\n    height: outerHeight,\n    margin: margin,\n    role: role\n  }, layers.map(function (layer, i) {\n    if (typeof layer === 'function') {\n      return React.createElement(Fragment, {\n        key: i\n      }, layer(_objectSpread2(_objectSpread2({}, props), {}, {\n        innerWidth: innerWidth,\n        innerHeight: innerHeight,\n        outerWidth: outerWidth,\n        outerHeight: outerHeight,\n        series: series,\n        xScale: xScale,\n        areaGenerator: areaGenerator\n      })));\n    }\n\n    return layerById[layer];\n  }));\n};\n\nAreaBump.defaultProps = AreaBumpDefaultProps;\nvar AreaBump$1 = memo(withContainer(AreaBump));\n\nvar ResponsiveAreaBump = function ResponsiveAreaBump(props) {\n  return React.createElement(ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React.createElement(AreaBump$1, Object.assign({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nexport { AreaBump$1 as AreaBump, AreaBumpDefaultProps, AreaBumpPropTypes, Bump$1 as Bump, BumpDefaultProps, BumpPropTypes, ResponsiveAreaBump, ResponsiveBump };","map":{"version":3,"sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/bump/compute.js","../src/bump/hooks.js","../src/bump/LineTooltip.js","../src/bump/Point.js","../src/bump/props.js","../src/bump/Line.js","../src/bump/LinesLabels.js","../src/bump/Points.js","../src/bump/Bump.js","../src/bump/ResponsiveBump.js","../src/area-bump/AreaTooltip.js","../src/area-bump/props.js","../src/area-bump/compute.js","../src/area-bump/hooks.js","../src/area-bump/Area.js","../src/area-bump/AreasLabels.js","../src/area-bump/AreaBump.js","../src/area-bump/ResponsiveAreaBump.js"],"names":["arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","defineProperty","computeSeries","width","height","data","xPadding","xOuterPadding","yOuterPadding","xValues","serie","datum","Array","xScale","scalePoint","yScale","i","linePointPadding","Math","series","points","linePoints","rawSerie","x","y","point","id","useLineGenerator","useMemo","interpolation","d","useSerieDerivedProp","useSerieStyle","lineWidth","activeLineWidth","inactiveLineWidth","opacity","activeOpacity","inactiveOpacity","isInteractive","currentSerie","getLineWidth","getActiveLineWidth","getInactiveLineWidth","getOpacity","getActiveOpacity","getInactiveOpacity","getNormalStyle","getActiveStyle","getInactiveStyle","usePointStyle","pointSize","activePointSize","inactivePointSize","pointBorderWidth","activePointBorderWidth","inactivePointBorderWidth","getSize","getActiveSize","getInactiveSize","getBorderWidth","getActiveBorderWidth","getInactiveBorderWidth","size","borderWidth","useBump","colors","pointColor","pointBorderColor","rawSeries","lineGenerator","getColor","useOrdinalColorScale","getSerieStyle","theme","useTheme","getPointColor","useInheritedColor","getPointBorderColor","getPointStyle","pts","serieId","isActive","isInactive","useSerieHandlers","onMouseEnter","onMouseMove","onMouseLeave","onClick","setCurrent","tooltip","showTooltipFromEvent","hideTooltip","useTooltip","handleMouseEnter","useCallback","handleMouseMove","handleMouseLeave","handleClick","handlers","undefined","useSeriesLabels","position","padding","color","getLabel","textAnchor","signedPadding","labels","label","LineTooltip","memo","pointStyle","pointerEvents","Point","borderColor","animate","springConfig","useMotionConfig","animatedProps","useSpring","radius","config","immediate","to","commonPropTypes","PropTypes","isRequired","layers","ordinalColorsPropType","startLabel","startLabelPadding","startLabelTextColor","inheritedColorPropType","endLabel","endLabelPadding","endLabelTextColor","pointComponent","enableGridX","enableGridY","axisTop","axisRight","axisBottom","axisLeft","BumpPropTypes","role","commonDefaultProps","scheme","from","modifiers","BumpDefaultProps","motionConfig","Line","yStep","setCurrentSerie","linePath","animatedPath","useAnimatedPath","LinesLabels","springs","useSprings","fill","Points","key","Bump","partialMargin","props","margin","innerWidth","innerHeight","outerWidth","outerHeight","useDimensions","useState","layerById","grid","axes","lines","layer","withContainer","ResponsiveBump","AreaTooltip","align","spacing","blendMode","blendModePropType","fillOpacity","activeFillOpacity","inactiveFillOpacity","defs","match","activeBorderWidth","inactiveBorderWidth","borderOpacity","activeBorderOpacity","inactiveBorderOpacity","AreaBumpPropTypes","AreaBumpDefaultProps","slices","maxSum","maxValues","total","values","slice","value","heightScale","scaleLinear","sliceHeight","offset","b","a","previousValues","pos","beforeValue","t","v","sliceValue","areaPointPadding","serieCopy","beforeHeight","y0","y1","useAreaBumpSeries","useAreaGenerator","current","getFillOpacity","getActiveFillOpacity","getInactiveFillOpacity","getBorderColor","getBorderOpacity","getActiveBorderOpacity","getInactiveBorderOpacity","useAreaBump","areaGenerator","Area","stroke","strokeOpacity","mixBlendMode","AreasLabels","AreaBump","boundDefs","bindDefs","targetKey","areas","ResponsiveAreaBump"],"mappings":"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","sourcesContent":["export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { scalePoint } from 'd3-scale'\n\nexport const computeSeries = ({ width, height, data, xPadding, xOuterPadding, yOuterPadding }) => {\n    let xValues = new Set()\n    data.forEach(serie => {\n        serie.data.forEach(datum => {\n            if (!xValues.has(datum.x)) {\n                xValues.add(datum.x)\n            }\n        })\n    })\n    xValues = Array.from(xValues)\n\n    const xScale = scalePoint().domain(xValues).range([0, width]).padding(xOuterPadding)\n\n    const yScale = scalePoint()\n        .domain(data.map((serie, i) => i + 1))\n        .range([0, height])\n        .padding(yOuterPadding)\n\n    const linePointPadding = xScale.step() * Math.min(xPadding * 0.5, 0.5)\n\n    const series = data.map(rawSerie => {\n        const serie = {\n            ...rawSerie,\n            points: [],\n            linePoints: [],\n        }\n\n        rawSerie.data.forEach((datum, i) => {\n            let x = null\n            let y = null\n            if (datum.y !== null && datum.y !== undefined) {\n                x = xScale(datum.x)\n                y = yScale(datum.y)\n            }\n            const point = {\n                id: `${rawSerie.id}.${i}`,\n                serie: rawSerie,\n                data: datum,\n                x,\n                y,\n            }\n            serie.points.push(point)\n\n            // only add pre transition point if the datum is not empty\n            if (x !== null) {\n                if (i === 0) {\n                    serie.linePoints.push([0, point.y])\n                } else {\n                    serie.linePoints.push([point.x - linePointPadding, point.y])\n                }\n            }\n\n            serie.linePoints.push([point.x, point.y])\n\n            // only add post transition point if the datum is not empty\n            if (x !== null) {\n                if (i === rawSerie.data.length - 1 && x) {\n                    serie.linePoints.push([width, point.y])\n                } else {\n                    serie.linePoints.push([point.x + linePointPadding, point.y])\n                }\n            }\n\n            // remove points having null coordinates\n            serie.points = serie.points.filter(point => point.x !== null)\n        })\n\n        return serie\n    })\n\n    return {\n        series,\n        xScale,\n        yScale,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useMemo, useCallback } from 'react'\nimport { line as d3Line, curveBasis, curveLinear } from 'd3-shape'\nimport { useTheme } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { computeSeries } from './compute'\n\nexport const useLineGenerator = interpolation =>\n    useMemo(\n        () =>\n            d3Line()\n                .curve(interpolation === 'smooth' ? curveBasis : curveLinear)\n                .defined(d => d[0] !== null && d[1] !== null),\n\n        [interpolation]\n    )\n\nexport const useSerieDerivedProp = instruction =>\n    useMemo(() => {\n        if (typeof instruction === 'function') return instruction\n        return () => instruction\n    }, [instruction])\n\nexport const useSerieStyle = ({\n    lineWidth,\n    activeLineWidth,\n    inactiveLineWidth,\n    opacity,\n    activeOpacity,\n    inactiveOpacity,\n    isInteractive,\n    currentSerie,\n}) => {\n    const getLineWidth = useSerieDerivedProp(lineWidth)\n    const getActiveLineWidth = useSerieDerivedProp(activeLineWidth)\n    const getInactiveLineWidth = useSerieDerivedProp(inactiveLineWidth)\n\n    const getOpacity = useSerieDerivedProp(opacity)\n    const getActiveOpacity = useSerieDerivedProp(activeOpacity)\n    const getInactiveOpacity = useSerieDerivedProp(inactiveOpacity)\n\n    const getNormalStyle = useMemo(\n        () => serie => ({\n            lineWidth: getLineWidth(serie),\n            opacity: getOpacity(serie),\n        }),\n        [getLineWidth, getOpacity]\n    )\n    const getActiveStyle = useMemo(\n        () => serie => ({\n            lineWidth: getActiveLineWidth(serie),\n            opacity: getActiveOpacity(serie),\n        }),\n        [getActiveLineWidth, getActiveOpacity]\n    )\n    const getInactiveStyle = useMemo(\n        () => serie => ({\n            lineWidth: getInactiveLineWidth(serie),\n            opacity: getInactiveOpacity(serie),\n        }),\n        [getInactiveLineWidth, getInactiveOpacity]\n    )\n\n    return useMemo(() => {\n        if (!isInteractive) return getNormalStyle\n\n        return serie => {\n            if (currentSerie === null) return getNormalStyle(serie)\n            if (serie.id === currentSerie) return getActiveStyle(serie)\n            return getInactiveStyle(serie)\n        }\n    }, [getNormalStyle, getActiveStyle, getInactiveStyle, isInteractive, currentSerie])\n}\n\nexport const usePointStyle = ({\n    pointSize,\n    activePointSize,\n    inactivePointSize,\n    pointBorderWidth,\n    activePointBorderWidth,\n    inactivePointBorderWidth,\n    isInteractive,\n    currentSerie,\n}) => {\n    const getSize = useSerieDerivedProp(pointSize)\n    const getActiveSize = useSerieDerivedProp(activePointSize)\n    const getInactiveSize = useSerieDerivedProp(inactivePointSize)\n\n    const getBorderWidth = useSerieDerivedProp(pointBorderWidth)\n    const getActiveBorderWidth = useSerieDerivedProp(activePointBorderWidth)\n    const getInactiveBorderWidth = useSerieDerivedProp(inactivePointBorderWidth)\n\n    const getNormalStyle = useMemo(\n        () => point => ({\n            size: getSize(point),\n            borderWidth: getBorderWidth(point),\n        }),\n        [getSize, getBorderWidth]\n    )\n    const getActiveStyle = useMemo(\n        () => point => ({\n            size: getActiveSize(point),\n            borderWidth: getActiveBorderWidth(point),\n        }),\n        [getActiveSize, getActiveBorderWidth]\n    )\n    const getInactiveStyle = useMemo(\n        () => point => ({\n            size: getInactiveSize(point),\n            borderWidth: getInactiveBorderWidth(point),\n        }),\n        [getInactiveSize, getInactiveBorderWidth]\n    )\n\n    return useMemo(() => {\n        if (!isInteractive) return getNormalStyle\n\n        return point => {\n            if (currentSerie === null) return getNormalStyle(point)\n            if (point.serieId === currentSerie) return getActiveStyle(point)\n            return getInactiveStyle(point)\n        }\n    }, [getNormalStyle, getActiveStyle, getInactiveStyle, isInteractive, currentSerie])\n}\n\nexport const useBump = ({\n    width,\n    height,\n    data,\n    interpolation,\n    xPadding,\n    xOuterPadding,\n    yOuterPadding,\n    lineWidth,\n    activeLineWidth,\n    inactiveLineWidth,\n    colors,\n    opacity,\n    activeOpacity,\n    inactiveOpacity,\n    pointSize,\n    activePointSize,\n    inactivePointSize,\n    pointColor,\n    pointBorderWidth,\n    activePointBorderWidth,\n    inactivePointBorderWidth,\n    pointBorderColor,\n    isInteractive,\n    currentSerie,\n}) => {\n    const { series: rawSeries, xScale, yScale } = useMemo(\n        () =>\n            computeSeries({\n                width,\n                height,\n                data,\n                xPadding,\n                xOuterPadding,\n                yOuterPadding,\n            }),\n        [width, height, data, xPadding, xOuterPadding, yOuterPadding]\n    )\n\n    const lineGenerator = useLineGenerator(interpolation)\n\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const getSerieStyle = useSerieStyle({\n        lineWidth,\n        activeLineWidth,\n        inactiveLineWidth,\n        opacity,\n        activeOpacity,\n        inactiveOpacity,\n        isInteractive,\n        currentSerie,\n    })\n\n    const series = useMemo(\n        () =>\n            rawSeries.map(serie => {\n                serie.color = getColor(serie)\n                serie.style = getSerieStyle(serie)\n\n                return serie\n            }),\n        [rawSeries, getColor, getSerieStyle]\n    )\n\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n    const getPointStyle = usePointStyle({\n        pointSize,\n        activePointSize,\n        inactivePointSize,\n        pointBorderWidth,\n        activePointBorderWidth,\n        inactivePointBorderWidth,\n        isInteractive,\n        currentSerie,\n    })\n    const points = useMemo(() => {\n        const pts = []\n        series.forEach(serie => {\n            serie.points.forEach(rawPoint => {\n                const point = {\n                    ...rawPoint,\n                    serie,\n                    serieId: serie.id,\n                    isActive: currentSerie === serie.id,\n                    isInactive: currentSerie !== null && currentSerie !== serie.id,\n                }\n                point.color = getPointColor(point)\n                point.borderColor = getPointBorderColor(point)\n                point.style = getPointStyle({ ...point, serie })\n                pts.push(point)\n            })\n        })\n\n        return pts\n    }, [series, getPointColor, getPointBorderColor, getPointStyle, currentSerie])\n\n    return {\n        xScale,\n        yScale,\n        series,\n        points,\n        lineGenerator,\n    }\n}\n\nexport const useSerieHandlers = ({\n    serie,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrent,\n    tooltip,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { serie }), event)\n            setCurrent(serie.id)\n            onMouseEnter && onMouseEnter(serie, event)\n        },\n        [serie, onMouseEnter, showTooltipFromEvent, setCurrent]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { serie }), event)\n            onMouseMove && onMouseMove(serie, event)\n        },\n        [serie, onMouseMove, showTooltipFromEvent]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(serie, event)\n        },\n        [serie, onMouseLeave, hideTooltip, setCurrent]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            onClick && onClick(serie, event)\n        },\n        [serie, onClick]\n    )\n\n    const handlers = useMemo(\n        () => ({\n            onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n            onMouseMove: isInteractive ? handleMouseMove : undefined,\n            onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n            onClick: isInteractive ? handleClick : undefined,\n        }),\n        [isInteractive, handleMouseEnter, handleMouseMove, handleMouseLeave, handleClick]\n    )\n\n    return handlers\n}\n\nexport const useSeriesLabels = ({ series, position, padding, color, getLabel }) => {\n    const theme = useTheme()\n    const getColor = useInheritedColor(color, theme)\n\n    return useMemo(() => {\n        let textAnchor\n        let signedPadding\n        if (position === 'start') {\n            textAnchor = 'end'\n            signedPadding = padding * -1\n        } else {\n            textAnchor = 'start'\n            signedPadding = padding\n        }\n\n        const labels = []\n        series.forEach(serie => {\n            let label = serie.id\n            if (typeof getLabel === 'function') {\n                label = getLabel(serie)\n            }\n\n            const point =\n                position === 'start'\n                    ? serie.linePoints[0]\n                    : serie.linePoints[serie.linePoints.length - 1]\n\n            // exclude labels for series having missing data at the beginning/end\n            if (point[0] === null || point[1] === null) {\n                return\n            }\n\n            labels.push({\n                id: serie.id,\n                label,\n                x: point[0] + signedPadding,\n                y: point[1],\n                color: getColor(serie),\n                opacity: serie.style.opacity,\n                serie,\n                textAnchor,\n            })\n        })\n\n        return labels\n    }, [series, position, padding, getColor])\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst LineTooltip = ({ serie }) => {\n    return <BasicTooltip id={serie.id} enableChip={true} color={serie.color} />\n}\n\nLineTooltip.propTypes = {\n    serie: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n    }),\n}\n\nexport default memo(LineTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated, to } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\n\nconst pointStyle = { pointerEvents: 'none' }\n\nconst Point = ({ x, y, size, color, borderColor, borderWidth }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        color,\n        borderWidth,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.circle\n            cx={animatedProps.x}\n            cy={animatedProps.y}\n            r={to(animatedProps.radius, v => Math.max(v, 0))}\n            fill={animatedProps.color}\n            strokeWidth={animatedProps.borderWidth}\n            stroke={borderColor}\n            style={pointStyle}\n        />\n    )\n}\n\nPoint.propTypes = {\n    data: PropTypes.object.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    isActive: PropTypes.bool.isRequired,\n    isInactive: PropTypes.bool.isRequired,\n    size: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n}\n\nexport default memo(Point)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { motionPropTypes } from '@nivo/core'\nimport { ordinalColorsPropType, inheritedColorPropType } from '@nivo/colors'\nimport { axisPropType } from '@nivo/axes'\nimport LineTooltip from './LineTooltip'\nimport Point from './Point'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    y: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf(['grid', 'axes', 'labels', 'lines', 'points']),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    interpolation: PropTypes.oneOf(['linear', 'smooth']).isRequired,\n    xPadding: PropTypes.number.isRequired,\n    xOuterPadding: PropTypes.number.isRequired,\n    yOuterPadding: PropTypes.number.isRequired,\n\n    colors: ordinalColorsPropType.isRequired,\n    lineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    activeLineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    inactiveLineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    opacity: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    activeOpacity: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    inactiveOpacity: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n    startLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    startLabelPadding: PropTypes.number.isRequired,\n    startLabelTextColor: inheritedColorPropType.isRequired,\n    endLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    endLabelPadding: PropTypes.number.isRequired,\n    endLabelTextColor: inheritedColorPropType.isRequired,\n\n    pointComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    pointSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    activePointSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    inactivePointSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    pointColor: inheritedColorPropType.isRequired,\n    pointBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    activePointBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    inactivePointBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    pointBorderColor: inheritedColorPropType.isRequired,\n\n    enableGridX: PropTypes.bool.isRequired,\n    enableGridY: PropTypes.bool.isRequired,\n    axisTop: axisPropType,\n    axisRight: axisPropType,\n    axisBottom: axisPropType,\n    axisLeft: axisPropType,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport const BumpPropTypes = {\n    ...commonPropTypes,\n    ...motionPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nconst commonDefaultProps = {\n    layers: ['grid', 'axes', 'labels', 'lines', 'points'],\n\n    interpolation: 'smooth',\n    xPadding: 0.6,\n    xOuterPadding: 0.5,\n    yOuterPadding: 0.5,\n\n    colors: { scheme: 'nivo' },\n    lineWidth: 2,\n    activeLineWidth: 4,\n    inactiveLineWidth: 1,\n    opacity: 1,\n    activeOpacity: 1,\n    inactiveOpacity: 0.3,\n\n    startLabel: false,\n    startLabelPadding: 16,\n    startLabelTextColor: { from: 'color' },\n    endLabel: 'id',\n    endLabelPadding: 16,\n    endLabelTextColor: { from: 'color' },\n\n    pointSize: 6,\n    activePointSize: 8,\n    inactivePointSize: 4,\n    pointColor: { from: 'serie.color' },\n    pointBorderWidth: 0,\n    activePointBorderWidth: 0,\n    inactivePointBorderWidth: 0,\n    pointBorderColor: { from: 'serie.color', modifiers: [['darker', 1.4]] },\n\n    enableGridX: true,\n    enableGridY: true,\n    axisTop: {},\n    axisBottom: {},\n    axisLeft: {},\n\n    isInteractive: true,\n    tooltip: LineTooltip,\n}\n\nexport const BumpDefaultProps = {\n    ...commonDefaultProps,\n    pointComponent: Point,\n    animate: true,\n    motionConfig: 'gentle',\n    role: 'img',\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { useSerieHandlers } from './hooks'\n\nconst Line = ({\n    serie,\n    lineGenerator,\n    yStep,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrentSerie,\n    tooltip,\n}) => {\n    const handlers = useSerieHandlers({\n        serie,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        setCurrent: setCurrentSerie,\n        tooltip,\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const linePath = lineGenerator(serie.linePoints)\n\n    const animatedPath = useAnimatedPath(linePath)\n    const animatedProps = useSpring({\n        color: serie.color,\n        opacity: serie.style.opacity,\n        lineWidth: serie.style.lineWidth,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            <animated.path\n                fill=\"none\"\n                d={animatedPath}\n                stroke={animatedProps.color}\n                strokeWidth={animatedProps.lineWidth}\n                strokeLinecap=\"round\"\n                strokeOpacity={animatedProps.opacity}\n                style={{ pointerEvents: 'none' }}\n            />\n            {isInteractive && (\n                <path\n                    fill=\"none\"\n                    stroke=\"red\"\n                    strokeOpacity={0}\n                    strokeWidth={yStep}\n                    d={linePath}\n                    strokeLinecap=\"butt\"\n                    onMouseEnter={handlers.onMouseEnter}\n                    onMouseMove={handlers.onMouseMove}\n                    onMouseLeave={handlers.onMouseLeave}\n                    onClick={handlers.onClick}\n                />\n            )}\n        </>\n    )\n}\n\nLine.propTypes = {\n    serie: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n        linePoints: PropTypes.array.isRequired,\n        style: PropTypes.shape({\n            lineWidth: PropTypes.number.isRequired,\n            opacity: PropTypes.number.isRequired,\n        }).isRequired,\n    }).isRequired,\n    lineGenerator: PropTypes.func.isRequired,\n    yStep: PropTypes.number.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    setCurrentSerie: PropTypes.func.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport default memo(Line)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSprings, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\nimport { useSeriesLabels } from './hooks'\n\nconst LinesLabels = ({ series, getLabel, position, padding, color }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const labels = useSeriesLabels({\n        series,\n        getLabel,\n        position,\n        padding,\n        color,\n    })\n\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            x: label.x,\n            y: label.y,\n            opacity: label.opacity,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return springs.map((animatedProps, index) => {\n        const label = labels[index]\n\n        return (\n            <animated.text\n                key={label.id}\n                x={animatedProps.x}\n                y={animatedProps.y}\n                textAnchor={label.textAnchor}\n                dominantBaseline=\"central\"\n                opacity={animatedProps.opacity}\n                style={{\n                    ...theme.labels.text,\n                    fill: label.color,\n                }}\n            >\n                {label.label}\n            </animated.text>\n        )\n    })\n}\n\nLinesLabels.propTypes = {\n    series: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    y: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    getLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    position: PropTypes.oneOf(['start', 'end']).isRequired,\n    padding: PropTypes.number.isRequired,\n    color: inheritedColorPropType.isRequired,\n}\n\nexport default memo(LinesLabels)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Points = ({ pointComponent, points }) => {\n    return points.map(point => {\n        return React.createElement(pointComponent, {\n            key: point.id,\n            data: point.data,\n            x: point.x,\n            y: point.y,\n            isActive: point.isActive,\n            isInactive: point.isInactive,\n            size: point.style.size,\n            color: point.color,\n            borderColor: point.borderColor,\n            borderWidth: point.style.borderWidth,\n        })\n    })\n}\n\nPoints.propTypes = {\n    pointComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    points: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.object.isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            isActive: PropTypes.bool.isRequired,\n            isInactive: PropTypes.bool.isRequired,\n            color: PropTypes.string.isRequired,\n            borderColor: PropTypes.string.isRequired,\n            style: PropTypes.shape({\n                size: PropTypes.number.isRequired,\n                borderWidth: PropTypes.number.isRequired,\n            }).isRequired,\n        })\n    ).isRequired,\n}\n\nexport default memo(Points)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useState, Fragment } from 'react'\nimport { withContainer, useDimensions, SvgWrapper } from '@nivo/core'\nimport { Grid, Axes } from '@nivo/axes'\nimport { useBump } from './hooks'\nimport { BumpPropTypes, BumpDefaultProps } from './props'\nimport Line from './Line'\nimport LinesLabels from './LinesLabels'\nimport Points from './Points'\n\nconst Bump = props => {\n    const {\n        data,\n\n        width,\n        height,\n        margin: partialMargin,\n\n        layers,\n\n        interpolation,\n        xPadding,\n        xOuterPadding,\n        yOuterPadding,\n\n        colors,\n        lineWidth,\n        activeLineWidth,\n        inactiveLineWidth,\n        opacity,\n        activeOpacity,\n        inactiveOpacity,\n\n        startLabel,\n        startLabelPadding,\n        startLabelTextColor,\n        endLabel,\n        endLabelPadding,\n        endLabelTextColor,\n\n        pointComponent,\n        pointSize,\n        activePointSize,\n        inactivePointSize,\n        pointColor,\n        pointBorderWidth,\n        activePointBorderWidth,\n        inactivePointBorderWidth,\n        pointBorderColor,\n\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        enableGridX,\n        enableGridY,\n\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const [currentSerie, setCurrentSerie] = useState(null)\n\n    const { series, points, xScale, yScale, lineGenerator } = useBump({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        interpolation,\n        xPadding,\n        xOuterPadding,\n        yOuterPadding,\n        lineWidth,\n        activeLineWidth,\n        inactiveLineWidth,\n        colors,\n        opacity,\n        activeOpacity,\n        inactiveOpacity,\n        pointSize,\n        activePointSize,\n        inactivePointSize,\n        pointColor,\n        pointBorderWidth,\n        activePointBorderWidth,\n        inactivePointBorderWidth,\n        pointBorderColor,\n        startLabel,\n        endLabel,\n        isInteractive,\n        currentSerie,\n    })\n\n    const layerById = {\n        grid: (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n            />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        ),\n        labels: [],\n        lines: (\n            <Fragment key=\"lines\">\n                {series.map(serie => (\n                    <Line\n                        key={serie.id}\n                        serie={serie}\n                        currentSerie={currentSerie}\n                        setCurrentSerie={setCurrentSerie}\n                        lineGenerator={lineGenerator}\n                        yStep={yScale.step()}\n                        margin={margin}\n                        isInteractive={isInteractive}\n                        onMouseEnter={onMouseEnter}\n                        onMouseMove={onMouseMove}\n                        onMouseLeave={onMouseLeave}\n                        onClick={onClick}\n                        tooltip={tooltip}\n                    />\n                ))}\n            </Fragment>\n        ),\n        points: <Points key=\"points\" pointComponent={pointComponent} points={points} />,\n    }\n\n    if (startLabel !== false) {\n        layerById.labels.push(\n            <LinesLabels\n                key=\"start\"\n                series={series}\n                getLabel={startLabel}\n                position=\"start\"\n                padding={startLabelPadding}\n                color={startLabelTextColor}\n            />\n        )\n    }\n    if (endLabel !== false) {\n        layerById.labels.push(\n            <LinesLabels\n                key=\"end\"\n                series={series}\n                getLabel={endLabel}\n                position=\"end\"\n                padding={endLabelPadding}\n                color={endLabelTextColor}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                innerWidth,\n                                innerHeight,\n                                xScale,\n                                yScale,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nBump.propTypes = BumpPropTypes\nBump.defaultProps = BumpDefaultProps\n\nexport default memo(withContainer(Bump))\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Bump from './Bump'\n\nconst ResponsiveBump = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Bump width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveBump\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst AreaTooltip = ({ serie }) => {\n    return <BasicTooltip id={serie.id} enableChip={true} color={serie.color} />\n}\n\nAreaTooltip.propTypes = {\n    serie: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n    }),\n}\n\nexport default memo(AreaTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { motionPropTypes, blendModePropType } from '@nivo/core'\nimport { ordinalColorsPropType, inheritedColorPropType } from '@nivo/colors'\nimport { axisPropType } from '@nivo/axes'\nimport AreaTooltip from './AreaTooltip'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    y: PropTypes.number.isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n\n    align: PropTypes.oneOf(['start', 'middle', 'end']).isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['grid', 'axes', 'labels', 'areas']), PropTypes.func])\n    ).isRequired,\n\n    interpolation: PropTypes.oneOf(['linear', 'smooth']).isRequired,\n    spacing: PropTypes.number.isRequired,\n    xPadding: PropTypes.number.isRequired,\n\n    colors: ordinalColorsPropType.isRequired,\n    blendMode: blendModePropType.isRequired,\n    fillOpacity: PropTypes.number.isRequired,\n    activeFillOpacity: PropTypes.number.isRequired,\n    inactiveFillOpacity: PropTypes.number.isRequired,\n    defs: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n    fill: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string,\n            match: PropTypes.oneOfType([PropTypes.oneOf(['*']), PropTypes.object, PropTypes.func])\n                .isRequired,\n        })\n    ).isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    activeBorderWidth: PropTypes.number.isRequired,\n    inactiveBorderWidth: PropTypes.number.isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n    borderOpacity: PropTypes.number.isRequired,\n    activeBorderOpacity: PropTypes.number.isRequired,\n    inactiveBorderOpacity: PropTypes.number.isRequired,\n\n    startLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    startLabelPadding: PropTypes.number.isRequired,\n    startLabelTextColor: inheritedColorPropType.isRequired,\n    endLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    endLabelPadding: PropTypes.number.isRequired,\n    endLabelTextColor: inheritedColorPropType.isRequired,\n\n    enableGridX: PropTypes.bool.isRequired,\n    axisTop: axisPropType,\n    axisBottom: axisPropType,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport const AreaBumpPropTypes = {\n    ...commonPropTypes,\n    ...motionPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nconst commonDefaultProps = {\n    align: 'middle',\n\n    layers: ['grid', 'axes', 'labels', 'areas'],\n\n    interpolation: 'smooth',\n    spacing: 0,\n    xPadding: 0.6,\n\n    colors: { scheme: 'nivo' },\n    blendMode: 'normal',\n    fillOpacity: 0.8,\n    activeFillOpacity: 1,\n    inactiveFillOpacity: 0.15,\n    defs: [],\n    fill: [],\n    borderWidth: 1,\n    activeBorderWidth: 1,\n    inactiveBorderWidth: 0,\n    borderColor: { from: 'color', modifiers: [['darker', 0.4]] },\n    borderOpacity: 1,\n    activeBorderOpacity: 1,\n    inactiveBorderOpacity: 0,\n\n    startLabel: false,\n    startLabelPadding: 12,\n    startLabelTextColor: { from: 'color', modifiers: [['darker', 1]] },\n    endLabel: 'id',\n    endLabelPadding: 12,\n    endLabelTextColor: { from: 'color', modifiers: [['darker', 1]] },\n\n    enableGridX: true,\n    axisTop: {},\n    axisBottom: {},\n\n    isInteractive: true,\n    tooltip: AreaTooltip,\n}\n\nexport const AreaBumpDefaultProps = {\n    ...commonDefaultProps,\n    animate: true,\n    motionConfig: 'gentle',\n    role: 'img',\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { scalePoint, scaleLinear } from 'd3-scale'\n\nexport const computeSeries = ({ data, width, height, align, spacing, xPadding }) => {\n    const slices = new Map()\n\n    let maxSum = null\n    let maxValues = null\n\n    data.forEach(serie => {\n        serie.data.forEach(datum => {\n            if (!slices.has(datum.x)) {\n                slices.set(datum.x, {\n                    id: datum.x,\n                    total: 0,\n                    values: new Map(),\n                })\n            }\n\n            const slice = slices.get(datum.x)\n\n            const total = slice.total + datum.y\n            slice.total = total\n\n            slice.values.set(serie.id, {\n                serieId: serie.id,\n                value: datum.y,\n            })\n\n            if (total === null || total > maxSum) {\n                maxSum = total\n                maxValues = slice.values.size\n            }\n        })\n    })\n\n    const xScale = scalePoint().domain(Array.from(slices.keys())).range([0, width])\n\n    const heightScale = scaleLinear()\n        .domain([0, maxSum])\n        .range([0, height - maxValues * spacing])\n\n    slices.forEach((slice, x) => {\n        slice.x = xScale(x)\n        const sliceHeight = heightScale(slice.total) + slice.values.size * spacing\n\n        let offset = 0\n        if (align === 'middle') {\n            offset = (height - sliceHeight) / 2\n        } else if (align === 'end') {\n            offset = height - sliceHeight\n        }\n\n        Array.from(slice.values.values())\n            .sort((a, b) => b.value - a.value)\n            .forEach((value, position, all) => {\n                const previousValues = all.filter((i, pos) => pos < position)\n                const beforeValue = previousValues.reduce((t, v) => t + v.value, 0)\n\n                const sliceValue = slice.values.get(value.serieId)\n                sliceValue.position = position\n                sliceValue.height = heightScale(value.value)\n                sliceValue.beforeHeight =\n                    heightScale(beforeValue) + offset + spacing * (previousValues.length + 0.5)\n            })\n    })\n\n    const areaPointPadding = xScale.step() * Math.min(xPadding * 0.5, 0.5)\n\n    const series = data.map(serie => {\n        const serieCopy = { ...serie }\n        serieCopy.points = []\n        serieCopy.areaPoints = []\n        serie.data.forEach((datum, i) => {\n            const slice = slices.get(datum.x)\n            const position = slice.values.get(serie.id)\n\n            const x = slice.x\n            const { beforeHeight, height } = position\n            const y = beforeHeight + height / 2\n            const y0 = beforeHeight\n            const y1 = beforeHeight + height\n\n            serieCopy.points.push({\n                x,\n                y,\n                height,\n                data: { ...datum },\n            })\n            if (i > 0) {\n                serieCopy.areaPoints.push({ x: x - areaPointPadding, y0, y1 })\n            }\n            serieCopy.areaPoints.push({ x, y0, y1 })\n            if (i < serie.data.length - 1) {\n                serieCopy.areaPoints.push({ x: x + areaPointPadding, y0, y1 })\n            }\n        })\n\n        return serieCopy\n    })\n\n    return {\n        xScale,\n        heightScale,\n        series,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useMemo, useCallback } from 'react'\nimport { area as d3Area, curveBasis, curveLinear } from 'd3-shape'\nimport { useTheme } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { computeSeries } from './compute'\n\nexport const useAreaBumpSeries = ({ data, width, height, align, spacing, xPadding }) =>\n    useMemo(() => computeSeries({ data, width, height, align, spacing, xPadding }), [\n        data,\n        width,\n        height,\n        align,\n        spacing,\n        xPadding,\n    ])\n\nexport const useAreaGenerator = interpolation =>\n    useMemo(\n        () =>\n            d3Area()\n                .x(d => d.x)\n                .y0(d => d.y0)\n                .y1(d => d.y1)\n                .curve(interpolation === 'smooth' ? curveBasis : curveLinear),\n        [interpolation]\n    )\n\nexport const useSerieDerivedProp = instruction =>\n    useMemo(() => {\n        if (typeof instruction === 'function') return instruction\n        return () => instruction\n    }, [instruction])\n\nexport const useSerieStyle = ({\n    fillOpacity,\n    activeFillOpacity,\n    inactiveFillOpacity,\n    borderWidth,\n    activeBorderWidth,\n    inactiveBorderWidth,\n    borderColor,\n    borderOpacity,\n    activeBorderOpacity,\n    inactiveBorderOpacity,\n    isInteractive,\n    current,\n}) => {\n    const getFillOpacity = useSerieDerivedProp(fillOpacity)\n    const getActiveFillOpacity = useSerieDerivedProp(activeFillOpacity)\n    const getInactiveFillOpacity = useSerieDerivedProp(inactiveFillOpacity)\n\n    const getBorderWidth = useSerieDerivedProp(borderWidth)\n    const getActiveBorderWidth = useSerieDerivedProp(activeBorderWidth)\n    const getInactiveBorderWidth = useSerieDerivedProp(inactiveBorderWidth)\n\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor(borderColor, theme)\n\n    const getBorderOpacity = useSerieDerivedProp(borderOpacity)\n    const getActiveBorderOpacity = useSerieDerivedProp(activeBorderOpacity)\n    const getInactiveBorderOpacity = useSerieDerivedProp(inactiveBorderOpacity)\n\n    const getNormalStyle = useMemo(\n        () => serie => ({\n            fillOpacity: getFillOpacity(serie),\n            borderWidth: getBorderWidth(serie),\n            borderColor: getBorderColor(serie),\n            borderOpacity: getBorderOpacity(serie),\n        }),\n        [getFillOpacity, getBorderWidth, getBorderColor, getBorderOpacity]\n    )\n    const getActiveStyle = useMemo(\n        () => serie => ({\n            fillOpacity: getActiveFillOpacity(serie),\n            borderWidth: getActiveBorderWidth(serie),\n            borderColor: getBorderColor(serie),\n            borderOpacity: getActiveBorderOpacity(serie),\n        }),\n        [getActiveFillOpacity, getActiveBorderWidth, getBorderColor, getActiveBorderOpacity]\n    )\n    const getInactiveStyle = useMemo(\n        () => serie => ({\n            fillOpacity: getInactiveFillOpacity(serie),\n            borderWidth: getInactiveBorderWidth(serie),\n            borderColor: getBorderColor(serie),\n            borderOpacity: getInactiveBorderOpacity(serie),\n        }),\n        [getInactiveFillOpacity, getInactiveBorderWidth, getBorderColor, getInactiveBorderOpacity]\n    )\n\n    return useMemo(() => {\n        if (!isInteractive) return getNormalStyle\n\n        return serie => {\n            if (current === null) return getNormalStyle(serie)\n            if (serie.id === current) return getActiveStyle(serie)\n            return getInactiveStyle(serie)\n        }\n    }, [getNormalStyle, getActiveStyle, getInactiveStyle, isInteractive, current])\n}\n\nexport const useAreaBump = ({\n    data,\n    width,\n    height,\n    align,\n    spacing,\n    xPadding,\n    interpolation,\n    colors,\n    fillOpacity,\n    activeFillOpacity,\n    inactiveFillOpacity,\n    borderWidth,\n    activeBorderWidth,\n    inactiveBorderWidth,\n    borderColor,\n    borderOpacity,\n    activeBorderOpacity,\n    inactiveBorderOpacity,\n    isInteractive,\n    current,\n}) => {\n    const { series: rawSeries, xScale, heightScale } = useAreaBumpSeries({\n        data,\n        width,\n        height,\n        align,\n        spacing,\n        xPadding,\n    })\n\n    const areaGenerator = useAreaGenerator(interpolation)\n\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const getSerieStyle = useSerieStyle({\n        fillOpacity,\n        activeFillOpacity,\n        inactiveFillOpacity,\n        borderWidth,\n        activeBorderWidth,\n        inactiveBorderWidth,\n        borderColor,\n        borderOpacity,\n        activeBorderOpacity,\n        inactiveBorderOpacity,\n        isInteractive,\n        current,\n    })\n\n    const series = useMemo(\n        () =>\n            rawSeries.map(serie => {\n                serie.color = getColor(serie)\n                serie.style = getSerieStyle(serie)\n\n                return serie\n            }),\n        [rawSeries, getColor, getSerieStyle]\n    )\n\n    return {\n        series,\n        xScale,\n        heightScale,\n        areaGenerator,\n    }\n}\n\nexport const useSerieHandlers = ({\n    serie,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrent,\n    tooltip,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { serie }), event)\n            setCurrent(serie.id)\n            onMouseEnter && onMouseEnter(serie, event)\n        },\n        [serie, onMouseEnter, showTooltipFromEvent, setCurrent]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { serie }), event)\n            onMouseMove && onMouseMove(serie, event)\n        },\n        [serie, onMouseMove, showTooltipFromEvent]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(serie, event)\n        },\n        [serie, onMouseLeave, hideTooltip, setCurrent]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            onClick && onClick(serie, event)\n        },\n        [serie, onClick]\n    )\n\n    const handlers = useMemo(\n        () => ({\n            onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n            onMouseMove: isInteractive ? handleMouseMove : undefined,\n            onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n            onClick: isInteractive ? handleClick : undefined,\n        }),\n        [isInteractive, handleMouseEnter, handleMouseMove, handleMouseLeave, handleClick]\n    )\n\n    return handlers\n}\n\nexport const useSeriesLabels = ({ series, position, padding, color }) => {\n    const theme = useTheme()\n    const getColor = useInheritedColor(color, theme)\n\n    return useMemo(() => {\n        let textAnchor\n        let signedPadding\n        if (position === 'start') {\n            textAnchor = 'end'\n            signedPadding = padding * -1\n        } else {\n            textAnchor = 'start'\n            signedPadding = padding\n        }\n\n        return series.map(serie => {\n            const point =\n                position === 'start' ? serie.points[0] : serie.points[serie.points.length - 1]\n\n            return {\n                id: serie.id,\n                x: point.x + signedPadding,\n                y: point.y,\n                color: getColor(serie),\n                opacity: serie.style.fillOpacity,\n                serie,\n                textAnchor,\n            }\n        })\n    }, [series, position, padding, getColor])\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useAnimatedPath, useMotionConfig, blendModePropType } from '@nivo/core'\nimport { useSerieHandlers } from './hooks'\n\nconst Area = ({\n    serie,\n    areaGenerator,\n    blendMode,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrentSerie,\n    tooltip,\n}) => {\n    const handlers = useSerieHandlers({\n        serie,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        setCurrent: setCurrentSerie,\n        tooltip,\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedPath = useAnimatedPath(areaGenerator(serie.areaPoints))\n    const animatedProps = useSpring({\n        color: serie.color,\n        fillOpacity: serie.style.fillOpacity,\n        stroke: serie.style.borderColor,\n        strokeOpacity: serie.style.borderOpacity,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={serie.fill ? serie.fill : animatedProps.color}\n            fillOpacity={animatedProps.fillOpacity}\n            stroke={animatedProps.stroke}\n            strokeWidth={serie.style.borderWidth}\n            strokeOpacity={animatedProps.strokeOpacity}\n            style={{ mixBlendMode: blendMode }}\n            onMouseEnter={handlers.onMouseEnter}\n            onMouseMove={handlers.onMouseMove}\n            onMouseLeave={handlers.onMouseLeave}\n            onClick={handlers.onClick}\n        />\n    )\n}\n\nArea.propTypes = {\n    serie: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n        fill: PropTypes.string,\n        areaPoints: PropTypes.array.isRequired,\n        style: PropTypes.shape({\n            fillOpacity: PropTypes.number.isRequired,\n            borderWidth: PropTypes.number.isRequired,\n            borderColor: PropTypes.string.isRequired,\n            borderOpacity: PropTypes.number.isRequired,\n        }).isRequired,\n    }).isRequired,\n    areaGenerator: PropTypes.func.isRequired,\n    blendMode: blendModePropType.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    setCurrentSerie: PropTypes.func.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport default memo(Area)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSprings, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\nimport { useSeriesLabels } from './hooks'\n\nconst AreasLabels = ({ series, position, padding, color }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const labels = useSeriesLabels({\n        series,\n        position,\n        padding,\n        color,\n    })\n\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            x: label.x,\n            y: label.y,\n            opacity: label.opacity,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return springs.map((animatedProps, index) => {\n        const label = labels[index]\n\n        return (\n            <animated.text\n                key={label.id}\n                x={animatedProps.x}\n                y={animatedProps.y}\n                textAnchor={label.textAnchor}\n                dominantBaseline=\"central\"\n                opacity={animatedProps.opacity}\n                style={{\n                    ...theme.labels.text,\n                    fill: label.color,\n                }}\n            >\n                {label.id}\n            </animated.text>\n        )\n    })\n}\n\nAreasLabels.propTypes = {\n    series: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    y: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    position: PropTypes.oneOf(['start', 'end']).isRequired,\n    padding: PropTypes.number.isRequired,\n    color: inheritedColorPropType.isRequired,\n}\n\nexport default memo(AreasLabels)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useState, Fragment, useMemo } from 'react'\nimport { bindDefs, withContainer, useDimensions, SvgWrapper } from '@nivo/core'\nimport { Grid, Axes } from '@nivo/axes'\nimport { AreaBumpPropTypes, AreaBumpDefaultProps } from './props'\nimport { useAreaBump } from './hooks'\nimport Area from './Area'\nimport AreasLabels from './AreasLabels'\n\nconst AreaBump = props => {\n    const {\n        data,\n        align,\n\n        width,\n        height,\n        margin: partialMargin,\n\n        layers,\n\n        interpolation,\n        spacing,\n        xPadding,\n\n        colors,\n        blendMode,\n        fillOpacity,\n        activeFillOpacity,\n        inactiveFillOpacity,\n        defs,\n        fill,\n        borderWidth,\n        activeBorderWidth,\n        inactiveBorderWidth,\n        borderColor,\n        borderOpacity,\n        activeBorderOpacity,\n        inactiveBorderOpacity,\n\n        startLabel,\n        startLabelPadding,\n        startLabelTextColor,\n        endLabel,\n        endLabelPadding,\n        endLabelTextColor,\n\n        enableGridX,\n        axisTop,\n        axisBottom,\n\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n        role,\n    } = props\n\n    const [currentSerie, setCurrentSerie] = useState(null)\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { series, xScale, areaGenerator } = useAreaBump({\n        data,\n        width: innerWidth,\n        height: innerHeight,\n        align,\n        spacing,\n        xPadding,\n        interpolation,\n        colors,\n        fillOpacity,\n        activeFillOpacity,\n        inactiveFillOpacity,\n        borderWidth,\n        activeBorderWidth,\n        inactiveBorderWidth,\n        borderColor,\n        borderOpacity,\n        activeBorderOpacity,\n        inactiveBorderOpacity,\n        isInteractive,\n        current: currentSerie,\n    })\n\n    const boundDefs = useMemo(() => bindDefs(defs, series, fill, { targetKey: 'fill' }), [\n        defs,\n        series,\n        fill,\n    ])\n\n    const layerById = {\n        grid: enableGridX && (\n            <Grid key=\"grid\" width={innerWidth} height={innerHeight} xScale={xScale} />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                bottom={axisBottom}\n            />\n        ),\n        labels: [],\n        areas: (\n            <Fragment key=\"areas\">\n                {series.map(serie => (\n                    <Area\n                        key={serie.id}\n                        areaGenerator={areaGenerator}\n                        serie={serie}\n                        blendMode={blendMode}\n                        isInteractive={isInteractive}\n                        setCurrentSerie={setCurrentSerie}\n                        onMouseEnter={onMouseEnter}\n                        onMouseMove={onMouseMove}\n                        onMouseLeave={onMouseLeave}\n                        onClick={onClick}\n                        tooltip={tooltip}\n                    />\n                ))}\n            </Fragment>\n        ),\n    }\n\n    if (startLabel !== false) {\n        layerById.labels.push(\n            <AreasLabels\n                key=\"start\"\n                series={series}\n                position=\"start\"\n                padding={startLabelPadding}\n                color={startLabelTextColor}\n            />\n        )\n    }\n    if (endLabel !== false) {\n        layerById.labels.push(\n            <AreasLabels\n                key=\"end\"\n                series={series}\n                position=\"end\"\n                padding={endLabelPadding}\n                color={endLabelTextColor}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper\n            defs={boundDefs}\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                outerWidth,\n                                outerHeight,\n                                series,\n                                xScale,\n                                areaGenerator,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nAreaBump.propTypes = AreaBumpPropTypes\nAreaBump.defaultProps = AreaBumpDefaultProps\n\nexport default memo(withContainer(AreaBump))\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport AreaBump from './AreaBump'\n\nconst ResponsiveAreaBump = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <AreaBump width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveAreaBump\n"]},"metadata":{},"sourceType":"module"}