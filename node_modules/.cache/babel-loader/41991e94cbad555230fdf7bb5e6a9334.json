{"ast":null,"code":"import _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport React from 'react';\nimport { DeviceEventEmitter, NativeEventEmitter, StyleSheet, View } from 'react-native';\nimport PortalManager from './portal-manager';\nexport var PortalContext = React.createContext(null); // events\n\nvar addType = 'ANT_DESIGN_MOBILE_RN_ADD_PORTAL';\nvar removeType = 'ANT_DESIGN_MOBILE_RN_REMOVE_PORTAL'; // fix react native web does not support DeviceEventEmitter\n\nvar TopViewEventEmitter = DeviceEventEmitter || new NativeEventEmitter();\n\nvar PortalGuard = function PortalGuard() {\n  var _this = this;\n\n  _classCallCheck(this, PortalGuard);\n\n  this.nextKey = 10000;\n\n  this.add = function (e) {\n    var key = _this.nextKey++;\n    TopViewEventEmitter.emit(addType, e, key);\n    return key;\n  };\n\n  this.remove = function (key) {\n    return TopViewEventEmitter.emit(removeType, key);\n  };\n};\n/**\n * portal\n */\n\n\nexport var portal = new PortalGuard();\n/**\n * Portal host renders all of its children `Portal` elements.\n * For example, you can wrap a screen in `Portal.Host` to render items above the screen.\n * If you're using the `Provider` component, it already includes `Portal.Host`.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Text } from 'react-native';\n * import { Portal } from '@ant-design/react-native';\n *\n * export default class MyComponent extends React.Component {\n *   render() {\n *     return (\n *       <Portal.Host>\n *         <Text>Content of the app</Text>\n *       </Portal.Host>\n *     );\n *   }\n * }\n * ```\n *\n * Here any `Portal` elements under `<App />` are rendered alongside `<App />` and will appear above `<App />` like a `Modal`.\n */\n\nvar PortalHost = function (_React$Component) {\n  _inherits(PortalHost, _React$Component);\n\n  function PortalHost() {\n    _classCallCheck(this, PortalHost);\n\n    var _this2 = _possibleConstructorReturn(this, (PortalHost.__proto__ || Object.getPrototypeOf(PortalHost)).apply(this, arguments));\n\n    _this2._nextKey = 0;\n    _this2._queue = [];\n\n    _this2._setManager = function (manager) {\n      _this2._manager = manager;\n    };\n\n    _this2._mount = function (children, _key) {\n      var key = _key || _this2._nextKey++;\n\n      if (_this2._manager) {\n        _this2._manager.mount(key, children);\n      } else {\n        _this2._queue.push({\n          type: 'mount',\n          key: key,\n          children: children\n        });\n      }\n\n      return key;\n    };\n\n    _this2._update = function (key, children) {\n      if (_this2._manager) {\n        _this2._manager.update(key, children);\n      } else {\n        var op = {\n          type: 'mount',\n          key: key,\n          children: children\n        };\n\n        var index = _this2._queue.findIndex(function (o) {\n          return o.type === 'mount' || o.type === 'update' && o.key === key;\n        });\n\n        if (index > -1) {\n          _this2._queue[index] = op;\n        } else {\n          _this2._queue.push(op);\n        }\n      }\n    };\n\n    _this2._unmount = function (key) {\n      if (_this2._manager) {\n        _this2._manager.unmount(key);\n      } else {\n        _this2._queue.push({\n          type: 'unmount',\n          key: key\n        });\n      }\n    };\n\n    return _this2;\n  }\n\n  _createClass(PortalHost, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var manager = this._manager;\n      var queue = this._queue;\n      TopViewEventEmitter.addListener(addType, this._mount);\n      TopViewEventEmitter.addListener(removeType, this._unmount);\n\n      while (queue.length && manager) {\n        var action = queue.pop();\n\n        if (!action) {\n          continue;\n        } // tslint:disable-next-line:switch-default\n\n\n        switch (action.type) {\n          case 'mount':\n            manager.mount(action.key, action.children);\n            break;\n\n          case 'update':\n            manager.update(action.key, action.children);\n            break;\n\n          case 'unmount':\n            manager.unmount(action.key);\n            break;\n        }\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      TopViewEventEmitter.removeListener(addType, this._mount);\n      TopViewEventEmitter.removeListener(removeType, this._unmount);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return React.createElement(PortalContext.Provider, {\n        value: {\n          mount: this._mount,\n          update: this._update,\n          unmount: this._unmount\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        collapsable: false\n      }, this.props.children), React.createElement(PortalManager, {\n        ref: this._setManager\n      }));\n    }\n  }]);\n\n  return PortalHost;\n}(React.Component);\n\nexport default PortalHost;\nPortalHost.displayName = 'Portal.Host';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@ant-design/react-native/es/portal/portal-host.js"],"names":["_createClass","_possibleConstructorReturn","_inherits","_classCallCheck","React","DeviceEventEmitter","NativeEventEmitter","StyleSheet","View","PortalManager","PortalContext","createContext","addType","removeType","TopViewEventEmitter","PortalGuard","_this","nextKey","add","e","key","emit","remove","portal","PortalHost","_React$Component","_this2","__proto__","Object","getPrototypeOf","apply","arguments","_nextKey","_queue","_setManager","manager","_manager","_mount","children","_key","mount","push","type","_update","update","op","index","findIndex","o","_unmount","unmount","value","componentDidMount","queue","addListener","length","action","pop","componentWillUnmount","removeListener","render","createElement","Provider","style","styles","container","collapsable","props","ref","Component","displayName","create","flex"],"mappings":"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","sourcesContent":["import _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport React from 'react';\nimport { DeviceEventEmitter, NativeEventEmitter, StyleSheet, View } from 'react-native';\nimport PortalManager from './portal-manager';\nexport var PortalContext = React.createContext(null);\n// events\nvar addType = 'ANT_DESIGN_MOBILE_RN_ADD_PORTAL';\nvar removeType = 'ANT_DESIGN_MOBILE_RN_REMOVE_PORTAL';\n// fix react native web does not support DeviceEventEmitter\nvar TopViewEventEmitter = DeviceEventEmitter || new NativeEventEmitter();\n\nvar PortalGuard = function PortalGuard() {\n    var _this = this;\n\n    _classCallCheck(this, PortalGuard);\n\n    this.nextKey = 10000;\n    this.add = function (e) {\n        var key = _this.nextKey++;\n        TopViewEventEmitter.emit(addType, e, key);\n        return key;\n    };\n    this.remove = function (key) {\n        return TopViewEventEmitter.emit(removeType, key);\n    };\n};\n/**\n * portal\n */\n\n\nexport var portal = new PortalGuard();\n/**\n * Portal host renders all of its children `Portal` elements.\n * For example, you can wrap a screen in `Portal.Host` to render items above the screen.\n * If you're using the `Provider` component, it already includes `Portal.Host`.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Text } from 'react-native';\n * import { Portal } from '@ant-design/react-native';\n *\n * export default class MyComponent extends React.Component {\n *   render() {\n *     return (\n *       <Portal.Host>\n *         <Text>Content of the app</Text>\n *       </Portal.Host>\n *     );\n *   }\n * }\n * ```\n *\n * Here any `Portal` elements under `<App />` are rendered alongside `<App />` and will appear above `<App />` like a `Modal`.\n */\n\nvar PortalHost = function (_React$Component) {\n    _inherits(PortalHost, _React$Component);\n\n    function PortalHost() {\n        _classCallCheck(this, PortalHost);\n\n        var _this2 = _possibleConstructorReturn(this, (PortalHost.__proto__ || Object.getPrototypeOf(PortalHost)).apply(this, arguments));\n\n        _this2._nextKey = 0;\n        _this2._queue = [];\n        _this2._setManager = function (manager) {\n            _this2._manager = manager;\n        };\n        _this2._mount = function (children, _key) {\n            var key = _key || _this2._nextKey++;\n            if (_this2._manager) {\n                _this2._manager.mount(key, children);\n            } else {\n                _this2._queue.push({ type: 'mount', key: key, children: children });\n            }\n            return key;\n        };\n        _this2._update = function (key, children) {\n            if (_this2._manager) {\n                _this2._manager.update(key, children);\n            } else {\n                var op = { type: 'mount', key: key, children: children };\n                var index = _this2._queue.findIndex(function (o) {\n                    return o.type === 'mount' || o.type === 'update' && o.key === key;\n                });\n                if (index > -1) {\n                    _this2._queue[index] = op;\n                } else {\n                    _this2._queue.push(op);\n                }\n            }\n        };\n        _this2._unmount = function (key) {\n            if (_this2._manager) {\n                _this2._manager.unmount(key);\n            } else {\n                _this2._queue.push({ type: 'unmount', key: key });\n            }\n        };\n        return _this2;\n    }\n\n    _createClass(PortalHost, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var manager = this._manager;\n            var queue = this._queue;\n            TopViewEventEmitter.addListener(addType, this._mount);\n            TopViewEventEmitter.addListener(removeType, this._unmount);\n            while (queue.length && manager) {\n                var action = queue.pop();\n                if (!action) {\n                    continue;\n                }\n                // tslint:disable-next-line:switch-default\n                switch (action.type) {\n                    case 'mount':\n                        manager.mount(action.key, action.children);\n                        break;\n                    case 'update':\n                        manager.update(action.key, action.children);\n                        break;\n                    case 'unmount':\n                        manager.unmount(action.key);\n                        break;\n                }\n            }\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            TopViewEventEmitter.removeListener(addType, this._mount);\n            TopViewEventEmitter.removeListener(removeType, this._unmount);\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            return React.createElement(\n                PortalContext.Provider,\n                { value: {\n                        mount: this._mount,\n                        update: this._update,\n                        unmount: this._unmount\n                    } },\n                React.createElement(\n                    View,\n                    { style: styles.container, collapsable: false },\n                    this.props.children\n                ),\n                React.createElement(PortalManager, { ref: this._setManager })\n            );\n        }\n    }]);\n\n    return PortalHost;\n}(React.Component);\n\nexport default PortalHost;\n\nPortalHost.displayName = 'Portal.Host';\nvar styles = StyleSheet.create({\n    container: {\n        flex: 1\n    }\n});"]},"metadata":{},"sourceType":"module"}