{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar Model_1 = require(\"../../model/Model\");\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nfunction collect(ecModel, api) {\n  var result = {\n    axesInfo: {},\n    seriesInvolved: false,\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api);\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nexports.collect = collect;\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = [];\n  util_1.each(api.getCoordinateSystems(), function (coordSys) {\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys;\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    util_1.each(coordSys.getAxes(), util_1.curry(saveTooltipAxisInfo, false, null));\n\n    if (coordSys.getTooltipAxes && globalTooltipModel && baseTooltipModel.get('show')) {\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get(['axisPointer', 'type']) === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get(['axisPointer', 'axis']));\n\n      if (triggerAxis || cross) {\n        util_1.each(tooltipAxes.baseAxes, util_1.curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        util_1.each(tooltipAxes.otherAxes, util_1.curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    }\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var axisKey = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category';\n      var axisInfo = result.axesInfo[axisKey] = {\n        key: axisKey,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: [],\n        linkGroup: null\n      };\n      axesInfoInCoordSys[axisKey] = axisInfo;\n      result.seriesInvolved = result.seriesInvolved || involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[axisKey] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var fields = ['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'];\n  var volatileOption = {};\n  util_1.each(fields, function (field) {\n    volatileOption[field] = util_1.clone(tooltipAxisPointerModel.get(field));\n  });\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {});\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get(['label', 'show']);\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true;\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && util_1.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model_1[\"default\"](volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  ecModel.eachSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get(['tooltip', 'trigger'], true);\n    var seriesTooltipShow = seriesModel.get(['tooltip', 'show'], true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get(['axisPointer', 'show'], true) === false) {\n      return;\n    }\n\n    util_1.each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  });\n}\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || util_1.isArray(linkPropValue) && util_1.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value');\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel);\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if (value == null || value > extent[1]) {\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nexports.fixValue = fixValue;\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nexports.getAxisInfo = getAxisInfo;\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nexports.getAxisPointerModel = getAxisPointerModel;\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get(['handle', 'show']);\n}\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.makeKey = makeKey;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/component/axisPointer/modelHelper.js"],"names":["exports","__esModule","Model_1","require","util_1","collect","ecModel","api","result","axesInfo","seriesInvolved","coordSysAxesInfo","coordSysMap","collectAxesInfo","collectSeriesInfo","globalTooltipModel","getComponent","globalAxisPointerModel","linksOption","get","linkGroups","each","getCoordinateSystems","coordSys","axisPointerEnabled","coordSysKey","makeKey","model","axesInfoInCoordSys","coordSysModel","baseTooltipModel","getModel","getAxes","curry","saveTooltipAxisInfo","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","fromTooltip","triggerTooltip","axis","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","snap","axisKey","involveSeries","type","axisInfo","key","useHandle","seriesModels","linkGroup","groupIndex","getLinkGroupIndex","mapper","tooltipAxisPointerModel","fields","volatileOption","field","clone","labelOption","label","show","tooltipAxisPointerLabelShow","crossStyle","lineStyle","defaults","textStyle","eachSeries","seriesModel","coordinateSystem","seriesTooltipTrigger","seriesTooltipShow","getAxis","dim","push","seriesDataCount","getData","count","axisModel","i","length","linkOption","checkPropInLink","id","componentIndex","name","linkPropValue","axisPropValue","isArray","indexOf","fixValue","getAxisInfo","scale","option","status","value","parse","extent","getExtent","slice","reverse","isBlank","getAxisPointerModel"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AAEA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAAC,mBAAD,CAArB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,uBAAD,CAApB;;AAEA,SAASE,OAAT,CAAiBC,OAAjB,EAA0BC,GAA1B,EAA+B;AAC7B,MAAIC,MAAM,GAAG;AACXC,IAAAA,QAAQ,EAAE,EADC;AAEXC,IAAAA,cAAc,EAAE,KAFL;AAGXC,IAAAA,gBAAgB,EAAE,EAHP;AAIXC,IAAAA,WAAW,EAAE;AAJF,GAAb;AAMAC,EAAAA,eAAe,CAACL,MAAD,EAASF,OAAT,EAAkBC,GAAlB,CAAf;AACAC,EAAAA,MAAM,CAACE,cAAP,IAAyBI,iBAAiB,CAACN,MAAD,EAASF,OAAT,CAA1C;AACA,SAAOE,MAAP;AACD;;AAEDR,OAAO,CAACK,OAAR,GAAkBA,OAAlB;;AAEA,SAASQ,eAAT,CAAyBL,MAAzB,EAAiCF,OAAjC,EAA0CC,GAA1C,EAA+C;AAC7C,MAAIQ,kBAAkB,GAAGT,OAAO,CAACU,YAAR,CAAqB,SAArB,CAAzB;AACA,MAAIC,sBAAsB,GAAGX,OAAO,CAACU,YAAR,CAAqB,aAArB,CAA7B;AACA,MAAIE,WAAW,GAAGD,sBAAsB,CAACE,GAAvB,CAA2B,MAA3B,EAAmC,IAAnC,KAA4C,EAA9D;AACA,MAAIC,UAAU,GAAG,EAAjB;AACAhB,EAAAA,MAAM,CAACiB,IAAP,CAAYd,GAAG,CAACe,oBAAJ,EAAZ,EAAwC,UAAUC,QAAV,EAAoB;AAC1D,QAAI,CAACA,QAAQ,CAACC,kBAAd,EAAkC;AAChC;AACD;;AAED,QAAIC,WAAW,GAAGC,OAAO,CAACH,QAAQ,CAACI,KAAV,CAAzB;AACA,QAAIC,kBAAkB,GAAGpB,MAAM,CAACG,gBAAP,CAAwBc,WAAxB,IAAuC,EAAhE;AACAjB,IAAAA,MAAM,CAACI,WAAP,CAAmBa,WAAnB,IAAkCF,QAAlC;AACA,QAAIM,aAAa,GAAGN,QAAQ,CAACI,KAA7B;AACA,QAAIG,gBAAgB,GAAGD,aAAa,CAACE,QAAd,CAAuB,SAAvB,EAAkChB,kBAAlC,CAAvB;AACAX,IAAAA,MAAM,CAACiB,IAAP,CAAYE,QAAQ,CAACS,OAAT,EAAZ,EAAgC5B,MAAM,CAAC6B,KAAP,CAAaC,mBAAb,EAAkC,KAAlC,EAAyC,IAAzC,CAAhC;;AAEA,QAAIX,QAAQ,CAACY,cAAT,IAA2BpB,kBAA3B,IAAiDe,gBAAgB,CAACX,GAAjB,CAAqB,MAArB,CAArD,EAAmF;AACjF,UAAIiB,WAAW,GAAGN,gBAAgB,CAACX,GAAjB,CAAqB,SAArB,MAAoC,MAAtD;AACA,UAAIkB,KAAK,GAAGP,gBAAgB,CAACX,GAAjB,CAAqB,CAAC,aAAD,EAAgB,MAAhB,CAArB,MAAkD,OAA9D;AACA,UAAImB,WAAW,GAAGf,QAAQ,CAACY,cAAT,CAAwBL,gBAAgB,CAACX,GAAjB,CAAqB,CAAC,aAAD,EAAgB,MAAhB,CAArB,CAAxB,CAAlB;;AAEA,UAAIiB,WAAW,IAAIC,KAAnB,EAA0B;AACxBjC,QAAAA,MAAM,CAACiB,IAAP,CAAYiB,WAAW,CAACC,QAAxB,EAAkCnC,MAAM,CAAC6B,KAAP,CAAaC,mBAAb,EAAkCG,KAAK,GAAG,OAAH,GAAa,IAApD,EAA0DD,WAA1D,CAAlC;AACD;;AAED,UAAIC,KAAJ,EAAW;AACTjC,QAAAA,MAAM,CAACiB,IAAP,CAAYiB,WAAW,CAACE,SAAxB,EAAmCpC,MAAM,CAAC6B,KAAP,CAAaC,mBAAb,EAAkC,OAAlC,EAA2C,KAA3C,CAAnC;AACD;AACF;;AAED,aAASA,mBAAT,CAA6BO,WAA7B,EAA0CC,cAA1C,EAA0DC,IAA1D,EAAgE;AAC9D,UAAIC,gBAAgB,GAAGD,IAAI,CAAChB,KAAL,CAAWI,QAAX,CAAoB,aAApB,EAAmCd,sBAAnC,CAAvB;AACA,UAAI4B,eAAe,GAAGD,gBAAgB,CAACzB,GAAjB,CAAqB,MAArB,CAAtB;;AAEA,UAAI,CAAC0B,eAAD,IAAoBA,eAAe,KAAK,MAApB,IAA8B,CAACJ,WAA/B,IAA8C,CAACK,eAAe,CAACF,gBAAD,CAAtF,EAA0G;AACxG;AACD;;AAED,UAAIF,cAAc,IAAI,IAAtB,EAA4B;AAC1BA,QAAAA,cAAc,GAAGE,gBAAgB,CAACzB,GAAjB,CAAqB,gBAArB,CAAjB;AACD;;AAEDyB,MAAAA,gBAAgB,GAAGH,WAAW,GAAGM,oBAAoB,CAACJ,IAAD,EAAOb,gBAAP,EAAyBb,sBAAzB,EAAiDX,OAAjD,EAA0DmC,WAA1D,EAAuEC,cAAvE,CAAvB,GAAgHE,gBAA9I;AACA,UAAII,IAAI,GAAGJ,gBAAgB,CAACzB,GAAjB,CAAqB,MAArB,CAAX;AACA,UAAI8B,OAAO,GAAGvB,OAAO,CAACiB,IAAI,CAAChB,KAAN,CAArB;AACA,UAAIuB,aAAa,GAAGR,cAAc,IAAIM,IAAlB,IAA0BL,IAAI,CAACQ,IAAL,KAAc,UAA5D;AACA,UAAIC,QAAQ,GAAG5C,MAAM,CAACC,QAAP,CAAgBwC,OAAhB,IAA2B;AACxCI,QAAAA,GAAG,EAAEJ,OADmC;AAExCN,QAAAA,IAAI,EAAEA,IAFkC;AAGxCpB,QAAAA,QAAQ,EAAEA,QAH8B;AAIxCqB,QAAAA,gBAAgB,EAAEA,gBAJsB;AAKxCF,QAAAA,cAAc,EAAEA,cALwB;AAMxCQ,QAAAA,aAAa,EAAEA,aANyB;AAOxCF,QAAAA,IAAI,EAAEA,IAPkC;AAQxCM,QAAAA,SAAS,EAAER,eAAe,CAACF,gBAAD,CARc;AASxCW,QAAAA,YAAY,EAAE,EAT0B;AAUxCC,QAAAA,SAAS,EAAE;AAV6B,OAA1C;AAYA5B,MAAAA,kBAAkB,CAACqB,OAAD,CAAlB,GAA8BG,QAA9B;AACA5C,MAAAA,MAAM,CAACE,cAAP,GAAwBF,MAAM,CAACE,cAAP,IAAyBwC,aAAjD;AACA,UAAIO,UAAU,GAAGC,iBAAiB,CAACxC,WAAD,EAAcyB,IAAd,CAAlC;;AAEA,UAAIc,UAAU,IAAI,IAAlB,EAAwB;AACtB,YAAID,SAAS,GAAGpC,UAAU,CAACqC,UAAD,CAAV,KAA2BrC,UAAU,CAACqC,UAAD,CAAV,GAAyB;AAClEhD,UAAAA,QAAQ,EAAE;AADwD,SAApD,CAAhB;AAGA+C,QAAAA,SAAS,CAAC/C,QAAV,CAAmBwC,OAAnB,IAA8BG,QAA9B;AACAI,QAAAA,SAAS,CAACG,MAAV,GAAmBzC,WAAW,CAACuC,UAAD,CAAX,CAAwBE,MAA3C;AACAP,QAAAA,QAAQ,CAACI,SAAT,GAAqBA,SAArB;AACD;AACF;AACF,GAnED;AAoED;;AAED,SAAST,oBAAT,CAA8BJ,IAA9B,EAAoCb,gBAApC,EAAsDb,sBAAtD,EAA8EX,OAA9E,EAAuFmC,WAAvF,EAAoGC,cAApG,EAAoH;AAClH,MAAIkB,uBAAuB,GAAG9B,gBAAgB,CAACC,QAAjB,CAA0B,aAA1B,CAA9B;AACA,MAAI8B,MAAM,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,WAAjB,EAA8B,aAA9B,EAA6C,OAA7C,EAAsD,WAAtD,EAAmE,yBAAnE,EAA8F,uBAA9F,EAAuH,GAAvH,CAAb;AACA,MAAIC,cAAc,GAAG,EAArB;AACA1D,EAAAA,MAAM,CAACiB,IAAP,CAAYwC,MAAZ,EAAoB,UAAUE,KAAV,EAAiB;AACnCD,IAAAA,cAAc,CAACC,KAAD,CAAd,GAAwB3D,MAAM,CAAC4D,KAAP,CAAaJ,uBAAuB,CAACzC,GAAxB,CAA4B4C,KAA5B,CAAb,CAAxB;AACD,GAFD;AAGAD,EAAAA,cAAc,CAACd,IAAf,GAAsBL,IAAI,CAACQ,IAAL,KAAc,UAAd,IAA4B,CAAC,CAACT,cAApD;;AAEA,MAAIkB,uBAAuB,CAACzC,GAAxB,CAA4B,MAA5B,MAAwC,OAA5C,EAAqD;AACnD2C,IAAAA,cAAc,CAACX,IAAf,GAAsB,MAAtB;AACD;;AAED,MAAIc,WAAW,GAAGH,cAAc,CAACI,KAAf,KAAyBJ,cAAc,CAACI,KAAf,GAAuB,EAAhD,CAAlB;AACAD,EAAAA,WAAW,CAACE,IAAZ,IAAoB,IAApB,KAA6BF,WAAW,CAACE,IAAZ,GAAmB,KAAhD;;AAEA,MAAI1B,WAAW,KAAK,OAApB,EAA6B;AAC3B,QAAI2B,2BAA2B,GAAGR,uBAAuB,CAACzC,GAAxB,CAA4B,CAAC,OAAD,EAAU,MAAV,CAA5B,CAAlC;AACA8C,IAAAA,WAAW,CAACE,IAAZ,GAAmBC,2BAA2B,IAAI,IAA/B,GAAsCA,2BAAtC,GAAoE,IAAvF;;AAEA,QAAI,CAAC1B,cAAL,EAAqB;AACnB,UAAI2B,UAAU,GAAGP,cAAc,CAACQ,SAAf,GAA2BV,uBAAuB,CAACzC,GAAxB,CAA4B,YAA5B,CAA5C;AACAkD,MAAAA,UAAU,IAAIjE,MAAM,CAACmE,QAAP,CAAgBN,WAAhB,EAA6BI,UAAU,CAACG,SAAxC,CAAd;AACD;AACF;;AAED,SAAO7B,IAAI,CAAChB,KAAL,CAAWI,QAAX,CAAoB,aAApB,EAAmC,IAAI7B,OAAO,CAAC,SAAD,CAAX,CAAuB4D,cAAvB,EAAuC7C,sBAAvC,EAA+DX,OAA/D,CAAnC,CAAP;AACD;;AAED,SAASQ,iBAAT,CAA2BN,MAA3B,EAAmCF,OAAnC,EAA4C;AAC1CA,EAAAA,OAAO,CAACmE,UAAR,CAAmB,UAAUC,WAAV,EAAuB;AACxC,QAAInD,QAAQ,GAAGmD,WAAW,CAACC,gBAA3B;AACA,QAAIC,oBAAoB,GAAGF,WAAW,CAACvD,GAAZ,CAAgB,CAAC,SAAD,EAAY,SAAZ,CAAhB,EAAwC,IAAxC,CAA3B;AACA,QAAI0D,iBAAiB,GAAGH,WAAW,CAACvD,GAAZ,CAAgB,CAAC,SAAD,EAAY,MAAZ,CAAhB,EAAqC,IAArC,CAAxB;;AAEA,QAAI,CAACI,QAAD,IAAaqD,oBAAoB,KAAK,MAAtC,IAAgDA,oBAAoB,KAAK,KAAzE,IAAkFA,oBAAoB,KAAK,MAA3G,IAAqHC,iBAAiB,KAAK,KAA3I,IAAoJH,WAAW,CAACvD,GAAZ,CAAgB,CAAC,aAAD,EAAgB,MAAhB,CAAhB,EAAyC,IAAzC,MAAmD,KAA3M,EAAkN;AAChN;AACD;;AAEDf,IAAAA,MAAM,CAACiB,IAAP,CAAYb,MAAM,CAACG,gBAAP,CAAwBe,OAAO,CAACH,QAAQ,CAACI,KAAV,CAA/B,CAAZ,EAA8D,UAAUyB,QAAV,EAAoB;AAChF,UAAIT,IAAI,GAAGS,QAAQ,CAACT,IAApB;;AAEA,UAAIpB,QAAQ,CAACuD,OAAT,CAAiBnC,IAAI,CAACoC,GAAtB,MAA+BpC,IAAnC,EAAyC;AACvCS,QAAAA,QAAQ,CAACG,YAAT,CAAsByB,IAAtB,CAA2BN,WAA3B;AACAtB,QAAAA,QAAQ,CAAC6B,eAAT,IAA4B,IAA5B,KAAqC7B,QAAQ,CAAC6B,eAAT,GAA2B,CAAhE;AACA7B,QAAAA,QAAQ,CAAC6B,eAAT,IAA4BP,WAAW,CAACQ,OAAZ,GAAsBC,KAAtB,EAA5B;AACD;AACF,KARD;AASD,GAlBD;AAmBD;;AAED,SAASzB,iBAAT,CAA2BxC,WAA3B,EAAwCyB,IAAxC,EAA8C;AAC5C,MAAIyC,SAAS,GAAGzC,IAAI,CAAChB,KAArB;AACA,MAAIoD,GAAG,GAAGpC,IAAI,CAACoC,GAAf;;AAEA,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnE,WAAW,CAACoE,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,QAAIE,UAAU,GAAGrE,WAAW,CAACmE,CAAD,CAAX,IAAkB,EAAnC;;AAEA,QAAIG,eAAe,CAACD,UAAU,CAACR,GAAG,GAAG,QAAP,CAAX,EAA6BK,SAAS,CAACK,EAAvC,CAAf,IAA6DD,eAAe,CAACD,UAAU,CAACR,GAAG,GAAG,WAAP,CAAX,EAAgCK,SAAS,CAACM,cAA1C,CAA5E,IAAyIF,eAAe,CAACD,UAAU,CAACR,GAAG,GAAG,UAAP,CAAX,EAA+BK,SAAS,CAACO,IAAzC,CAA5J,EAA4M;AAC1M,aAAON,CAAP;AACD;AACF;AACF;;AAED,SAASG,eAAT,CAAyBI,aAAzB,EAAwCC,aAAxC,EAAuD;AACrD,SAAOD,aAAa,KAAK,KAAlB,IAA2BxF,MAAM,CAAC0F,OAAP,CAAeF,aAAf,KAAiCxF,MAAM,CAAC2F,OAAP,CAAeH,aAAf,EAA8BC,aAA9B,KAAgD,CAA5G,IAAiHD,aAAa,KAAKC,aAA1I;AACD;;AAED,SAASG,QAAT,CAAkBZ,SAAlB,EAA6B;AAC3B,MAAIhC,QAAQ,GAAG6C,WAAW,CAACb,SAAD,CAA1B;;AAEA,MAAI,CAAChC,QAAL,EAAe;AACb;AACD;;AAED,MAAIR,gBAAgB,GAAGQ,QAAQ,CAACR,gBAAhC;AACA,MAAIsD,KAAK,GAAG9C,QAAQ,CAACT,IAAT,CAAcuD,KAA1B;AACA,MAAIC,MAAM,GAAGvD,gBAAgB,CAACuD,MAA9B;AACA,MAAIC,MAAM,GAAGxD,gBAAgB,CAACzB,GAAjB,CAAqB,QAArB,CAAb;AACA,MAAIkF,KAAK,GAAGzD,gBAAgB,CAACzB,GAAjB,CAAqB,OAArB,CAAZ;;AAEA,MAAIkF,KAAK,IAAI,IAAb,EAAmB;AACjBA,IAAAA,KAAK,GAAGH,KAAK,CAACI,KAAN,CAAYD,KAAZ,CAAR;AACD;;AAED,MAAI/C,SAAS,GAAGR,eAAe,CAACF,gBAAD,CAA/B;;AAEA,MAAIwD,MAAM,IAAI,IAAd,EAAoB;AAClBD,IAAAA,MAAM,CAACC,MAAP,GAAgB9C,SAAS,GAAG,MAAH,GAAY,MAArC;AACD;;AAED,MAAIiD,MAAM,GAAGL,KAAK,CAACM,SAAN,GAAkBC,KAAlB,EAAb;AACAF,EAAAA,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAAC,CAAD,CAAlB,IAAyBA,MAAM,CAACG,OAAP,EAAzB;;AAEA,MAAIL,KAAK,IAAI,IAAT,IAAiBA,KAAK,GAAGE,MAAM,CAAC,CAAD,CAAnC,EAAwC;AACtCF,IAAAA,KAAK,GAAGE,MAAM,CAAC,CAAD,CAAd;AACD;;AAED,MAAIF,KAAK,GAAGE,MAAM,CAAC,CAAD,CAAlB,EAAuB;AACrBF,IAAAA,KAAK,GAAGE,MAAM,CAAC,CAAD,CAAd;AACD;;AAEDJ,EAAAA,MAAM,CAACE,KAAP,GAAeA,KAAf;;AAEA,MAAI/C,SAAJ,EAAe;AACb6C,IAAAA,MAAM,CAACC,MAAP,GAAgBhD,QAAQ,CAACT,IAAT,CAAcuD,KAAd,CAAoBS,OAApB,KAAgC,MAAhC,GAAyC,MAAzD;AACD;AACF;;AAED3G,OAAO,CAACgG,QAAR,GAAmBA,QAAnB;;AAEA,SAASC,WAAT,CAAqBb,SAArB,EAAgC;AAC9B,MAAIzE,gBAAgB,GAAG,CAACyE,SAAS,CAAC9E,OAAV,CAAkBU,YAAlB,CAA+B,aAA/B,KAAiD,EAAlD,EAAsDL,gBAA7E;AACA,SAAOA,gBAAgB,IAAIA,gBAAgB,CAACF,QAAjB,CAA0BiB,OAAO,CAAC0D,SAAD,CAAjC,CAA3B;AACD;;AAEDpF,OAAO,CAACiG,WAAR,GAAsBA,WAAtB;;AAEA,SAASW,mBAAT,CAA6BxB,SAA7B,EAAwC;AACtC,MAAIhC,QAAQ,GAAG6C,WAAW,CAACb,SAAD,CAA1B;AACA,SAAOhC,QAAQ,IAAIA,QAAQ,CAACR,gBAA5B;AACD;;AAED5C,OAAO,CAAC4G,mBAAR,GAA8BA,mBAA9B;;AAEA,SAAS9D,eAAT,CAAyBF,gBAAzB,EAA2C;AACzC,SAAO,CAAC,CAACA,gBAAgB,CAACzB,GAAjB,CAAqB,CAAC,QAAD,EAAW,MAAX,CAArB,CAAT;AACD;;AAED,SAASO,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,SAAOA,KAAK,CAACwB,IAAN,GAAa,IAAb,GAAoBxB,KAAK,CAAC8D,EAAjC;AACD;;AAEDzF,OAAO,CAAC0B,OAAR,GAAkBA,OAAlB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar Model_1 = require(\"../../model/Model\");\n\nvar util_1 = require(\"zrender/lib/core/util\");\n\nfunction collect(ecModel, api) {\n  var result = {\n    axesInfo: {},\n    seriesInvolved: false,\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api);\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nexports.collect = collect;\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = [];\n  util_1.each(api.getCoordinateSystems(), function (coordSys) {\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys;\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    util_1.each(coordSys.getAxes(), util_1.curry(saveTooltipAxisInfo, false, null));\n\n    if (coordSys.getTooltipAxes && globalTooltipModel && baseTooltipModel.get('show')) {\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get(['axisPointer', 'type']) === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get(['axisPointer', 'axis']));\n\n      if (triggerAxis || cross) {\n        util_1.each(tooltipAxes.baseAxes, util_1.curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        util_1.each(tooltipAxes.otherAxes, util_1.curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    }\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var axisKey = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category';\n      var axisInfo = result.axesInfo[axisKey] = {\n        key: axisKey,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: [],\n        linkGroup: null\n      };\n      axesInfoInCoordSys[axisKey] = axisInfo;\n      result.seriesInvolved = result.seriesInvolved || involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[axisKey] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var fields = ['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'];\n  var volatileOption = {};\n  util_1.each(fields, function (field) {\n    volatileOption[field] = util_1.clone(tooltipAxisPointerModel.get(field));\n  });\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {});\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get(['label', 'show']);\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true;\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && util_1.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model_1[\"default\"](volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  ecModel.eachSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get(['tooltip', 'trigger'], true);\n    var seriesTooltipShow = seriesModel.get(['tooltip', 'show'], true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get(['axisPointer', 'show'], true) === false) {\n      return;\n    }\n\n    util_1.each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  });\n}\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || util_1.isArray(linkPropValue) && util_1.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value');\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel);\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if (value == null || value > extent[1]) {\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nexports.fixValue = fixValue;\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nexports.getAxisInfo = getAxisInfo;\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nexports.getAxisPointerModel = getAxisPointerModel;\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get(['handle', 'show']);\n}\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.makeKey = makeKey;"]},"metadata":{},"sourceType":"script"}