{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Adjust = exports.registerAdjust = exports.getAdjust = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar adjust_1 = require(\"./adjusts/adjust\");\n\nexports.Adjust = adjust_1.default;\nvar ADJUST_MAP = {};\n/**\n * 根据类型获取 Adjust 类\n * @param type\n */\n\nvar getAdjust = function (type) {\n  return ADJUST_MAP[type.toLowerCase()];\n};\n\nexports.getAdjust = getAdjust;\n/**\n * 注册自定义 Adjust\n * @param type\n * @param ctor\n */\n\nvar registerAdjust = function (type, ctor) {\n  // 注册的时候，需要校验 type 重名，不区分大小写\n  if (getAdjust(type)) {\n    throw new Error(\"Adjust type '\" + type + \"' existed.\");\n  } // 存储到 map 中\n\n\n  ADJUST_MAP[type.toLowerCase()] = ctor;\n};\n\nexports.registerAdjust = registerAdjust;\n\ntslib_1.__exportStar(require(\"./interface\"), exports);","map":{"version":3,"sources":["../src/factory.ts"],"names":[],"mappings":";;;;;;;;;AAAA,IAAA,QAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AA8BoC,OAAA,CAAA,MAAA,GA9B7B,QAAA,CAAA,OA8B6B;AAxBpC,IAAM,UAAU,GAAkB,EAAlC;AAEA;;;AAGG;;AACH,IAAM,SAAS,GAAG,UAAC,IAAD,EAAa;AAC7B,SAAO,UAAU,CAAC,IAAI,CAAC,WAAL,EAAD,CAAjB;AACD,CAFD;;AAkBS,OAAA,CAAA,SAAA,GAAA,SAAA;AAdT;;;;AAIG;;AACH,IAAM,cAAc,GAAG,UAAC,IAAD,EAAe,IAAf,EAAsC;AAC3D;AACA,MAAI,SAAS,CAAC,IAAD,CAAb,EAAqB;AACnB,UAAM,IAAI,KAAJ,CAAU,kBAAgB,IAAhB,GAAoB,YAA9B,CAAN;AACD,GAJ0D,CAK3D;;;AACA,EAAA,UAAU,CAAC,IAAI,CAAC,WAAL,EAAD,CAAV,GAAiC,IAAjC;AACD,CAPD;;AASoB,OAAA,CAAA,cAAA,GAAA,cAAA;;AAEpB,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,aAAA,CAAA,EAAA,OAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Adjust = exports.registerAdjust = exports.getAdjust = void 0;\nvar tslib_1 = require(\"tslib\");\nvar adjust_1 = require(\"./adjusts/adjust\");\nexports.Adjust = adjust_1.default;\nvar ADJUST_MAP = {};\n/**\n * 根据类型获取 Adjust 类\n * @param type\n */\nvar getAdjust = function (type) {\n    return ADJUST_MAP[type.toLowerCase()];\n};\nexports.getAdjust = getAdjust;\n/**\n * 注册自定义 Adjust\n * @param type\n * @param ctor\n */\nvar registerAdjust = function (type, ctor) {\n    // 注册的时候，需要校验 type 重名，不区分大小写\n    if (getAdjust(type)) {\n        throw new Error(\"Adjust type '\" + type + \"' existed.\");\n    }\n    // 存储到 map 中\n    ADJUST_MAP[type.toLowerCase()] = ctor;\n};\nexports.registerAdjust = registerAdjust;\ntslib_1.__exportStar(require(\"./interface\"), exports);\n//# sourceMappingURL=factory.js.map"]},"metadata":{},"sourceType":"script"}