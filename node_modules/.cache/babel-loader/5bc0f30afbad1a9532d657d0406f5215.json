{"ast":null,"code":"/**\n * @fileOverview layout base file\n * @author shiwu.wyy@antfin.com\n */\nimport { __extends } from \"tslib\"; // import augment from '@antv/util/lib/augment';\n\nimport each from '@antv/util/lib/each';\nimport mix from '@antv/util/lib/mix';\n/**\n * 基础布局，将被自定义布局所继承\n */\n\nvar BaseLayout =\n/** @class */\nfunction () {\n  function BaseLayout() {\n    this.nodes = [];\n    this.edges = [];\n    this.combos = [];\n    this.positions = [];\n    this.destroyed = false;\n  }\n\n  BaseLayout.prototype.init = function (data) {\n    var self = this;\n    self.nodes = data.nodes || [];\n    self.edges = data.edges || [];\n    self.combos = data.combos || [];\n  };\n\n  BaseLayout.prototype.execute = function () {};\n\n  BaseLayout.prototype.layout = function (data) {\n    var self = this;\n    self.init(data);\n    self.execute();\n  };\n\n  BaseLayout.prototype.getDefaultCfg = function () {\n    return {};\n  };\n\n  BaseLayout.prototype.updateCfg = function (cfg) {\n    var self = this;\n    mix(self, cfg);\n  };\n\n  BaseLayout.prototype.destroy = function () {\n    var self = this;\n    self.positions = null;\n    self.nodes = null;\n    self.edges = null;\n    self.destroyed = true;\n  };\n\n  return BaseLayout;\n}();\n\nexport { BaseLayout };\nvar Layout = {\n  /**\n   * 注册布局的方法\n   * @param {string} type 布局类型，外部引用指定必须，不要与已有布局类型重名\n   * @param {object} layout 布局方法\n   */\n  registerLayout: function registerLayout(type, layout, layoutCons) {\n    if (layoutCons === void 0) {\n      layoutCons = BaseLayout;\n    }\n\n    if (!layout) {\n      throw new Error(\"please specify handler for this layout: \" + type);\n    } // tslint:disable-next-line: max-classes-per-file\n\n\n    var GLayout =\n    /** @class */\n    function (_super) {\n      __extends(GLayout, _super);\n\n      function GLayout(cfg) {\n        var _this = _super.call(this) || this;\n\n        var self = _this;\n        var props = {};\n        var defaultCfg = self.getDefaultCfg();\n        mix(props, defaultCfg, layout, cfg);\n        each(props, function (value, key) {\n          self[key] = value;\n        });\n        return _this;\n      }\n\n      return GLayout;\n    }(layoutCons);\n\n    Layout[type] = GLayout;\n  }\n};\nexport default Layout;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/@antv/g6/es/layout/layout.js"],"names":["__extends","each","mix","BaseLayout","nodes","edges","combos","positions","destroyed","prototype","init","data","self","execute","layout","getDefaultCfg","updateCfg","cfg","destroy","Layout","registerLayout","type","layoutCons","Error","GLayout","_super","_this","call","props","defaultCfg","value","key"],"mappings":"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","sourcesContent":["/**\n * @fileOverview layout base file\n * @author shiwu.wyy@antfin.com\n */\nimport { __extends } from \"tslib\"; // import augment from '@antv/util/lib/augment';\n\nimport each from '@antv/util/lib/each';\nimport mix from '@antv/util/lib/mix';\n/**\n * 基础布局，将被自定义布局所继承\n */\n\nvar BaseLayout =\n/** @class */\nfunction () {\n  function BaseLayout() {\n    this.nodes = [];\n    this.edges = [];\n    this.combos = [];\n    this.positions = [];\n    this.destroyed = false;\n  }\n\n  BaseLayout.prototype.init = function (data) {\n    var self = this;\n    self.nodes = data.nodes || [];\n    self.edges = data.edges || [];\n    self.combos = data.combos || [];\n  };\n\n  BaseLayout.prototype.execute = function () {};\n\n  BaseLayout.prototype.layout = function (data) {\n    var self = this;\n    self.init(data);\n    self.execute();\n  };\n\n  BaseLayout.prototype.getDefaultCfg = function () {\n    return {};\n  };\n\n  BaseLayout.prototype.updateCfg = function (cfg) {\n    var self = this;\n    mix(self, cfg);\n  };\n\n  BaseLayout.prototype.destroy = function () {\n    var self = this;\n    self.positions = null;\n    self.nodes = null;\n    self.edges = null;\n    self.destroyed = true;\n  };\n\n  return BaseLayout;\n}();\n\nexport { BaseLayout };\nvar Layout = {\n  /**\n   * 注册布局的方法\n   * @param {string} type 布局类型，外部引用指定必须，不要与已有布局类型重名\n   * @param {object} layout 布局方法\n   */\n  registerLayout: function registerLayout(type, layout, layoutCons) {\n    if (layoutCons === void 0) {\n      layoutCons = BaseLayout;\n    }\n\n    if (!layout) {\n      throw new Error(\"please specify handler for this layout: \" + type);\n    } // tslint:disable-next-line: max-classes-per-file\n\n\n    var GLayout =\n    /** @class */\n    function (_super) {\n      __extends(GLayout, _super);\n\n      function GLayout(cfg) {\n        var _this = _super.call(this) || this;\n\n        var self = _this;\n        var props = {};\n        var defaultCfg = self.getDefaultCfg();\n        mix(props, defaultCfg, layout, cfg);\n        each(props, function (value, key) {\n          self[key] = value;\n        });\n        return _this;\n      }\n\n      return GLayout;\n    }(layoutCons);\n\n    Layout[type] = GLayout;\n  }\n};\nexport default Layout;"]},"metadata":{},"sourceType":"module"}