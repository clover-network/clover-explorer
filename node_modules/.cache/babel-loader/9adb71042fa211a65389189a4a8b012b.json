{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar Clip_1 = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar util_1 = require(\"../core/util\");\n\nvar arraySlice = Array.prototype.slice;\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n\nexports.interpolateNumber = interpolateNumber;\n\nfunction step(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n\nexports.step = step;\n\nfunction interpolate1DArray(out, p0, p1, percent) {\n  var len = p0.length;\n\n  for (var i = 0; i < len; i++) {\n    out[i] = interpolateNumber(p0[i], p1[i], percent);\n  }\n}\n\nexports.interpolate1DArray = interpolate1DArray;\n\nfunction interpolate2DArray(out, p0, p1, percent) {\n  var len = p0.length;\n  var len2 = len && p0[0].length;\n\n  for (var i = 0; i < len; i++) {\n    if (!out[i]) {\n      out[i] = [];\n    }\n\n    for (var j = 0; j < len2; j++) {\n      out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n    }\n  }\n}\n\nexports.interpolate2DArray = interpolate2DArray;\n\nfunction add1DArray(out, p0, p1, sign) {\n  var len = p0.length;\n\n  for (var i = 0; i < len; i++) {\n    out[i] = p0[i] + p1[i] * sign;\n  }\n\n  return out;\n}\n\nfunction add2DArray(out, p0, p1, sign) {\n  var len = p0.length;\n  var len2 = len && p0[0].length;\n\n  for (var i = 0; i < len; i++) {\n    if (!out[i]) {\n      out[i] = [];\n    }\n\n    for (var j = 0; j < len2; j++) {\n      out[i][j] = p0[i][j] + p1[i][j] * sign;\n    }\n  }\n\n  return out;\n}\n\nfunction fillArray(val0, val1, arrDim) {\n  var arr0 = val0;\n  var arr1 = val1;\n\n  if (!arr0.push || !arr1.push) {\n    return;\n  }\n\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      arr0.length = arr1Len;\n    } else {\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  }\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n\nfunction is1DArraySame(arr0, arr1) {\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (arr0[i] !== arr1[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction is2DArraySame(arr0, arr1) {\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  var len2 = arr0[0].length;\n\n  for (var i = 0; i < len; i++) {\n    for (var j = 0; j < len2; j++) {\n      if (arr0[i][j] !== arr1[i][j]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction catmullRomInterpolate1DArray(out, p0, p1, p2, p3, t, t2, t3) {\n  var len = p0.length;\n\n  for (var i = 0; i < len; i++) {\n    out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n  }\n}\n\nfunction catmullRomInterpolate2DArray(out, p0, p1, p2, p3, t, t2, t3) {\n  var len = p0.length;\n  var len2 = p0[0].length;\n\n  for (var i = 0; i < len; i++) {\n    if (!out[i]) {\n      out[1] = [];\n    }\n\n    for (var j = 0; j < len2; j++) {\n      out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n    }\n  }\n}\n\nfunction cloneValue(value) {\n  if (util_1.isArrayLike(value)) {\n    var len = value.length;\n\n    if (util_1.isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nexports.cloneValue = cloneValue;\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction guessArrayDim(value) {\n  return util_1.isArrayLike(value && value[0]) ? 2 : 1;\n}\n\nvar tmpRgba = [0, 0, 0, 0];\n\nvar Track = function () {\n  function Track(propName) {\n    this.keyframes = [];\n    this.maxTime = 0;\n    this.arrDim = 0;\n    this.interpolable = true;\n    this._needsSort = false;\n    this._isAllValueEqual = true;\n    this._lastFrame = 0;\n    this._lastFramePercent = 0;\n    this.propName = propName;\n  }\n\n  Track.prototype.isFinished = function () {\n    return this._finished;\n  };\n\n  Track.prototype.setFinished = function () {\n    this._finished = true;\n\n    if (this._additiveTrack) {\n      this._additiveTrack.setFinished();\n    }\n  };\n\n  Track.prototype.needsAnimate = function () {\n    return !this._isAllValueEqual && this.keyframes.length >= 2 && this.interpolable;\n  };\n\n  Track.prototype.getAdditiveTrack = function () {\n    return this._additiveTrack;\n  };\n\n  Track.prototype.addKeyframe = function (time, value) {\n    if (time >= this.maxTime) {\n      this.maxTime = time;\n    } else {\n      this._needsSort = true;\n    }\n\n    var keyframes = this.keyframes;\n    var len = keyframes.length;\n\n    if (this.interpolable) {\n      if (util_1.isArrayLike(value)) {\n        var arrayDim = guessArrayDim(value);\n\n        if (len > 0 && this.arrDim !== arrayDim) {\n          this.interpolable = false;\n          return;\n        }\n\n        if (arrayDim === 1 && typeof value[0] !== 'number' || arrayDim === 2 && typeof value[0][0] !== 'number') {\n          this.interpolable = false;\n          return;\n        }\n\n        if (len > 0) {\n          var lastFrame = keyframes[len - 1];\n\n          if (this._isAllValueEqual) {\n            if (arrayDim === 1) {\n              if (!is1DArraySame(value, lastFrame.value)) {\n                this._isAllValueEqual = false;\n              }\n            } else {\n              this._isAllValueEqual = false;\n            }\n          }\n        }\n\n        this.arrDim = arrayDim;\n      } else {\n        if (this.arrDim > 0) {\n          this.interpolable = false;\n          return;\n        }\n\n        if (typeof value === 'string') {\n          var colorArray = color.parse(value);\n\n          if (colorArray) {\n            value = colorArray;\n            this.isValueColor = true;\n          } else {\n            this.interpolable = false;\n          }\n        } else if (typeof value !== 'number') {\n          this.interpolable = false;\n          return;\n        }\n\n        if (this._isAllValueEqual && len > 0) {\n          var lastFrame = keyframes[len - 1];\n\n          if (this.isValueColor && !is1DArraySame(lastFrame.value, value)) {\n            this._isAllValueEqual = false;\n          } else if (lastFrame.value !== value) {\n            this._isAllValueEqual = false;\n          }\n        }\n      }\n    }\n\n    var kf = {\n      time: time,\n      value: value,\n      percent: 0\n    };\n    this.keyframes.push(kf);\n    return kf;\n  };\n\n  Track.prototype.prepare = function (additiveTrack) {\n    var kfs = this.keyframes;\n\n    if (this._needsSort) {\n      kfs.sort(function (a, b) {\n        return a.time - b.time;\n      });\n    }\n\n    var arrDim = this.arrDim;\n    var kfsLen = kfs.length;\n    var lastKf = kfs[kfsLen - 1];\n\n    for (var i = 0; i < kfsLen; i++) {\n      kfs[i].percent = kfs[i].time / this.maxTime;\n\n      if (arrDim > 0 && i !== kfsLen - 1) {\n        fillArray(kfs[i].value, lastKf.value, arrDim);\n      }\n    }\n\n    if (additiveTrack && this.needsAnimate() && additiveTrack.needsAnimate() && arrDim === additiveTrack.arrDim && this.isValueColor === additiveTrack.isValueColor && !additiveTrack._finished) {\n      this._additiveTrack = additiveTrack;\n      var startValue = kfs[0].value;\n\n      for (var i = 0; i < kfsLen; i++) {\n        if (arrDim === 0) {\n          if (this.isValueColor) {\n            kfs[i].additiveValue = add1DArray([], kfs[i].value, startValue, -1);\n          } else {\n            kfs[i].additiveValue = kfs[i].value - startValue;\n          }\n        } else if (arrDim === 1) {\n          kfs[i].additiveValue = add1DArray([], kfs[i].value, startValue, -1);\n        } else if (arrDim === 2) {\n          kfs[i].additiveValue = add2DArray([], kfs[i].value, startValue, -1);\n        }\n      }\n    }\n  };\n\n  Track.prototype.step = function (target, percent) {\n    if (this._finished) {\n      return;\n    }\n\n    if (this._additiveTrack && this._additiveTrack._finished) {\n      this._additiveTrack = null;\n    }\n\n    var isAdditive = this._additiveTrack != null;\n    var valueKey = isAdditive ? 'additiveValue' : 'value';\n    var keyframes = this.keyframes;\n    var kfsNum = this.keyframes.length;\n    var propName = this.propName;\n    var arrDim = this.arrDim;\n    var isValueColor = this.isValueColor;\n    var frameIdx;\n\n    if (percent < 0) {\n      frameIdx = 0;\n    } else if (percent < this._lastFramePercent) {\n      var start = Math.min(this._lastFrame + 1, kfsNum - 1);\n\n      for (frameIdx = start; frameIdx >= 0; frameIdx--) {\n        if (keyframes[frameIdx].percent <= percent) {\n          break;\n        }\n      }\n\n      frameIdx = Math.min(frameIdx, kfsNum - 2);\n    } else {\n      for (frameIdx = this._lastFrame; frameIdx < kfsNum; frameIdx++) {\n        if (keyframes[frameIdx].percent > percent) {\n          break;\n        }\n      }\n\n      frameIdx = Math.min(frameIdx - 1, kfsNum - 2);\n    }\n\n    var nextFrame = keyframes[frameIdx + 1];\n    var frame = keyframes[frameIdx];\n\n    if (!(frame && nextFrame)) {\n      return;\n    }\n\n    this._lastFrame = frameIdx;\n    this._lastFramePercent = percent;\n    var range = nextFrame.percent - frame.percent;\n\n    if (range === 0) {\n      return;\n    }\n\n    var w = (percent - frame.percent) / range;\n    var targetArr = isAdditive ? this._additiveValue : isValueColor ? tmpRgba : target[propName];\n\n    if ((arrDim > 0 || isValueColor) && !targetArr) {\n      targetArr = this._additiveValue = [];\n    }\n\n    if (this.useSpline) {\n      var p1 = keyframes[frameIdx][valueKey];\n      var p0 = keyframes[frameIdx === 0 ? frameIdx : frameIdx - 1][valueKey];\n      var p2 = keyframes[frameIdx > kfsNum - 2 ? kfsNum - 1 : frameIdx + 1][valueKey];\n      var p3 = keyframes[frameIdx > kfsNum - 3 ? kfsNum - 1 : frameIdx + 2][valueKey];\n\n      if (arrDim > 0) {\n        arrDim === 1 ? catmullRomInterpolate1DArray(targetArr, p0, p1, p2, p3, w, w * w, w * w * w) : catmullRomInterpolate2DArray(targetArr, p0, p1, p2, p3, w, w * w, w * w * w);\n      } else if (isValueColor) {\n        catmullRomInterpolate1DArray(targetArr, p0, p1, p2, p3, w, w * w, w * w * w);\n\n        if (!isAdditive) {\n          target[propName] = rgba2String(targetArr);\n        }\n      } else {\n        var value = void 0;\n\n        if (!this.interpolable) {\n          value = p2;\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        if (isAdditive) {\n          this._additiveValue = value;\n        } else {\n          target[propName] = value;\n        }\n      }\n    } else {\n      if (arrDim > 0) {\n        arrDim === 1 ? interpolate1DArray(targetArr, frame[valueKey], nextFrame[valueKey], w) : interpolate2DArray(targetArr, frame[valueKey], nextFrame[valueKey], w);\n      } else if (isValueColor) {\n        interpolate1DArray(targetArr, frame[valueKey], nextFrame[valueKey], w);\n\n        if (!isAdditive) {\n          target[propName] = rgba2String(targetArr);\n        }\n      } else {\n        var value = void 0;\n\n        if (!this.interpolable) {\n          value = step(frame[valueKey], nextFrame[valueKey], w);\n        } else {\n          value = interpolateNumber(frame[valueKey], nextFrame[valueKey], w);\n        }\n\n        if (isAdditive) {\n          this._additiveValue = value;\n        } else {\n          target[propName] = value;\n        }\n      }\n    }\n\n    if (isAdditive) {\n      this._addToTarget(target);\n    }\n  };\n\n  Track.prototype._addToTarget = function (target) {\n    var arrDim = this.arrDim;\n    var propName = this.propName;\n    var additiveValue = this._additiveValue;\n\n    if (arrDim === 0) {\n      if (this.isValueColor) {\n        color.parse(target[propName], tmpRgba);\n        add1DArray(tmpRgba, tmpRgba, additiveValue, 1);\n        target[propName] = rgba2String(tmpRgba);\n      } else {\n        target[propName] = target[propName] + additiveValue;\n      }\n    } else if (arrDim === 1) {\n      add1DArray(target[propName], target[propName], additiveValue, 1);\n    } else if (arrDim === 2) {\n      add2DArray(target[propName], target[propName], additiveValue, 1);\n    }\n  };\n\n  return Track;\n}();\n\nvar Animator = function () {\n  function Animator(target, loop, additiveTo) {\n    this._tracks = {};\n    this._trackKeys = [];\n    this._delay = 0;\n    this._maxTime = 0;\n    this._paused = false;\n    this._started = 0;\n    this._clip = null;\n    this._target = target;\n    this._loop = loop;\n\n    if (loop && additiveTo) {\n      util_1.logError('Can\\' use additive animation on looped animation.');\n      return;\n    }\n\n    this._additiveAnimators = additiveTo;\n  }\n\n  Animator.prototype.getTarget = function () {\n    return this._target;\n  };\n\n  Animator.prototype.changeTarget = function (target) {\n    this._target = target;\n  };\n\n  Animator.prototype.when = function (time, props) {\n    return this.whenWithKeys(time, props, util_1.keys(props));\n  };\n\n  Animator.prototype.whenWithKeys = function (time, props, propNames) {\n    var tracks = this._tracks;\n\n    for (var i = 0; i < propNames.length; i++) {\n      var propName = propNames[i];\n      var track = tracks[propName];\n\n      if (!track) {\n        track = tracks[propName] = new Track(propName);\n        var initialValue = void 0;\n\n        var additiveTrack = this._getAdditiveTrack(propName);\n\n        if (additiveTrack) {\n          var lastFinalKf = additiveTrack.keyframes[additiveTrack.keyframes.length - 1];\n          initialValue = lastFinalKf && lastFinalKf.value;\n\n          if (additiveTrack.isValueColor && initialValue) {\n            initialValue = rgba2String(initialValue);\n          }\n        } else {\n          initialValue = this._target[propName];\n        }\n\n        if (initialValue == null) {\n          continue;\n        }\n\n        if (time !== 0) {\n          track.addKeyframe(0, cloneValue(initialValue));\n        }\n\n        this._trackKeys.push(propName);\n      }\n\n      track.addKeyframe(time, cloneValue(props[propName]));\n    }\n\n    this._maxTime = Math.max(this._maxTime, time);\n    return this;\n  };\n\n  Animator.prototype.pause = function () {\n    this._clip.pause();\n\n    this._paused = true;\n  };\n\n  Animator.prototype.resume = function () {\n    this._clip.resume();\n\n    this._paused = false;\n  };\n\n  Animator.prototype.isPaused = function () {\n    return !!this._paused;\n  };\n\n  Animator.prototype._doneCallback = function () {\n    this._setTracksFinished();\n\n    this._clip = null;\n    var doneList = this._doneList;\n\n    if (doneList) {\n      var len = doneList.length;\n\n      for (var i = 0; i < len; i++) {\n        doneList[i].call(this);\n      }\n    }\n  };\n\n  Animator.prototype._abortedCallback = function () {\n    this._setTracksFinished();\n\n    var animation = this.animation;\n    var abortedList = this._abortedList;\n\n    if (animation) {\n      animation.removeClip(this._clip);\n    }\n\n    this._clip = null;\n\n    if (abortedList) {\n      for (var i = 0; i < abortedList.length; i++) {\n        abortedList[i].call(this);\n      }\n    }\n  };\n\n  Animator.prototype._setTracksFinished = function () {\n    var tracks = this._tracks;\n    var tracksKeys = this._trackKeys;\n\n    for (var i = 0; i < tracksKeys.length; i++) {\n      tracks[tracksKeys[i]].setFinished();\n    }\n  };\n\n  Animator.prototype._getAdditiveTrack = function (trackName) {\n    var additiveTrack;\n    var additiveAnimators = this._additiveAnimators;\n\n    if (additiveAnimators) {\n      for (var i = 0; i < additiveAnimators.length; i++) {\n        var track = additiveAnimators[i].getTrack(trackName);\n\n        if (track) {\n          additiveTrack = track;\n        }\n      }\n    }\n\n    return additiveTrack;\n  };\n\n  Animator.prototype.start = function (easing, forceAnimate) {\n    if (this._started > 0) {\n      return;\n    }\n\n    this._started = 1;\n    var self = this;\n    var tracks = [];\n\n    for (var i = 0; i < this._trackKeys.length; i++) {\n      var propName = this._trackKeys[i];\n      var track = this._tracks[propName];\n\n      var additiveTrack = this._getAdditiveTrack(propName);\n\n      var kfs = track.keyframes;\n      track.prepare(additiveTrack);\n\n      if (track.needsAnimate()) {\n        tracks.push(track);\n      } else if (!track.interpolable) {\n        var lastKf = kfs[kfs.length - 1];\n\n        if (lastKf) {\n          self._target[track.propName] = lastKf.value;\n        }\n      }\n    }\n\n    if (tracks.length || forceAnimate) {\n      var clip = new Clip_1[\"default\"]({\n        life: this._maxTime,\n        loop: this._loop,\n        delay: this._delay,\n        onframe: function (percent) {\n          self._started = 2;\n          var additiveAnimators = self._additiveAnimators;\n\n          if (additiveAnimators) {\n            var stillHasAdditiveAnimator = false;\n\n            for (var i = 0; i < additiveAnimators.length; i++) {\n              if (additiveAnimators[i]._clip) {\n                stillHasAdditiveAnimator = true;\n                break;\n              }\n            }\n\n            if (!stillHasAdditiveAnimator) {\n              self._additiveAnimators = null;\n            }\n          }\n\n          for (var i = 0; i < tracks.length; i++) {\n            tracks[i].step(self._target, percent);\n          }\n\n          var onframeList = self._onframeList;\n\n          if (onframeList) {\n            for (var i = 0; i < onframeList.length; i++) {\n              onframeList[i](self._target, percent);\n            }\n          }\n        },\n        ondestroy: function () {\n          self._doneCallback();\n        }\n      });\n      this._clip = clip;\n\n      if (this.animation) {\n        this.animation.addClip(clip);\n      }\n\n      if (easing && easing !== 'spline') {\n        clip.easing = easing;\n      }\n    } else {\n      this._doneCallback();\n    }\n\n    return this;\n  };\n\n  Animator.prototype.stop = function (forwardToLast) {\n    if (!this._clip) {\n      return;\n    }\n\n    var clip = this._clip;\n\n    if (forwardToLast) {\n      clip.onframe(1);\n    }\n\n    this._abortedCallback();\n  };\n\n  Animator.prototype.delay = function (time) {\n    this._delay = time;\n    return this;\n  };\n\n  Animator.prototype.during = function (cb) {\n    if (cb) {\n      if (!this._onframeList) {\n        this._onframeList = [];\n      }\n\n      this._onframeList.push(cb);\n    }\n\n    return this;\n  };\n\n  Animator.prototype.done = function (cb) {\n    if (cb) {\n      if (!this._doneList) {\n        this._doneList = [];\n      }\n\n      this._doneList.push(cb);\n    }\n\n    return this;\n  };\n\n  Animator.prototype.aborted = function (cb) {\n    if (cb) {\n      if (!this._abortedList) {\n        this._abortedList = [];\n      }\n\n      this._abortedList.push(cb);\n    }\n\n    return this;\n  };\n\n  Animator.prototype.getClip = function () {\n    return this._clip;\n  };\n\n  Animator.prototype.getTrack = function (propName) {\n    return this._tracks[propName];\n  };\n\n  Animator.prototype.stopTracks = function (propNames, forwardToLast) {\n    if (!propNames.length || !this._clip) {\n      return true;\n    }\n\n    var tracks = this._tracks;\n    var tracksKeys = this._trackKeys;\n\n    for (var i = 0; i < propNames.length; i++) {\n      var track = tracks[propNames[i]];\n\n      if (track) {\n        if (forwardToLast) {\n          track.step(this._target, 1);\n        } else if (this._started === 1) {\n          track.step(this._target, 0);\n        }\n\n        track.setFinished();\n      }\n    }\n\n    var allAborted = true;\n\n    for (var i = 0; i < tracksKeys.length; i++) {\n      if (!tracks[tracksKeys[i]].isFinished()) {\n        allAborted = false;\n        break;\n      }\n    }\n\n    if (allAborted) {\n      this._abortedCallback();\n    }\n\n    return allAborted;\n  };\n\n  Animator.prototype.saveFinalToTarget = function (target, trackKeys) {\n    if (!target) {\n      return;\n    }\n\n    trackKeys = trackKeys || this._trackKeys;\n\n    for (var i = 0; i < trackKeys.length; i++) {\n      var propName = trackKeys[i];\n      var track = this._tracks[propName];\n\n      if (!track || track.isFinished()) {\n        continue;\n      }\n\n      var kfs = track.keyframes;\n      var lastKf = kfs[kfs.length - 1];\n\n      if (lastKf) {\n        var val = cloneValue(lastKf.value);\n\n        if (track.isValueColor) {\n          val = rgba2String(val);\n        }\n\n        target[propName] = val;\n      }\n    }\n  };\n\n  Animator.prototype.__changeFinalValue = function (finalProps, trackKeys) {\n    trackKeys = trackKeys || util_1.keys(finalProps);\n\n    for (var i = 0; i < trackKeys.length; i++) {\n      var propName = trackKeys[i];\n      var track = this._tracks[propName];\n\n      if (!track) {\n        continue;\n      }\n\n      var kfs = track.keyframes;\n\n      if (kfs.length > 1) {\n        var lastKf = kfs.pop();\n        track.addKeyframe(lastKf.time, finalProps[propName]);\n        track.prepare(track.getAdditiveTrack());\n      }\n    }\n  };\n\n  return Animator;\n}();\n\nexports[\"default\"] = Animator;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/zrender/lib/animation/Animator.js"],"names":["exports","__esModule","Clip_1","require","color","util_1","arraySlice","Array","prototype","slice","interpolateNumber","p0","p1","percent","step","interpolate1DArray","out","len","length","i","interpolate2DArray","len2","j","add1DArray","sign","add2DArray","fillArray","val0","val1","arrDim","arr0","arr1","push","arr0Len","arr1Len","isPreviousLarger","call","isNaN","is1DArraySame","is2DArraySame","catmullRomInterpolate","p2","p3","t","t2","t3","v0","v1","catmullRomInterpolate1DArray","catmullRomInterpolate2DArray","cloneValue","value","isArrayLike","ret","rgba2String","rgba","Math","floor","join","guessArrayDim","tmpRgba","Track","propName","keyframes","maxTime","interpolable","_needsSort","_isAllValueEqual","_lastFrame","_lastFramePercent","isFinished","_finished","setFinished","_additiveTrack","needsAnimate","getAdditiveTrack","addKeyframe","time","arrayDim","lastFrame","colorArray","parse","isValueColor","kf","prepare","additiveTrack","kfs","sort","a","b","kfsLen","lastKf","startValue","additiveValue","target","isAdditive","valueKey","kfsNum","frameIdx","start","min","nextFrame","frame","range","w","targetArr","_additiveValue","useSpline","_addToTarget","Animator","loop","additiveTo","_tracks","_trackKeys","_delay","_maxTime","_paused","_started","_clip","_target","_loop","logError","_additiveAnimators","getTarget","changeTarget","when","props","whenWithKeys","keys","propNames","tracks","track","initialValue","_getAdditiveTrack","lastFinalKf","max","pause","resume","isPaused","_doneCallback","_setTracksFinished","doneList","_doneList","_abortedCallback","animation","abortedList","_abortedList","removeClip","tracksKeys","trackName","additiveAnimators","getTrack","easing","forceAnimate","self","clip","life","delay","onframe","stillHasAdditiveAnimator","onframeList","_onframeList","ondestroy","addClip","stop","forwardToLast","during","cb","done","aborted","getClip","stopTracks","allAborted","saveFinalToTarget","trackKeys","val","__changeFinalValue","finalProps","pop"],"mappings":"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","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar Clip_1 = require(\"./Clip\");\nvar color = require(\"../tool/color\");\nvar util_1 = require(\"../core/util\");\nvar arraySlice = Array.prototype.slice;\nfunction interpolateNumber(p0, p1, percent) {\n    return (p1 - p0) * percent + p0;\n}\nexports.interpolateNumber = interpolateNumber;\nfunction step(p0, p1, percent) {\n    return percent > 0.5 ? p1 : p0;\n}\nexports.step = step;\nfunction interpolate1DArray(out, p0, p1, percent) {\n    var len = p0.length;\n    for (var i = 0; i < len; i++) {\n        out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n}\nexports.interpolate1DArray = interpolate1DArray;\nfunction interpolate2DArray(out, p0, p1, percent) {\n    var len = p0.length;\n    var len2 = len && p0[0].length;\n    for (var i = 0; i < len; i++) {\n        if (!out[i]) {\n            out[i] = [];\n        }\n        for (var j = 0; j < len2; j++) {\n            out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n        }\n    }\n}\nexports.interpolate2DArray = interpolate2DArray;\nfunction add1DArray(out, p0, p1, sign) {\n    var len = p0.length;\n    for (var i = 0; i < len; i++) {\n        out[i] = p0[i] + p1[i] * sign;\n    }\n    return out;\n}\nfunction add2DArray(out, p0, p1, sign) {\n    var len = p0.length;\n    var len2 = len && p0[0].length;\n    for (var i = 0; i < len; i++) {\n        if (!out[i]) {\n            out[i] = [];\n        }\n        for (var j = 0; j < len2; j++) {\n            out[i][j] = p0[i][j] + p1[i][j] * sign;\n        }\n    }\n    return out;\n}\nfunction fillArray(val0, val1, arrDim) {\n    var arr0 = val0;\n    var arr1 = val1;\n    if (!arr0.push || !arr1.push) {\n        return;\n    }\n    var arr0Len = arr0.length;\n    var arr1Len = arr1.length;\n    if (arr0Len !== arr1Len) {\n        var isPreviousLarger = arr0Len > arr1Len;\n        if (isPreviousLarger) {\n            arr0.length = arr1Len;\n        }\n        else {\n            for (var i = arr0Len; i < arr1Len; i++) {\n                arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n            }\n        }\n    }\n    var len2 = arr0[0] && arr0[0].length;\n    for (var i = 0; i < arr0.length; i++) {\n        if (arrDim === 1) {\n            if (isNaN(arr0[i])) {\n                arr0[i] = arr1[i];\n            }\n        }\n        else {\n            for (var j = 0; j < len2; j++) {\n                if (isNaN(arr0[i][j])) {\n                    arr0[i][j] = arr1[i][j];\n                }\n            }\n        }\n    }\n}\nfunction is1DArraySame(arr0, arr1) {\n    var len = arr0.length;\n    if (len !== arr1.length) {\n        return false;\n    }\n    for (var i = 0; i < len; i++) {\n        if (arr0[i] !== arr1[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction is2DArraySame(arr0, arr1) {\n    var len = arr0.length;\n    if (len !== arr1.length) {\n        return false;\n    }\n    var len2 = arr0[0].length;\n    for (var i = 0; i < len; i++) {\n        for (var j = 0; j < len2; j++) {\n            if (arr0[i][j] !== arr1[i][j]) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n    var v0 = (p2 - p0) * 0.5;\n    var v1 = (p3 - p1) * 0.5;\n    return (2 * (p1 - p2) + v0 + v1) * t3\n        + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n        + v0 * t + p1;\n}\nfunction catmullRomInterpolate1DArray(out, p0, p1, p2, p3, t, t2, t3) {\n    var len = p0.length;\n    for (var i = 0; i < len; i++) {\n        out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n}\nfunction catmullRomInterpolate2DArray(out, p0, p1, p2, p3, t, t2, t3) {\n    var len = p0.length;\n    var len2 = p0[0].length;\n    for (var i = 0; i < len; i++) {\n        if (!out[i]) {\n            out[1] = [];\n        }\n        for (var j = 0; j < len2; j++) {\n            out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n        }\n    }\n}\nfunction cloneValue(value) {\n    if (util_1.isArrayLike(value)) {\n        var len = value.length;\n        if (util_1.isArrayLike(value[0])) {\n            var ret = [];\n            for (var i = 0; i < len; i++) {\n                ret.push(arraySlice.call(value[i]));\n            }\n            return ret;\n        }\n        return arraySlice.call(value);\n    }\n    return value;\n}\nexports.cloneValue = cloneValue;\nfunction rgba2String(rgba) {\n    rgba[0] = Math.floor(rgba[0]);\n    rgba[1] = Math.floor(rgba[1]);\n    rgba[2] = Math.floor(rgba[2]);\n    return 'rgba(' + rgba.join(',') + ')';\n}\nfunction guessArrayDim(value) {\n    return util_1.isArrayLike(value && value[0]) ? 2 : 1;\n}\nvar tmpRgba = [0, 0, 0, 0];\nvar Track = (function () {\n    function Track(propName) {\n        this.keyframes = [];\n        this.maxTime = 0;\n        this.arrDim = 0;\n        this.interpolable = true;\n        this._needsSort = false;\n        this._isAllValueEqual = true;\n        this._lastFrame = 0;\n        this._lastFramePercent = 0;\n        this.propName = propName;\n    }\n    Track.prototype.isFinished = function () {\n        return this._finished;\n    };\n    Track.prototype.setFinished = function () {\n        this._finished = true;\n        if (this._additiveTrack) {\n            this._additiveTrack.setFinished();\n        }\n    };\n    Track.prototype.needsAnimate = function () {\n        return !this._isAllValueEqual && this.keyframes.length >= 2 && this.interpolable;\n    };\n    Track.prototype.getAdditiveTrack = function () {\n        return this._additiveTrack;\n    };\n    Track.prototype.addKeyframe = function (time, value) {\n        if (time >= this.maxTime) {\n            this.maxTime = time;\n        }\n        else {\n            this._needsSort = true;\n        }\n        var keyframes = this.keyframes;\n        var len = keyframes.length;\n        if (this.interpolable) {\n            if (util_1.isArrayLike(value)) {\n                var arrayDim = guessArrayDim(value);\n                if (len > 0 && this.arrDim !== arrayDim) {\n                    this.interpolable = false;\n                    return;\n                }\n                if (arrayDim === 1 && typeof value[0] !== 'number'\n                    || arrayDim === 2 && typeof value[0][0] !== 'number') {\n                    this.interpolable = false;\n                    return;\n                }\n                if (len > 0) {\n                    var lastFrame = keyframes[len - 1];\n                    if (this._isAllValueEqual) {\n                        if (arrayDim === 1) {\n                            if (!is1DArraySame(value, lastFrame.value)) {\n                                this._isAllValueEqual = false;\n                            }\n                        }\n                        else {\n                            this._isAllValueEqual = false;\n                        }\n                    }\n                }\n                this.arrDim = arrayDim;\n            }\n            else {\n                if (this.arrDim > 0) {\n                    this.interpolable = false;\n                    return;\n                }\n                if (typeof value === 'string') {\n                    var colorArray = color.parse(value);\n                    if (colorArray) {\n                        value = colorArray;\n                        this.isValueColor = true;\n                    }\n                    else {\n                        this.interpolable = false;\n                    }\n                }\n                else if (typeof value !== 'number') {\n                    this.interpolable = false;\n                    return;\n                }\n                if (this._isAllValueEqual && len > 0) {\n                    var lastFrame = keyframes[len - 1];\n                    if (this.isValueColor && !is1DArraySame(lastFrame.value, value)) {\n                        this._isAllValueEqual = false;\n                    }\n                    else if (lastFrame.value !== value) {\n                        this._isAllValueEqual = false;\n                    }\n                }\n            }\n        }\n        var kf = {\n            time: time,\n            value: value,\n            percent: 0\n        };\n        this.keyframes.push(kf);\n        return kf;\n    };\n    Track.prototype.prepare = function (additiveTrack) {\n        var kfs = this.keyframes;\n        if (this._needsSort) {\n            kfs.sort(function (a, b) {\n                return a.time - b.time;\n            });\n        }\n        var arrDim = this.arrDim;\n        var kfsLen = kfs.length;\n        var lastKf = kfs[kfsLen - 1];\n        for (var i = 0; i < kfsLen; i++) {\n            kfs[i].percent = kfs[i].time / this.maxTime;\n            if (arrDim > 0 && i !== kfsLen - 1) {\n                fillArray(kfs[i].value, lastKf.value, arrDim);\n            }\n        }\n        if (additiveTrack\n            && this.needsAnimate()\n            && additiveTrack.needsAnimate()\n            && arrDim === additiveTrack.arrDim\n            && this.isValueColor === additiveTrack.isValueColor\n            && !additiveTrack._finished) {\n            this._additiveTrack = additiveTrack;\n            var startValue = kfs[0].value;\n            for (var i = 0; i < kfsLen; i++) {\n                if (arrDim === 0) {\n                    if (this.isValueColor) {\n                        kfs[i].additiveValue\n                            = add1DArray([], kfs[i].value, startValue, -1);\n                    }\n                    else {\n                        kfs[i].additiveValue = kfs[i].value - startValue;\n                    }\n                }\n                else if (arrDim === 1) {\n                    kfs[i].additiveValue = add1DArray([], kfs[i].value, startValue, -1);\n                }\n                else if (arrDim === 2) {\n                    kfs[i].additiveValue = add2DArray([], kfs[i].value, startValue, -1);\n                }\n            }\n        }\n    };\n    Track.prototype.step = function (target, percent) {\n        if (this._finished) {\n            return;\n        }\n        if (this._additiveTrack && this._additiveTrack._finished) {\n            this._additiveTrack = null;\n        }\n        var isAdditive = this._additiveTrack != null;\n        var valueKey = isAdditive ? 'additiveValue' : 'value';\n        var keyframes = this.keyframes;\n        var kfsNum = this.keyframes.length;\n        var propName = this.propName;\n        var arrDim = this.arrDim;\n        var isValueColor = this.isValueColor;\n        var frameIdx;\n        if (percent < 0) {\n            frameIdx = 0;\n        }\n        else if (percent < this._lastFramePercent) {\n            var start = Math.min(this._lastFrame + 1, kfsNum - 1);\n            for (frameIdx = start; frameIdx >= 0; frameIdx--) {\n                if (keyframes[frameIdx].percent <= percent) {\n                    break;\n                }\n            }\n            frameIdx = Math.min(frameIdx, kfsNum - 2);\n        }\n        else {\n            for (frameIdx = this._lastFrame; frameIdx < kfsNum; frameIdx++) {\n                if (keyframes[frameIdx].percent > percent) {\n                    break;\n                }\n            }\n            frameIdx = Math.min(frameIdx - 1, kfsNum - 2);\n        }\n        var nextFrame = keyframes[frameIdx + 1];\n        var frame = keyframes[frameIdx];\n        if (!(frame && nextFrame)) {\n            return;\n        }\n        this._lastFrame = frameIdx;\n        this._lastFramePercent = percent;\n        var range = (nextFrame.percent - frame.percent);\n        if (range === 0) {\n            return;\n        }\n        var w = (percent - frame.percent) / range;\n        var targetArr = isAdditive ? this._additiveValue\n            : (isValueColor ? tmpRgba : target[propName]);\n        if ((arrDim > 0 || isValueColor) && !targetArr) {\n            targetArr = this._additiveValue = [];\n        }\n        if (this.useSpline) {\n            var p1 = keyframes[frameIdx][valueKey];\n            var p0 = keyframes[frameIdx === 0 ? frameIdx : frameIdx - 1][valueKey];\n            var p2 = keyframes[frameIdx > kfsNum - 2 ? kfsNum - 1 : frameIdx + 1][valueKey];\n            var p3 = keyframes[frameIdx > kfsNum - 3 ? kfsNum - 1 : frameIdx + 2][valueKey];\n            if (arrDim > 0) {\n                arrDim === 1\n                    ? catmullRomInterpolate1DArray(targetArr, p0, p1, p2, p3, w, w * w, w * w * w)\n                    : catmullRomInterpolate2DArray(targetArr, p0, p1, p2, p3, w, w * w, w * w * w);\n            }\n            else if (isValueColor) {\n                catmullRomInterpolate1DArray(targetArr, p0, p1, p2, p3, w, w * w, w * w * w);\n                if (!isAdditive) {\n                    target[propName] = rgba2String(targetArr);\n                }\n            }\n            else {\n                var value = void 0;\n                if (!this.interpolable) {\n                    value = p2;\n                }\n                else {\n                    value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n                }\n                if (isAdditive) {\n                    this._additiveValue = value;\n                }\n                else {\n                    target[propName] = value;\n                }\n            }\n        }\n        else {\n            if (arrDim > 0) {\n                arrDim === 1\n                    ? interpolate1DArray(targetArr, frame[valueKey], nextFrame[valueKey], w)\n                    : interpolate2DArray(targetArr, frame[valueKey], nextFrame[valueKey], w);\n            }\n            else if (isValueColor) {\n                interpolate1DArray(targetArr, frame[valueKey], nextFrame[valueKey], w);\n                if (!isAdditive) {\n                    target[propName] = rgba2String(targetArr);\n                }\n            }\n            else {\n                var value = void 0;\n                if (!this.interpolable) {\n                    value = step(frame[valueKey], nextFrame[valueKey], w);\n                }\n                else {\n                    value = interpolateNumber(frame[valueKey], nextFrame[valueKey], w);\n                }\n                if (isAdditive) {\n                    this._additiveValue = value;\n                }\n                else {\n                    target[propName] = value;\n                }\n            }\n        }\n        if (isAdditive) {\n            this._addToTarget(target);\n        }\n    };\n    Track.prototype._addToTarget = function (target) {\n        var arrDim = this.arrDim;\n        var propName = this.propName;\n        var additiveValue = this._additiveValue;\n        if (arrDim === 0) {\n            if (this.isValueColor) {\n                color.parse(target[propName], tmpRgba);\n                add1DArray(tmpRgba, tmpRgba, additiveValue, 1);\n                target[propName] = rgba2String(tmpRgba);\n            }\n            else {\n                target[propName] = target[propName] + additiveValue;\n            }\n        }\n        else if (arrDim === 1) {\n            add1DArray(target[propName], target[propName], additiveValue, 1);\n        }\n        else if (arrDim === 2) {\n            add2DArray(target[propName], target[propName], additiveValue, 1);\n        }\n    };\n    return Track;\n}());\nvar Animator = (function () {\n    function Animator(target, loop, additiveTo) {\n        this._tracks = {};\n        this._trackKeys = [];\n        this._delay = 0;\n        this._maxTime = 0;\n        this._paused = false;\n        this._started = 0;\n        this._clip = null;\n        this._target = target;\n        this._loop = loop;\n        if (loop && additiveTo) {\n            util_1.logError('Can\\' use additive animation on looped animation.');\n            return;\n        }\n        this._additiveAnimators = additiveTo;\n    }\n    Animator.prototype.getTarget = function () {\n        return this._target;\n    };\n    Animator.prototype.changeTarget = function (target) {\n        this._target = target;\n    };\n    Animator.prototype.when = function (time, props) {\n        return this.whenWithKeys(time, props, util_1.keys(props));\n    };\n    Animator.prototype.whenWithKeys = function (time, props, propNames) {\n        var tracks = this._tracks;\n        for (var i = 0; i < propNames.length; i++) {\n            var propName = propNames[i];\n            var track = tracks[propName];\n            if (!track) {\n                track = tracks[propName] = new Track(propName);\n                var initialValue = void 0;\n                var additiveTrack = this._getAdditiveTrack(propName);\n                if (additiveTrack) {\n                    var lastFinalKf = additiveTrack.keyframes[additiveTrack.keyframes.length - 1];\n                    initialValue = lastFinalKf && lastFinalKf.value;\n                    if (additiveTrack.isValueColor && initialValue) {\n                        initialValue = rgba2String(initialValue);\n                    }\n                }\n                else {\n                    initialValue = this._target[propName];\n                }\n                if (initialValue == null) {\n                    continue;\n                }\n                if (time !== 0) {\n                    track.addKeyframe(0, cloneValue(initialValue));\n                }\n                this._trackKeys.push(propName);\n            }\n            track.addKeyframe(time, cloneValue(props[propName]));\n        }\n        this._maxTime = Math.max(this._maxTime, time);\n        return this;\n    };\n    Animator.prototype.pause = function () {\n        this._clip.pause();\n        this._paused = true;\n    };\n    Animator.prototype.resume = function () {\n        this._clip.resume();\n        this._paused = false;\n    };\n    Animator.prototype.isPaused = function () {\n        return !!this._paused;\n    };\n    Animator.prototype._doneCallback = function () {\n        this._setTracksFinished();\n        this._clip = null;\n        var doneList = this._doneList;\n        if (doneList) {\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        }\n    };\n    Animator.prototype._abortedCallback = function () {\n        this._setTracksFinished();\n        var animation = this.animation;\n        var abortedList = this._abortedList;\n        if (animation) {\n            animation.removeClip(this._clip);\n        }\n        this._clip = null;\n        if (abortedList) {\n            for (var i = 0; i < abortedList.length; i++) {\n                abortedList[i].call(this);\n            }\n        }\n    };\n    Animator.prototype._setTracksFinished = function () {\n        var tracks = this._tracks;\n        var tracksKeys = this._trackKeys;\n        for (var i = 0; i < tracksKeys.length; i++) {\n            tracks[tracksKeys[i]].setFinished();\n        }\n    };\n    Animator.prototype._getAdditiveTrack = function (trackName) {\n        var additiveTrack;\n        var additiveAnimators = this._additiveAnimators;\n        if (additiveAnimators) {\n            for (var i = 0; i < additiveAnimators.length; i++) {\n                var track = additiveAnimators[i].getTrack(trackName);\n                if (track) {\n                    additiveTrack = track;\n                }\n            }\n        }\n        return additiveTrack;\n    };\n    Animator.prototype.start = function (easing, forceAnimate) {\n        if (this._started > 0) {\n            return;\n        }\n        this._started = 1;\n        var self = this;\n        var tracks = [];\n        for (var i = 0; i < this._trackKeys.length; i++) {\n            var propName = this._trackKeys[i];\n            var track = this._tracks[propName];\n            var additiveTrack = this._getAdditiveTrack(propName);\n            var kfs = track.keyframes;\n            track.prepare(additiveTrack);\n            if (track.needsAnimate()) {\n                tracks.push(track);\n            }\n            else if (!track.interpolable) {\n                var lastKf = kfs[kfs.length - 1];\n                if (lastKf) {\n                    self._target[track.propName] = lastKf.value;\n                }\n            }\n        }\n        if (tracks.length || forceAnimate) {\n            var clip = new Clip_1[\"default\"]({\n                life: this._maxTime,\n                loop: this._loop,\n                delay: this._delay,\n                onframe: function (percent) {\n                    self._started = 2;\n                    var additiveAnimators = self._additiveAnimators;\n                    if (additiveAnimators) {\n                        var stillHasAdditiveAnimator = false;\n                        for (var i = 0; i < additiveAnimators.length; i++) {\n                            if (additiveAnimators[i]._clip) {\n                                stillHasAdditiveAnimator = true;\n                                break;\n                            }\n                        }\n                        if (!stillHasAdditiveAnimator) {\n                            self._additiveAnimators = null;\n                        }\n                    }\n                    for (var i = 0; i < tracks.length; i++) {\n                        tracks[i].step(self._target, percent);\n                    }\n                    var onframeList = self._onframeList;\n                    if (onframeList) {\n                        for (var i = 0; i < onframeList.length; i++) {\n                            onframeList[i](self._target, percent);\n                        }\n                    }\n                },\n                ondestroy: function () {\n                    self._doneCallback();\n                }\n            });\n            this._clip = clip;\n            if (this.animation) {\n                this.animation.addClip(clip);\n            }\n            if (easing && easing !== 'spline') {\n                clip.easing = easing;\n            }\n        }\n        else {\n            this._doneCallback();\n        }\n        return this;\n    };\n    Animator.prototype.stop = function (forwardToLast) {\n        if (!this._clip) {\n            return;\n        }\n        var clip = this._clip;\n        if (forwardToLast) {\n            clip.onframe(1);\n        }\n        this._abortedCallback();\n    };\n    Animator.prototype.delay = function (time) {\n        this._delay = time;\n        return this;\n    };\n    Animator.prototype.during = function (cb) {\n        if (cb) {\n            if (!this._onframeList) {\n                this._onframeList = [];\n            }\n            this._onframeList.push(cb);\n        }\n        return this;\n    };\n    Animator.prototype.done = function (cb) {\n        if (cb) {\n            if (!this._doneList) {\n                this._doneList = [];\n            }\n            this._doneList.push(cb);\n        }\n        return this;\n    };\n    Animator.prototype.aborted = function (cb) {\n        if (cb) {\n            if (!this._abortedList) {\n                this._abortedList = [];\n            }\n            this._abortedList.push(cb);\n        }\n        return this;\n    };\n    Animator.prototype.getClip = function () {\n        return this._clip;\n    };\n    Animator.prototype.getTrack = function (propName) {\n        return this._tracks[propName];\n    };\n    Animator.prototype.stopTracks = function (propNames, forwardToLast) {\n        if (!propNames.length || !this._clip) {\n            return true;\n        }\n        var tracks = this._tracks;\n        var tracksKeys = this._trackKeys;\n        for (var i = 0; i < propNames.length; i++) {\n            var track = tracks[propNames[i]];\n            if (track) {\n                if (forwardToLast) {\n                    track.step(this._target, 1);\n                }\n                else if (this._started === 1) {\n                    track.step(this._target, 0);\n                }\n                track.setFinished();\n            }\n        }\n        var allAborted = true;\n        for (var i = 0; i < tracksKeys.length; i++) {\n            if (!tracks[tracksKeys[i]].isFinished()) {\n                allAborted = false;\n                break;\n            }\n        }\n        if (allAborted) {\n            this._abortedCallback();\n        }\n        return allAborted;\n    };\n    Animator.prototype.saveFinalToTarget = function (target, trackKeys) {\n        if (!target) {\n            return;\n        }\n        trackKeys = trackKeys || this._trackKeys;\n        for (var i = 0; i < trackKeys.length; i++) {\n            var propName = trackKeys[i];\n            var track = this._tracks[propName];\n            if (!track || track.isFinished()) {\n                continue;\n            }\n            var kfs = track.keyframes;\n            var lastKf = kfs[kfs.length - 1];\n            if (lastKf) {\n                var val = cloneValue(lastKf.value);\n                if (track.isValueColor) {\n                    val = rgba2String(val);\n                }\n                target[propName] = val;\n            }\n        }\n    };\n    Animator.prototype.__changeFinalValue = function (finalProps, trackKeys) {\n        trackKeys = trackKeys || util_1.keys(finalProps);\n        for (var i = 0; i < trackKeys.length; i++) {\n            var propName = trackKeys[i];\n            var track = this._tracks[propName];\n            if (!track) {\n                continue;\n            }\n            var kfs = track.keyframes;\n            if (kfs.length > 1) {\n                var lastKf = kfs.pop();\n                track.addKeyframe(lastKf.time, finalProps[propName]);\n                track.prepare(track.getAdditiveTrack());\n            }\n        }\n    };\n    return Animator;\n}());\nexports[\"default\"] = Animator;\n"]},"metadata":{},"sourceType":"script"}