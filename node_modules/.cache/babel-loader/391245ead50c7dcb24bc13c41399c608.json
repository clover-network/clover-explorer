{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar Axis_1 = require(\"../Axis\");\n\nvar Axis2D = function (_super) {\n  tslib_1.__extends(Axis2D, _super);\n\n  function Axis2D(dim, scale, coordExtent, axisType, position) {\n    var _this = _super.call(this, dim, scale, coordExtent) || this;\n\n    _this.index = 0;\n    _this.type = axisType || 'value';\n    _this.position = position || 'bottom';\n    return _this;\n  }\n\n  Axis2D.prototype.isHorizontal = function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  };\n\n  Axis2D.prototype.getGlobalExtent = function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  };\n\n  Axis2D.prototype.pointToData = function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  };\n\n  Axis2D.prototype.setCategorySortInfo = function (info) {\n    if (this.type !== 'category') {\n      return false;\n    }\n\n    this.model.option.categorySortInfo = info;\n    this.scale.setCategorySortInfo(info);\n  };\n\n  return Axis2D;\n}(Axis_1[\"default\"]);\n\nexports[\"default\"] = Axis2D;","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/coord/cartesian/Axis2D.js"],"names":["exports","__esModule","tslib_1","require","Axis_1","Axis2D","_super","__extends","dim","scale","coordExtent","axisType","position","_this","call","index","type","prototype","isHorizontal","getGlobalExtent","asc","ret","getExtent","toGlobalCoord","reverse","pointToData","point","clamp","coordToData","toLocalCoord","setCategorySortInfo","info","model","option","categorySortInfo"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AAEA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAIE,MAAM,GAAG,UAAUC,MAAV,EAAkB;AAC7BJ,EAAAA,OAAO,CAACK,SAAR,CAAkBF,MAAlB,EAA0BC,MAA1B;;AAEA,WAASD,MAAT,CAAgBG,GAAhB,EAAqBC,KAArB,EAA4BC,WAA5B,EAAyCC,QAAzC,EAAmDC,QAAnD,EAA6D;AAC3D,QAAIC,KAAK,GAAGP,MAAM,CAACQ,IAAP,CAAY,IAAZ,EAAkBN,GAAlB,EAAuBC,KAAvB,EAA8BC,WAA9B,KAA8C,IAA1D;;AAEAG,IAAAA,KAAK,CAACE,KAAN,GAAc,CAAd;AACAF,IAAAA,KAAK,CAACG,IAAN,GAAaL,QAAQ,IAAI,OAAzB;AACAE,IAAAA,KAAK,CAACD,QAAN,GAAiBA,QAAQ,IAAI,QAA7B;AACA,WAAOC,KAAP;AACD;;AAEDR,EAAAA,MAAM,CAACY,SAAP,CAAiBC,YAAjB,GAAgC,YAAY;AAC1C,QAAIN,QAAQ,GAAG,KAAKA,QAApB;AACA,WAAOA,QAAQ,KAAK,KAAb,IAAsBA,QAAQ,KAAK,QAA1C;AACD,GAHD;;AAKAP,EAAAA,MAAM,CAACY,SAAP,CAAiBE,eAAjB,GAAmC,UAAUC,GAAV,EAAe;AAChD,QAAIC,GAAG,GAAG,KAAKC,SAAL,EAAV;AACAD,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,KAAKE,aAAL,CAAmBF,GAAG,CAAC,CAAD,CAAtB,CAAT;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,KAAKE,aAAL,CAAmBF,GAAG,CAAC,CAAD,CAAtB,CAAT;AACAD,IAAAA,GAAG,IAAIC,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAnB,IAA0BA,GAAG,CAACG,OAAJ,EAA1B;AACA,WAAOH,GAAP;AACD,GAND;;AAQAhB,EAAAA,MAAM,CAACY,SAAP,CAAiBQ,WAAjB,GAA+B,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AACrD,WAAO,KAAKC,WAAL,CAAiB,KAAKC,YAAL,CAAkBH,KAAK,CAAC,KAAKlB,GAAL,KAAa,GAAb,GAAmB,CAAnB,GAAuB,CAAxB,CAAvB,CAAjB,EAAqEmB,KAArE,CAAP;AACD,GAFD;;AAIAtB,EAAAA,MAAM,CAACY,SAAP,CAAiBa,mBAAjB,GAAuC,UAAUC,IAAV,EAAgB;AACrD,QAAI,KAAKf,IAAL,KAAc,UAAlB,EAA8B;AAC5B,aAAO,KAAP;AACD;;AAED,SAAKgB,KAAL,CAAWC,MAAX,CAAkBC,gBAAlB,GAAqCH,IAArC;AACA,SAAKtB,KAAL,CAAWqB,mBAAX,CAA+BC,IAA/B;AACD,GAPD;;AASA,SAAO1B,MAAP;AACD,CAvCY,CAuCXD,MAAM,CAAC,SAAD,CAvCK,CAAb;;AAyCAJ,OAAO,CAAC,SAAD,CAAP,GAAqBK,MAArB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar Axis_1 = require(\"../Axis\");\n\nvar Axis2D = function (_super) {\n  tslib_1.__extends(Axis2D, _super);\n\n  function Axis2D(dim, scale, coordExtent, axisType, position) {\n    var _this = _super.call(this, dim, scale, coordExtent) || this;\n\n    _this.index = 0;\n    _this.type = axisType || 'value';\n    _this.position = position || 'bottom';\n    return _this;\n  }\n\n  Axis2D.prototype.isHorizontal = function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  };\n\n  Axis2D.prototype.getGlobalExtent = function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  };\n\n  Axis2D.prototype.pointToData = function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  };\n\n  Axis2D.prototype.setCategorySortInfo = function (info) {\n    if (this.type !== 'category') {\n      return false;\n    }\n\n    this.model.option.categorySortInfo = info;\n    this.scale.setCategorySortInfo(info);\n  };\n\n  return Axis2D;\n}(Axis_1[\"default\"]);\n\nexports[\"default\"] = Axis2D;"]},"metadata":{},"sourceType":"script"}