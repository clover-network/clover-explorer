{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nimport * as zrUtil from 'zrender/esm/core/util';\nimport createListFromArray from './chart/helper/createListFromArray';\nimport * as axisHelper from './coord/axisHelper';\nimport { AxisModelCommonMixin } from './coord/axisModelCommonMixin';\nimport Model from './model/Model';\nimport { getLayoutRect } from './util/layout';\nimport { enableDataStack, isDimensionStacked, getStackedDimension } from './data/helper/dataStackHelper';\nimport { getECData } from './util/innerStore';\nexport function createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n}\nexport { getLayoutRect };\nexport { default as createDimensions } from './data/helper/createDimensions';\nexport var dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack,\n  getStackedDimension: getStackedDimension\n};\nexport { createSymbol } from './util/symbol';\nexport function createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\nexport function mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, AxisModelCommonMixin);\n}\nexport { getECData };","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/esm/helper.js"],"names":["zrUtil","createListFromArray","axisHelper","AxisModelCommonMixin","Model","getLayoutRect","enableDataStack","isDimensionStacked","getStackedDimension","getECData","createList","seriesModel","getSource","default","createDimensions","dataStack","createSymbol","createScale","dataExtent","option","axisModel","scale","createScaleByModel","setExtent","niceScaleExtent","mixinAxisModelCommonMethods","mixin"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AAEA,OAAO,KAAKA,MAAZ,MAAwB,uBAAxB;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,OAAO,KAAKC,UAAZ,MAA4B,oBAA5B;AACA,SAASC,oBAAT,QAAqC,8BAArC;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,SAASC,eAAT,EAA0BC,kBAA1B,EAA8CC,mBAA9C,QAAyE,+BAAzE;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAO,SAASC,UAAT,CAAoBC,WAApB,EAAiC;AACtC,SAAOV,mBAAmB,CAACU,WAAW,CAACC,SAAZ,EAAD,EAA0BD,WAA1B,CAA1B;AACD;AACD,SAASN,aAAT;AACA,SAASQ,OAAO,IAAIC,gBAApB,QAA4C,gCAA5C;AACA,OAAO,IAAIC,SAAS,GAAG;AACrBR,EAAAA,kBAAkB,EAAEA,kBADC;AAErBD,EAAAA,eAAe,EAAEA,eAFI;AAGrBE,EAAAA,mBAAmB,EAAEA;AAHA,CAAhB;AAKP,SAASQ,YAAT,QAA6B,eAA7B;AACA,OAAO,SAASC,WAAT,CAAqBC,UAArB,EAAiCC,MAAjC,EAAyC;AAC9C,MAAIC,SAAS,GAAGD,MAAhB;;AAEA,MAAI,EAAEA,MAAM,YAAYf,KAApB,CAAJ,EAAgC;AAC9BgB,IAAAA,SAAS,GAAG,IAAIhB,KAAJ,CAAUe,MAAV,CAAZ;AACD;;AAED,MAAIE,KAAK,GAAGnB,UAAU,CAACoB,kBAAX,CAA8BF,SAA9B,CAAZ;AACAC,EAAAA,KAAK,CAACE,SAAN,CAAgBL,UAAU,CAAC,CAAD,CAA1B,EAA+BA,UAAU,CAAC,CAAD,CAAzC;AACAhB,EAAAA,UAAU,CAACsB,eAAX,CAA2BH,KAA3B,EAAkCD,SAAlC;AACA,SAAOC,KAAP;AACD;AACD,OAAO,SAASI,2BAAT,CAAqCrB,KAArC,EAA4C;AACjDJ,EAAAA,MAAM,CAAC0B,KAAP,CAAatB,KAAb,EAAoBD,oBAApB;AACD;AACD,SAASM,SAAT","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport * as zrUtil from 'zrender/esm/core/util';\nimport createListFromArray from './chart/helper/createListFromArray';\nimport * as axisHelper from './coord/axisHelper';\nimport { AxisModelCommonMixin } from './coord/axisModelCommonMixin';\nimport Model from './model/Model';\nimport { getLayoutRect } from './util/layout';\nimport { enableDataStack, isDimensionStacked, getStackedDimension } from './data/helper/dataStackHelper';\nimport { getECData } from './util/innerStore';\nexport function createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n}\nexport { getLayoutRect };\nexport { default as createDimensions } from './data/helper/createDimensions';\nexport var dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack,\n  getStackedDimension: getStackedDimension\n};\nexport { createSymbol } from './util/symbol';\nexport function createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\nexport function mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, AxisModelCommonMixin);\n}\nexport { getECData };"]},"metadata":{},"sourceType":"module"}