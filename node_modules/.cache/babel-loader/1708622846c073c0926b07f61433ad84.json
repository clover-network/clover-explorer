{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\"use strict\";\n\nexports.__esModule = true;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger_1 = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\nvar AxisPointerModel_1 = require(\"./axisPointer/AxisPointerModel\");\n\nvar Component_1 = require(\"../model/Component\");\n\nComponent_1[\"default\"].registerClass(AxisPointerModel_1[\"default\"]);\necharts.registerPreprocessor(function (option) {\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link;\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n});\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n});\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger_1[\"default\"]);","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/lib/component/axisPointer.js"],"names":["exports","__esModule","echarts","require","zrUtil","axisPointerModelHelper","axisTrigger_1","AxisPointerModel_1","Component_1","registerClass","registerPreprocessor","option","axisPointer","length","link","isArray","registerProcessor","PRIORITY","PROCESSOR","STATISTIC","ecModel","api","getComponent","coordSysAxesInfo","collect","registerAction","type","event","update"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AAEA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAAC,YAAD,CAArB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIE,sBAAsB,GAAGF,OAAO,CAAC,2BAAD,CAApC;;AAEA,IAAIG,aAAa,GAAGH,OAAO,CAAC,2BAAD,CAA3B;;AAEAA,OAAO,CAAC,+BAAD,CAAP;;AAEAA,OAAO,CAAC,oCAAD,CAAP;;AAEA,IAAII,kBAAkB,GAAGJ,OAAO,CAAC,gCAAD,CAAhC;;AAEA,IAAIK,WAAW,GAAGL,OAAO,CAAC,oBAAD,CAAzB;;AAEAK,WAAW,CAAC,SAAD,CAAX,CAAuBC,aAAvB,CAAqCF,kBAAkB,CAAC,SAAD,CAAvD;AACAL,OAAO,CAACQ,oBAAR,CAA6B,UAAUC,MAAV,EAAkB;AAC7C,MAAIA,MAAJ,EAAY;AACV,KAAC,CAACA,MAAM,CAACC,WAAR,IAAuBD,MAAM,CAACC,WAAP,CAAmBC,MAAnB,KAA8B,CAAtD,MAA6DF,MAAM,CAACC,WAAP,GAAqB,EAAlF;AACA,QAAIE,IAAI,GAAGH,MAAM,CAACC,WAAP,CAAmBE,IAA9B;;AAEA,QAAIA,IAAI,IAAI,CAACV,MAAM,CAACW,OAAP,CAAeD,IAAf,CAAb,EAAmC;AACjCH,MAAAA,MAAM,CAACC,WAAP,CAAmBE,IAAnB,GAA0B,CAACA,IAAD,CAA1B;AACD;AACF;AACF,CATD;AAUAZ,OAAO,CAACc,iBAAR,CAA0Bd,OAAO,CAACe,QAAR,CAAiBC,SAAjB,CAA2BC,SAArD,EAAgE,UAAUC,OAAV,EAAmBC,GAAnB,EAAwB;AACtFD,EAAAA,OAAO,CAACE,YAAR,CAAqB,aAArB,EAAoCC,gBAApC,GAAuDlB,sBAAsB,CAACmB,OAAvB,CAA+BJ,OAA/B,EAAwCC,GAAxC,CAAvD;AACD,CAFD;AAGAnB,OAAO,CAACuB,cAAR,CAAuB;AACrBC,EAAAA,IAAI,EAAE,mBADe;AAErBC,EAAAA,KAAK,EAAE,mBAFc;AAGrBC,EAAAA,MAAM,EAAE;AAHa,CAAvB,EAIGtB,aAAa,CAAC,SAAD,CAJhB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n\"use strict\";\n\nexports.__esModule = true;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger_1 = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\nvar AxisPointerModel_1 = require(\"./axisPointer/AxisPointerModel\");\n\nvar Component_1 = require(\"../model/Component\");\n\nComponent_1[\"default\"].registerClass(AxisPointerModel_1[\"default\"]);\necharts.registerPreprocessor(function (option) {\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link;\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n});\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n});\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger_1[\"default\"]);"]},"metadata":{},"sourceType":"script"}