{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nimport * as echarts from '../../echarts';\nimport * as helper from '../helper/treeHelper';\nimport { extend } from 'zrender/esm/core/util';\nimport { deprecateReplaceLog } from '../../util/log';\nexport var ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\necharts.registerAction({\n  type: ROOT_TO_NODE_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [ROOT_TO_NODE_ACTION], model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});\nvar HIGHLIGHT_ACTION = 'sunburstHighlight';\necharts.registerAction({\n  type: HIGHLIGHT_ACTION,\n  update: 'none'\n}, function (payload, ecModel, api) {\n  payload = extend({}, payload);\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleHighlight);\n\n  function handleHighlight(model) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [HIGHLIGHT_ACTION], model);\n\n    if (targetInfo) {\n      payload.dataIndex = targetInfo.node.dataIndex;\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    deprecateReplaceLog('highlight', 'sunburstHighlight');\n  }\n\n  api.dispatchAction(extend(payload, {\n    type: 'highlight'\n  }));\n});\nvar UNHIGHLIGHT_ACTION = 'sunburstUnhighlight';\necharts.registerAction({\n  type: UNHIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel, api) {\n  payload = extend({}, payload);\n\n  if (process.env.NODE_ENV !== 'production') {\n    deprecateReplaceLog('downplay', 'sunburstUnhighlight');\n  }\n\n  api.dispatchAction(extend(payload, {\n    type: 'downplay'\n  }));\n});","map":{"version":3,"sources":["/Users/wanglijie/wanglijie/clover-defi-wallet/node_modules/echarts/esm/chart/sunburst/sunburstAction.js"],"names":["echarts","helper","extend","deprecateReplaceLog","ROOT_TO_NODE_ACTION","registerAction","type","update","payload","ecModel","eachComponent","mainType","subType","query","handleRootToNode","model","index","targetInfo","retrieveTargetInfo","originViewRoot","getViewRoot","direction","aboveViewRoot","node","resetViewRoot","HIGHLIGHT_ACTION","api","handleHighlight","dataIndex","process","env","NODE_ENV","dispatchAction","UNHIGHLIGHT_ACTION"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport * as echarts from '../../echarts';\nimport * as helper from '../helper/treeHelper';\nimport { extend } from 'zrender/esm/core/util';\nimport { deprecateReplaceLog } from '../../util/log';\nexport var ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\necharts.registerAction({\n  type: ROOT_TO_NODE_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [ROOT_TO_NODE_ACTION], model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});\nvar HIGHLIGHT_ACTION = 'sunburstHighlight';\necharts.registerAction({\n  type: HIGHLIGHT_ACTION,\n  update: 'none'\n}, function (payload, ecModel, api) {\n  payload = extend({}, payload);\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleHighlight);\n\n  function handleHighlight(model) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [HIGHLIGHT_ACTION], model);\n\n    if (targetInfo) {\n      payload.dataIndex = targetInfo.node.dataIndex;\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    deprecateReplaceLog('highlight', 'sunburstHighlight');\n  }\n\n  api.dispatchAction(extend(payload, {\n    type: 'highlight'\n  }));\n});\nvar UNHIGHLIGHT_ACTION = 'sunburstUnhighlight';\necharts.registerAction({\n  type: UNHIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel, api) {\n  payload = extend({}, payload);\n\n  if (process.env.NODE_ENV !== 'production') {\n    deprecateReplaceLog('downplay', 'sunburstUnhighlight');\n  }\n\n  api.dispatchAction(extend(payload, {\n    type: 'downplay'\n  }));\n});"]},"metadata":{},"sourceType":"module"}