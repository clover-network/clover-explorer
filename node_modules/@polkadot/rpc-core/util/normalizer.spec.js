"use strict";

var _ = require(".");

// Copyright 2017-2020 @polkadot/rpc-core authors & contributors
// SPDX-License-Identifier: Apache-2.0
describe('normalizer', () => {
  it('works when BigInt is in the data (object)', () => {
    expect((0, _.normalizer)('instance')({
      a: 'bar',
      b: 1234567890987654321n,
      c: 123
    })).toEqual('instance{"a":"bar","b":"1234567890987654321","c":123}');
  });
  it('works when BigInt is in the data (array)', () => {
    expect((0, _.normalizer)('instance')(['bar', 1234567890987654321n, 123])).toEqual('instance["bar","1234567890987654321",123]');
  });
  it('works when BigInt is in the data (single)', () => {
    expect((0, _.normalizer)('instance')(1234567890987654321n)).toEqual('instance"1234567890987654321"');
  });
  it('works when BigInt is in the data (nested)', () => {
    expect((0, _.normalizer)('instance')({
      a: 'bar',
      b: {
        foo: 1234567890987654321n
      },
      c: 123
    })).toEqual('instance{"a":"bar","b":{"foo":"1234567890987654321"},"c":123}');
  });
});