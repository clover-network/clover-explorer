"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _util = require("@polkadot/util");

var _toEntropy = require("./toEntropy");

var _testing = _interopRequireDefault(require("../schnorrkel/keypair/testing"));

var _ = require("..");

// Copyright 2017-2020 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
describe('mnemonicToEntropy', () => {
  beforeEach(async () => {
    await (0, _.cryptoWaitReady)();
  });

  _testing.default.forEach(([mnemonic, entropy], index) => {
    [false, true].forEach(onlyJs => {
      it(`Created correct entropy for ${index} (onlyJs = ${onlyJs.toString()})`, () => {
        expect((0, _util.u8aToHex)((0, _toEntropy.mnemonicToEntropy)(mnemonic, onlyJs))).toEqual(entropy);
      });
    });
  });
});