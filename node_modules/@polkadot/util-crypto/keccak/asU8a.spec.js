"use strict";

var _util = require("@polkadot/util");

var _wasmCrypto = require("@polkadot/wasm-crypto");

var _ = require(".");

// Copyright 2017-2020 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
describe('keccakAsU8a', () => {
  beforeEach(async () => {
    await (0, _wasmCrypto.waitReady)();
  });
  const input = 'test value';
  const output = (0, _util.hexToU8a)('0x2d07364b5c231c56ce63d49430e085ea3033c750688ba532b24029124c26ca5e');
  [false, true].forEach(onlyJs => {
    it(`returns an hex representation (string, onlyJs=${onlyJs.toString()})`, () => {
      expect((0, _.keccakAsU8a)(input, onlyJs)).toEqual(output);
    });
  });
  [false, true].forEach(onlyJs => {
    it(`returns an hex representation (Buffer, onlyJs=${onlyJs.toString()})`, () => {
      expect((0, _.keccakAsU8a)(Buffer.from(input), onlyJs)).toEqual(output);
    });
  });
  [false, true].forEach(onlyJs => {
    it(`returns an hex representation (Uint8Array, onlyJs=${onlyJs.toString()})`, () => {
      expect((0, _.keccakAsU8a)((0, _util.stringToU8a)(input), onlyJs)).toEqual(output);
    });
  });
});