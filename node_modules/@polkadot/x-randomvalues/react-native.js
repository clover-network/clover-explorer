"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactNative = require("react-native");

var _fallback = _interopRequireDefault(require("./fallback"));

// Copyright 2017-2020 @polkadot/x-randomvalues authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Adapted from https://github.com/LinusU/react-native-get-random-values/blob/85f48393821c23b83b89a8177f56d3a81dc8b733/index.js
// Copyright (c) 2018, 2020 Linus UnnebÃ¤ck
// SPDX-License-Identifier: MIT
function getRandomValuesNative(arr) {
  return Buffer.from(_reactNative.NativeModules.RNGetRandomValues.getRandomBase64(arr.length), 'base64').reduce((arr, byte, index) => {
    arr[index] = byte;
    return arr;
  }, arr);
}

function getRandomValuesGlobal(arr) {
  return crypto.getRandomValues(arr);
}

var _default = typeof global.crypto === 'object' && typeof global.crypto.getRandomValues === 'function' ? getRandomValuesGlobal // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-explicit-any
: typeof global.nativeCallSyncHook === 'undefined' || !_reactNative.NativeModules.ExpoRandom ? _fallback.default : getRandomValuesNative;

exports.default = _default;