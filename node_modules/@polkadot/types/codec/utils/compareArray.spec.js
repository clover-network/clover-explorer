"use strict";

var _create = require("../../create");

var _primitive = require("../../primitive");

var _ = require(".");

// Copyright 2017-2020 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
describe('compareArray', () => {
  const registry = new _create.TypeRegistry();
  const a = [new _primitive.U32(registry, 123), new _primitive.U32(registry, 456), new _primitive.U32(registry, 789)];
  it('returns false when second param is a non-array', () => {
    expect((0, _.compareArray)(a, 123)).toBe(false);
  });
  it('compares array of codec agains primitive', () => {
    expect((0, _.compareArray)(a, [123, 456, 789])).toBe(true);
  });
  it('compares array of codec agains codec', () => {
    expect((0, _.compareArray)(a, [new _primitive.U32(registry, 123), new _primitive.U32(registry, 456), new _primitive.U32(registry, 789)])).toBe(true);
  });
  it('compares primitive against primitive', () => {
    expect((0, _.compareArray)([123, 456], [123, 456])).toBe(true);
  });
  it('returns false when lengths are not matching', () => {
    expect((0, _.compareArray)(a, [123])).toBe(false);
  });
  it('returns false when value mismatches', () => {
    expect((0, _.compareArray)(a, [123, 456, 999])).toBe(false);
  });
});