"use strict";

var _mockHttp = require("../../test/mockHttp");

var _ = require("./");

// Copyright 2017-2020 @polkadot/rpc-provider authors & contributors
// SPDX-License-Identifier: Apache-2.0
describe('Http', () => {
  let http;
  beforeEach(() => {
    http = new _.HttpProvider(_mockHttp.TEST_HTTP_URL);
  });
  it('requires an http:// prefixed endpoint', () => {
    expect(() => new _.HttpProvider('ws://')).toThrow(/with 'http/);
  });
  it('allows https:// endpoints', () => {
    expect(() => new _.HttpProvider('https://')).not.toThrow();
  });
  it('allows custom headers', () => {
    expect(() => new _.HttpProvider('https://', {
      foo: 'bar'
    })).not.toThrow();
  });
  it('always returns isConnected true', () => {
    expect(http.isConnected).toEqual(true);
  });
  it('does not (yet) support subscribe', () => {
    return http.subscribe('', '', [], cb => {
      expect(cb).toEqual(expect.anything());
    }).catch(error => {
      expect(error.message).toMatch(/does not have subscriptions/);
    });
  });
  it('does not (yet) support unsubscribe', () => {
    return http.unsubscribe('', '', 0).catch(error => {
      expect(error.message).toMatch(/does not have subscriptions/);
    });
  });
});